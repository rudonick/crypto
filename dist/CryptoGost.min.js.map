{"version":3,"sources":["webpack://crypto-gost-js/webpack/universalModuleDefinition","webpack://crypto-gost-js/webpack/bootstrap","webpack://crypto-gost-js/./node_modules/inherits/inherits_browser.js","webpack://crypto-gost-js/./node_modules/safe-buffer/index.js","webpack://crypto-gost-js/./node_modules/buffer/index.js","webpack://crypto-gost-js/./node_modules/bn.js/lib/bn.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic.js","webpack://crypto-gost-js/./node_modules/minimalistic-assert/index.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/utils.js","webpack://crypto-gost-js/(webpack)/buildin/global.js","webpack://crypto-gost-js/./node_modules/cipher-base/index.js","webpack://crypto-gost-js/./node_modules/process/browser.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://crypto-gost-js/./src/utils/errors.js","webpack://crypto-gost-js/./node_modules/sha.js/hash.js","webpack://crypto-gost-js/./node_modules/randombytes/browser.js","webpack://crypto-gost-js/./src/crypto/gostASN1.js","webpack://crypto-gost-js/./src/crypto/gostSecurity.js","webpack://crypto-gost-js/./src/crypto/gostCoding.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/base/index.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/common.js","webpack://crypto-gost-js/./node_modules/buffer-xor/index.js","webpack://crypto-gost-js/./node_modules/core-util-is/lib/util.js","webpack://crypto-gost-js/./node_modules/create-hash/browser.js","webpack://crypto-gost-js/./src/crypto/gostSubtle.js","webpack://crypto-gost-js/./node_modules/parse-asn1/index.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curve/index.js","webpack://crypto-gost-js/./node_modules/evp_bytestokey/index.js","webpack://crypto-gost-js/./node_modules/browserify-aes/aes.js","webpack://crypto-gost-js/./node_modules/process-nextick-args/index.js","webpack://crypto-gost-js/./src/crypto/gostCert.js","webpack://crypto-gost-js/./src/utils/seeds.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash.js","webpack://crypto-gost-js/./node_modules/browserify-rsa/index.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/index.js","webpack://crypto-gost-js/./node_modules/browserify-aes/browser.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des.js","webpack://crypto-gost-js/./node_modules/sha.js/index.js","webpack://crypto-gost-js/./node_modules/ripemd160/index.js","webpack://crypto-gost-js/./node_modules/string_decoder/lib/string_decoder.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/_stream_writable.js","webpack://crypto-gost-js/./node_modules/readable-stream/readable-browser.js","webpack://crypto-gost-js/./node_modules/events/events.js","webpack://crypto-gost-js/./node_modules/stream-browserify/index.js","webpack://crypto-gost-js/./node_modules/md5.js/index.js","webpack://crypto-gost-js/./src/crypto/gostCMS.js","webpack://crypto-gost-js/./src/engine/gostDigest.js","webpack://crypto-gost-js/./src/engine/gostCipher.js","webpack://crypto-gost-js/./src/engine/gostEngineSync.js","webpack://crypto-gost-js/./node_modules/public-encrypt/withPublic.js","webpack://crypto-gost-js/./node_modules/public-encrypt/xor.js","webpack://crypto-gost-js/./node_modules/public-encrypt/mgf.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/encoders/der.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/decoders/der.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/constants/index.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/base/buffer.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/512.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/256.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/common.js","webpack://crypto-gost-js/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://crypto-gost-js/./node_modules/brorand/index.js","webpack://crypto-gost-js/./node_modules/miller-rabin/lib/mr.js","webpack://crypto-gost-js/./node_modules/diffie-hellman/lib/generatePrime.js","webpack://crypto-gost-js/./node_modules/browserify-aes/streamCipher.js","webpack://crypto-gost-js/./node_modules/browserify-aes/authCipher.js","webpack://crypto-gost-js/./node_modules/browserify-aes/incr32.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/ctr.js","webpack://crypto-gost-js/./node_modules/pbkdf2/lib/sync-browser.js","webpack://crypto-gost-js/./node_modules/pbkdf2/lib/default-encoding.js","webpack://crypto-gost-js/./node_modules/pbkdf2/lib/precondition.js","webpack://crypto-gost-js/./node_modules/pbkdf2/browser.js","webpack://crypto-gost-js/./node_modules/create-hash/md5.js","webpack://crypto-gost-js/./node_modules/create-hmac/browser.js","webpack://crypto-gost-js/./node_modules/sha.js/sha512.js","webpack://crypto-gost-js/./node_modules/sha.js/sha256.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/_stream_transform.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/_stream_readable.js","webpack://crypto-gost-js/./node_modules/hash-base/index.js","webpack://crypto-gost-js/./node_modules/isarray/index.js","webpack://crypto-gost-js/./src/utils/environment.js","webpack://crypto-gost-js/./src/gostRandom.js","webpack://crypto-gost-js/./src/crypto/gostCrypto.js","webpack://crypto-gost-js/./src/crypto/gostKeys.js","webpack://crypto-gost-js/./src/engine/gostSign.js","webpack://crypto-gost-js/./src/utils/helpers.js","webpack://crypto-gost-js/./node_modules/randomfill/browser.js","webpack://crypto-gost-js/./node_modules/public-encrypt/privateDecrypt.js","webpack://crypto-gost-js/./node_modules/public-encrypt/publicEncrypt.js","webpack://crypto-gost-js/./node_modules/public-encrypt/browser.js","webpack://crypto-gost-js/./node_modules/create-ecdh/browser.js","webpack://crypto-gost-js/./node_modules/browserify-sign/browser/verify.js","webpack://crypto-gost-js/./node_modules/parse-asn1/fixProc.js","webpack://crypto-gost-js/./node_modules/parse-asn1/certificate.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/encoders/pem.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/encoders/index.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/decoders/pem.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/decoders/index.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/constants/der.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/base/node.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/base/reporter.js","webpack://crypto-gost-js/./node_modules/indexof/index.js","webpack://crypto-gost-js/./node_modules/vm-browserify/index.js","webpack://crypto-gost-js/./node_modules/asn1.js/lib/asn1/api.js","webpack://crypto-gost-js/./node_modules/parse-asn1/asn1.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/ec/signature.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/ec/key.js","webpack://crypto-gost-js/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/ec/index.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/hmac.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/ripemd.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/384.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/224.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha/1.js","webpack://crypto-gost-js/./node_modules/hash.js/lib/hash/sha.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curves.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curve/mont.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curve/short.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/curve/base.js","webpack://crypto-gost-js/./node_modules/elliptic/lib/elliptic/utils.js","webpack://crypto-gost-js/./node_modules/browserify-sign/browser/sign.js","webpack://crypto-gost-js/./node_modules/browserify-sign/browser/index.js","webpack://crypto-gost-js/./node_modules/diffie-hellman/lib/dh.js","webpack://crypto-gost-js/(webpack)/buildin/module.js","webpack://crypto-gost-js/./node_modules/diffie-hellman/browser.js","webpack://crypto-gost-js/./node_modules/browserify-des/modes.js","webpack://crypto-gost-js/./node_modules/browserify-aes/decrypter.js","webpack://crypto-gost-js/./node_modules/browserify-aes/ghash.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/ofb.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/cfb1.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/cfb8.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/cfb.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/cbc.js","webpack://crypto-gost-js/./node_modules/browserify-aes/modes/ecb.js","webpack://crypto-gost-js/./node_modules/browserify-aes/encrypter.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des/ede.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des/cbc.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des/des.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des/cipher.js","webpack://crypto-gost-js/./node_modules/des.js/lib/des/utils.js","webpack://crypto-gost-js/./node_modules/browserify-des/index.js","webpack://crypto-gost-js/./node_modules/browserify-cipher/browser.js","webpack://crypto-gost-js/./node_modules/pbkdf2/lib/async.js","webpack://crypto-gost-js/./node_modules/browserify-sign/algos.js","webpack://crypto-gost-js/./node_modules/create-hmac/legacy.js","webpack://crypto-gost-js/./node_modules/sha.js/sha384.js","webpack://crypto-gost-js/./node_modules/sha.js/sha224.js","webpack://crypto-gost-js/./node_modules/sha.js/sha1.js","webpack://crypto-gost-js/./node_modules/sha.js/sha.js","webpack://crypto-gost-js/./node_modules/readable-stream/passthrough.js","webpack://crypto-gost-js/./node_modules/readable-stream/transform.js","webpack://crypto-gost-js/./node_modules/readable-stream/duplex-browser.js","webpack://crypto-gost-js/./node_modules/readable-stream/writable-browser.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://crypto-gost-js/./node_modules/util-deprecate/browser.js","webpack://crypto-gost-js/./node_modules/setimmediate/setImmediate.js","webpack://crypto-gost-js/./node_modules/timers-browserify/main.js","webpack://crypto-gost-js/./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack://crypto-gost-js/./node_modules/ieee754/index.js","webpack://crypto-gost-js/./node_modules/base64-js/index.js","webpack://crypto-gost-js/./node_modules/crypto-browserify/index.js","webpack://crypto-gost-js/./src/index.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","inherits","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","buffer","Buffer","copyProps","src","dst","from","alloc","allocUnsafe","allocUnsafeSlow","SafeBuffer","arg","encodingOrOffset","length","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","global","base64","ieee754","isArray","INSPECT_MAX_BYTES","TYPED_ARRAY_SUPPORT","typedArraySupport","kMaxLength","arr","Uint8Array","__proto__","foo","subarray","byteLength","e","createBuffer","that","RangeError","this","Error","poolSize","_augment","ArrayBuffer","fromArrayBuffer","fromString","fromObject","species","assertSize","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","isnan","type","data","toString","b","_isBuffer","compare","a","x","y","Math","min","String","toLowerCase","concat","list","pos","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","Array","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","sliceLen","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","objectWriteUInt16","littleEndian","writeUInt16LE","writeUInt16BE","objectWriteUInt32","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","assert","msg","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","num","left","right","cmp","init","_initNumber","_initArray","_parseHex","_parseBase","strip","toArray","ceil","w","off","parseHex","parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","dest","clone","_expand","_normSign","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","toBitArray","bit","wbit","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","smallMulTo","self","k","ncarry","rword","maxJ","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","ireduce","rlen","split","imulK","input","K256","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","Mont","rinv","minv","u","elliptic","version","utils","rand","curve","curves","ec","eddsa","equal","assertEqual","enc","zero2","htonl","toHex32","zero8","join32","split32","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","ah","al","bh","bl","sum64_hi","sum64_lo","sum64_4_hi","ch","cl","dh","dl","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","Function","eval","Transform","StringDecoder","CipherBase","hashMode","_finalOrDigest","final","_final","__final","_decoder","_encoding","update","inputEnc","outputEnc","outData","_update","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","_transform","err","_flush","done","fin","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","args","Item","title","browser","env","argv","versions","noop","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","pna","objectKeys","keys","Duplex","util","Readable","Writable","v","method","options","readable","allowHalfOpen","onend","_writableState","highWaterMark","ended","onEndNT","_readableState","destroyed","_destroy","cb","NotSupportedError","DataError","OperationError","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","block","accum","assigned","remainder","digest","rem","lowBits","highBits","hash","_hash","oldBrowser","crypto","msCrypto","getRandomValues","randomBytes","rawBytes","GostASN1","_helpers","_gostSecurity","_gostCoding","CryptoOperationData","algorithms","gostSecurityInstance","names","identifiers","attributes","parameters","BER","gostCodingInstance","PEM","Chars","Hex","Int16","swapBytes","isBinary","lpad","npw2","SInt","encode","decode","descriptor","_typeof","defineProperties","properties","getOwnPropertyDescriptor","format","tagNumber","tagClass","tagConstructed","uniformTitle","source","extend","Super","Class","propertiesObject","propertiesClass","superclass","super","ASN1Object","_set","propName","_get","_call","methodName","hasProperty","proto","PRIMITIVE","ANY","BOOLEAN","IA5String","NumericString","PrintableString","TeletexString","UTF8String","UTCTime","GeneralizedTime","UniversalString","BMPString","NULL","PRIMITIVE_CODE","CODE","structure","id","INTEGER","ENUMERATED","OCTET_STRING","WRAPPING","WrappedClass","BIT_STRING","MASK","numbits","charAt","COMBINE","combine","owner","valueName","SEQUENCE","check","items","ItemClass","getItemClass","item","encoded","result","ATTRIBUTE","typeName","ownerDafaultType","uniformName","BaseClass","DEFINE","typeSet","defaultType","typeId","OBJECT_IDENTIFIER","test","IMPLICIT","header","content","EXPLICIT","CTX","ContentClass","ARRAY_OF","ItemClassDef","typeAndValue","createItem","reset","getItemValue","setItemValue","isItemType","ArrayClass","values","SEQUENCE_OF","SET_OF","ENCLOSURE","modifier","SET_OF_SINGLE","CHOICE","ENCAPSULATES","DEFAULT","optional","OPTIONAL","DEFAULT_NULL","DirectoryString","teletexString","printableString","universalString","utf8String","bmpString","numericString","Time","utcTime","generalTime","getYear","AttributeType","AttributeValue","AttributeTypeAndValue","RelativeDistinguishedName","serialName","countryName","dnQualifier","emailAddress","domainComponent","SNILS","OGRN","INN","RDNSequence","Name","rdnSequence","Validity","notBefore","notAfter","Version","Attribute","Attributes","AttributeSequence","FieldElement","Curve","seed","ECPoint","FieldID","fieldType","ECParameters","fieldID","order","cofactor","GostR3410Parameters","publicKeyParamSet","digestParamSet","encryptionParamSet","GostR3411Parameters","ECDHParameters","namedParameters","ecParameters","implicitly","Algorithm","paramType","algorithm","AlgorithmIdentifier","DefaultAlgorithm","algorithmSet","ECDHKeyAlgorithm","params","namedCurve","expand","GostKeyAlgorithm","paramName","sBox","encParams","AlgorithmWithNoParam","AlgorithmWithNullParam","Gost341194DigestAlgorithm","parameter","KeyAlgorithmIdentifier","ecdsa","noSignature","rsaEncryption","id-sc-gostR3410-2001","id-GostR3410-2001","id-GostR3410-94","id-GostR3410-2001DH","id-GostR3410-94DH","id-tc26-gost3410-12-256","id-tc26-gost3410-12-512","id-tc26-agreement-gost-3410-12-256","id-tc26-agreement-gost-3410-12-512","id-sc-gost28147-gfb","id-Gost28147-89","SignatureAlgorithmIdentifier","sha1withRSAEncryption","sha256withRSAEncryption","sha384withRSAEncryption","sha512withRSAEncryption","ecdsa-with-SHA1","ecdsa-with-SHA256","ecdsa-with-SHA384","ecdsa-with-SHA512","id-GostR3411-94-with-GostR3410-2001","id-GostR3411-94-with-GostR3410-94","id-tc26-signwithdigest-gost3410-12-94","id-tc26-signwithdigest-gost3410-12-256","id-tc26-signwithdigest-gost3410-12-512","id-sc-gostR3410-94","id-sc-gostR3411-94-with-gostR3410-94","id-sc-gostR3411-94-with-gostR3410-2001","DigestAlgorithmIdentifier","sha1","sha256","sha384","sha512","id-GostR3411-94","id-tc26-gost3411-94","id-tc26-gost3411-12-256","id-tc26-gost3411-12-512","id-sc-gostR3411-94","Gost2814789Key","Gost2814789MAC","Gost2814789ParamSet","Gost2814789IV","Gost2814789Parameters","iv","Gost2814789KeyWrapParameters","ukm","Gost2814789Algorithm","SCGostAlgorithm","GostKeyWrapAlgorithm","KeyWrapAlgorithmIdentifier","id-Gost28147-89-None-KeyWrap","id-Gost28147-89-CryptoPro-KeyWrap","GostKeyAgreementAlgorithm","wrapping","BaseEncryptionAlgorithmIdentifier","MessageAuthenticationCodeAlgorithm","id-Gost28147-89-MAC","id-HMACGostR3411-94","id-tc26-hmac-gost-3411-12-256","id-tc26-hmac-gost-3411-12-512","hmacWithSHA1","hmacWithSHA224","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512","id-sc-gost28147-mac","id-sc-hmacWithGostR3411","PBKDF2params","salt","specified","otherSource","iterationCount","keyLength","prf","PBKDF2Algorithm","iterations","hmac","KeyDerivationAlgorithmIdentifier","PBKDF2","PBEParameter","PBES1Algorithm","derivation","PBES2params","keyDerivationFunc","encryptionScheme","PBES2Algorithm","encryption","PasswordEncryptionAlgorithmIndentifier","pbeWithSHAAndAES128-CBC","pbeWithSHAAndAES192-CBC","pbeWithSHAAndAES256-CBC","pbeWithSHA256AndAES128-CBC","pbeWithSHA256AndAES192-CBC","pbeWithSHA256AndAES256-CBC","id-sc-pbeWithGost3411AndGost28147","id-sc-pbeWithGost3411AndGost28147CFB","pbeWithSHAAnd3-KeyTripleDES-CBC","pbeWithSHAAnd2-KeyTripleDES-CBC","pbeWithSHAAnd128BitRC2-CBC","pbeWithSHAAnd40BitRC2-CBC","pbeUnknownGost","PBES2","KeyEncryptionAlgorithmIdentifier","id-GostR3410-94-CryptoPro-ESDH","id-GostR3410-2001-CryptoPro-ESDH","id-sc-r3410-ESDH-r3411kdf","id-sc-cmsGostWrap","id-sc-cmsGost28147Wrap","PBMAC1params","messageAuthScheme","PasswordMACAlgorithm","PasswordMACAlgorithmIdentifier","PBMAC1","ContentEncryptionAlgorithmIdentifier","KeyData","DHPublicKey","ECDHPublicKey","GostR3410PublicKey","SubjectPublicKeyInfo","subjectPublicKey","GostSubjectPublicKeyInfo","PKTypes","extractable","usages","PrivateKey","DHPrivateKey","GostR3410KeyValueMask","GostR3410KeyValueInfo","keyValueMask","keyValyePublicKey","GostR3410PrivateKey","privateKey","keyValueInfo","enclosed","GostWrappedPrivateKey","privateKeyAlgorithm","privateKeyWrapped","keyData","keyMac","mac","id-sc-gostR3410-2001-publicKey","PrivateKeyInfo","PrivateKeyAlgorithmIdentifier","PublicKey","OneAsymmetricKey","publicKey","AsymmetricKeyPackage","GostPrivateKeyInfo","KeyEncryptedData","EncryptedPrivateKeyInfo","encryptionAlgorithm","encryptedData","UniqueIdentifier","CertificateSerialNumber","BasicConstraints","cA","pathLenConstraint","KeyUsage","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","KeyPurposeId","ExtKeyUsageSyntax","KeyIdentifier","OtherName","EDIPartyName","nameAssigner","partyName","ORAddress","GeneralName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID","GeneralNames","AuthorityKeyIdentifier","keyIdentifier","authorityCertIssuer","authorityCertSerialNumber","PrivateKeyUsagePeriod","CertPolicyId","PolicyQualifierId","PolicyQualifierInfo","policyQualifierId","qualifier","PolicyInformation","policyIdentifier","policyQualifiers","PolicyMapping","issuerDomainPolicy","subjectDomainPolicy","BaseDistance","GeneralSubtree","minimum","maximum","GeneralSubtrees","NameConstraints","permittedSubtrees","excludedSubtrees","SkipCerts","PolicyConstraints","requireExplicitPolicy","inhibitPolicyMapping","ReasonFlags","unused","keyCompromise","cACompromise","affiliationChanged","superseded","cessationOfOperation","certificateHold","privilegeWithdrawn","aACompromise","DistributionPointName","fullName","nameRelativeToCRLIssuer","DistributionPoint","distributionPoint","reasons","cRLIssuer","CRLDistributionPoints","FreshestCRL","AccessDescription","accessMethod","accessLocation","Extension","defaultCritical","extnID","critical","extnValue","defineValue","IssuerSignTool","signTool","cATool","signToolCert","cAToolCert","Extensions","CertExtensions","authorityKeyIdentifier","subjectKeyIdentifier","keyUsage","privateKeyUsagePeriod","certificatePolicies","policyMappings","subjectAltName","issuerAltName","subjectDirectoryAttributes","basicConstraints","nameConstraints","policyConstraints","extKeyUsage","cRLDistributionPoints","inhibitAnyPolicy","freshestCRL","authorityInfoAccess","subjectInfoAccess","subjectSignTool","issuerSignTool","ECDHSignature","GostR3410Signature","GostSignature","TBSCertificate","serialNumber","signature","issuer","validity","subject","subjectPublicKeyInfo","issuerUniqueID","subjectUniqueID","extensions","Certificate","tbsCertificate","signatureAlgorithm","signatureValue","ExtensionRequest","CRIAttributes","challengePassword","extensionRequest","msCertExtensions","extendedCertificateAttributes","CertificationRequestInfo","CertificationRequest","requestInfo","CRLNumber","CRLReason","unspecified","removeFromCRL","IssuingDistributionPoint","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","CLRExtensions","cRLNumber","deltaCRLIndicator","issuingDistributionPoint","CLREntryExtensions","cRLReason","instructionCode","invalidityDate","certificateIssuer","TBSCertList","thisUpdate","nextUpdate","revokedCertificates","userCertificate","revocationDate","crlEntryExtensions","crlExtensions","CertificateList","tbsCertList","AttCertVersion","ObjectDigestInfo","digestedObjectType","publicKeyCert","otherObjectTypes","otherObjectTypeID","digestAlgorithm","objectDigest","IssuerSerial","serial","issuerUID","V2Form","issuerName","baseCertificateID","objectDigestInfo","TargetCert","targetCertificate","targetName","certDigestInfo","Target","targetGroup","targetCert","Targets","AttCertExtensions","auditIdentity","targetInformation","noRevAvail","Holder","entityName","AttCertIssuer","v1Form","v2Form","AttCertValidityPeriod","notBeforeTime","notAfterTime","SvceAuthInfo","service","ident","authInfo","RoleSyntax","roleAuthority","roleName","ClassList","unmarked","unclassified","restricted","confidential","secret","topSecret","SecurityCategory","Clearance","policyId","classList","securityCategories","IetfAttrSyntax","policyAuthority","octets","oid","getIdentifier","AttributeCertificateInfo","holder","attrCertValidityPeriod","authenticationInfo","accessIdentity","chargingIdentity","group","role","clearance","AttributeCertificate","acinfo","EncryptedKey","EncryptedContent","SubjectKeyIdentifier","UserKeyingMaterial","ECCCMSSharedInfo","keyInfo","entityUInfo","suppPubInfo","Gost2814789EncryptedKey","encryptedKey","maskKey","macKey","Int32Array","GostR3410TransportParameters","ephemeralPublicKey","GostR3410KeyTransport","sessionEncryptedKey","transportParameters","public","SCGostKeyTransport","addedukm","GostEncryptedKey","GostKeyContainerContentAttributes","kccaSoftPassword","kccaReservePrimary","kccaPrimaryKeyAbsent","kccaFKCShared","GostPrivateKeyAttributes","pkaExportable","pkaUserProtect","pkaExchange","pkaEphemeral","pkaNonCachable","pkaDhAllowed","GostPrivateKeyParameters","CertificateLink","path","PasswordPolicy","GostKeyContainerContent","containerAlgoritmIdentifier","containerName","primaryPrivateKeyParameters","hmacPassword","secondaryEncryptedPrivateKey","secondaryPrivateKeyParameters","primaryCertificate","secondaryCertificate","encryptionContainerName","primaryCertificateLink","secondaryCertificateLink","primaryFP","secondaryFP","passwordPolicy","containerSecurityLevel","keyValidity","secondaryEncryptionContainerName","GostKeyContainer","keyContainerContent","hmacKeyContainerContent","GostKeyContainerName","extElem1","GostPrivateKeys","primaryKey","secondaryKey","hmacKey","GostPrivateMasks","randomStatus","hmacRandom","ViPNetKeyInfo","keyClass","keyType","addSerialNumber","certSerialNumber","subjectUID","recipientUID","keyUID","flags","ViPNetInfo","defenceKeyInfo","certificate","CMSVersion","ContentType","SigningTime","Digest","MessageAuthenticationCode","BodyPartID","BodyPartPath","CMCUnsignedData","bodyPartPath","identifier","SignedAttributes","contentType","signingTime","messageDigest","UnsignedAttributes","countersignature","Countersignature","unsignedData","AuthAttributes","UnauthAttributes","UnprotectedAttributes","IssuerAndSerialNumber","SignerIdentifier","issuerAndSerialNumber","SignerInfo","sid","signedAttrs","unsignedAttrs","SignerInfos","DigestAlgorithmIdentifiers","AttributeCertificateV2","ExtendedCertificateInfo","ExtendedCertificate","extendedCertificateInfo","OtherCertificateFormat","otherCertFormat","otherCert","AttributeCertificateInfoV1","subjectName","attCertValidityPeriod","AttributeCertificateV1","acInfo","EncapsulatedContentInfo","eContentType","eContent","CertificateChoices","extendedCertificate","v1AttrCert","v2AttrCert","other","OtherRevocationInfoFormat","otherRevInfoFormat","otherRevInfo","RevocationInfoChoice","crl","CertificateSet","RevocationInfoChoices","SignedData","digestAlgorithms","encapContentInfo","certificates","crls","signerInfos","RecipientIdentifier","KeyTransRecipientInfo","rid","keyEncryptionAlgorithm","OtherKeyAttribute","keyAttrId","keyAttr","RecipientKeyIdentifier","date","KeyAgreeRecipientIdentifier","rKeyId","RecipientEncryptedKey","RecipientEncryptedKeys","OriginatorPublicKey","MQVuserKeyingMaterial","OriginatorIdentifierOrKey","originatorKey","KeyAgreeRecipientInfo","originator","recipientEncryptedKeys","KEKIdentifier","KEKRecipientInfo","kekid","PasswordRecipientInfo","friendlyName","OtherRecipientInfo","oriType","oriValue","RecipientInfo","ktri","kari","kekri","pwri","ori","OriginatorInfo","certs","RecipientInfos","EncryptedContentInfo","contentEncryptionAlgorithm","encryptedContent","EnvelopedData","originatorInfo","recipientInfos","encryptedContentInfo","unprotectedAttrs","DigestedData","EncryptedData","AuthenticatedData","macAlgorithm","authAttrs","unauthAttrs","AuthEnvelopedData","authEncryptedContentInfo","EncryptedKeyPackage","encrypted","enveloped","authEnveloped","ContentInfo","signedData","envelopedData","digestedData","authData","encryptedKeyPkg","aKeyPackage","DigestInfo","PKCS12Attributes","keyProviderNameAttr","localKeyId","certKeyIdentifierPropId","SafeBagType","CertType","CRLType","SecretType","KeyBag","PKCS8ShroudedKeyBag","CertBag","certId","certValue","x509Certificate","sdsiCertificate","CRLBag","crlId","crlValue","x509CRL","SecretBag","secretTypeId","secretValue","SafeBag","bagId","bagValue","bagAttributes","keyBag","pkcs8ShroudedKeyBag","certBag","crlBag","secretBag","safeContentsBag","SafeContents","AuthenticatedSafe","MacData","macSalt","PFX","authSafe","macData","RegToken","Authenticator","CertId","OldCertId","ProtocolEncrKey","EncryptedValue","intendedAlg","symmAlg","encSymmKey","keyAlg","valueHint","encValue","KeyGenParameters","encryptedValue","PKIArchiveOptions","encryptedPrivKey","keyGenParameters","archiveRemGenPrivKey","SinglePubInfo","pubMethod","dontCare","x500","web","ldap","pubLocation","PKIPublicationInfo","action","dontPublish","pleasePublish","pubInfos","SubsequentMessage","encrCert","challengeResp","POPOPrivKey","thisMessage","subsequentMessage","dhMAC","agreeMAC","PKMACValue","PBMParameter","owf","algId","POPOSigningKeyInput","sender","publicKeyMAC","POPOSigningKey","poposkInput","algorithmIdentifier","ProofOfPossession","raVerified","Controls","regToken","authenticator","pkiPublicationInfo","pkiArchiveOptions","oldCertID","protocolEncrKey","OptionalValidity","CertTemplate","signingAlg","CertRequest","certReqId","certTemplate","controls","UTF8Pairs","CertReq","EncKeyWithID","generalName","CertReqMsg","certReq","popo","regInfo","utf8Pairs","encKeyWithID","CertReqMessages","PendInfo","pendToken","pendTime","CMCStatus","success","failed","pending","noSupport","confirmRequired","popRequired","partial","CMCFailInfo","badAlg","badMessageCheck","badRequest","badTime","badCertId","unsupportedExt","mustArchiveKeys","badIdentity","popFailed","noKeyReuse","internalCAError","tryLater","authDataFail","CMCStatusInfo","cMCStatus","bodyList","statusString","otherInfo","failInfo","pendInfo","AddExtensions","pkiDataReference","certReferences","LraPopWitness","pkiDataBodyid","bodyIds","GetCert","GetCRL","cRLName","time","RevokeRequest","reason","passphrase","comment","DecryptedPOP","bodyPartID","thePOPAlgID","thePOP","CMCCertId","BodyPartReference","CMCStatusInfoV2","extendedFailInfo","failInfoOID","failInfoValue","PublishTrustAnchors","seqNumber","hashAlgorithm","anchorHashes","AuthPublish","BodyPartList","CMCPublicationInfo","hashAlg","certHashes","pubInfo","ModCertTemplate","ControlsProcessed","IdentifyProofV2","proofAlgID","macAlgId","witness","PopLinkWitnessV2","keyGenAlgorithm","TaggedCertificationRequest","certificationRequest","TaggedContentInfo","contentInfo","OtherMsg","otherMsgType","otherMsgValue","TaggedRequest","tcr","crm","orm","requestMessageType","requestMessageValue","EncryptedPOP","request","cms","witnessAlgID","TaggedAttribute","attrType","attrValues","statusInfo","identification","identityProof","dataReturn","transactionId","senderNonce","recipientNonce","addExtensions","encryptedPOP","decryptedPOP","lraPOPWitness","getCert","getCRL","revokeRequest","responseInfo","queryPending","popLinkRandom","popLinkWitness","confirmCertAcceptance","statusInfoV2","trustedAnchors","authPublish","batchRequests","batchResponses","publishCert","modCertTemplate","controlProcessed","popLinkWitnessV2","identityProofV2","PKIData","controlSequence","reqSequence","cmsSequence","otherMsgSequence","PKIResponse","gostASN1Instance","GostSecurity","1.2.643.2.2","1.2.643.2.2.3","1.2.643.2.2.4","1.2.643.2.2.9","1.2.643.2.2.10","1.2.643.2.2.13.0","1.2.643.2.2.13.1","1.2.643.2.2.14.0","1.2.643.2.2.14.1","1.2.643.2.2.19","1.2.643.2.2.20","1.2.643.2.2.20.1","1.2.643.2.2.20.2","1.2.643.2.2.20.3","1.2.643.2.2.20.4","1.2.643.2.2.21","1.2.643.2.2.22","1.2.643.2.2.30.0","1.2.643.2.2.30.1","1.2.643.2.2.30.2","1.2.643.2.2.30.3","1.2.643.2.2.30.4","1.2.643.2.2.31.0","1.2.643.2.2.31.1","1.2.643.2.2.31.2","1.2.643.2.2.31.3","1.2.643.2.2.31.4","1.2.643.2.2.31.5","1.2.643.2.2.31.6","1.2.643.2.2.31.7","1.2.643.2.2.31.12","1.2.643.2.2.31.13","1.2.643.2.2.31.14","1.2.643.2.2.31.15","1.2.643.2.2.31.16","1.2.643.2.2.31.17","1.2.643.2.2.32.0","1.2.643.2.2.32.2","1.2.643.2.2.32.3","1.2.643.2.2.32.4","1.2.643.2.2.32.5","1.2.643.2.2.33.1","1.2.643.2.2.33.2","1.2.643.2.2.33.3","1.2.643.2.2.34.2","1.2.643.2.2.34.3","1.2.643.2.2.34.4","1.2.643.2.2.34.5","1.2.643.2.2.34.6","1.2.643.2.2.34.7","1.2.643.2.2.34.8","1.2.643.2.2.34.9","1.2.643.2.2.34.10","1.2.643.2.2.34.11","1.2.643.2.2.34.12","1.2.643.2.2.34.13","1.2.643.2.2.34.14","1.2.643.2.2.34.15","1.2.643.2.2.34.16","1.2.643.2.2.34.21","1.2.643.2.2.34.22","1.2.643.2.2.34.24","1.2.643.2.2.34.25","1.2.643.2.2.34.26","1.2.643.2.2.34.27","1.2.643.2.2.34.28","1.2.643.2.2.35.0","1.2.643.2.2.35.1","1.2.643.2.2.35.2","1.2.643.2.2.35.3","1.2.643.2.2.36.0","1.2.643.2.2.36.1","1.2.643.2.2.37.1","1.2.643.2.2.37.2","1.2.643.2.2.37.2.1","1.2.643.2.2.37.2.2","1.2.643.2.2.37.3.1","1.2.643.2.2.37.3.2","1.2.643.2.2.37.3.3","1.2.643.2.2.37.3.10","1.2.643.2.2.38.1","1.2.643.2.2.38.2","1.2.643.2.2.47.1","1.2.643.2.2.47.2","1.2.643.2.2.47.3","1.2.643.2.2.47.4","1.2.643.2.2.47.5","1.2.643.2.2.49.2","1.2.643.2.2.96","1.2.643.2.2.97","1.2.643.2.2.98","1.2.643.2.2.99","1.2.643.2.45.1.1.1","1.2.643.2.45.1.1.2","1.2.643.2.45.1.1.3","1.2.643.3.131.1.1","1.2.643.3.141.1.1","1.2.643.3.141.1.2","1.2.643.7.1","1.2.643.7.1.1.1.1","1.2.643.7.1.1.1.2","1.2.643.7.1.1.2.1","1.2.643.7.1.1.2.2","1.2.643.7.1.1.2.3","1.2.643.7.1.1.3.1","1.2.643.7.1.1.3.2","1.2.643.7.1.1.3.3","1.2.643.7.1.1.4.1","1.2.643.7.1.1.4.2","1.2.643.7.1.1.6.1","1.2.643.7.1.1.6.2","1.2.643.7.1.2.1.1.0","1.2.643.7.1.2.1.1.1","1.2.643.7.1.2.1.1.2","1.2.643.7.1.2.1.2.0","1.2.643.7.1.2.1.2.1","1.2.643.7.1.2.1.2.2","1.2.643.7.1.2.1.2.3","1.2.643.7.1.2.1.2.4","1.2.643.7.1.2.5.1.1","1.2.643.100.1","1.2.643.100.2.1","1.2.643.100.2.2","1.2.643.100.3","1.2.643.100.4","1.2.643.100.5","1.2.643.100.6","1.2.643.100.111","1.2.643.100.112","1.2.643.100.113.1","1.2.643.100.113.2","1.2.643.100.113.3","1.2.643.100.113.4","1.2.643.100.113.5","1.2.643.100.113.6","1.2.643.100.114.1","1.2.643.100.114.2","1.2.643.100.114.3","1.2.643.100.114.4","1.2.643.100.114.5","1.2.643.100.114.6","1.2.840.10040.4","1.2.840.10040.4.1","1.2.840.10040.4.3","1.2.840.10045","1.2.840.10045.1","1.2.840.10045.1.1","1.2.840.10045.1.2","1.2.840.10045.2.1","1.2.840.10045.3.0","1.2.840.10045.3.1.1","1.2.840.10045.3.1.2","1.2.840.10045.3.1.3","1.2.840.10045.3.1.4","1.2.840.10045.3.1.5","1.2.840.10045.3.1.6","1.2.840.10045.3.1.7","1.2.840.10045.4","1.2.840.10045.4.1","1.2.840.10045.4.2","1.2.840.10045.4.4","1.2.840.10045.4.4.1","1.2.840.10045.4.4.2","1.2.840.10045.4.4.3","1.2.840.10045.4.4.4","1.2.840.113533.7.66.13","1.3.6.1.4.1.22554.1.1.2.1.2","1.3.6.1.4.1.22554.1.1.2.1.22","1.3.6.1.4.1.22554.1.1.2.1.42","1.3.6.1.4.1.22554.1.2.1.2.1.2","1.3.6.1.4.1.22554.1.2.1.2.1.22","1.3.6.1.4.1.22554.1.2.1.2.1.42","1.2.840.113549","1.2.840.113549.1.1.1","1.2.840.113549.1.1.2","1.2.840.113549.1.1.3","1.2.840.113549.1.1.4","1.2.840.113549.1.1.5","1.2.840.113549.1.1.7","1.2.840.113549.1.1.8","1.2.840.113549.1.1.9","1.2.840.113549.1.1.10","1.2.840.113549.1.1.11","1.2.840.113549.1.1.12","1.2.840.113549.1.1.13","1.2.840.113549.1.2.7","1.2.840.113549.1.2.8","1.2.840.113549.1.2.9","1.2.840.113549.1.2.10","1.2.840.113549.1.2.11","1.2.840.113549.1.3.1","1.2.840.113549.1.5.12","1.2.840.113549.1.5.13","1.2.840.113549.1.5.14","1.2.840.113549.1.7.1","1.2.840.113549.1.7.2","1.2.840.113549.1.7.3","1.2.840.113549.1.7.4","1.2.840.113549.1.7.5","1.2.840.113549.1.7.6","1.2.840.113549.1.9.1","1.2.840.113549.1.9.2","1.2.840.113549.1.9.3","1.2.840.113549.1.9.4","1.2.840.113549.1.9.5","1.2.840.113549.1.9.6","1.2.840.113549.1.9.7","1.2.840.113549.1.9.8","1.2.840.113549.1.9.9","1.2.840.113549.1.9.10","1.2.840.113549.1.9.11","1.2.840.113549.1.9.12","1.2.840.113549.1.9.13","1.2.840.113549.1.9.14","1.2.840.113549.1.9.15","1.2.840.113549.1.9.16","1.2.840.113549.1.9.16.1.2","1.2.840.113549.1.9.16.1.4 ","1.2.840.113549.1.9.16.1.17 ","1.2.840.113549.1.9.16.1.21","1.2.840.113549.1.9.16.1.23","1.2.840.113549.1.9.16.2","1.2.840.113549.1.9.16.2.1","1.2.840.113549.1.9.16.2.12","1.2.840.113549.1.9.16.2.14","1.2.840.113549.1.9.16.2.2","1.2.840.113549.1.9.16.2.3","1.2.840.113549.1.9.16.2.34","1.2.840.113549.1.9.16.2.47","1.2.840.113549.1.9.16.3.5","1.2.840.113549.1.9.20","1.2.840.113549.1.9.21","1.2.840.113549.1.9.22","1.2.840.113549.1.9.22.1","1.2.840.113549.1.9.22.2","1.2.840.113549.1.9.23","1.2.840.113549.1.9.23.1","1.2.840.113549.1.9.24","1.2.840.113549.1.9.24.1","1.2.840.113549.1.9.25.1","1.2.840.113549.1.9.25.2","1.2.840.113549.1.9.25.3","1.2.840.113549.1.9.25.4","1.2.840.113549.1.9.25.5","1.2.840.113549.1.9.26.1","1.2.840.113549.1.9.26.2","1.2.840.113549.1.9.27.1","1.2.840.113549.1.9.27.2","1.2.840.113549.1.12.0.1","1.2.840.113549.1.12.1","1.2.840.113549.1.12.1.1","1.2.840.113549.1.12.1.2","1.2.840.113549.1.12.1.3","1.2.840.113549.1.12.1.4","1.2.840.113549.1.12.1.5","1.2.840.113549.1.12.1.6","1.2.840.113549.1.12.1.80","1.2.840.113549.1.12.2.1","1.2.840.113549.1.12.3.1","1.2.840.113549.1.12.3.2","1.2.840.113549.1.12.3.3","1.2.840.113549.1.12.3.4","1.2.840.113549.1.12.3.5","1.2.840.113549.1.12.4.1","1.2.840.113549.1.12.4.2","1.2.840.113549.1.12.10.1.1","1.2.840.113549.1.12.10.1.2","1.2.840.113549.1.12.10.1.3","1.2.840.113549.1.12.10.1.4","1.2.840.113549.1.12.10.1.5","1.2.840.113549.1.12.10.1.6","1.2.840.113549.2.5","1.2.840.113549.3.7","1.3.132.0.34","1.3.132.0.35","1.3.132.112","1.3.14.3.2.26","1.3.6.1.4.1.311.2.1.14","1.3.6.1.4.1.311.17.1","1.3.6.1.4.1.311.17.2","1.3.6.1.4.1.311.17.3.20","1.3.6.1.4.1.5849","1.3.6.1.4.1.5849.1.1.1","1.3.6.1.4.1.5849.1.1.2","1.3.6.1.4.1.5849.1.1.3","1.3.6.1.4.1.5849.1.1.4","1.3.6.1.4.1.5849.1.1.5","1.3.6.1.4.1.5849.1.1.6.1.1.1","1.3.6.1.4.1.5849.1.1.6.1.1.2","1.3.6.1.4.1.5849.1.2.1","1.3.6.1.4.1.5849.1.3.1","1.3.6.1.4.1.5849.1.3.2","1.3.6.1.4.1.5849.1.4.1","1.3.6.1.4.1.5849.1.4.2","1.3.6.1.4.1.5849.1.5.1","1.3.6.1.4.1.5849.1.5.2","1.3.6.1.4.1.5849.1.6.2","1.3.6.1.4.1.5849.1.7.2","1.3.6.1.4.1.5849.1.8.1","1.3.6.1.4.1.5849.1.8.3","1.3.6.1.4.1.5849.2.2.1","1.3.6.1.5.5.7.0.12","1.3.6.1.5.5.7.1.1","1.3.6.1.5.5.7.1.4","1.3.6.1.5.5.7.1.6","1.3.6.1.5.5.7.1.10","1.3.6.1.5.5.7.1.11","1.3.6.1.5.5.7.3.1","1.3.6.1.5.5.7.3.2","1.3.6.1.5.5.7.3.3","1.3.6.1.5.5.7.3.4","1.3.6.1.5.5.7.3.5","1.3.6.1.5.5.7.3.6","1.3.6.1.5.5.7.3.7","1.3.6.1.5.5.7.3.8","1.3.6.1.5.5.7.3.9","1.3.6.1.5.5.7.5.1","1.3.6.1.5.5.7.5.1.1","1.3.6.1.5.5.7.5.1.2","1.3.6.1.5.5.7.5.1.3","1.3.6.1.5.5.7.5.1.4","1.3.6.1.5.5.7.5.1.5","1.3.6.1.5.5.7.5.1.6","1.3.6.1.5.5.7.5.2","1.3.6.1.5.5.7.5.2.1","1.3.6.1.5.5.7.5.2.2","1.3.6.1.5.5.7.6.2","1.3.6.1.5.5.7.7.1","1.3.6.1.5.5.7.7.2","1.3.6.1.5.5.7.7.3","1.3.6.1.5.5.7.7.4","1.3.6.1.5.5.7.7.5","1.3.6.1.5.5.7.7.6","1.3.6.1.5.5.7.7.7","1.3.6.1.5.5.7.7.8","1.3.6.1.5.5.7.7.9","1.3.6.1.5.5.7.7.10","1.3.6.1.5.5.7.7.11","1.3.6.1.5.5.7.7.15","1.3.6.1.5.5.7.7.16","1.3.6.1.5.5.7.7.17","1.3.6.1.5.5.7.7.18","1.3.6.1.5.5.7.7.19","1.3.6.1.5.5.7.7.21","1.3.6.1.5.5.7.7.22","1.3.6.1.5.5.7.7.23","1.3.6.1.5.5.7.7.24","1.3.6.1.5.5.7.7.25","1.3.6.1.5.5.7.7.26","1.3.6.1.5.5.7.7.27","1.3.6.1.5.5.7.7.28","1.3.6.1.5.5.7.7.29","1.3.6.1.5.5.7.7.30","1.3.6.1.5.5.7.7.31","1.3.6.1.5.5.7.7.32","1.3.6.1.5.5.7.7.33","1.3.6.1.5.5.7.7.34","1.3.6.1.5.5.7.9.1","1.3.6.1.5.5.7.9.2","1.3.6.1.5.5.7.9.3","1.3.6.1.5.5.7.9.4","1.3.6.1.5.5.7.9.5","1.3.6.1.5.5.7.10.1","1.3.6.1.5.5.7.10.2","1.3.6.1.5.5.7.10.3","1.3.6.1.5.5.7.10.4","1.3.6.1.5.5.7.10.6","1.3.6.1.5.5.7.12.2","1.3.6.1.5.5.7.12.3","1.3.6.1.5.5.7.48.1.1","1.3.6.1.5.5.7.48.1.2","1.3.6.1.5.5.7.48.1.3","1.3.6.1.5.5.7.48.1.4","1.3.6.1.5.5.7.48.1.5","1.3.6.1.5.5.7.48.1.6","1.3.6.1.5.5.7.48.1.7","2.16.840.1.101.2.1.2.78.2","2.16.840.1.101.2.1.2.78.3","2.16.840.1.101.2.1.2.78.5","2.16.840.1.101.2.1.2.78.6","2.16.840.1.101.3.4","2.16.840.1.101.3.4.1","2.16.840.1.101.3.4.1.1","2.16.840.1.101.3.4.1.2","2.16.840.1.101.3.4.1.3","2.16.840.1.101.3.4.1.4","2.16.840.1.101.3.4.1.5","2.16.840.1.101.3.4.1.6","2.16.840.1.101.3.4.1.7","2.16.840.1.101.3.4.1.8","2.16.840.1.101.3.4.1.21","2.16.840.1.101.3.4.1.22","2.16.840.1.101.3.4.1.23","2.16.840.1.101.3.4.1.24","2.16.840.1.101.3.4.1.25","2.16.840.1.101.3.4.1.26","2.16.840.1.101.3.4.1.27","2.16.840.1.101.3.4.1.28","2.16.840.1.101.3.4.1.41","2.16.840.1.101.3.4.1.42","2.16.840.1.101.3.4.1.43","2.16.840.1.101.3.4.1.44","2.16.840.1.101.3.4.1.45","2.16.840.1.101.3.4.1.46","2.16.840.1.101.3.4.1.47","2.16.840.1.101.3.4.1.48","2.16.840.1.101.3.4.2.1","2.16.840.1.101.3.4.2.2","2.16.840.1.101.3.4.2.3","2.16.840.1.113730.3.1.216","2.5.1.5.55","2.5.4.0","2.5.4.1","2.5.4.2","2.5.4.3","2.5.4.5","2.5.4.6","2.5.4.7","2.5.4.8","2.5.4.9","2.5.4.10","2.5.4.11","2.5.4.12","2.5.4.13","2.5.4.14","2.5.4.15","2.5.4.16","2.5.4.17","2.5.4.18","2.5.4.19","2.5.4.20","2.5.4.21","2.5.4.22","2.5.4.23","2.5.4.24","2.5.4.25","2.5.4.26","2.5.4.27","2.5.4.28","2.5.4.29","2.5.4.30","2.5.4.31","2.5.4.32","2.5.4.33","2.5.4.34","2.5.4.35","2.5.4.36","2.5.4.37","2.5.4.38","2.5.4.39","2.5.4.40","2.5.4.41","2.5.4.42","2.5.4.43","2.5.4.44","2.5.4.45","2.5.4.46","2.5.4.47","2.5.4.48","2.5.4.49","2.5.4.50","2.5.4.51","2.5.4.52","2.5.4.53","2.5.4.58","2.5.4.65","2.5.4.72","2.5.29.1","2.5.29.2","2.5.29.3","2.5.29.4","2.5.29.5","2.5.29.6","2.5.29.7","2.5.29.8","2.5.29.9","2.5.29.10","2.5.29.11","2.5.29.12","2.5.29.13","2.5.29.14","2.5.29.15","2.5.29.16","2.5.29.17","2.5.29.18","2.5.29.19","2.5.29.20","2.5.29.21","2.5.29.22","2.5.29.23","2.5.29.24","2.5.29.25","2.5.29.26","2.5.29.27","2.5.29.28","2.5.29.29","2.5.29.30","2.5.29.31","2.5.29.32","2.5.29.33","2.5.29.34","2.5.29.35","2.5.29.36","2.5.29.37","2.5.29.46","2.5.29.54","2.5.29.55","2.5.29.56","id-GostR3410-94-a","id-GostR3410-94-aBis","id-GostR3410-94-b","id-GostR3410-94-bBis","id-sc-gost28147-ecb","id-sc-gost28147-gamma","id-sc-gostR3410-94-default","id-sc-gostR3410-94-test","rsaes-oaep","rsassa-pss","ecDH","dhKeyAgreement","aes128-CBC","aes128-CFB","aes128-GCM","aes128-wrap","aes192-CBC","aes192-CFB","aes192-GCM","aes192-wrap","aes256-CBC","aes256-CFB","aes256-GCM","aes256-wrap","id-GostR3410-94-TestParamSet","namedParam","id-GostR3410-94-CryptoPro-A-ParamSet","id-GostR3410-94-CryptoPro-B-ParamSet","id-GostR3410-94-CryptoPro-C-ParamSet","id-GostR3410-94-CryptoPro-D-ParamSet","id-GostR3410-94-CryptoPro-XchA-ParamSet","id-GostR3410-94-CryptoPro-XchB-ParamSet","id-GostR3410-94-CryptoPro-XchC-ParamSet","id-GostR3410-2001-CryptoPro-TestParamSet","id-GostR3410-2001-CryptoPro-A-ParamSet","id-GostR3410-2001-CryptoPro-B-ParamSet","id-GostR3410-2001-CryptoPro-C-ParamSet","id-GostR3410-2001-CryptoPro-XchA-ParamSet","id-GostR3410-2001-CryptoPro-XchB-ParamSet","id-tc26-gost-3410-12-256-paramSetTest","id-tc26-gost-3410-12-256-paramSetA","id-tc26-gost-3410-12-256-paramSetB","id-tc26-gost-3410-12-512-paramSetTest","id-tc26-gost-3410-12-512-paramSetA","id-tc26-gost-3410-12-512-paramSetB","id-tc26-gost-3410-12-512-paramSetC","id-tc26-gost-3410-12-512-paramSetD","secp256r1","secp384r","secp521r","id-GostR3411-94-TestParamSet","id-GostR3411-94-CryptoProParamSet","id-GostR3411-94-CryptoPro-A-ParamSet","id-GostR3411-94-CryptoPro-B-ParamSet","id-GostR3411-94-CryptoPro-C-ParamSet","id-Gost28147-89-TestParamSet","id-Gost28147-89-CryptoPro-A-ParamSet","keyMeshing","id-Gost28147-89-CryptoPro-B-ParamSet","id-Gost28147-89-CryptoPro-C-ParamSet","id-Gost28147-89-CryptoPro-D-ParamSet","id-Gost28147-89-None-KeyMeshing","id-Gost28147-89-CryptoPro-KeyMeshing","id-tc26-gost-28147-param-Z","D-TEST","D-A","D-B","D-C","D-D","E-TEST","E-A","E-B","E-C","E-D","E-Z","D-256","D-512","S-TEST","S-A","S-B","S-C","S-D","X-A","X-B","X-C","S-256-TEST","S-256-A","S-256-B","S-256-C","X-256-A","X-256-B","P-256","T-256-TEST","T-256-A","T-256-B","T-512-TEST","T-512-A","T-512-B","providers","CP-94","agreement","CP-01","TC-256","TC-512","SC-94","modulusLength","param","pbes","SC-01","RSA-2048","publicExponent","ECDSA-256","forEach","provider","pbmac","GostCoding","_errors","Base64","m3","m4","u24","slen","_win1251_","1026","1027","8218","1107","8222","8230","8224","8225","8364","8240","1033","8249","1034","1036","1035","1039","1106","8216","8217","8220","8221","8226","8211","8212","8482","1113","8250","1114","1116","1115","1119","160","1038","1118","1032","164","1168","166","167","1025","169","1028","171","172","173","174","1031","176","177","1030","1110","1169","181","182","183","1105","8470","1108","187","1112","1029","1109","1111","_win1251back_","to","charset","first","second","endean","substring","encodeBER","onlyContent","Date","bytelen","ba","sort","unusedBits","r1","original","setMinutes","getMinutes","getTimezoneOffset","ms","getMilliseconds","getFullYear","getMonth","getDate","getHours","getSeconds","Unit8Array","ha","ha1","l2","ha2","decodeBER","unusedBit","skip","reverse","shortYear","exec","dt","tz","toUpperCase","deep","index","re1","valid","re2","RegExp","re3","Reporter","DecoderBuffer","EncoderBuffer","Node","asn1","bignum","constants","decoders","encoders","BlockHash","pendingTotal","outSize","hmacStrength","padLength","_delta8","_delta32","_pad","_digest","pad","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","MD5","RIPEMD160","sha","Base","createHash","alg","SubtleCrypto","_gostEngineSync","_environment","_gostASN","InvalidStateError","InvalidAccessError","rootCrypto","getCryptoModule","normalize","SyntaxError","modes","na","shiftBits","macLength","procreator","keyWrapping","keySize","label","contex","context","diversifier","checkNative","subtle","checkKey","gostCipher","gostDigest","gostSign","md","extractKey","convertKey","keyUsages","convertKeyPair","publicAlgorithm","privateAlgorithm","publicBuffer","privateBuffer","publicUsages","filter","privateUsages","execute","Promise","resolve","reject","gostEngine","error","callback","encrypt","then","decrypt","sign","verify","generateKey","deriveKey","baseKey","derivedKeyType","deriveBits","importKey","dataLen","chain","pop","exportKey","raw","wrapKey","wrappingKey","wrapAlgorithm","unwrapKey","wrappedKey","unwrappingKey","unwrapAlgorithm","unwrappedKeyAlgorithm","gostSubtleInstance","aesid","fixProc","ciphers","compat","parseKeys","password","stripped","tag","subtype","ndata","RSAPublicKey","subjectPrivateKey","pub_key","DSAparam","EncryptedPrivateKey","RSAPrivateKey","ECPrivateKey","priv_key","DSAPrivateKey","kde","kdeparams","iters","algo","cipher","cipherText","keylen","pbkdf2Sync","createDecipheriv","short","edwards","EVP_BytesToKey","keyBits","ivLen","keyLen","used","keyStart","ivStart","asUInt32Array","scrubVec","cryptBlock","M","keySchedule","SUB_MIX","SBOX","nRounds","SUB_MIX0","SUB_MIX1","SUB_MIX2","SUB_MIX3","s0","s1","s2","s3","t0","t1","t2","t3","ksRow","RCON","G","INV_SBOX","INV_SUB_MIX","xi","sx","x4","x8","AES","_key","_reset","keyWords","ksRows","invKeySchedule","ik","ksR","tt","_nRounds","_keySchedule","_invKeySchedule","encryptBlockRaw","encryptBlock","decryptBlock","m1","scrub","fn","arg1","arg2","arg3","afterTickOne","afterTickTwo","afterTickThree","afterTick","GostCert","_gostCrypto","_gostSubtle","coding","F","today","setHours","setDate","genSerialNumber","gostCrypto","equalNumbers","hex","equalNames","name1","name2","equalBuffers","matchCertificate","cert","selector","skid","getTime","authoritySelector","akid","selectCertificates","matchCRL","selectCRLs","keyProvider","providerName","commonName","caKeyUsage","caExtKeyUsage","userKeyUsage","userExtKeyUsage","days","X509","issuerPrivateKey","issuerCertificate","spki","getProvider","exts","ae","checkUsage","pathLen","generate","keyAlgorithm","keyPair","pkcs8","getPublicKey","issuerCRL","verifySignature","isRevoked","operation","CRL","rc","Request","req","CertStore","getCertificates","getCRLs","load","store","info","CertPath","certStore","build","certPath","verifiers","foundCRLs","founds","all","results","CertificateTrustPolicy","getValidCertificate","TrustedCAPolicy","trustedCACerts","requireCRL","requireCA","gostCertInstance","getSeed","randomSeed","_gostRandom","gostRandom","GostRandom","common","ripemd","sha224","ripemd160","bn","crt","blind","priv","getr","blinder","modulus","unblinder","blinds","blinded","c1","prime1","c2","prime2","qinv","coefficient","exponent1","m2","exponent2","modeModules","ECB","CBC","CFB","CFB8","CFB1","OFB","CTR","GCM","deciphers","getCiphers","createCipher","Cipher","createCipheriv","Cipheriv","createDecipher","Decipher","Decipheriv","listCiphers","DES","EDE","SHA","HashBase","ARRAY16","zl","zr","sl","sr","hl","hr","_a","_b","_c","_d","_e","ar","br","cr","dr","er","tl","tr","fn1","fn5","fn2","fn4","fn3","rotl","_blockOffset","_length","_normalizeEncoding","retried","normalizeEncoding","nenc","nb","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8End","utf8Text","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","setImmediate","WriteReq","chunk","CorkedRequest","state","_this","entry","finish","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","Stream","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","getBuffer","realHasInstance","hasInstance","_write","writev","_writev","destroy","pipe","writeAfterEnd","validChunk","isBuf","writeOrBuffer","cork","uncork","clearBuffer","setDefaultEncoding","decodeChunk","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","afterWrite","onwriteDrain","count","allBuffers","endWritable","callFinal","prefinish","need","corkReq","_undestroy","undestroy","PassThrough","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler","listener","newListener","warned","console","trace","fired","position","splice","listenerCount","evlistener","emitter","EE","ondata","pause","ondrain","resume","_isStdio","onclose","didOnEnd","onerror","cleanup","fnF","fnG","fnH","fnI","GostCMS","_gostCert","addUnique","comparator","setContentData","getContentData","encap","checkContentInfo","e1","createContentInfo","DataContentInfo","DigestedDataContentInfo","SignedDataContentInfo","EncryptedDataContentInfo","EnvelopedDataContentInfo","matchCert","saltSize","passwordData","encryptionProvider","autoAddCert","useKeyIdentifier","defaultSet","isDetached","writeDetached","createDetached","encloseContent","setEnclosed","getEnclosed","digestProvider","dataToVerify","addSignature","signerKey","signerCert","signerInfo","dataToSign","signerCertChain","algorithm1","algorithm2","cert1","cert2","isDegenerate","trustPolicy","map","catch","dataDigest","contentEncryptionKey","integrityKey","encryptionKey","decryptionKey","decryptedContent","addRecipient","recipientCert","senderKey","senderCert","senderCertChain","recipientInfo","recipientKey","originatorCert","transportKey","gostCMSInstance","GostDigest","_seeds","_gostCipher","arraycopy","sOfs","dOfs","b64decode","digest2012","buffer0","buffer512","Ax","sigma","get8","add512","CF","get512","copy512","new512","xor512","XLPS","z0","z1","Ki","stage2","stage3","m0","digest94","H","Sum","P","K","fw","wS","Uint16Array","wS15","sOff","dOff","S","U","V","W","tmpA","summing","sum","C2","L","n8","digestSHA1","Uint32Array","f","f1","f2","f3","f4","cycle","dlen","ofs","signHMAC","k0","verifyHMAC","deriveBitsPFXKDF","ID","S0","P0","plen","I","cf","R","deriveBitsKDF","blen","deriveBitsPBKDF1","hLen","dkLen","T","DK","deriveBitsPBKDF2","Z","rLen","deriveBitsCP","GostCipher","DataView","setInt16","Int16Array","defaultIV","sBoxes","E-SC","D-SC","signed","unsigned","cloneArray","intArray","defaultIV128","multTable","gmul","counter","kB","funcR","funcReverseR","kPi","kReversePi","funcS","funcReverseS","funcX","funcL","funcReverseL","funcLSX","funcReverseLSX","funcF","inputKey","inputKeySecond","iterationConst","funcC","keySchedule128","j0","j1","process128","cm","om","process89","process15","keySchedule89","sch","keySchedule15","keyScheduleRC2","PITABLE","T1","effectiveLength","T8","TM","processRC2","rol","ror","mix","mash","perform","encryptECB","decryptECB","unpad","encryptCFB","decryptCFB","processOFB","processCTR89","Int8Array","syn","processCTR15","encryptCBC","decryptCBC","processMAC89","zeroPad","processKeyMAC15","processMAC15","bitPad","signMAC","processMAC","verifyMAC","wrapKeyGOST","kek","cek","unwrapKeyGOST","diversifyKEK","wrapKeyCP","dek","unwrapKeyCP","packKeySC","unpacked","mcount","zero32","unpackKeySC","packed","magic","wrapKeySC","unwrapKeySC","generateWrappingKeySC","inverse","m32","k32","r32","wrapKeyMask","unwrapKeyMask","keyMeshingCP","noKeyMeshing","noPad","pkcs5Pad","pkcs5Unpad","bitUnpad","randomPad","blockLength","sBoxName","_gostDigest","_gostSign","defineEngine","engine","getGostCipher","getGostDigest","getGostSign","GostSign","withPublic","paddedMsg","i2ops","der","DEREncoder","entity","tree","DERNode","body","reporter","_encode","parent","_encodeComposite","encodeComposite","primitive","cls","encodedTag","encodeTag","_createEncoderBuffer","lenOctets","_encodeStr","encodeStr","_isNumstr","_isPrintstr","_encodeObjid","encodeObjid","relative","JSON","stringify","objid","two","_encodeTime","encodeTime","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","encodeNull","_encodeInt","encodeInt","numArray","unshift","_encodeBool","encodeBool","_use","use","_getEncoder","_skipDefault","skipDefault","dataBuffer","_baseState","defaultBuffer","_encodeValue","tagByName","tagClassByName","DERDecoder","_decode","_peekTag","peekTag","any","isEmpty","save","decodedTag","derDecodeTag","restore","tagStr","_decodeTag","decodeTag","derDecodeLen","_skipUntilEnd","skipUntilEnd","fail","_decodeList","decodeList","decoder","possibleEnd","_decodeStr","decodeStr","numstr","printstr","_decodeObjid","decodeObjid","subident","_decodeTime","decodeTime","year","mon","day","hour","sec","UTC","_decodeNull","decodeNull","_decodeBool","decodeBool","_decodeInt","decodeInt","_getDecoder","oct","_reverse","_reporterState","sha512_K","SHA512","_prepareBlock","c0_hi","g1_512_hi","c0_lo","g1_512_lo","c1_hi","c1_lo","c2_hi","g0_512_hi","c2_lo","g0_512_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","s1_512_hi","s1_512_lo","ch64_hi","ch64_lo","c4_hi","c4_lo","T1_hi","T1_lo","s0_512_hi","s0_512_lo","maj64_hi","maj64_lo","T2_hi","T2_lo","xh","xl","yh","yl","zh","shaCommon","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","T2","ft_1","p32","Rand","_rand","getBytes","getByte","brorand","MillerRabin","_randbelow","min_bytes","_randrange","stop","rone","n1","rn1","getDivisor","findPrime","simpleSieve","fermatTest","TWENTYFOUR","millerRabin","ONE","TWO","FIVE","SIXTEEN","EIGHT","TEN","THREE","SEVEN","ELEVEN","FOUR","TWELVE","_getPrimes","gen","n2","aes","StreamCipher","_cipher","_prev","_cache","_secCache","_decrypt","_mode","GHASH","incr32","xorTest","calcIv","ck","_finID","ghash","toPad","ivBits","tail","_ghash","_alen","_authTag","_called","rump","getBlock","chunkNum","md5","rmd160","checkParameters","ZEROS","sizes","Hmac","saltLen","getDigest","blocksize","ipad","opad","ipad1","ipad2","shaFunc","pbkdf2","block1","destPos","pVersionMajor","MAX_ALLOC","checkBuffer","Legacy","_alg","_ipad","_opad","createHmac","Sha512","_w","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","Ch","maj","sigma0","sigma1","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","gamma0","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","writeInt64BE","Sha256","_f","_g","_h","afterTransform","ts","_transformState","transforming","writechunk","rs","reading","needReadable","_read","needTransform","writeencoding","flush","_this2","err2","readableDestroyed","writableDestroyed","emitErrorNT","endEmitted","ReadableState","EElistenerCount","debugUtil","debug","debuglog","BufferList","kProxyEvents","event","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","skipChunkCheck","readableAddChunk","addToFront","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","isPaused","setEncoding","MAX_HWM","computeNewHighWaterMark","howMuchToRead","head","nOrig","endReadable","doRead","fromList","emitReadable_","flow","maybeReadMore_","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","pipeOnDrain","cleanedUp","onfinish","increasedAwaitDrain","dests","ev","nReadingNextTick","resume_","wrap","paused","_fromList","clear","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","endReadableNT","xs","throwIfNotStringOrBuffer","prefix","_finalized","getRoot","isInNode","isBrowser","isInWebWorker","importScripts","randomRing","getIndex","setIndex","document","addEventListener","clientX","pageX","clientY","pageY","keyCode","TypeMismatchError","QuotaExceededError","rootCryptoModule","u8","random","_gostCMS","_gostKeys","security","gostKeysInstance","GostKeys","now","generateUUID","get32","set32","int","PKCS8","getPrivateKey","setPrivateKey","PKCS8Encrypted","getKey","keyPassword","setKey","SignalComKeyContainer","container","getEncryptionKey","masks","mk","digested","decrypedMasks","mkm","generateContainer","SignalComPrivateKeyInfo","publicKeyData","wrappedData","changePassword","oldKeyPassword","newKeyPassword","CryptoProKeyContainer","primary","primary2","masks2","isKeySize512","isVersion2012","derivePasswordKey","computePasswordMAC","computeContainerMAC","computeMaskMAC","status","generateMasks","computeFP","fp","computedFP","decryptKey","secondary","encryptKey","getCertificate","getContainerName","keyParameters","absent","promises","maskname","FP","softPassword","setCertificate","setContainerName","needPassword","ViPNetContainerEntry","getKeyPassword","secodeData","keyPart","encodedKeyInfo","wrapped","encyption","entrySize","headerSize","keyPartSize","ViPNetContainer","fileType","fileVersion","applicationHeader","entries","entriesSize","PKCS12","calcHMAC","passwordKey","KeyStore","setEntry","aliases","containsAlias","alias","deleteEntry","getEntry","contents","bags","bag","keyId","digestAlgortihm","encryptionAlgortihm","keyContents","ECGostParams","GostParams","DB","DM","DV","FV","F1","F2","am","nbi","copyTo","setInt","nbv","ZERO","clamp","subTo","addTo","negTo","absTo","nbits","dshlTo","dshrTo","shlTo","bs","cbs","bm","ds","shrTo","shr","sqrTo","divRemTo","pm","pt","nsh","ys","y0","yt","d1","d2","qd","modTo","sig","invMod","ac","subtract","testBit","nothing","Classic","convert","revert","reduce","invDig","Montgomery","mp","mpl","mph","um","mt2","u0","dAddOffset","mulLowerTo","mulUpperTo","Barrett","q3","mu","expMod","k1","km","g2","is1","newFE","copyFE","negFE","addFE","subFE","mulFE","sqrFE","shlFE","invFE","newEC","getX","point","zinv","getY","isInfinity","getInfinity","infinity","equalsEC","negEC","addEC","twiceEC","y1","v2","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","mulEC","hBit","eBit","mul2AndAddEC","Q","mulTwoEC","both","newCurve","atobi","sh","bitoa","r8","htobi","mi","bitoh","bitoi","itobi","to2","from2","alpha","zetta","z2","k2","generateMaskKey","derive","peer_Q","peer_y","hashLen","safeBuffer","randombytes","kBufferMaxLength","kMaxUint32","assertOffset","randomFill","randomFillSync","actualFill","ourBuf","uint","mgf","privateDecrypt","private_key","zBuffer","oaep","pkcs1","mLen","iHash","hLen2","maskedSeed","maskedDb","db","p1","ps","p2","dif","RSA_PKCS1_OAEP_PADDING","RSA_PKCS1_PADDIN","RSA_NO_PADDING","publicEncrypt","public_key","dblen","nonZero","cache","cur","privateEncrypt","publicDecrypt","createECDH","ECDH","secp256k1","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p256","secp192r1","p384","p521","curveType","generateKeys","genKeyPair","computeSecret","inenc","otherPub","keyFromPublic","getPublic","getPrivate","formatReturnValue","setPublicKey","pub","_importPublic","_priv","_importPrivate","EC","signType","ecVerify","dsaVerify","padNum","curveId","pubkey","checkValue","montp","findProc","startRegex","fullRegex","evp","okey","decrypted","match2","suite","cipherKey","asn","choice","utctime","gentime","AttributeTypeValue","seq","bitstr","setof","seqof","bool","def","octstr","explicit","implicit","X509Certificate","PEMEncoder","pem","PEMDecoder","lines","0","1","2","3","4","5","6","7","8","9","10","11","12","13","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","tags","methods","overrided","children","reverseArgs","useDecoder","contains","_wrap","stateProps","cstate","prop","_wrappedMethod","child","_useArgs","useArgs","_overrided","_tagMethod","newKey","wrapResult","present","prevKey","enterKey","_decodeGeneric","_decodeChoice","prevObj","enterObject","track","decodeChildren","_getUse","leaveObject","leaveKey","exitKey","decodeGeneric","decodeChoice","some","node","createEncoderBuffer","_encodeChoice","_encodePrimitive","encodeChoice","encodePrimitive","isNumstr","isPrintstr","errors","ReporterError","inherited","elem","message","stack","rethrow","captureStackTrace","Object_keys","defineProp","globals","Context","Script","NodeScript","runInContext","iframe","createElement","style","display","appendChild","win","contentWindow","wEval","wExecScript","execScript","winKeys","removeChild","runInThisContext","runInNewContext","createContext","createScript","api","Entity","_createNamed","createNamed","named","_initNamed","initnamed","null_","cachedProperty","parseBytes","Signature","encodingLength","isPoint","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","decodePoint","encodePoint","toBytes","KeyPair","_secret","_pub","_pubBytes","fromPublic","fromSecret","pubBytes","privBytes","lastIx","messagePrefix","getSecret","EDDSA","precompute","pointClass","keyFromSecret","hashInt","s_","makeSignature","SG","RplusAh","intFromLE","normed","xIsOdd","pointFromY","_importDER","recoveryParam","Position","place","getLength","initial","octetLen","rmPadding","constructLength","log","LN2","toDER","backHalf","privEnc","pubEnc","fromPrivate","validate","compact","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_hmac","kmac","reseed","addEnc","temp","PresetCurve","nh","keyFromPrivate","drbg","ns2","_truncateToN","truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","sinv","u1","u2","_maxwellTrick","mulAdd","jmulAdd","eqXToP","recoverPubKey","isYOdd","isSecondKey","pointFromX","rInv","getKeyRecoveryParam","Qprime","doubles","step","points","naf","inner","outer","E","Ah","Bh","Dh","Eh","rh","Kh","SHA384","SHA224","sha1_K","SHA1","defineCurve","gRed","pre","beta","lambda","basis","EdwardsCurve","conf","twisted","mOneA","dd","oneC","_mulA","_mulC","jpoint","rhs","lhs","y2","zero","Point","BasePoint","zOne","pointFromJSON","fromJSON","_extDbl","nx","ny","nt","nz","_projDbl","dbl","_extAdd","_projAdd","_hasDoubles","_fixedNafMul","_wnafMul","_wnafMulAdd","zi","xc","redN","toP","mixedAdd","MontCurve","i4","a24","aa","bb","diffAdd","da","jumlAdd","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","betas","_getEndoRoots","lambdas","vec","_getEndoBasis","ntinv","l1","aprxSqrt","prevR","len1","len2","_endoSplit","v1","q1","q2","inf","ax","_endoWnafMulAdd","coeffs","jacobianResult","npoints","ncoeffs","_getBeta","isRed","precomputed","endoMul","parse","obj2point","ys1","dyinv","_precompute","negate","toJ","JPoint","zinv2","ay","pz2","h2","h3","dblp","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","pz3","zs","getNAF","getJSF","BaseCurve","_wnafT1","_wnafT2","_wnafT3","_wnafT4","adjustCount","_getDoubles","repr","nafW","nafPoints","_getNAFPoints","defW","wndWidth","comb","jsf","ja","jb","encodeCompressed","power","minAssert","minUtils","m14","m24","m8","computer","hashType","ecSign","dsaSign","bits2int","kv","makeKey","makeR","hlen","hbits","bits2octets","obits","Sign","_hashType","_tag","_signType","signMethod","Verify","verifyMethod","createSign","createVerify","DH","primeCache","checkPrime","generator","malleable","setGenerator","__prime","_primeLen","_primeCode","__gen","_gen","getPrime","front","getGenerator","webpackPolyfill","paths","generatePrime","getDiffieHellman","ENCODINGS","binary","createDiffieHellman","genc","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman","des","des3","AuthCipher","MODES","ebtk","Splitter","_last","_autopadding","thing","setTo","autoPadding","padded","config","ZEROES","fromArray","_multiply","Vi","Zi","lsbVi","abl","encryptByte","byteParam","shiftIn","encryptStart","PADDING","padBuff","EDEState","k3","_edeState","inp","inOff","outOff","_unpad","CBCState","instantiate","_cbcInit","_cbcState","superProto","DESState","_desState","deriveKeys","shiftTable","kL","kR","pc1","r28shl","pc2","ip","_encrypt","lStart","rStart","keyL","keyR","substitute","rip","bufferOff","_updateDecrypt","_updateEncrypt","_buffer","_flushBuffer","inputOff","outputOff","_finalEncrypt","_finalDecrypt","inL","inR","outL","outR","pc2table","sTable","sb","permuteTable","padSplit","des-ede3-cbc","des-ede3","des-ede-cbc","des-ede","des-cbc","des-ecb","opts","modeName","_des","aesModes","desModes","ZERO_BUF","toBrowser","sha-1","sha-256","sha-384","sha-512","checks","prom","browserPbkdf2","resolvePromise","promise","resp","Sha384","Sha224","Sha1","rotl1","rotl5","rotl30","ft","Sha","deprecated","warn","localStorage","nextHandle","tasksByHandle","currentlyRunningATask","doc","registerImmediate","task","clearImmediate","handle","runIfPresent","installNextTickImplementation","canUsePostMessage","postMessage","postMessageIsAsynchronous","oldOnMessage","onmessage","installPostMessageImplementation","onGlobalMessage","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","documentElement","script","onreadystatechange","installSetTimeoutImplementation","attachTo","scope","Timeout","setInterval","clearInterval","close","clearFn","_id","_clearFn","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","onTimeout","_onTimeout","_classCallCheck","instance","Constructor","copyBuffer","custom","isLE","nBytes","eLen","eMax","eBias","nBits","NaN","rt","lookup","revLookup","Arr","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","curByte","tripletToBase64","encodeChunk","uint8","extraBytes","parts","maxChunkLength","rng","pseudoRandomBytes","prng","algos","algoKeys","hashes","getHashes","rf","createCredentials","DH_CHECK_P_NOT_SAFE_PRIME","DH_CHECK_P_NOT_PRIME","DH_UNABLE_TO_CHECK_GENERATOR","DH_NOT_SUITABLE_GENERATOR","NPN_ENABLED","ALPN_ENABLED","RSA_PKCS1_PADDING","RSA_SSLV23_PADDING","RSA_X931_PADDING","RSA_PKCS1_PSS_PADDING","POINT_CONVERSION_COMPRESSED","POINT_CONVERSION_UNCOMPRESSED","POINT_CONVERSION_HYBRID","CryptoGost","GostEngine"],"mappings":"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EAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAE/EC,OACI,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,IAE/EC,OACI,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAE/EC,OACI,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,IAE/EgyB,QACI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,IAE/E/xB,OACI,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAG/EV,UACI,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,IAE/EC,OACI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,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A,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,iEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qGCrwBA,IAAArjH,EAAAloB,EAAA,GACA,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","file":"CryptoGost.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crypto-gost-js\"] = factory();\n\telse\n\t\troot[\"crypto-gost-js\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 176);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","export class NotSupportedError extends Error {\n}\n\nexport class DataError extends Error {\n}\n\nexport class OperationError extends Error {\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n\n  // XXX: phantomjs doesn't like a buffer being passed here\n  var bytes = Buffer.from(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","/**\n * @file PKCS ASN.1 message syntax and converters\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { expand } from '../utils/helpers';\nimport { gostSecurityInstance } from './gostSecurity';\nimport { gostCodingInstance } from './gostCoding';\n\n/**\n * Service functions\n **/\n\nvar CryptoOperationData = ArrayBuffer;\n\n// Security parameters\nconst { algorithms, names, identifiers, attributes, parameters } = gostSecurityInstance;\n\n// Various coding algorithms\nconst { BER, PEM, Chars, Hex, Int16 } = gostCodingInstance;\n\n// Swap bytes in buffer\nfunction swapBytes(src) {\n    if (src instanceof CryptoOperationData)\n        src = new Uint8Array(src);\n    var dst = new Uint8Array(src.length);\n    for (var i = 0, n = src.length; i < n; i++)\n        dst[n - i - 1] = src[i];\n    return dst.buffer;\n}\n\nfunction isBinary(value) {\n    return value instanceof CryptoOperationData || value.buffer instanceof CryptoOperationData;\n}\n\n// Left pad zero\nfunction lpad(n, width) {\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n}\n\n// Nearest power 2\nfunction npw2(n) {\n    return n <= 2 ? n : n <= 4 ? 4 : n <= 8 ? 8 : n <= 16 ? 16 :\n      n <= 32 ? 32 : n <= 64 ? 64 : n <= 128 ? 128 : n <= 256 ? 256 :\n        n < 512 ? 512 : n < 1024 ? 1024 : undefined;\n}\n\n// String int encode/decode to buffer\nvar SInt = {\n    encode: function (value, endian) {\n        return '0x' + Hex.encode(value, endian);\n    },\n    decode: function (value, endian, len) {\n        if (typeof value === 'number')\n            value = value.toString(16);\n        var s = value.replace('0x', '');\n        len = len || npw2(s.length);\n        return Hex.decode(lpad(s, len), endian);\n    }\n};\n\n// Assert invalid message\nfunction assert(value) {\n    if (value)\n        throw Error('Invalid format');\n}\n\nfunction defineProperty(object, name, descriptor, enumerable) {\n    if (typeof descriptor !== 'object')\n        descriptor = { value: descriptor };\n    if (enumerable !== undefined)\n        descriptor.enumerable = enumerable;\n    Object.defineProperty(object, name, descriptor);\n}\n\nfunction defineProperties(object, properties, enumerable) {\n    for (var name in properties)\n        defineProperty(object, name, properties[name], enumerable);\n}\n\nfunction getOwnPropertyDescriptor(object, name) {\n    return Object.getOwnPropertyDescriptor(object, name);\n}\n\n// </editor-fold>\n\n/*\n     * Base ASN.1 types and definitions\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\n// Encode object primitive\nfunction encode(format, object, tagNumber, tagClass, tagConstructed, uniformTitle) {\n    assert(object === undefined);\n    var source = {\n        tagNumber: tagNumber,\n        tagClass: tagClass || 0x00,\n        tagConstructed: tagConstructed || false,\n        object: object\n    };\n    // Output format\n    format = format || 'DER';\n    if (format === 'DER' || format === 'CER')\n        source = BER.encode(source, format);\n    if (format === 'PEM')\n        source = PEM.encode(source, uniformTitle);\n    return source;\n}\n\n// Decode object primitive\nfunction decode(source, tagNumber, tagClass, tagConstructed, uniformTitle) {\n    assert(source === undefined);\n\n    // Decode PEM\n    if (typeof source === 'string')\n        source = PEM.decode(source, uniformTitle, false);\n    // Decode binary data\n    if (source instanceof CryptoOperationData) {\n        try {\n            source = PEM.decode(Chars.encode(source), uniformTitle, true);\n        } catch (e) {\n            source = BER.decode(source);\n        }\n    }\n\n    tagClass = tagClass || 0;\n    tagConstructed = tagConstructed || false;\n    // Restore context implicit formats\n    if (source.tagNumber === undefined) {\n        source = encode(true, source.object, tagNumber, tagClass,\n          source.object instanceof Array);\n        source = BER.decode(source);\n    }\n\n    // Check format\n    assert(source.tagClass !== tagClass ||\n      source.tagNumber !== tagNumber ||\n      source.tagConstructed !== tagConstructed);\n    // Clone value define from redefine original\n    if (tagClass === 0 && tagNumber === 0x05)\n        return null;\n    else\n        return source.object;\n}\n\n// Create class based on super\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\n    // If constructor not defined\n    if (typeof Class !== 'function') {\n        propertiesClass = propertiesObject;\n        propertiesObject = Class;\n        Class = function () {\n            Super.apply(this, arguments);\n        };\n    }\n    // Create prototype properties\n    Class.prototype = Object.create(Super.prototype, {\n        constructor: {\n            value: Class\n        },\n        superclass: {\n            value: Super.prototype\n        }\n    });\n    if (propertiesObject)\n        defineProperties(Class.prototype, propertiesObject);\n    // Inherites super class properties\n    if (Super !== Object)\n        for (var name in Super)\n            Class[name] = Super[name];\n    Class.super = Super;\n    if (propertiesClass)\n        defineProperties(Class, propertiesClass, true);\n    return Class;\n}\n\n// Base class\nvar ASN1Object = extend(Object, function (object) {\n    this.object = object;\n}, {\n    // Call set method for a class property\n    _set: function (Class, propName, value) {\n        Class.property(propName).set.call(this, value);\n    },\n    // Call get method for a class property\n    _get: function (Class, propName) {\n        return Class.property(propName).get.call(this);\n    },\n    // Call method for a class\n    _call: function (Class, methodName, args) {\n        return Class.method(methodName).apply(this, args);\n    },\n    hasProperty: function (propName) {\n        return this.hasOwnProperty(propName) ||\n          !!this.constructor.property(propName);\n    },\n    encode: function () {\n        return this.object;\n    }\n}, {\n    decode: function (source) {\n        return new this(source);\n    },\n    // Find ingerited property\n    property: function (propName) {\n        var proto = this.prototype;\n        while (proto) {\n            var descriptor = getOwnPropertyDescriptor(proto, propName);\n            if (descriptor)\n                return descriptor;\n            else\n                proto = proto.superclass;\n        }\n    },\n    // Find method\n    method: function (methodName) {\n        var proto = this.prototype;\n        while (proto) {\n            if (proto[methodName])\n                return proto[methodName];\n            else\n                proto = proto.superclass;\n        }\n    }\n});\n\n// Primitive metaclass\nvar PRIMITIVE = function (tagNumber) {\n    return extend(ASN1Object, {\n        encode: function (format) {\n            return encode(format, this.object, tagNumber);\n        }\n    }, {\n        decode: function (source) {\n            return new this(decode(source, tagNumber));\n        }\n    });\n};\n\nvar ANY = ASN1Object;\n\nvar BOOLEAN = PRIMITIVE(0x01);\n\nvar IA5String = PRIMITIVE(0x16);\n\nvar NumericString = PRIMITIVE(0x12);\n\nvar PrintableString = PRIMITIVE(0x13);\n\nvar TeletexString = PRIMITIVE(0x14);\n\nvar UTF8String = PRIMITIVE(0x0c);\n\nvar UTCTime = PRIMITIVE(0x17);\n\nvar GeneralizedTime = PRIMITIVE(0x18);\n\nvar UniversalString = PRIMITIVE(0x1C);\n\nvar BMPString = PRIMITIVE(0x1e);\n\nvar NULL = extend(PRIMITIVE(0x05), {\n    object: {\n        get: function () {\n            return null;\n        },\n        set: function (object) {\n            assert(object !== null);\n        }\n    }\n});\n\n// Primitive class with value coding\nvar PRIMITIVE_CODE = function (tagNumber) {\n\n    // Base class primitive\n    var Class = extend(PRIMITIVE(tagNumber), function (object) {\n        if (this instanceof Class)\n            Class.super.apply(this, arguments);\n        else\n            return CODE(object);\n    });\n\n    // Create Class with encoded\n    function CODE(structure) {\n        // Structured class\n        return extend(PRIMITIVE(tagNumber), function (object) {\n            Class.super.call(this, object);\n        }, {\n            // Transformation to code values\n            encode: function (format) {\n                return encode(format, structure[this.object], tagNumber);\n            }\n        }, {\n            decode: function (source) {\n                var id = decode(source, tagNumber);\n                for (var name in structure)\n                    if (id === structure[name])\n                        return new this(name);\n                assert(true);\n            }\n        });\n    }\n\n    return Class;\n};\n\nvar INTEGER = PRIMITIVE_CODE(0x02);\n\nvar ENUMERATED = PRIMITIVE_CODE(0x0a);\n\nvar OCTET_STRING = (function () {\n    // Base class primitive\n    var Class = extend(PRIMITIVE(0x04), function (object) {\n        if (this instanceof Class)\n            Class.super.apply(this, arguments);\n        else\n            return WRAPPING(object);\n    });\n\n    // Wrapping class\n    function WRAPPING(WrappedClass) {\n        if (WrappedClass) {\n            return extend(WrappedClass, {\n                encode: function (format) {\n                    return encode(format, WrappedClass.method('encode').call(this, true), 0x04);\n                }\n            }, {\n                decode: function (source) {\n                    return WrappedClass.decode.call(this, decode(source, 0x04));\n                }\n            });\n        } else\n            return Class;\n    }\n\n    return Class;\n})();\n\nvar BIT_STRING = (function () {\n    // Base class primitive\n    var Class = extend(PRIMITIVE(0x03), function (object) {\n        if (this instanceof Class)\n            Class.super.apply(this, arguments);\n        else if (typeof object === 'object')\n            return MASK(object);\n        else\n            return WRAPPING(object);\n    });\n\n    // Wrapping class\n    function WRAPPING(WrappedClass) {\n        if (WrappedClass) {\n            return extend(WrappedClass, {\n                encode: function (format) {\n                    return encode(format, WrappedClass.method('encode').call(this, true), 0x03);\n                }\n            }, {\n                decode: function (source) {\n                    return WrappedClass.decode.call(this, decode(source, 0x03));\n                }\n            });\n        } else\n            return Class;\n    }\n\n    // Create new class for a mask\n    function MASK(structure) {\n        // Bit string masked class\n        return extend(ASN1Object, function (object, numbits) {\n            ASN1Object.call(this, object);\n            this.numbits = numbits || 0;\n        }, {\n            encode: function (format) {\n                var object = this.object, data = [];\n                if (object instanceof Array) {\n                    for (var i = 0, n = object.length; i < n; i++) {\n                        var j = structure[object[i]];\n                        if (j !== undefined)\n                            data[j] = '1';\n                    }\n                    for (var i = 0, n = Math.max(data.length, this.numbits); i < n; i++)\n                        if (!data[i])\n                            data[i] = '0';\n                    data = data.join('');\n                } else\n                    data = '0';\n                return encode(format, data, 0x03);\n            }\n        }, {\n            // Transformation to array of values\n            decode: function (source) {\n                var data = decode(source, 0x03), object = [];\n                for (var name in structure) {\n                    var i = structure[name];\n                    if (data.charAt(i) === '1')\n                        object.push(name);\n                }\n                return new this(object, data.length);\n            }\n        });\n    }\n\n    return Class;\n})();\n\n// Combine sequence object properties with owner object\nvar COMBINE = function (Class) {\n    Class.combine = function (owner, valueName) {\n        for (var name in Class.prototype) {\n            if (Class.prototype.hasOwnProperty(name) && !owner.hasProperty(name)) {\n                defineProperty(owner, name, (function (name) {\n                    return {\n                        get: function () {\n                            // Get object property\n                            return this[valueName] && this[valueName][name];\n                        },\n                        set: function (object) {\n                            // Set object property\n                            if (!this[valueName])\n                                this[valueName] = {};\n                            this[valueName][name] = object;\n                        },\n                        configurable: false,\n                        enumerable: true\n                    };\n                })(name));\n            }\n        }\n    };\n    return Class;\n};\n\nvar SEQUENCE = function (structure, uniformTitle) {\n\n    /**\n     * Create SEQUENCE ASN.1 metaclass\n     *\n     * @class GostASN1.Sequence\n     * @param {(Object|FormatedData)} object Initialization object\n     * @param {boolean} check Check structure after initialization\n     */\n    var Class = extend(ASN1Object, function (object, check) {\n        // Define hidden properties\n        defineProperty(this, 'items', {\n            writable: true,\n            value: {}\n        });\n        if (typeof object === 'string' || object instanceof CryptoOperationData)\n            this.decode(object);\n        else if (object !== undefined) {\n            this.object = object;\n            // Check structure\n            if (check)\n                this.check();\n        }\n    }, {\n        object: {\n            get: function () {\n                return this;\n            },\n            set: function (object) {\n                if (object instanceof Class) {\n                    // Set the same sequence class\n                    this.items = object.items;\n                    for (var name in structure) {\n                        var ItemClass = this.getItemClass(name, this.items);\n                        if (ItemClass.combine)\n                            ItemClass.combine(this, name);\n                    }\n                } else {\n                    // Set other object structure\n                    var data = {};\n                    for (var name in structure) {\n                        var item = object[name];\n                        var ItemClass = this.getItemClass(name, data);\n                        if (item !== undefined) {\n                            data[name] = new ItemClass(item);\n                        } else if (ItemClass.combine) {\n                            // Create combined object\n                            data[name] = new ItemClass(object);\n                        }\n                        if (ItemClass.combine)\n                            ItemClass.combine(this, name);\n                    }\n                    this.items = data;\n                }\n            }\n        },\n        getItemClass: function (name, items) {\n            return structure[name];\n        },\n        /**\n         * Encode the object\n         *\n         * @memberOf GostASN1.Sequence\n         * @instance\n         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n         * @returns {FormatedData}\n         */\n        encode: function (format) {\n            var source = [], items = this.items;\n            // Encode objects in structure\n            for (var name in structure) {\n                // console.log(name, 'encoding...', items[name]);\n                if (items[name]) {\n                    var encoded = items[name].encode(true);// Source from object\n                    if (encoded !== undefined) // Can be optional\n                        source.push(encoded);\n\n                }\n            }\n            return encode(format, source, 0x10, 0, true, uniformTitle);\n        },\n        /**\n         * Decode the source to self object\n         *\n         * @memberOf GostASN1.Sequence\n         * @instance\n         * @param {FormatedData} source Encoded data\n         */\n        decode: function (source) {\n            this.object = this.constructor.decode(source);\n        },\n        /**\n         * Check the object structure\n         *\n         * @memberOf GostASN1.Sequence\n         * @instance\n         */\n        check: function () {\n            this.constructor.decode(this.encode(true));\n        }\n    }, {\n        /**\n         * Encode data values with creating object\n         *\n         * @memberOf GostASN1.Sequence\n         * @static\n         * @param {Object} object Javascript object to encoding\n         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n         * @returns {FormatedData}\n         */\n        encode: function (object, format) {\n            return new this(object).encode(format);\n        },\n        /**\n         * Decode source and create object\n         *\n         * @memberOf GostASN1.Sequence\n         * @static\n         * @param {FormatedData} source Encoded data\n         * @returns {GostASN1.Sequence}\n         *\n         */\n        decode: function (source) {\n            // Decode structure\n            source = decode(source, 0x10, 0, true, uniformTitle);\n            var i = 0, result = new this(), data = result.items = {};\n            for (var name in structure) {\n                // console.log(name, 'decoding...');\n                // try to create and decode object\n                var ItemClass = result.getItemClass(name, data);\n                var item = ItemClass.decode(source[i]);\n                // success? item can be optional\n                if (item !== undefined) {\n                    data[name] = item;\n                    if (ItemClass.combine)\n                        ItemClass.combine(result, name);\n                    i++;\n                }\n            }\n            return result;\n        }\n    });\n\n    // Append structure items\n    for (var name in structure) {\n        defineProperty(Class.prototype, name, (function (name) {\n            return {\n                get: function () {\n                    // Get object property\n                    return this.items[name] && this.items[name].object;\n                },\n                set: function (object) {\n                    // Set object property\n                    if (object !== undefined) {\n                        var ItemClass = this.getItemClass(name, this.items);\n                        this.items[name] = new ItemClass(object);\n                    } else\n                        delete this.items[name];\n                },\n                configurable: false,\n                enumerable: !structure[name].combine\n            };\n        })(name));\n        if (structure[name].combine)\n            structure[name].combine(Class.prototype, name);\n    }\n    return Class;\n};\n\nvar ATTRIBUTE = function (structure, typeName, valueName, ownerDafaultType, uniformName) {\n\n    var BaseClass = SEQUENCE(structure, uniformName);\n\n    // Define attribute sequence\n    var DEFINE = function (typeSet, defaultType) {\n\n        typeName = typeName || 'type';\n        valueName = valueName || 'value';\n        defaultType = defaultType || ownerDafaultType || ANY;\n\n        var Class = extend(BaseClass, function (object) {\n            // Constructor - \"matrioshka\"\n            if (this instanceof Class) {\n                // Call super\n                BaseClass.apply(this, arguments);\n            } else\n                return DEFINE.apply(this, arguments);\n        }, {\n            getItemClass: function (name, items) {\n                var ItemClass = structure[name];\n                if (valueName === name) {\n                    // Define type of value attribute based on type attribute\n                    var type, typeId = items && items[typeName];\n                    if (typeId) {\n                        var id = typeId.object;\n                        if (typeSet) {\n                            if (typeof typeSet === 'function')\n                                type = typeSet(id);\n                            else\n                                type = typeSet[id];\n                        }\n                    }\n                    type = type || defaultType || ANY;\n                    ItemClass = ItemClass === ANY ? type :\n                      ItemClass(type);\n                }\n                return ItemClass;\n            }\n        });\n\n        // Redefine type property\n        defineProperty(Class.prototype, typeName, {\n            get: function () {\n                // Get value property of object\n                return this.items[typeName] && this.items[typeName].object;\n            },\n            set: function () {\n                // Can't set type definition property separatery\n                assert(true);\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        return Class;\n    };\n\n    return DEFINE();\n};\n\n\nvar OBJECT_IDENTIFIER = extend(ASN1Object, {\n    encode: function (format) {\n        var object = this.object;\n        object = /^(\\d+\\.)+\\d+$/.test(object) ? object : identifiers[object];\n        assert(!object);\n        return encode(format, object, 0x06);\n    }\n}, {\n    decode: function (source) {\n        var object = decode(source, 0x06);\n        return new this(names[object] || object);\n    }\n});\n\nvar IMPLICIT = function (Class) {\n    Class = Class || ANY;\n    // Add constracted tag\n    return extend(Class, {\n        encode: function (format) {\n            // Format encoding without CTX header\n            var source = Class.method('encode').call(this, format);\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\n                return source;\n            if (source.tagNumber !== 0x04 && source.tagClass === 0 &&\n              !(source.object instanceof Array))\n            // Encode primitive source\n                return { object: BER.encode(source, 'DER', true) };\n            else\n                return { object: source.object };\n        }\n    }, {\n        decode: function (source) {\n            if (typeof source === 'string' || source instanceof CryptoOperationData) {\n                return Class.decode.call(this, source);\n            } else {\n                source = {\n                    object: source.object,\n                    header: source.header,\n                    content: source.content\n                };\n                return Class.decode.call(this, source);\n            }\n        }\n    });\n};\n\nvar EXPLICIT = function (Class) {\n    Class = Class || ANY;\n    // Add constracted tag\n    return extend(Class, {\n        encode: function (format) {\n            // Format encoding without CTX header\n            var source = Class.method('encode').call(this, format);\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\n                return source;\n            return { object: [source] };\n        }\n    }, {\n        decode: function (source) {\n            if (typeof source === 'string' || source instanceof CryptoOperationData) {\n                return Class.decode.call(this, source);\n            } else\n                return Class.decode.call(this, source.object[0]);\n        }\n    });\n};\n\nvar CTX = function (number, ContentClass) {\n    function CTX() {\n        ContentClass.apply(this, arguments);\n    }\n\n    // Create CTX number class with wrapped content class\n    return extend(ContentClass, CTX, {\n        encode: function (format) {\n            var source = ContentClass.method('encode').call(this, format);\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\n                return source;\n            source.tagNumber = number;\n            source.tagClass = 0x02;\n            source.tagConstructed = source.object instanceof Array;\n            return source;\n        }\n    }, {\n        decode: function (source) {\n            // Format decoding without CTX\n            assert(source.tagNumber !== undefined &&\n              (source.tagClass !== 0x02 || source.tagNumber !== number));\n            return ContentClass.decode.call(this, source);\n        }\n    });\n};\n\nvar ARRAY_OF = function (tagNumber) {\n\n    return function (ItemClassDef, typeAndValue) {\n        // Difininition of item class\n        ItemClassDef = ItemClassDef || ANY;\n\n        // Metaclass definition\n        var DEFINE = function (typeSet, defaultType) {\n\n            // Define item class\n            var ItemClass = typeof ItemClassDef === 'function' &&\n            typeSet !== undefined ?\n              ItemClassDef(typeSet, defaultType) : ItemClassDef;\n\n            if (typeAndValue) {\n                /**\n                 * Create class with type and value structure<br><br>\n                 *\n                 * SET OF attribute and SEQUENCE OF attribute metaclass\n                 *\n                 * @class GostASN1.Set\n                 * @param {Object} object object value\n                 */\n                var Class = extend(ASN1Object, function (object) {\n                    // Constructor - \"matrioshka\"\n                    if (this instanceof Class) {\n                        // Define hidden items property\n                        defineProperty(this, 'items', {\n                            writable: true,\n                            value: {}\n                        });\n                        // Call super\n                        ASN1Object.call(this, object || {});\n                    } else\n                        return DEFINE.apply(this, arguments);\n                }, {\n                    object: {\n                        get: function () {\n                            // refresh items from object properties\n                            this.read();\n                            return this;\n                        },\n                        set: function (object) {\n                            if (object instanceof Class) {\n                                object.read();\n                                this.items = object.items;\n                            } else {\n                                // Set other object structure\n                                var data = {};\n                                for (var id in object) {\n                                    var item = object[id];\n                                    data[id] = this.createItem(item, id);\n                                }\n                                this.items = data;\n                            }\n                            // refresh object properties to items\n                            this.reset();\n                        }\n                    },\n                    createItem: function (value, type) {\n                        if (typeAndValue) {\n                            var object = {};\n                            object[typeAndValue.typeName] = type;\n                            object[typeAndValue.valueName] = value;\n                        } else\n                            object = value;\n                        return new ItemClass(object);\n                    },\n                    getItemValue: function (id) {\n                        var item = this.items[id];\n                        return typeAndValue ? item.object[typeAndValue.valueName] : item.object;\n                    },\n                    setItemValue: function (id, value) {\n                        var item = this.items[id];\n                        if (typeAndValue)\n                            item.object[typeAndValue.valueName] = value;\n                        else\n                            item.object = value;\n                    },\n                    isItemType: function (id) {\n                        return typeAndValue ? identifiers[id] : !isNaN(parseInt(id));\n                    },\n                    reset: function () {\n                        // remove unused properties\n                        var items = this.items;\n                        for (var id in this)\n                            if (this.hasOwnProperty(id) && !this.items[id] &&\n                              this.isItemType(id))\n                                delete this[id];\n                        // add new properties\n                        for (var id in items)\n                            this[id] = this.getItemValue(id);\n                    },\n                    read: function () {\n                        var items = this.items;\n                        for (var id in this) {\n                            if (this.isItemType(id)) {\n                                if (!this.items[id]) {\n                                    items[id] = this.createItem(this[id], id);\n                                    this[id] = this.getItemValue(id);\n                                } else if (this.getItemValue(id) !== this[id]) {\n                                    this.setItemValue(id, this[id]);\n                                }\n                            }\n                        }\n                    },\n                    /**\n                     * Encode the object\n                     *\n                     * @memberOf GostASN1.Set\n                     * @instance\n                     * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n                     * @returns {FormatedData}\n                     */\n                    encode: function (format) {\n                        // refresh items from object properties\n                        this.read();\n                        // repare source\n                        var object = this.items, source = [];\n                        for (var id in object) {\n                            // console.log(id, object[id], 'encoding...');\n                            var encoded = object[id].encode(true);\n                            if (encoded !== undefined)\n                                source.push(encoded);\n                        }\n                        return encode(format, source, tagNumber, 0, true);\n                    },\n                    /**\n                     * Decode the source to self object\n                     *\n                     * @memberOf GostASN1.Set\n                     * @instance\n                     * @param {FormatedData} source Encoded data\n                     */\n                    decode: function (source) {\n                        this.object = this.constructor.decode(source);\n                    },\n                    /**\n                     * Check the object structure\n                     *\n                     * @memberOf GostASN1.Set\n                     * @instance\n                     */\n                    check: function () {\n                        this.constructor.decode(this.encode(true));\n                    }\n                }, {\n                    /**\n                     * Encode data values with creating object\n                     *\n                     * @memberOf GostASN1.Set\n                     * @static\n                     * @param {Object} object Javascript object to encoding\n                     * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\n                     * @returns {FormatedData}\n                     */\n                    encode: function (object, format) {\n                        return new this(object).encode(format);\n                    },\n                    /**\n                     * Decode source and create object\n                     *\n                     * @memberOf GostASN1.Set\n                     * @static\n                     * @param {FormatedData} source Encoded data\n                     * @returns {GostASN1.Sequence}\n                     *\n                     */\n                    decode: function (source) {\n                        // Decode structure\n                        source = decode(source, tagNumber, 0, true);\n                        var result = new this(), data = result.items = {};\n                        for (var i = 0, n = source.length; i < n; i++) {\n                            var item = ItemClass.decode(source[i]);\n                            var id = typeAndValue ? item.object[typeAndValue.typeName] : i;\n                            data[id] = item;\n                        }\n                        result.reset();\n                        return result;\n                    }\n                });\n\n                return Class;\n            } else {\n                // Create array class\n                var ArrayClass = extend(ASN1Object, function (object) {\n                    // Constructor - \"matrioshka\"\n                    if (this instanceof ArrayClass) {\n                        // Define hidden items property\n                        defineProperties(this, {\n                            items: {\n                                writable: true,\n                                value: []\n                            },\n                            values: {\n                                writable: true,\n                                value: []\n                            }\n                        });\n                        // Call super\n                        ASN1Object.call(this, object || []);\n                    } else\n                        return DEFINE.apply(this, arguments);\n                }, {\n                    object: {\n                        get: function () {\n                            // refresh items from object properties\n                            this.read();\n                            return this.values;\n                        },\n                        set: function (object) {\n                            if (object instanceof ArrayClass) {\n                                object.read();\n                                this.items = object.items;\n                            } else {\n                                // Set other object structure\n                                var data = [];\n                                for (var i = 0, n = object.length; i < n; i++)\n                                    data[i] = new ItemClass(object[i]);\n                                this.items = data;\n                            }\n                            // refresh object properties to items\n                            this.reset();\n                        }\n                    },\n                    encode: function (format) {\n                        // refresh items from object properties\n                        this.read();\n                        // repare source\n                        var data = this.items, source = [];\n                        for (var i = 0, n = data.length; i < n; i++) {\n                            var encoded = data[i].encode(true);\n                            if (encoded !== undefined)\n                                source.push(encoded);\n                        }\n                        return encode(format, source, tagNumber, 0, true);\n                    },\n                    decode: function (source) {\n                        this.object = this.constructor.decode(source);\n                    },\n                    check: function () {\n                        this.constructor.decode(this.encode(true));\n                    },\n                    reset: function () {\n                        // remove unused properties\n                        for (var i = 0, n = this.items.length; i < n; i++)\n                            this.values.push(this.items[i].object);\n                    },\n                    read: function () {\n                        var items = this.items, values = this.values;\n                        for (var i = 0, n = values.length; i < n; i++) {\n                            if (!this.items[i]) {\n                                items[i] = new ItemClass(values[i]);\n                                values[i] = items[i].object;\n                            } else if (items[i].object !== values[i])\n                                items[i].object = values[i];\n                        }\n                    }\n                }, {\n                    encode: function (object, format) {\n                        return new this(object).encode(format);\n                    },\n                    decode: function (source) {\n                        source = decode(source, tagNumber, 0, true);\n                        var result = new this();\n                        result.items = [];\n                        for (var i = 0, n = source.length; i < n; i++)\n                            result.items.push(ItemClass.decode(source[i]));\n                        result.reset();\n                        return result;\n                    }\n                });\n\n                return ArrayClass;\n            }\n        };\n        return DEFINE(); // Create simple class w/o any parameters\n    };\n};\n\nvar SEQUENCE_OF = ARRAY_OF(0x10);\n\nvar SET_OF = ARRAY_OF(0x11);\n\nvar ENCLOSURE = function (BaseClass, modifier) {\n    if (modifier) {\n        var Class = extend(ASN1Object, {\n            object: {\n                get: function () {\n                    if (this.item)\n                        return modifier.decode(this.item.object);\n                    else\n                        return undefined;\n                },\n                set: function (object) {\n                    if (object !== undefined)\n                        this.item = new BaseClass(modifier.encode(object));\n                    else\n                        delete this.item;\n                }\n            },\n            encode: function (format) {\n                return this.item.encode(format);\n            }\n        }, {\n            decode: function (source) {\n                var result = new this();\n                result.item = BaseClass.decode(source);\n                return result;\n            }\n        });\n        for (var name in BaseClass)\n            if (!Class[name])\n                Class[name] = BaseClass[name];\n        return Class;\n    } else\n        return BaseClass;\n};\n\nvar SET_OF_SINGLE = function (ItemClass) {\n\n    var Class = ENCLOSURE(SET_OF(ItemClass), {\n        encode: function (item) {\n            return [item];\n        },\n        decode: function (item) {\n            return item[0];\n        }\n    });\n    return Class;\n};\n\nvar CHOICE = function (structure, define) {\n\n    return extend(ASN1Object, {\n        object: {\n            get: function () {\n                return this.item && this.item.object;\n            },\n            set: function (object) {\n                // Try to find appropriate type in structure\n                if (object instanceof ASN1Object) {\n                    for (var name in structure)\n                        if (object instanceof structure[name]) {\n                            this.item = object;\n                            return;\n                        }\n                }\n                // Define class\n                var name = typeof define === 'function' ? define(object) : define;\n                assert(!name || !structure[name]);\n                object = new structure[name](object);\n                this.item = object;\n            }\n        },\n        encode: function (format) {\n            // Already in class\n            return this.item.encode(format);\n        }\n    }, {\n        decode: function (source) {\n            // Try to find class structure\n            for (var name in structure) {\n                try {\n                    var item = structure[name].decode(source);\n                    if (item !== undefined)\n                        return new this(item);\n                } catch (e) {\n                }\n            }\n            assert(true);\n        }\n    });\n};\n\nvar ENCAPSULATES = function (WrappedClass) {\n    WrappedClass = WrappedClass || ANY;\n    // BER Encode/Decode values\n    return extend(WrappedClass, {\n        encode: function () {\n            return BER.encode(WrappedClass.method('encode').call(this, true));\n        }\n    }, {\n        encode: function (object, format) {\n            return new this(object).encode(format);\n        },\n        decode: function (source) {\n            return WrappedClass.decode.call(this, BER.decode(source));\n        }\n    });\n};\n\nvar DEFAULT = function (Class, optional) {\n    Class = Class || ANY;\n    return extend(Class, {\n        encode: function (format) {\n            if (this.object === optional)\n                return undefined;\n            return Class.method('encode').call(this, format);\n        }\n    }, {\n        decode: function (source) {\n            if (source === undefined)\n                return new this(optional);\n            else\n                try {\n                    return Class.decode.call(this, source);\n                } catch (e) {\n                    return undefined;\n                }\n        }\n    });\n};\n\nvar OPTIONAL = function (Class) {\n    Class = Class || ANY;\n    return extend(Class, {}, {\n        decode: function (source) {\n            if (source === undefined)\n                return undefined;\n            else\n                try {\n                    return Class.decode.call(this, source);\n                } catch (e) {\n                    return undefined;\n                }\n        }\n    });\n};\n\nvar DEFAULT_NULL = function (Class, optional) {\n    Class = Class || ANY;\n    return extend(Class, {\n        encode: function (format) {\n            if (this.object === optional)\n                return new NULL(null).encode(format);\n            return Class.method('encode').call(this, format);\n        }\n    }, {\n        decode: function (source) {\n            if (source === undefined)\n                return undefined;\n            else if (source === null ||\n              (source.tagNumber === 0x05 && source.tagClass === 0))\n                return new this(optional);\n            else\n                try {\n                    return Class.decode.call(this, source);\n                } catch (e) {\n                    return undefined;\n                }\n        }\n    });\n};\n\n// </editor-fold>\n\n/*\n     * Certificate Version, Name, Attributes, Validity\n     *\n     * http://tools.ietf.org/html/rfc5280\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar DirectoryString = CHOICE({\n    teletexString: TeletexString,\n    printableString: PrintableString,\n    universalString: UniversalString,\n    utf8String: UTF8String,\n    bmpString: BMPString,\n    numericString: NumericString\n}, function (value) {\n    // PrintableString - for characters and symbols with no spaces, overrise UTF8String\n    return /^[A-Za-z0-9\\.@\\+\\-\\:\\=\\\\\\/\\?\\!\\#\\$\\%\\^\\&\\*\\(\\)\\[\\]\\{\\}\\>\\<\\|\\~]*$/.test(value) ? 'printableString' : 'utf8String';\n});\n\nvar Time = CHOICE({\n    utcTime: UTCTime,\n    generalTime: GeneralizedTime\n}, function (value) {\n    return value.getYear() >= 2050 ? 'generalTime' : 'utcTime';\n});\n\n// Attribute\nvar AttributeType = OBJECT_IDENTIFIER;\n\nvar AttributeValue = ANY;\n\nvar AttributeTypeAndValue = ATTRIBUTE({\n    type: AttributeType,\n    value: AttributeValue\n});\n\nvar typeAndValue = {\n    typeName: 'type',\n    valueName: 'value'\n};\n\n/**\n * X.501 type Name\n * The Name describes a hierarchical name composed of attributes, such\n * as country name, and corresponding values, such as US.  The type of\n * the component AttributeValue is determined by the AttributeType; in\n * general it will be a DirectoryString.\n\n * The DirectoryString type is defined as a choice of PrintableString,\n * TeletexString, BMPString, UTF8String, and UniversalString.  The\n * UTF8String encoding [RFC 2279] is the preferred encoding, and all\n * certificates issued after December 31, 2003 MUST use the UTF8String\n * encoding of DirectoryString.\n *\n * Standard sets of attributes have been defined in the X.500 series of\n * specifications [X.520].  Implementations of this specification MUST\n * be prepared to receive the following standard attribute types in\n * issuer and subject (section 4.1.2.6) names:\n *  <ul>\n *      <li>country,</li>\n *      <li>organization,</li>\n *      <li>organizational-unit,</li>\n *      <li>distinguished name qualifier,</li>\n *      <li>state or province name,</li>\n *      <li>common name (e.g., \"Susan Housley\"), and</li>\n *      <li>serial number.</li>\n *  </ul>\n * In addition, implementations of this specification SHOULD be prepared\n * to receive the following standard attribute types in issuer and\n * subject names:\n *  <ul>\n *      <li>locality,</li>\n *      <li>title,</li>\n *      <li>surname,</li>\n *      <li>given name,</li>\n *      <li>initials,</li>\n *      <li>pseudonym, and</li>\n *      <li>generation qualifier (e.g., \"Jr.\", \"3rd\", or \"IV\").</li>\n *  </ul>\n The syntax for type Name:\n *  <pre>\n *  Name ::= CHOICE {\n     *    rdnSequence RDNSequence }\n *\n *  RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n *  RelativeDistinguishedName ::=\n *    SET OF AttributeTypeAndValue\n *\n *  AttributeTypeAndValue ::= SEQUENCE {\n     *    type     AttributeType,\n     *    value    AttributeValue }\n *\n *  AttributeType ::= OBJECT IDENTIFIER\n *\n *  AttributeValue ::= ANY DEFINED BY AttributeType\n *\n *  DirectoryString ::= CHOICE {\n     *        teletexString           TeletexString (SIZE (1..MAX)),\n     *        printableString         PrintableString (SIZE (1..MAX)),\n     *        universalString         UniversalString (SIZE (1..MAX)),\n     *        utf8String              UTF8String (SIZE (1..MAX)),\n     *        bmpString               BMPString (SIZE (1..MAX)) }\n *  </pre>\n * @class GostASN1.Name\n */\nvar RelativeDistinguishedName = SET_OF_SINGLE(AttributeTypeAndValue({\n    serialName: PrintableString,\n    countryName: PrintableString,\n    dnQualifier: PrintableString,\n    emailAddress: IA5String,\n    domainComponent: IA5String,\n    SNILS: NumericString,\n    OGRN: NumericString,\n    INN: NumericString\n}, DirectoryString));\n\nvar RDNSequence = SEQUENCE_OF(RelativeDistinguishedName, typeAndValue)();\n\nvar Name = CHOICE({\n    // only one possibility for now\n    rdnSequence: RDNSequence\n}, 'rdnSequence');\n\n/**\n * Validity\n * @class GostASN1.Validity\n * @extends GostASN1.Sequence\n */\nvar Validity = COMBINE(SEQUENCE({\n    notBefore: Time,\n    notAfter: Time\n}));\n\nvar Version = INTEGER;\n\nvar Attribute = ATTRIBUTE({\n    type: OBJECT_IDENTIFIER,\n    value: ANY\n});\n\n/**\n * Type and Value Attributes <br>\n *\n * Suggested naming attributes: Definition of the following\n * information object set may be augmented to meet local\n * requirements.  Note that deleting members of the set may\n * prevent interoperability with conforming implementations.\n * presented in pairs: the AttributeType followed by the type\n * definition for the corresponding AttributeValue\n *\n * @class GostASN1.Attributes\n * @extends GostASN1.Set\n */\nvar Attributes = SET_OF(Attribute, typeAndValue);\n\nvar AttributeSequence = SEQUENCE_OF(Attribute, typeAndValue);\n// </editor-fold>\n\n/*\n     * Algorithm identifiers\n     *\n     * http://tools.ietf.org/html/rfc3279\n     * http://tools.ietf.org/html/rfc4357\n     * http://tools.ietf.org/html/rfc2898\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar FieldElement = INTEGER;\nvar Curve = SEQUENCE({\n    a: FieldElement,\n    b: FieldElement,\n    seed: OPTIONAL(BIT_STRING)\n});\n\nvar ECPoint = OCTET_STRING(extend(ASN1Object, {\n    encode: function () {\n        var value = this.object;\n        var len = Math.max(npw2(value.x.length - 2), npw2(value.y.length - 2)) / 2,\n          r = new Uint8Array(2 * len + 1);\n        r[0] = 0x04;\n        r.set(new Uint8Array(SInt.decode(value.x, false, len)), 1); // x\n        r.set(new Uint8Array(SInt.decode(value.y, false, len)), len + 1); // y\n        return r.buffer;\n    }\n}, {\n    decode: function (value) {\n        var len = (value.byteLength - 1) / 2;\n        return new this({\n            x: SInt.encode(new Uint8Array(value, 1, len)),\n            y: SInt.encode(new Uint8Array(value, len + 1, len))\n        });\n    }\n}));\n\nvar FieldID = SEQUENCE({\n    fieldType: OBJECT_IDENTIFIER,\n    parameters: INTEGER\n});\n\nvar ECParameters = SEQUENCE({\n    version: Version, // version is always 1\n    fieldID: FieldID, // identifies the finite field over which the curve is defined\n    curve: Curve, // coefficients a and b of the elliptic curve\n    base: ECPoint, // specifies the base point P on the elliptic curve\n    order: INTEGER, // the order n of the base point\n    cofactor: OPTIONAL(INTEGER)\n}); // The integer h = #E(Fq)/n\n\nvar GostR3410Parameters = SEQUENCE({\n    publicKeyParamSet: OBJECT_IDENTIFIER,\n    digestParamSet: OBJECT_IDENTIFIER,\n    encryptionParamSet: OPTIONAL(OBJECT_IDENTIFIER)\n});\n\nvar GostR3411Parameters = DEFAULT_NULL(OBJECT_IDENTIFIER, 'id-GostR3411-94-CryptoProParamSet');\n\nvar ECDHParameters = CHOICE({\n    namedParameters: OBJECT_IDENTIFIER,\n    ecParameters: ECParameters,\n    implicitly: OPTIONAL(NULL)\n}, function (value) {\n    return typeof value === 'string' || value instanceof String ?\n      'namedParameters' : 'ecParameters';\n});\n\nvar Algorithm = function (paramType, modifier) {\n    return ENCLOSURE(SEQUENCE({\n        algorithm: OBJECT_IDENTIFIER,\n        parameters: OPTIONAL(paramType)\n    }), modifier);\n};\n\nvar AlgorithmIdentifier = (function () {\n\n    var DefaultAlgorithm = Algorithm(ANY),\n      Class = extend(ASN1Object, function (object) {\n          if (this instanceof Class)\n              Class.super.apply(this, arguments);\n          else\n              return DEFINE(object);\n      }, {\n          encode: function (format) {\n              return new DefaultAlgorithm(this.object).encode(format);\n          }\n      }, {\n          decode: function (source) {\n              return new this(DefaultAlgorithm.decode(source).object);\n          }\n      });\n\n    var DEFINE = function (algorithmSet) {\n\n        return extend(ASN1Object, {\n            object: {\n                get: function () {\n                    if (this.item)\n                        return this.item.object;\n                    else\n                        return undefined;\n                },\n                set: function (object) {\n                    if (object) {\n                        var ItemClass = algorithmSet[object.id];\n                        if (!ItemClass)\n                            throw new Error('Algorithm not supported');\n                        this.item = new ItemClass(object);\n                    } else\n                        delete this.item;\n                }\n            },\n            encode: function (format) {\n                return this.item.encode(format);\n            }\n        }, {\n            decode: function (source) {\n                // Decode PEM\n                if (typeof source === 'string')\n                    source = PEM.decode(source, undefined, false);\n                // Decode binary data\n                if (source instanceof CryptoOperationData)\n                    source = BER.decode(source);\n                var ItemClass = algorithmSet[names[source.object[0].object]];\n                if (ItemClass) {\n                    var result = new this();\n                    result.item = ItemClass.decode(source);\n                    return result;\n                } else\n                    throw new Error('Algorithm not supported');\n            }\n        });\n    };\n\n    return Class;\n})();\n\nvar ECDHKeyAlgorithm = Algorithm(ECDHParameters, {\n    encode: function (value) {\n        var params;\n        if (typeof value.namedCurve === 'string')\n            params = attributes['namedCurve'][value.namedCurve];\n        else\n            params = {\n                version: 1,\n                fieldID: {\n                    fieldType: 'id-prime-Field',\n                    parameters: value.curve.p\n                },\n                curve: {\n                    a: value.curve.a,\n                    b: value.curve.b\n                },\n                base: {\n                    x: value.curve.x,\n                    y: value.curve.y\n                },\n                order: value.curve.q,\n                cofactor: 1\n            };\n        return {\n            algorithm: value.id,\n            parameters: params\n        };\n    },\n    decode: function (value) {\n        var params = value.parameters,\n          result = algorithms[value.algorithm];\n        if (typeof params === 'string' || params instanceof String) {\n            result = expand(result, parameters[params]);\n        } else if (typeof params === 'object') {\n            result = expand(result, {\n                curve: {\n                    p: params.fieldID.parameters,\n                    a: params.curve.a,\n                    b: params.curve.b,\n                    x: params.base.x,\n                    y: params.base.y,\n                    q: params.order\n                }\n            });\n        } else\n            throw new DataError('Invalid key paramters');\n        return result;\n    }\n});\n\nvar GostKeyAlgorithm = Algorithm(GostR3410Parameters, {\n    encode: function (value) {\n        var paramName = value.namedCurve ? 'namedCurve' : 'namedParam',\n          sBox = (value.name.indexOf('-94') >= 0 || value.name.indexOf('-2001') >= 0 ||\n            value.version === 1994 || value.version === 2001) ? value.sBox || 'D-A' :\n            (value.name.indexOf('-512') >= 0 || value.length === 512) ? 'D-512' : 'D-256';\n        return {\n            algorithm: value.id,\n            parameters: {\n                publicKeyParamSet: attributes[paramName][value[paramName]],\n                digestParamSet: attributes['sBox'][sBox],\n                encryptionParamSet: value.encParams && value.encParams.sBox ?\n                  attributes['sBox'][value.encParams.sBox] : undefined\n            }\n        };\n    },\n    decode: function (value) {\n        var params = value.parameters,\n          algorithm = expand(algorithms[value.algorithm],\n            parameters[params.publicKeyParamSet],\n            parameters[params.digestParamSet]);\n        if (params.encryptionParamSet)\n            algorithm.encParams = parameters[params.encryptionParamSet];\n        return algorithm;\n    }\n});\n\nvar AlgorithmWithNoParam = Algorithm(ANY, {\n    encode: function (value) {\n        return { algorithm: value.id };\n    },\n    decode: function (value) {\n        return algorithms[value.algorithm];\n    }\n});\n\nvar AlgorithmWithNullParam = Algorithm(NULL, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: null\n        };\n    },\n    decode: function (value) {\n        return algorithms[value.algorithm];\n    }\n});\n\nvar Gost341194DigestAlgorithm = Algorithm(GostR3411Parameters, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: attributes['sBox'][value.sBox || (value.hash && value.hash.sBox) || 'D-A']\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]),\n          parameter = parameters[value.parameters];\n        if (algorithm.hash)\n            algorithm.hash = expand(algorithm.hash, parameter);\n        else\n            algorithm = expand(algorithm, parameter);\n        return algorithm;\n    }\n});\n\nvar KeyAlgorithmIdentifier = AlgorithmIdentifier({\n    ecdsa: ECDHKeyAlgorithm,\n    noSignature: AlgorithmWithNullParam,\n    rsaEncryption: AlgorithmWithNullParam,\n    'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\n    'id-GostR3410-2001': GostKeyAlgorithm,\n    'id-GostR3410-94': GostKeyAlgorithm,\n    'id-GostR3410-2001DH': GostKeyAlgorithm,\n    'id-GostR3410-94DH': GostKeyAlgorithm,\n    'id-tc26-gost3410-12-256': GostKeyAlgorithm,\n    'id-tc26-gost3410-12-512': GostKeyAlgorithm,\n    'id-tc26-agreement-gost-3410-12-256': GostKeyAlgorithm,\n    'id-tc26-agreement-gost-3410-12-512': GostKeyAlgorithm,\n    'id-sc-gost28147-gfb': AlgorithmWithNoParam,\n    'id-Gost28147-89': AlgorithmWithNoParam\n});\n\nvar SignatureAlgorithmIdentifier = AlgorithmIdentifier({\n    noSignature: AlgorithmWithNullParam,\n    rsaEncryption: AlgorithmWithNullParam,\n    sha1withRSAEncryption: AlgorithmWithNullParam,\n    sha256withRSAEncryption: AlgorithmWithNullParam,\n    sha384withRSAEncryption: AlgorithmWithNullParam,\n    sha512withRSAEncryption: AlgorithmWithNullParam,\n    'ecdsa': AlgorithmWithNoParam,\n    'ecdsa-with-SHA1': AlgorithmWithNoParam,\n    'ecdsa-with-SHA256': AlgorithmWithNoParam,\n    'ecdsa-with-SHA384': AlgorithmWithNoParam,\n    'ecdsa-with-SHA512': AlgorithmWithNoParam,\n    'id-GostR3410-94': AlgorithmWithNullParam,\n    'id-GostR3410-2001': AlgorithmWithNullParam,\n    'id-GostR3411-94-with-GostR3410-2001': AlgorithmWithNoParam,\n    'id-GostR3411-94-with-GostR3410-94': AlgorithmWithNoParam,\n    'id-tc26-gost3410-12-256': AlgorithmWithNullParam,\n    'id-tc26-gost3410-12-512': AlgorithmWithNullParam,\n    'id-tc26-signwithdigest-gost3410-12-94': AlgorithmWithNoParam,\n    'id-tc26-signwithdigest-gost3410-12-256': AlgorithmWithNoParam,\n    'id-tc26-signwithdigest-gost3410-12-512': AlgorithmWithNoParam,\n    'id-sc-gostR3410-94': AlgorithmWithNullParam,\n    'id-sc-gostR3410-2001': AlgorithmWithNullParam,\n    'id-sc-gostR3411-94-with-gostR3410-94': AlgorithmWithNullParam,\n    'id-sc-gostR3411-94-with-gostR3410-2001': AlgorithmWithNullParam\n});\n\nvar DigestAlgorithmIdentifier = AlgorithmIdentifier({\n    sha1: AlgorithmWithNoParam,\n    sha256: AlgorithmWithNullParam,\n    sha384: AlgorithmWithNullParam,\n    sha512: AlgorithmWithNullParam,\n    'id-GostR3411-94': Gost341194DigestAlgorithm,\n    'id-tc26-gost3411-94': Gost341194DigestAlgorithm,\n    'id-tc26-gost3411-12-256': AlgorithmWithNullParam,\n    'id-tc26-gost3411-12-512': AlgorithmWithNullParam,\n    'id-sc-gostR3411-94': AlgorithmWithNoParam\n});\n\nvar Gost2814789Key = OCTET_STRING; //(SIZE (32))\n\nvar Gost2814789MAC = OCTET_STRING; // (SIZE (1..4))\n\nvar Gost2814789ParamSet = OBJECT_IDENTIFIER;\n\nvar Gost2814789IV = OCTET_STRING; // (SIZE (8))\n\nvar Gost2814789Parameters = SEQUENCE({\n    iv: Gost2814789IV,\n    encryptionParamSet: Gost2814789ParamSet\n});\n\nvar Gost2814789KeyWrapParameters = SEQUENCE({\n    encryptionParamSet: Gost2814789ParamSet,\n    ukm: OPTIONAL(OCTET_STRING)\n}); // (SIZE (8)) must be absent in key agreement\n\nvar Gost2814789Algorithm = Algorithm(Gost2814789Parameters, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                iv: value.iv,\n                encryptionParamSet: attributes['sBox'][value.sBox || 'E-A']\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm],\n          parameters[value.parameters.encryptionParamSet]);\n        algorithm.iv = value.parameters.iv;\n        return algorithm;\n    }\n});\n\nvar SCGostAlgorithm = Algorithm(Gost2814789IV, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: value.iv\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.iv = value.parameters || new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\n        return algorithm;\n    }\n});\n\nvar GostKeyWrapAlgorithm = Algorithm(Gost2814789KeyWrapParameters, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                encryptionParamSet: attributes['sBox'][value.sBox || 'E-A'],\n                ukm: value.ukm\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm],\n          parameters[value.parameters.encryptionParamSet]);\n        if (value.parameters.ukm)\n            algorithm.ukm = value.parameters.ukm;\n        return algorithm;\n    }\n});\n\nvar KeyWrapAlgorithmIdentifier = AlgorithmIdentifier({\n    'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm,\n    'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm\n});\n\nvar GostKeyAgreementAlgorithm = Algorithm(KeyWrapAlgorithmIdentifier, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: value.wrapping\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.wrapping = value.parameters;\n        return algorithm;\n    }\n});\n\nvar BaseEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\n    'id-Gost28147-89': Gost2814789Algorithm\n});\n\nvar MessageAuthenticationCodeAlgorithm = AlgorithmIdentifier({\n    'id-Gost28147-89-MAC': Gost2814789Parameters,\n    'id-HMACGostR3411-94': Gost341194DigestAlgorithm,\n    'id-tc26-hmac-gost-3411-12-256': Gost341194DigestAlgorithm,\n    'id-tc26-hmac-gost-3411-12-512': Gost341194DigestAlgorithm,\n    'hmacWithSHA1': AlgorithmWithNoParam,\n    'hmacWithSHA224': AlgorithmWithNoParam,\n    'hmacWithSHA256': AlgorithmWithNoParam,\n    'hmacWithSHA384': AlgorithmWithNoParam,\n    'hmacWithSHA512': AlgorithmWithNoParam,\n    'id-sc-gost28147-mac': AlgorithmWithNoParam,\n    'id-sc-hmacWithGostR3411': AlgorithmWithNoParam\n});\n\n// rfc2898 PKCS #5: Password-Based Cryptography Specification\n// PBKDF2\nvar PBKDF2params = SEQUENCE({\n    salt: CHOICE({\n        specified: OCTET_STRING,\n        otherSource: AlgorithmIdentifier\n    }, function (value) {\n        return isBinary(value) ? 'specified' : 'otherSource';\n    }),\n    iterationCount: INTEGER,\n    keyLength: OPTIONAL(INTEGER),\n    prf: MessageAuthenticationCodeAlgorithm\n});\n\nvar PBKDF2Algorithm = Algorithm(PBKDF2params, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                salt: value.salt,\n                iterationCount: value.iterations,\n                prf: value.hmac\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.salt = value.parameters.salt;\n        algorithm.iterations = value.parameters.iterationCount;\n        algorithm.hmac = value.parameters.prf;\n        algorithm.hash = algorithm.hmac.hash;\n        return algorithm;\n    }\n});\n\nvar KeyDerivationAlgorithmIdentifier = AlgorithmIdentifier({\n    'PBKDF2': PBKDF2Algorithm\n});\n\nvar PBEParameter = SEQUENCE({\n    salt: OCTET_STRING,\n    iterationCount: INTEGER\n});\n\nvar PBES1Algorithm = Algorithm(PBEParameter, {\n    paramType: PBEParameter,\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                salt: value.derivation.salt,\n                iterationCount: value.derivation.iterations\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.derivation = expand(algorithm.derivation,\n          { salt: value.parameters.salt, iterations: value.parameters.iterationCount });\n        return algorithm;\n    }\n});\n\n// PBES2\nvar PBES2params = SEQUENCE({\n    keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBES2-KDFs}},\n    encryptionScheme: BaseEncryptionAlgorithmIdentifier\n}); // {{PBES2-Encs}}\n\nvar PBES2Algorithm = Algorithm(PBES2params, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                keyDerivationFunc: value.derivation,\n                encryptionScheme: value.encryption\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.derivation = value.parameters.keyDerivationFunc;\n        algorithm.encryption = value.parameters.encryptionScheme;\n        return algorithm;\n    }\n});\n\nvar PasswordEncryptionAlgorithmIndentifier = AlgorithmIdentifier({\n    // PBES1\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n    // PKCS12 PBES1\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n    'pbeUnknownGost': PBES1Algorithm,\n    // PBES2\n    'PBES2': PBES2Algorithm\n});\n\nvar KeyEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n    ecdsa: ECDHKeyAlgorithm,\n    rsaEncryption: AlgorithmWithNullParam,\n    // Base encryption\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\n    'id-Gost28147-89': Gost2814789Algorithm,\n    // Key transport algorithms\n    'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\n    'id-GostR3410-2001': GostKeyAlgorithm,\n    'id-GostR3410-94': GostKeyAlgorithm,\n    'id-tc26-gost3410-12-256': GostKeyAlgorithm,\n    'id-tc26-gost3410-12-512': GostKeyAlgorithm,\n    // Key agreement algorithms\n    'id-GostR3410-94-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\n    'id-GostR3410-2001-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\n    'id-tc26-agreement-gost-3410-12-256': GostKeyAgreementAlgorithm,\n    'id-tc26-agreement-gost-3410-12-512': GostKeyAgreementAlgorithm,\n    'id-sc-r3410-ESDH-r3411kdf': AlgorithmWithNullParam,\n    // Key encryption key algorithms\n    'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm, // Add ukm to algorithm\n    'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm,\n    'id-sc-cmsGostWrap': AlgorithmWithNoParam, // SC don't use ukm\n    'id-sc-cmsGost28147Wrap': AlgorithmWithNoParam,\n    // Password based encryption\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n    // PKCS12 PBES1\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n    'pbeUnknownGost': PBES1Algorithm,\n    // PBES2\n    'PBES2': PBES2Algorithm\n});\n\nvar PBMAC1params = SEQUENCE({\n    keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBMAC1-KDFs}},\n    messageAuthScheme: MessageAuthenticationCodeAlgorithm\n}); // {{PBMAC1-MACs}}\n\nvar PasswordMACAlgorithm = Algorithm(PBMAC1params, {\n    encode: function (value) {\n        return {\n            algorithm: value.id,\n            parameters: {\n                keyDerivationFunc: value.derivation,\n                messageAuthScheme: value.hmac\n            }\n        };\n    },\n    decode: function (value) {\n        var algorithm = expand(algorithms[value.algorithm]);\n        algorithm.derivation = value.parameters.keyDerivationFunc;\n        algorithm.hmac = value.parameters.messageAuthScheme;\n        return algorithm;\n    }\n});\n\nvar PasswordMACAlgorithmIdentifier = AlgorithmIdentifier({\n    'PBMAC1': PasswordMACAlgorithm\n});\n\nvar ContentEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\n    // Base encryption\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\n    'id-Gost28147-89': Gost2814789Algorithm,\n    // Password based encryption\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\n    // PKCS12 PBES1\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\n    'pbeUnknownGost': PBES1Algorithm,\n    // PBES2\n    'PBES2': PBES2Algorithm\n});\n\n// </editor-fold>\n\n/*\n     * Public Key Info\n     *\n     * http://tools.ietf.org/html/rfc5280\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar KeyData = ENCLOSURE;\n\nvar DHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(INTEGER)), {\n    encode: function (value) {\n        return Int16.encode(swapBytes(value));\n    },\n    decode: function (value) {\n        return swapBytes(Int16.decode(value));\n    }\n});\n\nvar ECDHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(OCTET_STRING)), {\n    encode: function (value) {\n        var r = new Uint8Array(value.byteLength + 1),\n          d = swapBytes(value),\n          len = value.byteLength / 2;\n        r[0] = 0x04; // type hex;\n        r.set(new Uint8Array(d, len, len), 1); // x\n        r.set(new Uint8Array(d, 0, len), len + 1); // y\n        return r.buffer;\n    },\n    decode: function (value) {\n        assert((value.byteLength & 1) === 0);\n        var d = new Uint8Array(value.byteLength - 1),\n          len = d.byteLength / 2;\n        d.set(new Uint8Array(value, len + 1, len), 0); // y\n        d.set(new Uint8Array(value, 1, len), len); // x\n        return swapBytes(d);\n    }\n});\n\nvar GostR3410PublicKey = BIT_STRING(ENCAPSULATES(OCTET_STRING));\n\n/**\n * Subject Public Key Info Syntax X.509\n * <pre>\n *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\n     *      algorithm            AlgorithmIdentifier,\n     *      subjectPublicKey     BIT STRING  }\n *\n *  AlgorithmIdentifier  ::=  SEQUENCE  {\n     *      algorithm               OBJECT IDENTIFIER,\n     *      parameters              ANY DEFINED BY algorithm OPTIONAL  }\n -- contains a value of the type\n -- registered for use with the\n -- algorithm object identifier value\n * </pre>\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\n * @class GostASN1.SubjectPublicKeyInfo\n * @extends GostASN1.Sequence\n * @property {AlgorithmIdentifier} algorithm Identifies the public-key algorithm.\n * @property {CryptoOperationData} subjectPublicKey An binary data whose contents are the value of the public key\n */\nvar SubjectPublicKeyInfo = SEQUENCE({\n    algorithm: KeyAlgorithmIdentifier,\n    subjectPublicKey: BIT_STRING\n}, 'PUBLIC KEY');\n\nvar GostSubjectPublicKeyInfo = (function (PKTypes) {\n\n    /**\n     * Coding methods for {@link Algorithm} and {@link GostASN1.SubjectPublicKeyInfo}\n     * Supported types for GOST algorithms:\n     * <pre>\n     *  {\n         *      'id-sc-gostR3410-2001': ECDHPublicKey,\n         *      'id-sc-gostR3410-94': DHPublicKey,\n         *      'id-GostR3410-2001': GostR3410PublicKey,\n         *      'id-GostR3410-94': GostR3410PublicKey,\n         *      'id-tc26-gost3410-12-256': GostR3410PublicKey,\n         *      'id-tc26-gost3410-12-512': GostR3410PublicKey\n         *  }\n     * </pre>\n     *\n     * @class GostASN1.GostSubjectPublicKeyInfo\n     * @extends GostASN1.SubjectPublicKeyInfo\n     * @extends Key\n     */\n    return ENCLOSURE(ATTRIBUTE({\n          algorithm: KeyAlgorithmIdentifier,\n          subjectPublicKey: ANY\n      },\n      'algorithm', 'subjectPublicKey')(function (algorithm) {\n        return PKTypes[algorithm.id];\n    }), {\n        encode: function (value) {\n            return {\n                algorithm: value.algorithm,\n                subjectPublicKey: value.buffer\n            };\n        },\n        decode: function (value) {\n            return {\n                algorithm: value.algorithm,\n                type: 'public',\n                extractable: true,\n                usages: ['verify', 'deriveKey', 'deriveBits'],\n                buffer: value.subjectPublicKey\n            };\n        }\n    });\n})({\n    'id-sc-gostR3410-2001': ECDHPublicKey,\n    'id-sc-gostR3410-94': DHPublicKey,\n    'id-GostR3410-2001': GostR3410PublicKey,\n    'id-GostR3410-94': GostR3410PublicKey,\n    'id-tc26-gost3410-12-256': GostR3410PublicKey,\n    'id-tc26-gost3410-12-512': GostR3410PublicKey\n});\n// </editor-fold>\n\n/*\n     * Private Key Info PKCS#8\n     *\n     * http://tools.ietf.org/html/rfc5208\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar PrivateKey = OCTET_STRING;\n\nvar DHPrivateKey = KeyData(PrivateKey(ENCAPSULATES(INTEGER)), {\n    encode: function (value) { // for SignalCom INTEGER d\n        return SInt.encode(value, true);\n    },\n    decode: function (value) {\n        return SInt.decode(value, true);\n    }\n});\n\nvar GostR3410KeyValueMask = OCTET_STRING;\n\nvar GostR3410KeyValueInfo = SEQUENCE({\n    keyValueMask: GostR3410KeyValueMask,\n    keyValyePublicKey: OCTET_STRING\n});\n\nvar GostR3410PrivateKey = CHOICE({\n    privateKey: PrivateKey(ENCAPSULATES(CHOICE({\n        keyValueMask: GostR3410KeyValueMask,\n        keyValueInfo: GostR3410KeyValueInfo\n    }, function (value) {\n        if (isBinary(value))\n            return 'keyValueMask';\n        else\n            return 'keyValueInfo';\n    }))),\n    keyValueMask: GostR3410KeyValueMask\n}, function (value) {\n    return value.enclosed ? 'keyValueMask' : 'privateKey';\n});\n\nvar GostWrappedPrivateKey = (function (PKTypes) {\n\n    /**\n     * Gost Wrapped Private Key for SignalCom key container\n     *\n     * @class GostASN1.GostWrappedPrivateKey\n     * @extends GostASN1.PrivateKeyInfo\n     */\n    return ATTRIBUTE({\n        version: Version,\n        privateKeyAlgorithm: KeyAlgorithmIdentifier,\n        privateKeyWrapped: KeyData(PrivateKey(ENCAPSULATES(SEQUENCE({\n            keyData: INTEGER,\n            keyMac: INTEGER\n        }))), {\n            encode: function (value) {\n                var size = value.byteLength - 4;\n                return {\n                    keyData: SInt.encode(new Uint8Array(value, 0, size)),\n                    keyMac: SInt.encode(new Uint8Array(value, size, 4))\n                };\n            },\n            decode: function (value) {\n                var data = SInt.decode(value.keyData),\n                  mac = SInt.decode(value.keyMac),\n                  result = new Uint8Array(data.byteLength + mac.byteLength);\n                result.set(new Uint8Array(data));\n                result.set(new Uint8Array(mac), data.byteLength);\n                return result;\n            }\n        }),\n        attributes: ANY\n    }, 'privateKeyAlgorithm', 'attributes')(function (algorithm) {\n        return OPTIONAL(CTX(0, IMPLICIT(Attributes({\n            'id-sc-gostR3410-2001-publicKey': SET_OF_SINGLE(PKTypes[algorithm.id])\n        }))));\n    });\n})({\n    // Signature keys\n    'id-sc-gostR3410-2001': ECDHPublicKey,\n    'id-sc-gostR3410-94': DHPublicKey,\n    'id-GostR3410-2001': GostR3410PublicKey,\n    'id-GostR3410-94': GostR3410PublicKey,\n    'id-GostR3410-2001DH': GostR3410PublicKey,\n    'id-GostR3410-94DH': GostR3410PublicKey,\n    'id-tc26-gost3410-12-256': GostR3410PublicKey,\n    'id-tc26-gost3410-12-512': GostR3410PublicKey,\n    'id-tc26-agreement-gost-3410-12-256': GostR3410PublicKey,\n    'id-tc26-agreement-gost-3410-12-512': GostR3410PublicKey\n});\n\n/**\n * Private-Key Information Syntax PKSC#8\n * <pre>\n *  -- Private-key information syntax\n *\n *  PrivateKeyInfo ::= SEQUENCE {\n     *      version Version,\n     *      privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},\n     *      privateKey PrivateKey,\n     *      attributes [0] Attributes OPTIONAL }\n *\n *  Version ::= INTEGER {v1(0)} (v1,...)\n *\n *  PrivateKey ::= OCTET STRING\n *\n *  Attributes ::= SET OF Attribute\n * </pre>\n * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208}\n * @class GostASN1.PrivateKeyInfo\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number. Should be 0\n * @property {AlgorithmIndentifier} privateKeyAlgorithm Identifies the private-key algorithm\n * @property {CryptoOperationData} privateKey Is an binary data whose contents are the value of the private key.\n * @property {GostASN1.Attributes} attributes A set of attributes\n */\nvar PrivateKeyInfo = SEQUENCE({\n    version: Version,\n    privateKeyAlgorithm: KeyAlgorithmIdentifier,\n    privateKey: PrivateKey,\n    attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))\n}, 'PRIVATE KEY');\n\nvar PrivateKeyAlgorithmIdentifier = KeyAlgorithmIdentifier;\n\nvar PublicKey = BIT_STRING;\n\nvar OneAsymmetricKey = SEQUENCE({\n    version: Version,\n    privateKeyAlgorithm: PrivateKeyAlgorithmIdentifier,\n    privateKey: PrivateKey,\n    attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes))),\n    publicKey: OPTIONAL(CTX(1, IMPLICIT(PublicKey)))\n});\n\nvar AsymmetricKeyPackage = SEQUENCE_OF(OneAsymmetricKey);\n\nvar GostPrivateKeyInfo = (function (PKTypes) {\n\n    /**\n     * Coding methods for {@link Algorithm} and {@link GostASN1.PrivateKeyInfo}\n     * Supported types for GOST algorithms:\n     * <pre>\n     *  {\n         *      'id-sc-gostR3410-2001': DHPrivateKey,\n         *      'id-sc-gostR3410-94': DHPrivateKey,\n         *      'id-GostR3410-2001': GostR3410PrivateKey,\n         *      'id-GostR3410-94': GostR3410PrivateKey,\n         *      'id-tc26-gost3410-12-256': GostR3410PrivateKey,\n         *      'id-tc26-gost3410-12-512': GostR3410PrivateKey\n         *  }\n     * </pre>\n     *\n     * @class GostASN1.GostPrivateKeyInfo\n     * @extends GostASN1.PrivateKeyInfo\n     * @extends Key\n     */\n    return ENCLOSURE(ATTRIBUTE({\n          version: Version,\n          privateKeyAlgorithm: KeyAlgorithmIdentifier,\n          privateKey: ANY,\n          attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))\n      },\n      'privateKeyAlgorithm', 'privateKey')(function (algorithm) {\n        return PKTypes[algorithm.id];\n    }), {\n        encode: function (value) {\n            return {\n                version: 0,\n                privateKeyAlgorithm: value.algorithm,\n                privateKey: value.buffer\n            };\n        },\n        decode: function (value) {\n            return {\n                algorithm: value.privateKeyAlgorithm,\n                type: 'private',\n                extractable: true,\n                usages: ['sign', 'deriveKey', 'deriveBits'],\n                buffer: isBinary(value.privateKey) ? value.privateKey :\n                  value.privateKey.keyValueMask\n            };\n        }\n    });\n})({\n    // Signature keys\n    'id-sc-gostR3410-2001': DHPrivateKey,\n    'id-sc-gostR3410-94': DHPrivateKey,\n    'id-GostR3410-2001': GostR3410PrivateKey,\n    'id-GostR3410-94': GostR3410PrivateKey,\n    'id-GostR3410-2001DH': GostR3410PrivateKey,\n    'id-GostR3410-94DH': GostR3410PrivateKey,\n    'id-tc26-gost3410-12-256': GostR3410PrivateKey,\n    'id-tc26-gost3410-12-512': GostR3410PrivateKey,\n    'id-tc26-agreement-gost-3410-12-256': GostR3410PrivateKey,\n    'id-tc26-agreement-gost-3410-12-512': GostR3410PrivateKey\n});\n\nvar KeyEncryptedData = OCTET_STRING;\n/**\n * Encrypted Private-Key Information Syntax\n * <pre>\n *  -- Encrypted private-key information syntax\n *\n *  EncryptedPrivateKeyInfo ::= SEQUENCE {\n     *      encryptionAlgorithm AlgorithmIdentifier {{KeyEncryptionAlgorithms}},\n     *      encryptedData KeyEncryptedData\n     *  }\n *\n *  KeyEncryptedData ::= OCTET STRING\n *\n *  PrivateKeyAlgorithms ALGORITHM-IDENTIFIER ::= {\n     *      ... -- For local profiles\n     *  }\n *\n *  KeyEncryptionAlgorithms ALGORITHM-IDENTIFIER ::= {\n     *      ... -- For local profiles\n     *  }\n * </pre>\n * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208}\n * @class GostASN1.EncryptedPrivateKeyInfo\n * @extends GostASN1.Sequence\n * @property {AlgorithmIdentifier} encryptionAlgorithm Identifies key encryption algorithm\n * @property {CryptoOperationData} encryptedData Encrypted {@link GostASN1.PrivateKeyInfo}\n */\nvar EncryptedPrivateKeyInfo = SEQUENCE({\n    encryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n    encryptedData: KeyEncryptedData\n}, 'ENCRYPTED PRIVATE KEY');\n// </editor-fold>\n\n/*\n     * Certificate Extensions\n     *\n     * http://tools.ietf.org/html/rfc5280\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\nvar UniqueIdentifier = BIT_STRING;\n\nvar CertificateSerialNumber = INTEGER;\n\nvar BasicConstraints = SEQUENCE({\n    cA: DEFAULT(BOOLEAN, false),\n    pathLenConstraint: OPTIONAL(INTEGER)\n});\n\nvar KeyUsage = BIT_STRING({\n    digitalSignature: 0,\n    nonRepudiation: 1,\n    keyEncipherment: 2,\n    dataEncipherment: 3,\n    keyAgreement: 4,\n    keyCertSign: 5,\n    cRLSign: 6,\n    encipherOnly: 7,\n    decipherOnly: 8\n});\nvar KeyPurposeId = OBJECT_IDENTIFIER,\n  ExtKeyUsageSyntax = SEQUENCE_OF(KeyPurposeId);\n\nvar KeyIdentifier = OCTET_STRING;\n\nvar OtherName = SEQUENCE({\n    type: OBJECT_IDENTIFIER,\n    value: CTX(0, EXPLICIT(ANY))\n});\n\nvar EDIPartyName = SEQUENCE({\n    nameAssigner: OPTIONAL(CTX(0, IMPLICIT(DirectoryString))),\n    partyName: OPTIONAL(CTX(1, IMPLICIT(DirectoryString)))\n});\n\nvar ORAddress = SEQUENCE({});\n\nvar GeneralName = CHOICE({\n    otherName: CTX(0, IMPLICIT(OtherName)),\n    rfc822Name: CTX(1, IMPLICIT(DirectoryString)),\n    dNSName: CTX(2, IMPLICIT(DirectoryString)),\n    x400Address: CTX(3, IMPLICIT(ORAddress)),\n    directoryName: CTX(4, EXPLICIT(Name)), // Name is CHOICE(RDNSequence)\n    ediPartyName: CTX(5, IMPLICIT(EDIPartyName)),\n    uniformResourceIdentifier: CTX(6, IMPLICIT(DirectoryString)),\n    iPAddress: CTX(7, IMPLICIT(OCTET_STRING)),\n    registeredID: CTX(8, IMPLICIT(OBJECT_IDENTIFIER))\n}, function (value) {\n    return typeof value === 'string' || value instanceof String ?\n      (value.indexOf('@') >= 0 ? 'rfc822Name' : 'dNSName') :\n      isBinary(value) ? 'iPAddress' : 'directoryName';\n});\n\nvar GeneralNames = SEQUENCE_OF(GeneralName);\n\nvar AuthorityKeyIdentifier = SEQUENCE({\n    keyIdentifier: OPTIONAL(CTX(0, IMPLICIT(KeyIdentifier))),\n    authorityCertIssuer: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\n    authorityCertSerialNumber: OPTIONAL(CTX(2, IMPLICIT(CertificateSerialNumber)))\n});\n\nvar PrivateKeyUsagePeriod = SEQUENCE({\n    notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n    notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\n});\n\nvar CertPolicyId = OBJECT_IDENTIFIER,\n  PolicyQualifierId = OBJECT_IDENTIFIER;\n\nvar PolicyQualifierInfo = SEQUENCE({\n    policyQualifierId: PolicyQualifierId,\n    qualifier: ANY\n});\n\nvar PolicyInformation = SEQUENCE({\n    policyIdentifier: CertPolicyId,\n    policyQualifiers: OPTIONAL(SEQUENCE_OF(PolicyQualifierInfo))\n});\n\nvar PolicyMapping = SEQUENCE({\n    issuerDomainPolicy: CertPolicyId,\n    subjectDomainPolicy: CertPolicyId\n});\n\nvar BaseDistance = INTEGER;\n\nvar GeneralSubtree = SEQUENCE({\n    base: GeneralName,\n    minimum: DEFAULT(CTX(0, IMPLICIT(BaseDistance)), 0),\n    maximum: OPTIONAL(CTX(1, IMPLICIT(BaseDistance)))\n});\n\nvar GeneralSubtrees = SEQUENCE_OF(GeneralSubtree);\n\nvar NameConstraints = SEQUENCE({\n    permittedSubtrees: OPTIONAL(CTX(0, IMPLICIT(GeneralSubtrees))),\n    excludedSubtrees: OPTIONAL(CTX(1, IMPLICIT(GeneralSubtrees)))\n});\n\nvar SkipCerts = INTEGER;\n\nvar PolicyConstraints = SEQUENCE({\n    requireExplicitPolicy: OPTIONAL(CTX(0, IMPLICIT(SkipCerts))),\n    inhibitPolicyMapping: OPTIONAL(CTX(1, IMPLICIT(SkipCerts)))\n});\n\nvar ReasonFlags = BIT_STRING({\n    unused: 0,\n    keyCompromise: 1,\n    cACompromise: 2,\n    affiliationChanged: 3,\n    superseded: 4,\n    cessationOfOperation: 5,\n    certificateHold: 6,\n    privilegeWithdrawn: 7,\n    aACompromise: 8\n});\n\nvar DistributionPointName = CHOICE({\n    fullName: CTX(0, IMPLICIT(GeneralNames)),\n    nameRelativeToCRLIssuer: CTX(1, IMPLICIT(RelativeDistinguishedName))\n}, function (value) {\n    return value instanceof Array ? 'fullName' : 'nameRelativeToCRLIssuer';\n});\n\nvar DistributionPoint = SEQUENCE({\n    distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName CHOICE\n    reasons: OPTIONAL(CTX(1, IMPLICIT(ReasonFlags))),\n    cRLIssuer: OPTIONAL(CTX(2, IMPLICIT(GeneralNames)))\n});\n\nvar CRLDistributionPoints = SEQUENCE_OF(DistributionPoint);\n\nvar FreshestCRL = CRLDistributionPoints;\n\nvar AccessDescription = SEQUENCE({\n    accessMethod: OBJECT_IDENTIFIER,\n    accessLocation: GeneralName\n});\n\nvar Extension = function (typeSet, defaultCritical) {\n\n    var Attribute = ATTRIBUTE({\n        extnID: OBJECT_IDENTIFIER,\n        critical: DEFAULT(BOOLEAN, false),\n        extnValue: function (type) {\n            return OCTET_STRING(ENCAPSULATES(type));\n        }\n    }, 'extnID', 'extnValue');\n\n    var Class = extend(Attribute(typeSet), {\n        object: {\n            get: function () {\n                var value = this._get(Class.super, 'object');\n                if (value && typeof value.extnValue === 'object')\n                    this.defineValue(value.extnValue);\n                return value;\n            },\n            set: function (object) {\n                this._set(Class.super, 'object', object);\n                // Define critical\n                if (object && object.extnValue)\n                    if (object.extnValue.critical !== undefined)\n                        this.critical = object.extnValue.critical;\n                    else if (this.critical === undefined && defaultCritical)\n                        this.critical = defaultCritical(this.extnID, object.extnValue);\n            }\n        },\n        extnValue: {\n            get: function () {\n                // Get value property of object\n                var value = this._get(Class.super, 'extnValue');\n                if (typeof value === 'object')\n                    this.defineValue(value);\n                return value;\n            },\n            set: function (object) {\n                // Set value property of object\n                this._set(Class.super, 'extnValue', object);\n                // Define critical\n                if (object) {\n                    if (object.critical !== undefined)\n                        this.critical = object.critical;\n                    else if (this.critical === undefined && defaultCritical)\n                        this.critical = defaultCritical(this.extnID, object);\n                }\n            }\n        },\n        defineValue: function (value) {\n            if (typeof value === 'object')\n                if (!getOwnPropertyDescriptor(value, 'critical')) {\n                    var self = this;\n                    defineProperty(value, 'critical', {\n                        get: function () {\n                            return self.critical;\n                        },\n                        set: function (value) {\n                            self.critical = value;\n                        },\n                        enumerable: true,\n                        configurable: false\n                    });\n                }\n        }\n    });\n    return Class;\n};\n\n// http://base.garant.ru/70133464/#ixzz4KaOTGI1l\nvar IssuerSignTool = SEQUENCE({\n    signTool: UTF8String,\n    cATool: UTF8String,\n    signToolCert: UTF8String,\n    cAToolCert: UTF8String\n});\n\n/**\n * Extensions is a base class for extension attributes of certificates, CRLs, requests and etc.\n *\n * @class GostASN1.Extensions\n * @extends GostASN1.Set\n */\nvar Extensions = SEQUENCE_OF(Extension, {\n    typeName: 'extnID',\n    valueName: 'extnValue'\n});\n\nvar CertExtensions = Extensions({\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\n    subjectKeyIdentifier: KeyIdentifier,\n    keyUsage: KeyUsage,\n    privateKeyUsagePeriod: PrivateKeyUsagePeriod,\n    certificatePolicies: SEQUENCE_OF(PolicyInformation),\n    policyMappings: SEQUENCE_OF(PolicyMapping),\n    subjectAltName: GeneralNames,\n    issuerAltName: GeneralNames,\n    subjectDirectoryAttributes: AttributeSequence,\n    basicConstraints: BasicConstraints,\n    nameConstraints: NameConstraints,\n    policyConstraints: PolicyConstraints,\n    extKeyUsage: ExtKeyUsageSyntax,\n    cRLDistributionPoints: CRLDistributionPoints,\n    inhibitAnyPolicy: SkipCerts,\n    freshestCRL: FreshestCRL,\n    authorityInfoAccess: SEQUENCE_OF(AccessDescription),\n    subjectInfoAccess: SEQUENCE_OF(AccessDescription),\n    subjectSignTool: UTF8String,\n    issuerSignTool: IssuerSignTool\n}, function (id, value) {\n    return id === 'keyUsage' ||\n      (id === 'basicConstraints' && value.pathLenConstraint === undefined);\n});\n// </editor-fold>\n\n/*\n * Signature Values\n *\n * http://tools.ietf.org/html/rfc5280\n * http://tools.ietf.org/html/rfc4491\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n/**\n * Gost Signature encode signature values for different GOST signatures\n * Support algorithms:\n * <pre>\n *  {\n     *      'id-GostR3410-94': GostR3410Signature,\n     *      'id-GostR3410-2001': GostR3410Signature,\n     *      'id-tc26-gost3410-12-256': GostR3410Signature,\n     *      'id-tc26-gost3410-12-512': GostR3410Signature,\n     *      'id-GostR3411-94-with-GostR3410-2001': GostR3410Signature,\n     *      'id-GostR3411-94-with-GostR3410-94': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-94': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-256': GostR3410Signature,\n     *      'id-tc26-signwithdigest-gost3410-12-512': GostR3410Signature,\n     *      'id-sc-gostR3410-94': ECDHSignature,\n     *      'id-sc-gostR3410-2001': ECDHSignature,\n     *      'id-sc-gostR3411-94-with-gostR3410-94': ECDHSignature,\n     *      'id-sc-gostR3411-94-with-gostR3410-2001': ECDHSignature\n     *  }\n * </pre>\n *\n * @class GostASN1.GostSignature\n * @extends GostASN1.Sequence\n */\n\n  // SignalCom signature\nvar ECDHSignature = SEQUENCE({\n      r: INTEGER,\n      s: INTEGER\n  });\n\nvar GostR3410Signature = ANY;\n\n// Signature value (only need for CryptoPro\n//    var GostSignature = extend(CHOICE({\n//        ecdhSignature: ECDHSignature}, 'ecdhSignature'));\nvar GostSignature = ECDHSignature;\n\n// </editor-fold>\n\n/*\n     * Certificate\n     *\n     * http://tools.ietf.org/html/rfc5280\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\n/**\n * The sequence TBSCertificate contains information associated with the\n * subject of the certificate and the CA who issued it.  Every\n * TBSCertificate contains the names of the subject and issuer, a public\n * key associated with the subject, a validity period, a version number,\n * and a serial number; some MAY contain optional unique identifier\n * fields.  The remainder of this section describes the syntax and\n * semantics of these fields.  A TBSCertificate usually includes\n * extensions.\n * <pre>\n *  TBSCertificate  ::=  SEQUENCE  {\n     *       version         [0]  EXPLICIT Version DEFAULT v1,\n     *       serialNumber         CertificateSerialNumber,\n     *       signature            AlgorithmIdentifier,\n     *       issuer               Name,\n     *       validity             Validity,\n     *       subject              Name,\n     *       subjectPublicKeyInfo SubjectPublicKeyInfo,\n     *       issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n     *                            -- If present, version MUST be v2 or v3\n     *       subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n     *                            -- If present, version MUST be v2 or v3\n     *       extensions      [3]  EXPLICIT Extensions OPTIONAL\n     *                            -- If present, version MUST be v3\n     *       }\n *\n *  Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n *\n *  CertificateSerialNumber  ::=  INTEGER\n *\n *  Validity ::= SEQUENCE {\n     *       notBefore      Time,\n     *       notAfter       Time }\n *\n *  Time ::= CHOICE {\n     *       utcTime        UTCTime,\n     *       generalTime    GeneralizedTime }\n *\n *  UniqueIdentifier  ::=  BIT STRING\n *\n *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\n     *       algorithm            AlgorithmIdentifier,\n     *       subjectPublicKey     BIT STRING  }\n *\n *  Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension\n *\n *  Extension  ::=  SEQUENCE  {\n     *       extnID      OBJECT IDENTIFIER,\n     *       critical    BOOLEAN DEFAULT FALSE,\n     *       extnValue   OCTET STRING  }\n * </pre>\n * See {@link GostASN1.Certificate} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\n *\n * @class GostASN1.TBSCertificate\n * @extends GostASN1.Sequence\n * @extends GostASN1.Validity\n * @property {number} version The version of the encoded certificate\n * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\n * @property {GostASN1.Name} issuer The issuer field identifies the entity that has signed and issued the certificate.\n * @property {GostASN1.Validity} validity The certificate validity period\n * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\n * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\n * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\n * @property {CryptoOperationData} subjectUniqueID The subject unique identifier\n * @property {GostASN1.Extensions} extensions The extensions defined for X.509 v3 certificates\n */\nvar TBSCertificate = COMBINE(SEQUENCE({\n    version: CTX(0, EXPLICIT(Version)),\n    serialNumber: CertificateSerialNumber,\n    signature: SignatureAlgorithmIdentifier,\n    issuer: Name,\n    validity: Validity,\n    subject: Name,\n    subjectPublicKeyInfo: SubjectPublicKeyInfo,\n    issuerUniqueID: OPTIONAL(CTX(1, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3\n    subjectUniqueID: OPTIONAL(CTX(2, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3\n    extensions: OPTIONAL(CTX(3, EXPLICIT(CertExtensions)))\n})); // If present, version MUST be v3\n\n/**\n * The X.509 v3 certificate basic syntax is as follows.  For signature\n * calculation, the data that is to be signed is encoded using the ASN.1\n * distinguished encoding rules (DER) [X.690].  ASN.1 DER encoding is a\n * tag, length, value encoding system for each element.\n * <pre>\n *  Certificate  ::=  SEQUENCE  {\n     *       tbsCertificate       TBSCertificate,\n     *       signatureAlgorithm   AlgorithmIdentifier,\n     *       signatureValue       BIT STRING  }\n * </pre>\n * See {@link GostASN1.TBSCertificate}<br><br>\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\n *\n * @class GostASN1.Certificate\n * @extends GostASN1.TBSCertificate\n * @property {GostASN1.TBSCertificate} tbsCertificate The sequence TBSCertificate\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n * @property {CryptoOperationData} signatureValue Signature value\n */\nvar Certificate = SEQUENCE({\n    tbsCertificate: TBSCertificate,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n}, 'CERTIFICATE');\n// </editor-fold>\n\n/*\n     * Certification Request\n     *\n     * http://tools.ietf.org/html/rfc2986\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar ExtensionRequest = CertExtensions;\n\nvar CRIAttributes = Attributes({\n    challengePassword: SET_OF_SINGLE(DirectoryString),\n    extensionRequest: SET_OF_SINGLE(ExtensionRequest),\n    msCertExtensions: SET_OF_SINGLE(CertExtensions),\n    extendedCertificateAttributes: SET_OF_SINGLE(Attributes)\n});\n\n/**\n * Certification request information shall have ASN.1 type CertificationRequestInfo:\n * <pre>\n *  CertificationRequestInfo ::= SEQUENCE {\n     *       version       INTEGER { v1(0) } (v1,...),\n     *       subject       Name,\n     *       subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n     *       attributes    [0] Attributes{{ CRIAttributes }}\n     *  }\n *\n *  SubjectPublicKeyInfo { ALGORITHM : IOSet} ::= SEQUENCE {\n     *       algorithm        AlgorithmIdentifier {{IOSet}},\n     *       subjectPublicKey BIT STRING\n     *  }\n *\n *  PKInfoAlgorithms ALGORITHM ::= {\n     *       ...  -- add any locally defined algorithms here -- }\n *\n *  Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n *  CRIAttributes  ATTRIBUTE  ::= {\n     *       ... -- add any locally defined attributes here -- }\n *\n *  Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n     *       type   ATTRIBUTE.&id({IOSet}),\n     *       values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n     *  }\n * </pre>\n * See {@link GostASN1.CertificationRequest} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\n * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986}\n *\n * @class GostASN1.CertificationRequestInfo\n * @extends GostASN1.Sequence\n * @property {number} version The version of the encoded request\n * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\n * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\n * @property {GostASN1.Attributes} attributes The request attributes\n */\nvar CertificationRequestInfo = COMBINE(SEQUENCE({\n    version: INTEGER,\n    subject: Name,\n    subjectPublicKeyInfo: SubjectPublicKeyInfo,\n    attributes: CTX(0, IMPLICIT(CRIAttributes))\n}));\n\n/**\n * A certification request consists of three parts: \"certification\n * request information,\" a signature algorithm identifier, and a digital\n * signature on the certification request information.  The\n * certification request information consists of the entity's\n * distinguished name, the entity's public key, and a set of attributes\n * providing other information about the entity.\n * <pre>\n *  A certification request shall have ASN.1 type CertificationRequest:\n *\n *  CertificationRequest ::= SEQUENCE {\n     *       certificationRequestInfo CertificationRequestInfo,\n     *       signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n     *       signature          BIT STRING\n     *  }\n *\n *  AlgorithmIdentifier {ALGORITHM:IOSet } ::= SEQUENCE {\n     *       algorithm          ALGORITHM.&id({IOSet}),\n     *       parameters         ALGORITHM.&Type({IOSet}{@algorithm}) OPTIONAL\n     *  }\n *\n *  SignatureAlgorithms ALGORITHM ::= {\n     *       ... -- add any locally defined algorithms here -- }\n * </pre>\n * See {@link GostASN1.CertificationRequestInfo}\n * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986}\n *\n * @class GostASN1.CertificationRequest\n * @extends GostASN1.CertificationRequestInfo\n * @property {GostASN1.CertificationRequestInfo} requestInfo Request information\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n * @property {CryptoOperationData} signatureValue Signature value\n */\nvar CertificationRequest = SEQUENCE({\n    requestInfo: CertificationRequestInfo,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n}, 'CERTIFICATE REQUEST');\n// </editor-fold>\n\n/*\n     * Certificate Revocation List\n     *\n     * http://tools.ietf.org/html/rfc5280\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CRLNumber = INTEGER;\n\nvar CRLReason = ENUMERATED({\n    unspecified: 0,\n    keyCompromise: 1,\n    cACompromise: 2,\n    affiliationChanged: 3,\n    superseded: 4,\n    cessationOfOperation: 5,\n    certificateHold: 6,\n    removeFromCRL: 8,\n    privilegeWithdrawn: 9,\n    aACompromise: 10\n});\n\nvar IssuingDistributionPoint = SEQUENCE({\n    distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName is CHOICE\n    onlyContainsUserCerts: DEFAULT(CTX(1, IMPLICIT(BOOLEAN)), false),\n    onlyContainsCACerts: DEFAULT(CTX(2, IMPLICIT(BOOLEAN)), false),\n    onlySomeReasons: OPTIONAL(CTX(3, IMPLICIT(ReasonFlags))),\n    indirectCRL: DEFAULT(CTX(4, IMPLICIT(BOOLEAN)), false),\n    onlyContainsAttributeCerts: DEFAULT(CTX(5, IMPLICIT(BOOLEAN)), false)\n});\n\nvar CLRExtensions = Extensions({\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\n    issuerAltName: GeneralNames,\n    cRLNumber: CRLNumber,\n    deltaCRLIndicator: CRLNumber,\n    issuingDistributionPoint: IssuingDistributionPoint,\n    freshestCRL: FreshestCRL\n}, function (id) {\n    return id === 'cRLNumber';\n});\n\nvar CLREntryExtensions = Extensions({\n    cRLReason: CRLReason,\n    instructionCode: OBJECT_IDENTIFIER,\n    invalidityDate: GeneralizedTime,\n    certificateIssuer: GeneralNames\n});\n\n/**\n * This field is itself a sequence containing the name of the issuer,\n * issue date, issue date of the next list, the optional list of revoked\n * certificates, and optional CRL extensions.  When there are no revoked\n * certificates, the revoked certificates list is absent.  When one or\n * more certificates are revoked, each entry on the revoked certificate\n * list is defined by a sequence of user certificate serial number,\n * revocation date, and optional CRL entry extensions.\n * <pre>\n *  TBSCertList  ::=  SEQUENCE  {\n     *       version                 Version OPTIONAL,\n     *                                    -- if present, MUST be v2\n     *       signature               AlgorithmIdentifier,\n     *       issuer                  Name,\n     *       thisUpdate              Time,\n     *       nextUpdate              Time OPTIONAL,\n     *       revokedCertificates     SEQUENCE OF SEQUENCE  {\n     *            userCertificate         CertificateSerialNumber,\n     *            revocationDate          Time,\n     *            crlEntryExtensions      Extensions OPTIONAL\n     *                                          -- if present, MUST be v2\n     *                                 }  OPTIONAL,\n     *       crlExtensions           [0]  EXPLICIT Extensions OPTIONAL\n     *                                          -- if present, MUST be v2\n     *                                 }\n * </pre>\n * See {@link GostASN1.CertificateList}<br><br>\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\n *\n * @class GostASN1.TBSCertList\n * @extends GostASN1.Sequence\n * @property {number} version The version of the encoded CRL\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used to sign the CRL\n * @property {Name} issuer The issuer name identifies the entity that has signed and issued the CRL\n * @property {Date} thisUpdate The issue date of this CRL\n * @property {Date} nextUpdate The date by which the next CRL will be issued\n * @property {Array} revokedCertificates The revoked certificates are listed by their serial numbers\n * @property {Extensions} crlExtensions The CRL extensions\n */\nvar TBSCertList = COMBINE(SEQUENCE({\n    version: OPTIONAL(Version), // if present, MUST be v2\n    signature: SignatureAlgorithmIdentifier,\n    issuer: Name,\n    thisUpdate: Time,\n    nextUpdate: OPTIONAL(Time),\n    revokedCertificates: OPTIONAL(SEQUENCE_OF(SEQUENCE({\n        userCertificate: CertificateSerialNumber,\n        revocationDate: Time,\n        crlEntryExtensions: OPTIONAL(CLREntryExtensions) // if present, MUST be v2\n    }))),\n    crlExtensions: OPTIONAL(CTX(0, EXPLICIT(CLRExtensions)))\n})); // if present, MUST be v2\n\n/**\n * The X.509 v2 CRL syntax is as follows.  For signature calculation,\n * the data that is to be signed is ASN.1 DER encoded.  ASN.1 DER\n * encoding is a tag, length, value encoding system for each element.\n * <pre>\n *  CertificateList  ::=  SEQUENCE  {\n     *       tbsCertList          TBSCertList,\n     *       signatureAlgorithm   AlgorithmIdentifier,\n     *       signatureValue       BIT STRING  }\n * </pre>\n * See {@link GostASN1.TBSCertList}<br><br>\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\n *\n * @class GostASN1.CertificateList\n * @extends GostASN1.TBSCertList\n * @property {GostASN1.TBSCertList} tbsCertList The tbsCertList\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n * @property {CryptoOperationData} signatureValue Signature value\n */\nvar CertificateList = SEQUENCE({\n    tbsCertList: TBSCertList,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n}, 'CRL');\n// </editor-fold>\n\n/*\n     * Attribute Certificate Definision\n     * http://tools.ietf.org/html/rfc5755\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar AttCertVersion = INTEGER;\n\nvar ObjectDigestInfo = SEQUENCE({\n    digestedObjectType: ENUMERATED({\n        publicKey: 0,\n        publicKeyCert: 1,\n        otherObjectTypes: 2\n    }), // otherObjectTypes MUST NOT be used in this profile\n    otherObjectTypeID: OPTIONAL(OBJECT_IDENTIFIER),\n    digestAlgorithm: DigestAlgorithmIdentifier,\n    objectDigest: BIT_STRING\n});\n\nvar IssuerSerial = SEQUENCE({\n    issuer: GeneralNames,\n    serial: CertificateSerialNumber,\n    issuerUID: OPTIONAL(UniqueIdentifier)\n});\n\nvar V2Form = SEQUENCE({\n    issuerName: OPTIONAL(GeneralNames),\n    baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\n    // issuerName MUST be present in this profile baseCertificateID and\n    // objectDigestInfo MUST NOT be present in this profile\n    objectDigestInfo: OPTIONAL(CTX(1, IMPLICIT(ObjectDigestInfo)))\n});\n\nvar TargetCert = SEQUENCE({\n    targetCertificate: IssuerSerial,\n    targetName: OPTIONAL(GeneralName),\n    certDigestInfo: OPTIONAL(ObjectDigestInfo)\n});\n\nvar Target = CHOICE({\n    targetName: CTX(0, EXPLICIT(GeneralName)), // GeneralName is CHOICE\n    targetGroup: CTX(1, EXPLICIT(GeneralName)),\n    targetCert: CTX(2, IMPLICIT(TargetCert))\n});\n\nvar Targets = SEQUENCE_OF(Target);\n\nvar AttCertExtensions = Extensions({\n    auditIdentity: OCTET_STRING,\n    targetInformation: Targets,\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\n    authorityInfoAccess: SEQUENCE_OF(AccessDescription),\n    cRLDistributionPoints: CRLDistributionPoints,\n    noRevAvail: NULL\n}, function (id) {\n    return id === 'auditIdentity' || id === 'targetInformation';\n});\n\nvar Holder = SEQUENCE({\n    // the issuer and serial number of the holder's Public Key Certificate\n    baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\n    // the name of the claimant or role\n    entityName: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\n    // used to directly authenticate the holder, for example, an executable\n    objectDigestInfo: OPTIONAL(CTX(2, IMPLICIT(ObjectDigestInfo)))\n});\n\nvar AttCertIssuer = CHOICE({\n    v1Form: GeneralNames, // MUST NOT be used in this profile\n    v2Form: CTX(0, IMPLICIT(V2Form))\n}, 'v2Form');     // v2 only\n\nvar AttCertValidityPeriod = SEQUENCE({\n    notBeforeTime: GeneralizedTime,\n    notAfterTime: GeneralizedTime\n});\n\nvar SvceAuthInfo = SEQUENCE({\n    service: GeneralName,\n    ident: GeneralName,\n    authInfo: OPTIONAL(OCTET_STRING)\n});\n\nvar RoleSyntax = SEQUENCE({\n    roleAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\n    roleName: CTX(1, EXPLICIT(GeneralName))\n}); // GeneralName is CHOICE\n\nvar ClassList = BIT_STRING({\n    unmarked: 0,\n    unclassified: 1,\n    restricted: 2,\n    confidential: 3,\n    secret: 4,\n    topSecret: 5\n});\n\nvar SecurityCategory = SEQUENCE({\n    type: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\n    value: CTX(1, IMPLICIT(ANY))\n});\n\nvar Clearance = SEQUENCE({\n    policyId: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\n    classList: DEFAULT(CTX(1, IMPLICIT(ClassList)), ['unclassified']),\n    securityCategories: OPTIONAL(CTX(2, IMPLICIT(SET_OF(SecurityCategory))))\n});\n\nvar IetfAttrSyntax = SEQUENCE({\n    policyAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\n    values: SEQUENCE_OF(CHOICE({\n        octets: OCTET_STRING,\n        oid: OBJECT_IDENTIFIER,\n        string: UTF8String\n    }, function (value) {\n        return isBinary ? 'octets' : getIdentifier(value) ? 'oid' : 'string';\n    }))\n});\n\n/**\n * X.509 Attribute Certificate Definition<br><br>\n *\n * X.509 contains the definition of an AC given below.  All types that\n * are not defined in this document can be found in [PKIXPROF].\n * <pre>\n *           AttributeCertificateInfo ::= SEQUENCE {\n     *                version              AttCertVersion -- version is v2,\n     *                holder               Holder,\n     *                issuer               AttCertIssuer,\n     *                signature            AlgorithmIdentifier,\n     *                serialNumber         CertificateSerialNumber,\n     *                attrCertValidityPeriod   AttCertValidityPeriod,\n     *                attributes           SEQUENCE OF Attribute,\n     *                issuerUniqueID       UniqueIdentifier OPTIONAL,\n     *                extensions           Extensions OPTIONAL\n     *           }\n * <pre>\n * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281}\n *\n * @class GostASN1.AttributeCertificateInfo\n * @extends GostASN1.Sequence\n * @property {number} version The version of the encoded certificate\n * @property {GostASN1.Name} holder Identifies the holder.\n * @property {GostASN1.Name} issuer Identifies the issuer.\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\n * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\n * @property {GostASN1.Validity} attrCertValidityPeriod The certificate validity period\n * @property {GostASN1.Attributes} attributes The certificate attributes\n * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\n * @property {GostASN1.Extensions} extensions The certificate extensions\n */\nvar AttributeCertificateInfo = COMBINE(SEQUENCE({\n    version: AttCertVersion, // version is v2,\n    holder: Holder,\n    issuer: AttCertIssuer,\n    signature: SignatureAlgorithmIdentifier,\n    serialNumber: CertificateSerialNumber,\n    attrCertValidityPeriod: AttCertValidityPeriod,\n    attributes: AttributeSequence({\n        authenticationInfo: SET_OF(SvceAuthInfo),\n        accessIdentity: SET_OF(SvceAuthInfo),\n        chargingIdentity: SET_OF_SINGLE(IetfAttrSyntax),\n        group: SET_OF_SINGLE(IetfAttrSyntax),\n        role: SET_OF(RoleSyntax),\n        clearance: SET_OF(Clearance)\n    }),\n    issuerUniqueID: OPTIONAL(UniqueIdentifier),\n    extensions: OPTIONAL(AttCertExtensions)\n}));\n\n/**\n * Attribute Certificate Profile<br></br>\n *\n * ACs may be used in a wide range of applications and environments\n * covering a broad spectrum of interoperability goals and a broader\n * spectrum of operational and assurance requirements.  The goal of this\n * document is to establish a common baseline for generic applications\n * requiring broad interoperability and limited special purpose\n * requirements.  In particular, the emphasis will be on supporting the\n * use of attribute certificates for informal Internet electronic mail,\n * IPSec, and WWW applications.\n * <pre>\n *           AttributeCertificate ::= SEQUENCE {\n     *                acinfo               AttributeCertificateInfo,\n     *                signatureAlgorithm   AlgorithmIdentifier,\n     *                signatureValue       BIT STRING\n     *           }\n * </pre>\n * See {@link GostASN1.AttributeCertificateInfo}<br><br>\n * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281}\n *\n * @class GostASN1.AttributeCertificate\n * @extends GostASN1.AttributeCertificateInfo\n * @property {GostASN1.AttributeCertificateInfo} acinfo Attribute certificate information\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\n * @property {CryptoOperationData} signatureValue Signature value\n */\nvar AttributeCertificate = SEQUENCE({\n    acinfo: AttributeCertificateInfo,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n}, 'ATTRIBUTE CERTIFICATE');\n// </editor-fold>\n\n/*\n     * Encrypted Key with CMS\n     *\n     * http://tools.ietf.org/html/rfc5652\n     * http://tools.ietf.org/html/rfc4490\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\n// RecipientInfo\nvar EncryptedKey = OCTET_STRING;\n\nvar EncryptedContent = OCTET_STRING;\n\nvar SubjectKeyIdentifier = OCTET_STRING;\n\nvar UserKeyingMaterial = OCTET_STRING;\n\nvar ECCCMSSharedInfo = SEQUENCE({\n    keyInfo: KeyWrapAlgorithmIdentifier,\n    entityUInfo: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING))),\n    suppPubInfo: CTX(2, EXPLICIT(OCTET_STRING))\n});\n\n// GOST Key Transport & Key agreement rfc4490\nvar Gost2814789EncryptedKey = ENCLOSURE(SEQUENCE({\n    encryptedKey: Gost2814789Key,\n    maskKey: OPTIONAL(CTX(0, IMPLICIT(Gost2814789Key))),\n    macKey: Gost2814789MAC\n}), {\n    encode: function (value) {\n        // wrappedKey: (CEK_ENC(32) | CEK_MAC(4))\n        var encryptedKey = new Uint8Array(new Uint8Array(value, 0, 32)).buffer,\n          macKey = new Uint8Array(new Uint8Array(value, 32, 4)).buffer;\n        return {// from wrapped key\n            encryptedKey: encryptedKey,\n            macKey: macKey\n        };\n    },\n    decode: function (value) {\n        var encryptedKey = value.encryptedKey,\n          maskKey = value.maskKey,\n          macKey = value.macKey;\n        if (maskKey) {\n            var m = new Int32Array(maskKey), k = new Int32Array(encryptedKey);\n            for (var i = 0, n = m.length / k.length; i < n; i++) {\n                for (var j = 0, l = k.length; j < l; j++)\n                    k[j] = (k[j] + m[l * i + j]) & 0xffffffff;\n            }\n        }\n        var result = new Uint8Array(encryptedKey.byteLength + macKey.byteLength);\n        result.set(new Uint8Array(encryptedKey), 0);\n        result.set(new Uint8Array(macKey), 32);\n        return result.buffer;\n    }\n});\n\n\nvar GostR3410TransportParameters = SEQUENCE({\n    encryptionParamSet: Gost2814789ParamSet,\n    ephemeralPublicKey: OPTIONAL(CTX(0, IMPLICIT(GostSubjectPublicKeyInfo))),\n    ukm: OCTET_STRING\n}); // ( SIZE(8) )\n\nvar GostR3410KeyTransport = ENCLOSURE(SEQUENCE({\n    sessionEncryptedKey: Gost2814789EncryptedKey,\n    transportParameters: OPTIONAL(CTX(0, IMPLICIT(GostR3410TransportParameters)))\n}), {\n    encode: function (value) {\n        var algorithm = value.algorithm;\n        return {\n            sessionEncryptedKey: value.sessionEncryptedKey,\n            transportParameters: {\n                encryptionParamSet: attributes['sBox'][algorithm.wrapping.sBox || 'E-A'],\n                ephemeralPublicKey: algorithm['public'],\n                ukm: algorithm.ukm\n            }\n        };\n    },\n    decode: function (value) {\n        return {\n            algorithm: {\n                wrapping: parameters[value.transportParameters.encryptionParamSet],\n                ukm: value.transportParameters.ukm,\n                'public': value.transportParameters.ephemeralPublicKey\n            },\n            sessionEncryptedKey: value.sessionEncryptedKey\n        };\n    }\n});\n\nvar SCGostKeyTransport = ENCLOSURE(SEQUENCE({\n    sessionEncryptedKey: Gost2814789EncryptedKey,\n    ukm: SEQUENCE({\n        ephemeralPublicKey: GostSubjectPublicKeyInfo,\n        addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))\n    })\n}), {\n    encode: function (value) {\n        var algorithm = value.algorithm;\n        return {\n            sessionEncryptedKey: value.sessionEncryptedKey,\n            ukm: {\n                ephemeralPublicKey: algorithm['public'],\n                addedukm: algorithm.ukm\n            }\n        };\n    },\n    decode: function (value) {\n        return {\n            algorithm: {\n                ukm: value.ukm.addedukm,\n                'public': value.ukm.ephemeralPublicKey\n            },\n            sessionEncryptedKey: value.sessionEncryptedKey\n        };\n    }\n});\n\nvar GostEncryptedKey = (function (typeSet) {\n    /**\n     * Gost Encrypted key encoder for CMS\n     *\n     * @class GostASN1.GostEncryptedKey\n     * @extends GostASN1.Sequence\n     * @param {AlgorithmIdentifier} algorithm\n     */\n    return function (algorithm) {\n        var type = typeSet[algorithm.id];\n        return type ? ENCAPSULATES(type) : ANY;\n    };\n})({\n    // Key transport algorithms\n    'id-sc-gostR3410-2001': SCGostKeyTransport,\n    'id-sc-gostR3410-94': SCGostKeyTransport,\n    'id-GostR3410-2001': GostR3410KeyTransport,\n    'id-GostR3410-94': GostR3410KeyTransport,\n    'id-tc26-gost3410-12-256': GostR3410KeyTransport,\n    'id-tc26-gost3410-12-512': GostR3410KeyTransport,\n    // Key agreement algorithms\n    'id-GostR3410-94-CryptoPro-ESDH': Gost2814789EncryptedKey,\n    'id-GostR3410-2001-CryptoPro-ESDH': Gost2814789EncryptedKey,\n    'id-tc26-agreement-gost-3410-12-256': Gost2814789EncryptedKey,\n    'id-tc26-agreement-gost-3410-12-512': Gost2814789EncryptedKey,\n    'id-sc-r3410-ESDH-r3411kdf': Gost2814789EncryptedKey,\n    // Key encryption key algorithms\n    'id-Gost28147-89-None-KeyWrap': Gost2814789EncryptedKey,\n    'id-Gost28147-89-CryptoPro-KeyWrap': Gost2814789EncryptedKey,\n    'id-sc-cmsGostWrap': Gost2814789EncryptedKey,\n    'id-sc-cmsGost28147Wrap': Gost2814789EncryptedKey\n});\n\n// </editor-fold>\n\n/*\n     * CryptoPro Gost Private Key Store\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar GostKeyContainerContentAttributes = BIT_STRING({\n    kccaSoftPassword: 0,\n    kccaReservePrimary: 1,\n    kccaPrimaryKeyAbsent: 2,\n    kccaFKCShared: 3\n});\n\nvar GostPrivateKeyAttributes = BIT_STRING({\n    pkaExportable: 0,\n    pkaUserProtect: 1,\n    pkaExchange: 2,\n    pkaEphemeral: 3,\n    pkaNonCachable: 4,\n    pkaDhAllowed: 5\n});\n\nvar GostPrivateKeyParameters = SEQUENCE({\n    attributes: OPTIONAL(GostPrivateKeyAttributes),\n    privateKeyAlgorithm: OPTIONAL(CTX(0, IMPLICIT(KeyAlgorithmIdentifier)))\n});\n\nvar CertificateLink = SEQUENCE({\n    path: IA5String,\n    hmac: Gost2814789MAC\n});\n\nvar PasswordPolicy = AlgorithmIdentifier;\n\nvar GostKeyContainerContent = SEQUENCE({\n    containerAlgoritmIdentifier: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\n    containerName: OPTIONAL(IA5String),\n    attributes: GostKeyContainerContentAttributes,\n    primaryPrivateKeyParameters: GostPrivateKeyParameters,\n    hmacPassword: OPTIONAL(CTX(2, IMPLICIT(Gost2814789MAC))),\n    secondaryEncryptedPrivateKey: OPTIONAL(CTX(3, IMPLICIT(Gost2814789EncryptedKey))),\n    secondaryPrivateKeyParameters: OPTIONAL(CTX(4, IMPLICIT(GostPrivateKeyParameters))),\n    primaryCertificate: OPTIONAL(CTX(5, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\n    secondaryCertificate: OPTIONAL(CTX(6, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\n    encryptionContainerName: OPTIONAL(CTX(7, IMPLICIT(IA5String))),\n    primaryCertificateLink: OPTIONAL(CTX(8, IMPLICIT(CertificateLink))),\n    secondaryCertificateLink: OPTIONAL(CTX(9, IMPLICIT(CertificateLink))),\n    primaryFP: OPTIONAL(CTX(10, IMPLICIT(OCTET_STRING))),\n    secondaryFP: OPTIONAL(CTX(11, IMPLICIT(OCTET_STRING))),\n    passwordPolicy: OPTIONAL(PasswordPolicy),\n    containerSecurityLevel: OPTIONAL(INTEGER),\n    extensions: OPTIONAL(CTX(12, IMPLICIT(Extensions({\n        keyValidity: SEQUENCE({\n            notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n            notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\n        })\n    })))),\n    secondaryEncryptionContainerName: OPTIONAL(CTX(13, IMPLICIT(IA5String)))\n});\n\n/**\n * CryptoPro key container header\n *\n * @class GostASN1.GostKeyContainer\n * @extends GostASN1.Sequence\n */\nvar GostKeyContainer = SEQUENCE({\n    keyContainerContent: GostKeyContainerContent,\n    hmacKeyContainerContent: Gost2814789MAC\n});\n\n/**\n * CryptoPro key container name\n *\n * @class GostASN1.GostKeyContainerName\n * @extends GostASN1.Sequence\n */\nvar GostKeyContainerName = SEQUENCE({\n    containerName: IA5String,\n    extElem1: OPTIONAL(ANY)\n});\n\n/**\n * PrivateKey encrypted content for CryptoPro key containers\n *\n * @class GostASN1.GostPrivateKeys\n * @extends GostASN1.Sequence\n */\nvar GostPrivateKeys = SEQUENCE({\n    primaryKey: Gost2814789Key,\n    secondaryKey: OPTIONAL(Gost2814789Key),\n    hmacKey: OPTIONAL(Gost2814789MAC)\n});\n\n/**\n * PrivateKey masks for CryptoPro key containers\n *\n * @class GostASN1.GostPrivateMasks\n * @extends GostASN1.Sequence\n */\nvar GostPrivateMasks = SEQUENCE({\n    mask: Gost2814789Key,\n    randomStatus: OCTET_STRING,\n    hmacRandom: Gost2814789MAC\n});\n\n// </editor-fold>\n\n/*\n     * ViPNet Gost Private Key Store\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar ViPNetKeyInfo = SEQUENCE({\n    keyClass: INTEGER,\n    keyType: INTEGER,\n    algorithm: OPTIONAL(CTX(0, EXPLICIT(KeyAlgorithmIdentifier))),\n    serialNumber: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING))),\n    addSerialNumber: OPTIONAL(CTX(2, EXPLICIT(OCTET_STRING))),\n    certSerialNumber: OPTIONAL(CTX(3, EXPLICIT(OCTET_STRING))),\n    subjectUID: OPTIONAL(CTX(4, EXPLICIT(OCTET_STRING))),\n    recipientUID: OPTIONAL(CTX(5, EXPLICIT(OCTET_STRING))),\n    validity: OPTIONAL(CTX(6, EXPLICIT(CHOICE({\n        validity: Validity,\n        keyValidity: SEQUENCE({\n            notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\n            notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\n        })\n    }, function () {\n        return 'keyValidity';\n    })))),\n    keyUID: OPTIONAL(CTX(7, EXPLICIT(BIT_STRING))),\n    flags: OPTIONAL(CTX(10, EXPLICIT(INTEGER)))\n});\n\n/**\n * ViPNet key container info\n *\n * @class GostASN1.ViPNetInfo\n * @extends GostASN1.Sequence\n */\nvar ViPNetInfo = SEQUENCE({\n    version: INTEGER,\n    keyInfo: ViPNetKeyInfo,\n    defenceKeyInfo: ViPNetKeyInfo,\n    certificate: OPTIONAL(CTX(0, EXPLICIT(Certificate))),\n    publicKey: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING)))\n});\n\n// </editor-fold>\n\n/*\n     * Cryptographic Message Syntax\n     *\n     * http://tools.ietf.org/html/rfc5652\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\n// CMS signed data\nvar CMSVersion = INTEGER;\n\nvar ContentType = OBJECT_IDENTIFIER;\n\nvar SigningTime = Time;\n\nvar SubjectKeyIdentifier = OCTET_STRING;\n\nvar Digest = OCTET_STRING;\n\nvar MessageAuthenticationCode = OCTET_STRING;\n\nvar BodyPartID = INTEGER;\n\nvar BodyPartPath = SEQUENCE_OF(BodyPartID);\n\nvar CMCUnsignedData = SEQUENCE({\n    bodyPartPath: BodyPartPath,\n    identifier: OBJECT_IDENTIFIER,\n    content: ANY\n}); // DEFINED BY identifier\n/**\n * SignedAttributes is a collection of attributes that are signed.  The\n * field is optional, but it MUST be present if the content type of\n * the EncapsulatedContentInfo value being signed is not id-data.\n * SignedAttributes MUST be DER encoded, even if the rest of the\n * structure is BER encoded.  Useful attribute types, such as signing\n * time, are defined in Section 11.  If the field is present, it MUST\n * contain, at a minimum, the following two attributes: <br>\n *\n * A content-type attribute having as its value the content type\n * of the EncapsulatedContentInfo value being signed.  Section\n * 11.1 defines the content-type attribute.  However, the\n * content-type attribute MUST NOT be used as part of a\n * countersignature unsigned attribute as defined in Section 11.4.<br>\n *\n * A message-digest attribute, having as its value the message\n * digest of the content.  Section 11.2 defines the message-digest\n * attribute.\n *\n * @class GostASN1.SignedAttributes\n * @extends GostASN1.Attributes\n */\nvar SignedAttributes = Attributes({\n    contentType: SET_OF_SINGLE(ContentType),\n    signingTime: SET_OF_SINGLE(SigningTime),\n    messageDigest: SET_OF_SINGLE(OCTET_STRING)\n});\n\nvar UnsignedAttributes = Attributes(function (type) {\n    /**\n     * UnsignedAttributes is a collection of attributes that are not signed.\n     * The field is optional.  Useful attribute types, such as\n     * countersignatures.\n     *\n     * @class GostASN1.UnsignedAttributes\n     * @extends GostASN1.Attributes\n     */\n    //    var UnsignedAttributes = Attributes({\n    //        countersignature: SET_OF(Countersignature), // -- check forward\n    //        unsignedData: SET_OF(CMCUnsignedData)\n    //    });\n    return ({\n        countersignature: SET_OF(Countersignature), // recursion\n        unsignedData: SET_OF(CMCUnsignedData)\n    })[type];\n});\n\nvar AuthAttributes = SignedAttributes,\n  UnauthAttributes = Attributes,\n  UnprotectedAttributes = Attributes;\n\nvar IssuerAndSerialNumber = SEQUENCE({\n    issuer: Name,\n    serialNumber: CertificateSerialNumber\n});\n\nvar SignerIdentifier = CHOICE({\n    issuerAndSerialNumber: IssuerAndSerialNumber,\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))\n}, function (value) {\n    return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\n});\n\nvar SignerInfo = SEQUENCE({\n    version: CMSVersion,\n    sid: SignerIdentifier,\n    digestAlgorithm: DigestAlgorithmIdentifier,\n    signedAttrs: OPTIONAL(CTX(0, IMPLICIT(SignedAttributes))),\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: OCTET_STRING,\n    unsignedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnsignedAttributes)))\n});\n\nvar Countersignature = SignerInfo,\n  SignerInfos = SET_OF(SignerInfo),\n  DigestAlgorithmIdentifiers = SET_OF(DigestAlgorithmIdentifier),\n  AttributeCertificateV2 = AttributeCertificate;\n\nvar ExtendedCertificateInfo = COMBINE(SEQUENCE({\n    version: CMSVersion,\n    certificate: Certificate,\n    attributes: UnauthAttributes\n}));\n\nvar ExtendedCertificate = SEQUENCE({\n    extendedCertificateInfo: ExtendedCertificateInfo,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n});\n\nvar OtherCertificateFormat = SEQUENCE({\n    otherCertFormat: OBJECT_IDENTIFIER,\n    otherCert: ANY\n});\n\nvar AttributeCertificateInfoV1 = COMBINE(SEQUENCE({\n    version: INTEGER,\n    subject: CHOICE({\n        baseCertificateID: CTX(0, IMPLICIT(IssuerSerial)), // associated with a Public Key Certificate\n        subjectName: CTX(1, IMPLICIT(GeneralNames))\n    }, function (value) {\n        return value.issuer ? 'baseCertificateID' : 'subjectName';\n    }), //associated with a name\n    issuer: GeneralNames,\n    signature: SignatureAlgorithmIdentifier,\n    serialNumber: CertificateSerialNumber,\n    attCertValidityPeriod: AttCertValidityPeriod,\n    attributes: AttributeSequence,\n    issuerUniqueID: OPTIONAL(UniqueIdentifier),\n    extensions: OPTIONAL(CertExtensions)\n}));\n\nvar AttributeCertificateV1 = SEQUENCE({\n    acInfo: AttributeCertificateInfoV1,\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\n    signatureValue: BIT_STRING\n});\n\nvar EncapsulatedContentInfo = SEQUENCE({\n    eContentType: ContentType,\n    eContent: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING)))\n});\n\nvar CertificateChoices = CHOICE({\n    certificate: Certificate,\n    extendedCertificate: CTX(0, IMPLICIT(ExtendedCertificate)), // Obsolete\n    v1AttrCert: CTX(1, IMPLICIT(AttributeCertificateV1)), // Obsolete\n    v2AttrCert: CTX(2, IMPLICIT(AttributeCertificateV2)),\n    other: CTX(3, IMPLICIT(OtherCertificateFormat))\n}, function (value) {\n    return value.holder ? 'AttributeCertificateV2' : value.certificate ?\n      'ExtendedCertificate' : value.otherCertFormat ? 'other' :\n        'certificate';\n});\n\nvar OtherRevocationInfoFormat = SEQUENCE({\n    otherRevInfoFormat: OBJECT_IDENTIFIER,\n    otherRevInfo: ANY\n});\n\nvar RevocationInfoChoice = CHOICE({\n    crl: CertificateList,\n    other: CTX(1, IMPLICIT(OtherRevocationInfoFormat))\n}, function (value) {\n    return value.otherRevInfoFormat ? 'other' : 'crl';\n});\n\nvar CertificateSet = SET_OF(CertificateChoices),\n  RevocationInfoChoices = SET_OF(RevocationInfoChoice);\n\n/**\n * The signed-data content type consists of a content of any type and zero or more\n * signature values.  Any number of signers in parallel can sign any type of content.<br><br>\n *\n * The signed-data content type shall have ASN.1 type SignedData:<br><br>\n *<pre>\n *\n *      SignedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        digestAlgorithms DigestAlgorithmIdentifiers,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        certificates [0] IMPLICIT CertificateSet OPTIONAL,\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n     *        signerInfos SignerInfos }\n *\n *      DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier\n *\n *      SignerInfos ::= SET OF SignerInfo\n *\n *       EncapsulatedContentInfo ::= SEQUENCE {\n     *        eContentType ContentType,\n     *        eContent [0] EXPLICIT OCTET STRING OPTIONAL }\n *\n *</pre>\n * Per-signer information is represented in the type SignerInfo:<br><br>\n *<pre>\n *\n *      SignerInfo ::= SEQUENCE {\n     *        version CMSVersion,\n     *        sid SignerIdentifier,\n     *        digestAlgorithm DigestAlgorithmIdentifier,\n     *        signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n     *        signatureAlgorithm SignatureAlgorithmIdentifier,\n     *        signature SignatureValue,\n     *        unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }\n *\n *      SignerIdentifier ::= CHOICE {\n     *        issuerAndSerialNumber IssuerAndSerialNumber,\n     *        subjectKeyIdentifier [0] SubjectKeyIdentifier }\n *\n *      SignedAttributes ::= SET SIZE (1..MAX) OF Attribute\n *\n *      UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute\n *\n *     SignatureValue ::= OCTET STRING\n *\n *</pre>\n * See also {@link GostASN1.SignedAttributes} and {@link GostASN1.UnsignedAttributes}\n * @class GostASN1.SignedData\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number\n * @property {AlgorithmIdentifier[]} digestAlgorithms Collection of message digest algorithm identifiers\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n * @property {GostASN1.Certificate[]} certificates Certificates\n * @property {GostASN1.CertificateList[]} crls Certificates\n * @property {GostASN1.Sequence[]} signerInfos The Signer information\n */\nvar SignedData = SEQUENCE({\n    version: CMSVersion,\n    digestAlgorithms: DigestAlgorithmIdentifiers,\n    encapContentInfo: EncapsulatedContentInfo,\n    certificates: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\n    crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices))),\n    signerInfos: SignerInfos\n});\n\nvar RecipientIdentifier = CHOICE({\n    issuerAndSerialNumber: IssuerAndSerialNumber,\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))\n}, function (value) {\n    return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\n});\n\nvar KeyTransRecipientInfo = SEQUENCE({\n    version: CMSVersion, // always set to 0 or 2\n    rid: RecipientIdentifier,\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n    encryptedKey: EncryptedKey\n});\n\nvar OtherKeyAttribute = SEQUENCE({\n    keyAttrId: OBJECT_IDENTIFIER,\n    keyAttr: OPTIONAL(ANY)\n});\n\nvar RecipientKeyIdentifier = SEQUENCE({\n    subjectKeyIdentifier: SubjectKeyIdentifier,\n    date: OPTIONAL(GeneralizedTime),\n    other: OPTIONAL(OtherKeyAttribute)\n});\n\nvar KeyAgreeRecipientIdentifier = CHOICE({\n    issuerAndSerialNumber: IssuerAndSerialNumber,\n    rKeyId: CTX(0, IMPLICIT(RecipientKeyIdentifier))\n}, function (value) {\n    return isBinary(value) ? 'rKeyId' : 'issuerAndSerialNumber';\n});\n\nvar RecipientEncryptedKey = SEQUENCE({\n    rid: KeyAgreeRecipientIdentifier,\n    encryptedKey: EncryptedKey\n});\n\nvar RecipientEncryptedKeys = SEQUENCE_OF(RecipientEncryptedKey);\n\nvar OriginatorPublicKey = SEQUENCE({\n    algorithm: KeyAlgorithmIdentifier,\n    publicKey: BIT_STRING\n});\n\nvar MQVuserKeyingMaterial = SEQUENCE({// ECC rfc5753 KeyAgreeRecipientInfo in ukm\n    ephemeralPublicKey: OriginatorPublicKey,\n    addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))\n});\n\nvar OriginatorIdentifierOrKey = CHOICE({\n    issuerAndSerialNumber: IssuerAndSerialNumber,\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier)),\n    originatorKey: CTX(1, IMPLICIT(OriginatorPublicKey))\n}, function (value) {\n    return isBinary(value) ? 'subjectKeyIdentifier' : value.algorithm ?\n      'originatorKey' : 'issuerAndSerialNumber';\n});\n\nvar KeyAgreeRecipientInfo = SEQUENCE({\n    version: CMSVersion, // always set to 3\n    originator: CTX(0, EXPLICIT(OriginatorIdentifierOrKey)),\n    ukm: OPTIONAL(CTX(1, EXPLICIT(UserKeyingMaterial))),\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n    recipientEncryptedKeys: RecipientEncryptedKeys\n});\n\nvar KEKIdentifier = SEQUENCE({\n    keyIdentifier: OCTET_STRING,\n    date: OPTIONAL(GeneralizedTime),\n    other: OPTIONAL(OtherKeyAttribute)\n});\n\nvar KEKRecipientInfo = SEQUENCE({\n    version: CMSVersion, // always set to 4\n    kekid: KEKIdentifier,\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n    encryptedKey: EncryptedKey\n});\n\nvar PasswordRecipientInfo = SEQUENCE({\n    version: CMSVersion, // always set to 0\n    friendlyName: OPTIONAL(CTX(0, IMPLICIT(KeyDerivationAlgorithmIdentifier))),\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\n    encryptedKey: EncryptedKey\n});\n\nvar OtherRecipientInfo = SEQUENCE({\n    oriType: OBJECT_IDENTIFIER,\n    oriValue: ANY\n});\n\nvar RecipientInfo = CHOICE({\n    ktri: KeyTransRecipientInfo,\n    kari: CTX(1, IMPLICIT(KeyAgreeRecipientInfo)),\n    kekri: CTX(2, IMPLICIT(KEKRecipientInfo)),\n    pwri: CTX(3, IMPLICIT(PasswordRecipientInfo)),\n    ori: CTX(4, IMPLICIT(OtherRecipientInfo))\n}, function (value) {\n    return value.rid ? 'ktri' : value.originator ? 'kari' :\n      value.kekid ? 'kekri' : value.oriType ? 'ori' : 'pwri';\n});\n\nvar OriginatorInfo = SEQUENCE({\n    certs: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\n    crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices)))\n});\n\nvar RecipientInfos = SET_OF(RecipientInfo);\n\n// EncryptedContentInfo\nvar EncryptedContentInfo = SEQUENCE({\n    contentType: ContentType,\n    contentEncryptionAlgorithm: ContentEncryptionAlgorithmIdentifier,\n    encryptedContent: OPTIONAL(CTX(0, IMPLICIT(EncryptedContent)))\n});\n\n/**\n * The enveloped-data content type consists of an encrypted content of\n * any type and encrypted content-encryption keys for one or more\n * recipients.  The combination of the encrypted content and one\n * encrypted content-encryption key for a recipient is a \"digital\n * envelope\" for that recipient.  Any type of content can be enveloped\n * for an arbitrary number of recipients using any of the supported key\n * management techniques for each recipient.<br><br>\n *\n * The typical application of the enveloped-data content type will\n * represent one or more recipients' digital envelopes on content of the\n * data or signed-data content types.<br><br>\n * <pre>\n *\n *      EnvelopedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n     *        recipientInfos RecipientInfos,\n     *        encryptedContentInfo EncryptedContentInfo,\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\n *\n *      OriginatorInfo ::= SEQUENCE {\n     *        certs [0] IMPLICIT CertificateSet OPTIONAL,\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\n *\n *      RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo\n *\n *      EncryptedContentInfo ::= SEQUENCE {\n     *        contentType ContentType,\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\n *\n *      EncryptedContent ::= OCTET STRING\n *\n *      UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute\n *\n * </pre>\n * @class GostASN1.EnvelopedData\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number\n * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\n * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information.\n * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\n * @property {Attributes} unprotectedAttrs The unprotected attributes\n */\nvar EnvelopedData = SEQUENCE({\n    version: CMSVersion,\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n    recipientInfos: RecipientInfos,\n    encryptedContentInfo: EncryptedContentInfo,\n    unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))\n});\n\n/**\n * The digested-data content type consists of content of any type and a\n * message digest of the content.<br><br>\n * Typically, the digested-data content type is used to provide content\n * integrity, and the result generally becomes an input to the\n * enveloped-data content type.<br><br>\n * <pre>\n *\n *      DigestedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        digestAlgorithm DigestAlgorithmIdentifier,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        digest Digest }\n *\n *      Digest ::= OCTET STRING\n *\n *</pre>\n * @class GostASN1.DigestedData\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number\n * @property {AlgorithmIdentifier} digestAlgorithm Message digest algorithm identifier\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n * @property {CryptoOperationData} digest The degist\n */\nvar DigestedData = SEQUENCE({\n    version: CMSVersion,\n    digestAlgorithm: DigestAlgorithmIdentifier,\n    encapContentInfo: EncapsulatedContentInfo,\n    digest: Digest\n});\n\n/**\n * The encrypted-data content type consists of encrypted content of any\n * type.  Unlike the enveloped-data content type, the encrypted-data\n * content type has neither recipients nor encrypted content-encryption\n * keys.  Keys MUST be managed by other means.<br><br>\n *\n * The typical application of the encrypted-data content type will be to\n * encrypt the content of the data content type for local storage,\n * perhaps where the encryption key is derived from a password.<br><br>\n * <pre>\n *\n *      EncryptedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        encryptedContentInfo EncryptedContentInfo,\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\n *\n *      EncryptedContentInfo ::= SEQUENCE {\n     *        contentType ContentType,\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\n *\n *      EncryptedContent ::= OCTET STRING\n *\n * </pre>\n * @class GostASN1.EncryptedData\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number\n * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\n * @property {Attributes} unprotectedAttrs The unprotected attributes\n */\nvar EncryptedData = SEQUENCE({\n    version: CMSVersion,\n    encryptedContentInfo: EncryptedContentInfo,\n    unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))\n});\n\n/**\n * The authenticated-data content type consists of content of any type,\n * a message authentication code (MAC), and encrypted authentication\n * keys for one or more recipients.  The combination of the MAC and one\n * encrypted authentication key for a recipient is necessary for that\n * recipient to verify the integrity of the content.  Any type of\n * content can be integrity protected for an arbitrary number of\n * recipients.<br><br>\n * <pre>\n *\n *      AuthenticatedData ::= SEQUENCE {\n     *        version CMSVersion,\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n     *        recipientInfos RecipientInfos,\n     *        macAlgorithm MessageAuthenticationCodeAlgorithm,\n     *        digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\n     *        encapContentInfo EncapsulatedContentInfo,\n     *        authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\n     *        mac MessageAuthenticationCode,\n     *        unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }\n *\n *      AuthAttributes ::= SET SIZE (1..MAX) OF Attribute\n *\n *      UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute\n *\n *      MessageAuthenticationCode ::= OCTET STRING\n *\n * </pre>\n * @class GostASN1.AuthenticatedData\n * @extends GostASN1.Sequence\n * @property {number} version The syntax version number\n * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\n * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information.\n * @property {AlgorithmIdentifier} macAlgorithm Identifies the Message Authentication Code algorithm\n * @property {AlgorithmIdentifier} digestAlgorithm Identifies the Digest algorithm\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\n * @property {Attributes} authAttrs The autheniticated attributes\n * @property {CryptoOpertionData} mac The Message Authentication Code\n * @property {Attributes} unauthAttrs The unautheniticated attributes\n */\nvar AuthenticatedData = SEQUENCE({\n    version: CMSVersion,\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n    recipientInfos: RecipientInfos,\n    macAlgorithm: MessageAuthenticationCodeAlgorithm,\n    digestAlgorithm: OPTIONAL(CTX(1, DigestAlgorithmIdentifier)),\n    encapContentInfo: EncapsulatedContentInfo,\n    authAttrs: OPTIONAL(CTX(2, IMPLICIT(AuthAttributes))),\n    mac: MessageAuthenticationCode,\n    unauthAttrs: OPTIONAL(CTX(3, IMPLICIT(UnauthAttributes)))\n});\n\n// AuthEnvelopedData RFC 5911\nvar AuthEnvelopedData = SEQUENCE({\n    version: CMSVersion,\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\n    recipientInfos: RecipientInfos,\n    authEncryptedContentInfo: EncryptedContentInfo,\n    authAttrs: OPTIONAL(CTX(1, IMPLICIT(AuthAttributes))),\n    mac: MessageAuthenticationCode,\n    unauthAttrs: OPTIONAL(CTX(2, IMPLICIT(UnauthAttributes)))\n});\n\n// EncryptedKeyPackage rfc6032\nvar EncryptedKeyPackage = CHOICE({\n    encrypted: EncryptedData,\n    enveloped: CTX(0, IMPLICIT(EnvelopedData)),\n    authEnveloped: CTX(1, IMPLICIT(AuthEnvelopedData))\n}, function (value) {\n    return value.encryptedContentInfo ? (value.recipientInfos ?\n      'enveloped' : 'encrypted') : 'authEnveloped';\n});\n\n/**\n * Cryptographic Message Syntax<br>\n * The CMS associates a content type identifier with a content. The syntax\n * MUST have ASN.1 type ContentInfo:\n * <pre>\n *\n *  ContentInfo ::= SEQUENCE {\n     *    contentType ContentType,\n     *    content [0] EXPLICIT ANY DEFINED BY contentType }\n *\n *  ContentType ::= OBJECT IDENTIFIER\n *\n * </pre>\n * The fields of ContentInfo have the following meanings:\n * <ul>\n * <li>contentType indicates the type of the associated content.  It is\n * an object identifier; it is a unique string of integers assigned\n * by an authority that defines the content type.</li>\n * <li>content is the associated content.  The type of content can be\n * determined uniquely by contentType.  Content types for data,\n * signed-data, enveloped-data, digested-data, encrypted-data, and\n * authenticated-data are defined in this document.  If additional\n * content types are defined in other documents, the ASN.1 type\n * defined SHOULD NOT be a CHOICE type.</li>\n * </ul>\n * RFC 5652 references {@link http://tools.ietf.org/html/rfc5652}\n *\n * @class GostASN1.ContentInfo\n * @extends GostASN1.Sequence\n * @property {string} contentType The content type identifier\n * @property {(GostASN1.Sequence|CryptoOperationData)} content The content\n */\nvar ContentType = OBJECT_IDENTIFIER;\n\nvar ContentInfo = ATTRIBUTE({\n    contentType: ContentType,\n    content: function (type) {\n        return CTX(0, EXPLICIT(type));\n    }\n}, 'contentType', 'content', undefined, 'CMS')({\n    data: OCTET_STRING,\n    signedData: COMBINE(SignedData),\n    envelopedData: COMBINE(EnvelopedData),\n    digestedData: COMBINE(DigestedData),\n    encryptedData: COMBINE(EncryptedData),\n    authData: COMBINE(AuthenticatedData),\n    encryptedKeyPkg: COMBINE(EncryptedKeyPackage),\n    aKeyPackage: COMBINE(AsymmetricKeyPackage)\n});\n\nvar DigestInfo = SEQUENCE({\n    digestAlgorithm: DigestAlgorithmIdentifier,\n    digest: Digest\n});\n// </editor-fold>\n\n/*\n     * PFX format syntax PKCS#12\n     *\n     * http://tools.ietf.org/html/rfc7292\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar PKCS12Attributes = Attributes({\n    friendlyName: SET_OF_SINGLE(BMPString),\n    keyProviderNameAttr: SET_OF_SINGLE(BMPString),\n    localKeyId: SET_OF_SINGLE(OCTET_STRING),\n    certKeyIdentifierPropId: SET_OF_SINGLE(OCTET_STRING)\n});\n\nvar SafeBagType = OBJECT_IDENTIFIER;\n\nvar CertType = OBJECT_IDENTIFIER;\n\nvar CRLType = OBJECT_IDENTIFIER;\n\nvar SecretType = OBJECT_IDENTIFIER;\n\nvar KeyBag = PrivateKeyInfo;\n\nvar PKCS8ShroudedKeyBag = EncryptedPrivateKeyInfo;\n\nvar CertBag = ATTRIBUTE({\n    certId: CertType,\n    certValue: function (type) {\n        return CTX(0, EXPLICIT(type));\n    }\n}, 'certId', 'certValue')({\n    // DER-encoded X.509 certificate stored in OCTET STRING\n    x509Certificate: OCTET_STRING(ENCAPSULATES(Certificate)),\n    // Base64-encoded SDSI certificate stored in IA5String\n    sdsiCertificate: IA5String\n}, OCTET_STRING);\n\nvar CRLBag = ATTRIBUTE({\n    crlId: CRLType,\n    crlValue: function (type) {\n        return CTX(0, EXPLICIT(type));\n    }\n}, 'crlId', 'crlValue')({\n    // DER-encoded X.509 certificate stored in OCTET STRING\n    x509CRL: OCTET_STRING(ENCAPSULATES(CertificateList))\n}, OCTET_STRING);\n\nvar SecretBag = ATTRIBUTE({\n    secretTypeId: SecretType,\n    secretValue: function (type) {\n        return CTX(0, EXPLICIT(type));\n    }\n}, 'secretTypeId', 'secretValue')({\n    secret: OCTET_STRING\n}, OCTET_STRING);\n\nvar SafeBag = ATTRIBUTE({\n    bagId: SafeBagType,\n    bagValue: function (type) {\n        return CTX(0, EXPLICIT(type));\n    },\n    bagAttributes: OPTIONAL(PKCS12Attributes)\n}, 'bagId', 'bagValue')(function (type) {\n    return ({\n        keyBag: KeyBag,\n        pkcs8ShroudedKeyBag: PKCS8ShroudedKeyBag,\n        certBag: CertBag,\n        crlBag: CRLBag,\n        secretBag: SecretBag,\n        safeContentsBag: SafeContents // recursion\n    })[type];\n});\n\n/**\n * The SafeContents Type<br><br>\n *\n * The sixth type of bag that can be held in a SafeBag is a\n * SafeContents. This recursive structure allows for arbitrary nesting\n * of multiple KeyBags, PKCS8ShroudedKeyBags, CertBags, CRLBags, and\n * SecretBags within the top-level SafeContents.\n * <pre>\n *  SafeContents ::= SEQUENCE OF SafeBag\n *   SafeBag ::= SEQUENCE {\n     *       bagId BAG-TYPE.&id ({PKCS12BagSet})\n     *       bagValue [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n     *       bagAttributes SET OF PKCS12Attribute OPTIONAL\n     *   }\n *\n *   PKCS12Attribute ::= SEQUENCE {\n     *       attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n     *       attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n     *   } -- This type is compatible with the X.500 type ’Attribute’\n *\n *   PKCS12AttrSet ATTRIBUTE ::= {\n     *       friendlyName | -- from PKCS #9 [23]\n     *       localKeyId, -- from PKCS #9\n     *       ... -- Other attributes are allowed\n     *   }\n * </pre>\n * The SafeContents type is made up of SafeBags. Each SafeBag holds one\n * piece of information -- a key, a certificate, etc. -- which is\n * identified by an object identifier.<br><br>\n *\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\n *\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\n * @class GostASN1.SafeContents\n */\nvar SafeContents = SEQUENCE_OF(SafeBag);\n\n/**\n * The AuthenticatedSafe<br><br>\n * Each compliant platform shall be able to import and export\n * AuthenticatedSafe PDUs wrapped in PFX PDUs.<br>\n * For integrity, the AuthenticatedSafe is either signed (if public-key\n * integrity mode is used) or MACed (if password integrity mode is used)\n * to produce a PFX PDU.\n * <pre>\n *      AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n *\n *      -- Data if unencrypted\n *      -- EncryptedData if password-encrypted\n *      -- EnvelopedData if public key-encrypted\n * </pre>\n * As mentioned, the contentType field of authSafe shall be of type data\n * or signedData. The content field of the authSafe shall, either\n * directly (data case) or indirectly (signedData case), contain a BER-\n * encoded value of type AuthenticatedSafe.<br><br>\n *\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\n *\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\n *\n * @class GostASN1.AuthenticatedSafe\n */\nvar AuthenticatedSafe = SEQUENCE_OF(ContentInfo);\n\nvar MacData = SEQUENCE({\n    mac: DigestInfo,\n    macSalt: OCTET_STRING,\n    // Note: The default is for historical reasons and its use is deprecated.\n    iterations: DEFAULT(INTEGER, 1)\n});\n\n/**\n * PFX format syntax<br><br>\n *\n * This format corresponds to the data model presented above, with\n * wrappers for privacy and integrity. This section makes free\n * reference to PKCS #7 {@link GostASN1.ContentInfo}<br>\n * All modes of direct exchange use the same PDU format.  ASN.1 and BER-\n * encoding ensure platform independence.<br>\n * This standard has one ASN.1 export: PFX.  This is the outer integrity\n * wrapper.<br><br>\n * Instances of PFX contain:\n *  <ol>\n *  <li>A version indicator.  The version shall be v3 for this version of\n *      this document.</li>\n *  <li>A PKCS #7 ContentInfo, whose contentType is signedData in public-\n *      key integrity mode and data in password integrity mode.</li>\n *  <li>An optional instance of MacData, present only in password\n *      integrity.  This object, if present, contains a PKCS #7\n *      DigestInfo, which holds the MAC value, a macSalt, and an\n *      iterationCount.  As described in Appendix B, the MAC key is\n *      derived from the password, the macSalt, and the iterationCount;\n *      the MAC is computed from the authSafe value and the MAC key via HMAC.\n *      The password and the MAC key are not actually present anywhere in the PFX.\n *      The salt and (to a certain extent) the iteration count thwarts dictionary\n *      attacks against the integrity password. </li>\n *  </ol>\n *  <pre>\n *  PFX ::= SEQUENCE {\n     *      version     INTEGER {v3(3)}(v3,...),\n     *      authSafe    ContentInfo,\n     *      macData     MacData OPTIONAL\n     *  }\n *\n *  MacData ::= SEQUENCE {\n     *      mac         DigestInfo,\n     *      macSalt     OCTET STRING,\n     *      iterations  INTEGER DEFAULT 1\n     *      -- Note: The default is for historical reasons and its\n     *      --       use is deprecated.\n     *  }\n *  </pre>\n * See {@link GostASN1.ContentInfo}<br><br>\n *\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\n * @class GostASN1.PFX\n * @extends GostASN1.Sequence\n * @property {number} version Encoded version number\n * @property {GostASN1.ContentInfo} authSafe ContentInfo with {@link GostASN1.AuthenticatedSafe} content\n */\nvar PFX = SEQUENCE({\n    version: INTEGER,\n    authSafe: ContentInfo,\n    macData: OPTIONAL(MacData)\n}, 'PFX');\n// </editor-fold>\n\n/*\n     * Certificate Request Message Format\n     *\n     * http://tools.ietf.org/html/rfc4211\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar RegToken = UTF8String;\n\nvar Authenticator = UTF8String;\n\nvar CertId = SEQUENCE({\n    issuer: GeneralName,\n    serialNumber: INTEGER\n});\nvar OldCertId = CertId;\n\nvar ProtocolEncrKey = SubjectPublicKeyInfo;\n\nvar EncryptedValue = SEQUENCE({\n    // the intended algorithm for which the value will be used\n    intendedAlg: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\n    // the symmetric algorithm used to encrypt the value\n    symmAlg: OPTIONAL(CTX(1, IMPLICIT(AlgorithmIdentifier))),\n    // the (encrypted) symmetric key used to encrypt the value\n    encSymmKey: OPTIONAL(CTX(2, IMPLICIT(BIT_STRING))),\n    // algorithm used to encrypt the symmetric key\n    keyAlg: OPTIONAL(CTX(3, IMPLICIT(AlgorithmIdentifier))),\n    valueHint: OPTIONAL(CTX(4, IMPLICIT(OCTET_STRING))),\n    // a brief description or identifier of the encValue content\n    // (may be meaningful only to the sending entity, and used only\n    // if EncryptedValue might be re-examined by the sending entity\n    // in the future)\n    encValue: BIT_STRING\n});\nvar KeyGenParameters = OCTET_STRING;\n\n// The encrypted private key MUST be placed in the envelopedData\n// encryptedContentInfo encryptedContent OCTET STRING.\nvar EncryptedKey = CHOICE({\n    encryptedValue: EncryptedValue, // Deprecated\n    envelopedData: CTX(0, IMPLICIT(EnvelopedData))\n}, function (value) {\n    return value.encryptedContentInfo ? 'envelopedData' : 'encryptedValue';\n});\n\nvar PKIArchiveOptions = CHOICE({\n    // the actual value of the private key\n    encryptedPrivKey: CTX(0, EncryptedKey),\n    // parameters that allow the private key to be re-generated\n    keyGenParameters: CTX(1, IMPLICIT(KeyGenParameters)),\n    // set to TRUE if sender wishes receiver to archive the private\n    // key of a key pair that the receiver generates in response to\n    // this request; set to FALSE if no archival is desired.\n    archiveRemGenPrivKey: CTX(2, IMPLICIT(BOOLEAN))\n});\n\nvar SinglePubInfo = SEQUENCE({\n    pubMethod: INTEGER({\n        dontCare: 0,\n        x500: 1,\n        web: 2,\n        ldap: 3\n    }),\n    pubLocation: OPTIONAL(GeneralName)\n});\n\n// pubInfos MUST NOT be present if action is \"dontPublish\"\n// (if action is \"pleasePublish\" and pubInfos is omitted,\n// \"dontCare\" is assumed)\nvar PKIPublicationInfo = SEQUENCE({\n    action: INTEGER({\n        dontPublish: 0,\n        pleasePublish: 1\n    }),\n    pubInfos: OPTIONAL(SEQUENCE_OF(SinglePubInfo))\n});\n\nvar SubsequentMessage = INTEGER({\n    // requests that resulting certificate be encrypted for the\n    // end entity (following which, POP will be proven in a\n    // confirmation message)\n    encrCert: 0,\n    // requests that CA engage in challenge-response exchange with\n    // end entity in order to prove private key possession\n    challengeResp: 1\n});\n\nvar POPOPrivKey = CHOICE({\n    // possession is proven in this message (which contains the private\n    // key itself (encrypted for the CA))\n    thisMessage: CTX(0, IMPLICIT(BIT_STRING)), // Deprecated\n    subsequentMessage: CTX(1, IMPLICIT(SubsequentMessage)),\n    // possession will be proven in a subsequent message\n    dhMAC: CTX(2, IMPLICIT(BIT_STRING)), // Deprecated\n    agreeMAC: CTX(3, IMPLICIT(PKMACValue)),\n    encryptedKey: CTX(4, IMPLICIT(EnvelopedData))\n});\n\nvar PBMParameter = SEQUENCE({\n    salt: OCTET_STRING,\n    // AlgId for a One-Way Function (SHA-1 recommended)\n    owf: AlgorithmIdentifier,\n    // number of times the OWF is applied\n    iterationCount: INTEGER,\n    // the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11], or HMAC [HMAC, RFC2202])\n    mac: AlgorithmIdentifier\n});\n\nvar PKMACValue = SEQUENCE({\n    // algorithm value shall be PasswordBasedMac {1 2 840 113533 7 66 13}\n    // parameter value is PBMParameter\n    algId: AlgorithmIdentifier,\n    value: BIT_STRING\n});\n\nvar POPOSigningKeyInput = SEQUENCE({\n    authInfo: CHOICE({\n        // used only if an authenticated identity has been\n        // established for the sender (e.g., a DN from a\n        // previously-issued and currently-valid certificate)\n        sender: CTX(0, EXPLICIT(GeneralName)), // GeneralName choice - explicit\n        // used if no authenticated GeneralName currently exists for\n        // the sender; publicKeyMAC contains a password-based MAC\n        // on the DER-encoded value of publicKey\n        publicKeyMAC: PKMACValue\n    }),\n    publicKey: SubjectPublicKeyInfo\n});  // from CertTemplate\n\nvar POPOSigningKey = SEQUENCE({\n    poposkInput: OPTIONAL(CTX(0, POPOSigningKeyInput)),\n    algorithmIdentifier: AlgorithmIdentifier,\n    signature: BIT_STRING\n});\n\nvar ProofOfPossession = CHOICE({\n    // used if the RA has already verified that the requester is in\n    // possession of the private key\n    raVerified: CTX(0, IMPLICIT(NULL)),\n    signature: CTX(1, IMPLICIT(POPOSigningKey)),\n    keyEncipherment: CTX(2, IMPLICIT(POPOPrivKey)),\n    keyAgreement: CTX(3, IMPLICIT(POPOPrivKey))\n});\n\nvar Controls = SEQUENCE_OF(AttributeTypeAndValue({\n    regToken: RegToken,\n    authenticator: Authenticator,\n    pkiPublicationInfo: PKIPublicationInfo,\n    pkiArchiveOptions: PKIArchiveOptions,\n    oldCertID: OldCertId,\n    protocolEncrKey: ProtocolEncrKey\n}));\n\nvar OptionalValidity = SEQUENCE({\n    notBefore: OPTIONAL(CTX(0, IMPLICIT(Time))),\n    notAfter: OPTIONAL(CTX(1, IMPLICIT(Time)))\n}); // at least one MUST be present\n\nvar CertTemplate = SEQUENCE({\n    version: OPTIONAL(CTX(0, IMPLICIT(Version))),\n    serialNumber: OPTIONAL(CTX(1, IMPLICIT(INTEGER))),\n    signingAlg: OPTIONAL(CTX(2, IMPLICIT(AlgorithmIdentifier))),\n    issuer: OPTIONAL(CTX(3, IMPLICIT(Name))),\n    validity: OPTIONAL(CTX(4, IMPLICIT(OptionalValidity))),\n    subject: OPTIONAL(CTX(5, IMPLICIT(Name))),\n    publicKey: OPTIONAL(CTX(6, IMPLICIT(SubjectPublicKeyInfo))),\n    issuerUID: OPTIONAL(CTX(7, IMPLICIT(UniqueIdentifier))),\n    subjectUID: OPTIONAL(CTX(8, IMPLICIT(UniqueIdentifier))),\n    extensions: OPTIONAL(CTX(9, IMPLICIT(Extensions)))\n});\n\nvar CertRequest = SEQUENCE({\n    certReqId: INTEGER, // ID for matching request and reply\n    certTemplate: CertTemplate, // Selected fields of cert to be issued\n    controls: OPTIONAL(Controls)\n});   // Attributes affecting issuance\n\nvar UTF8Pairs = UTF8String;\n\nvar CertReq = CertRequest;\n\nvar EncKeyWithID = SEQUENCE({\n    privateKey: PrivateKeyInfo,\n    identifier: OPTIONAL(CHOICE({\n        string: UTF8String,\n        generalName: GeneralName\n    }, function (value) {\n        return typeof value === 'string' || value instanceof String ?\n          'string' : 'generalName';\n    }))\n});\n\nvar CertReqMsg = SEQUENCE({\n    certReq: CertRequest,\n    popo: OPTIONAL(ProofOfPossession),\n    // content depends upon key type\n    regInfo: OPTIONAL(SEQUENCE_OF(AttributeTypeAndValue({\n        utf8Pairs: UTF8Pairs,\n        certReq: CertReq,\n        encKeyWithID: EncKeyWithID\n    })))\n});\n\nvar CertReqMessages = SEQUENCE_OF(CertReqMsg);\n\n// </editor-fold>\n\n/*\n     * Certificate Management over CMS\n     *\n     * http://tools.ietf.org/html/rfc5272\n     *\n     */ // <editor-fold defaultstate=\"collapsed\">\n\nvar PendInfo = SEQUENCE({\n    pendToken: OCTET_STRING,\n    pendTime: GeneralizedTime\n});\n\nvar CMCStatus = INTEGER({\n    success: 0,\n    failed: 2,\n    pending: 3,\n    noSupport: 4,\n    confirmRequired: 5,\n    popRequired: 6,\n    partial: 7\n});\n\nvar CMCFailInfo = INTEGER({\n    badAlg: 0,\n    badMessageCheck: 1,\n    badRequest: 2,\n    badTime: 3,\n    badCertId: 4,\n    unsupportedExt: 5,\n    mustArchiveKeys: 6,\n    badIdentity: 7,\n    popRequired: 8,\n    popFailed: 9,\n    noKeyReuse: 10,\n    internalCAError: 11,\n    tryLater: 12,\n    authDataFail: 13\n});\n\nvar CMCStatusInfo = SEQUENCE({\n    cMCStatus: CMCStatus,\n    bodyList: SEQUENCE_OF(BodyPartID),\n    statusString: OPTIONAL(UTF8String),\n    otherInfo: OPTIONAL(CHOICE({\n        failInfo: CMCFailInfo,\n        pendInfo: PendInfo\n    }))\n});\n\nvar AddExtensions = SEQUENCE({\n    pkiDataReference: BodyPartID,\n    certReferences: SEQUENCE_OF(BodyPartID),\n    extensions: SEQUENCE_OF(Extension)\n});\n\nvar LraPopWitness = SEQUENCE({\n    pkiDataBodyid: BodyPartID,\n    bodyIds: SEQUENCE_OF(BodyPartID)\n});\n\nvar GetCert = SEQUENCE({\n    issuerName: GeneralName,\n    serialNumber: INTEGER\n});\n\nvar GetCRL = SEQUENCE({\n    issuerName: Name,\n    cRLName: OPTIONAL(GeneralName),\n    time: OPTIONAL(GeneralizedTime),\n    reasons: OPTIONAL(ReasonFlags)\n});\n\nvar RevokeRequest = SEQUENCE({\n    issuerName: Name,\n    serialNumber: INTEGER,\n    reason: CRLReason,\n    invalidityDate: OPTIONAL(GeneralizedTime),\n    passphrase: OPTIONAL(OCTET_STRING),\n    comment: OPTIONAL(UTF8String)\n});\n\nvar DecryptedPOP = SEQUENCE({\n    bodyPartID: BodyPartID,\n    thePOPAlgID: AlgorithmIdentifier,\n    thePOP: OCTET_STRING\n});\n\nvar CMCCertId = IssuerAndSerialNumber;\n\nvar BodyPartReference = CHOICE({\n    bodyPartID: BodyPartID,\n    bodyPartPath: BodyPartPath\n});\n\nvar CMCStatusInfoV2 = SEQUENCE({\n    cMCStatus: CMCStatus,\n    bodyList: SEQUENCE_OF(BodyPartReference),\n    statusString: OPTIONAL(UTF8String),\n    otherInfo: OPTIONAL(CHOICE({\n        failInfo: CMCFailInfo,\n        pendInfo: PendInfo,\n        extendedFailInfo: SEQUENCE({\n            failInfoOID: OBJECT_IDENTIFIER,\n            failInfoValue: AttributeValue\n        })\n    }))\n});\n\nvar PublishTrustAnchors = SEQUENCE({\n    seqNumber: INTEGER,\n    hashAlgorithm: AlgorithmIdentifier,\n    anchorHashes: SEQUENCE_OF(OCTET_STRING)\n});\n\nvar AuthPublish = BodyPartID;\n\nvar BodyPartList = SEQUENCE_OF(BodyPartID);\n\nvar CMCPublicationInfo = SEQUENCE({\n    hashAlg: AlgorithmIdentifier,\n    certHashes: SEQUENCE_OF(OCTET_STRING),\n    pubInfo: PKIPublicationInfo\n});\n\nvar ModCertTemplate = SEQUENCE({\n    pkiDataReference: BodyPartPath,\n    certReferences: BodyPartList,\n    replace: DEFAULT(BOOLEAN, true),\n    certTemplate: CertTemplate\n});\n\nvar ControlsProcessed = SEQUENCE({\n    bodyList: SEQUENCE_OF(BodyPartReference)\n});\n\nvar IdentifyProofV2 = SEQUENCE({\n    proofAlgID: AlgorithmIdentifier,\n    macAlgId: AlgorithmIdentifier,\n    witness: OCTET_STRING\n});\n\nvar PopLinkWitnessV2 = SEQUENCE({\n    keyGenAlgorithm: AlgorithmIdentifier,\n    macAlgorithm: AlgorithmIdentifier,\n    witness: OCTET_STRING\n});\n\nvar TaggedCertificationRequest = SEQUENCE({\n    bodyPartID: BodyPartID,\n    certificationRequest: CertificationRequest\n});\n\nvar TaggedContentInfo = SEQUENCE({\n    bodyPartID: BodyPartID,\n    contentInfo: ContentInfo\n});\n\nvar OtherMsg = SEQUENCE({\n    bodyPartID: BodyPartID,\n    otherMsgType: OBJECT_IDENTIFIER,\n    otherMsgValue: ANY\n}); //DEFINED BY otherMsgType\n\nvar TaggedRequest = CHOICE({\n    tcr: CTX(0, IMPLICIT(TaggedCertificationRequest)),\n    crm: CTX(1, IMPLICIT(CertReqMsg)),\n    orm: CTX(2, IMPLICIT(SEQUENCE({\n        bodyPartID: BodyPartID,\n        requestMessageType: OBJECT_IDENTIFIER,\n        requestMessageValue: ANY\n    })))\n}); // DEFINED BY requestMessageType\n\nvar EncryptedPOP = SEQUENCE({\n    request: TaggedRequest,\n    cms: ContentInfo,\n    thePOPAlgID: AlgorithmIdentifier,\n    witnessAlgID: AlgorithmIdentifier,\n    witness: OCTET_STRING\n});\n\nvar TaggedAttribute = ATTRIBUTE({\n    bodyPartID: BodyPartID,\n    attrType: OBJECT_IDENTIFIER,\n    attrValues: function (type) {\n        return SET_OF(type);\n    }\n}, 'attrType', 'attrValues', AttributeValue)({\n    statusInfo: CMCStatusInfo,\n    identification: UTF8String,\n    identityProof: OCTET_STRING,\n    dataReturn: OCTET_STRING,\n    transactionId: INTEGER,\n    senderNonce: OCTET_STRING,\n    recipientNonce: OCTET_STRING,\n    addExtensions: AddExtensions,\n    encryptedPOP: EncryptedPOP,\n    decryptedPOP: DecryptedPOP,\n    lraPOPWitness: LraPopWitness,\n    getCert: GetCert,\n    getCRL: GetCRL,\n    revokeRequest: RevokeRequest,\n    regInfo: OCTET_STRING,\n    responseInfo: OCTET_STRING,\n    queryPending: OCTET_STRING,\n    popLinkRandom: OCTET_STRING,\n    popLinkWitness: OCTET_STRING,\n    confirmCertAcceptance: CMCCertId,\n    statusInfoV2: CMCStatusInfoV2,\n    trustedAnchors: PublishTrustAnchors,\n    authPublish: AuthPublish,\n    batchRequests: BodyPartList,\n    batchResponses: BodyPartList,\n    publishCert: CMCPublicationInfo,\n    modCertTemplate: ModCertTemplate,\n    controlProcessed: ControlsProcessed,\n    popLinkWitnessV2: PopLinkWitnessV2,\n    identityProofV2: IdentifyProofV2\n});\n/**\n * PKIData Content Type<br><br>\n *\n * The PKIData content type is used for the Full PKI Request.  A PKIData\n * content type is identified by:\n * <pre>\n *   id-cct-PKIData ::= {id-pkix id-cct(12) 2 }\n * </pre>\n * The ASN.1 structure corresponding to the PKIData content type is:\n * <pre>\n *   PKIData ::= SEQUENCE {\n     *       controlSequence    SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\n     *       reqSequence        SEQUENCE SIZE(0..MAX) OF TaggedRequest,\n     *       cmsSequence        SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\n     *       otherMsgSequence   SEQUENCE SIZE(0..MAX) OF OtherMsg\n     *   }\n * </pre>\n * All certification requests encoded into a single PKIData SHOULD be\n * for the same identity.  RAs that batch process (see Section 6.17) are\n * expected to place the PKI Requests received into the cmsSequence of a\n * PKIData. <br><br>\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIResponse}<br><br>\n * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272}\n *\n * @class GostASN1.PKIData\n * @extends GostASN1.Sequence\n * @property {GostASN1.Attributes[]} controlSequence\n * @property {GostASN1.Sequence[]} reqSequence\n * @property {GostASN1.ContentInfo[]} cmsSequence\n * @property {GostASN1.Sequence[]} otherMsgSequence\n */\nvar PKIData = SEQUENCE({\n    controlSequence: SEQUENCE_OF(TaggedAttribute),\n    reqSequence: SEQUENCE_OF(TaggedRequest),\n    cmsSequence: SEQUENCE_OF(TaggedContentInfo),\n    otherMsgSequence: SEQUENCE_OF(OtherMsg)\n}, 'PKI REQUEST');\n\n/**\n * PKIResponse Content Type<br><br>\n *\n * The PKIResponse content type is used for the Full PKI Response.  The\n * PKIResponse content type is identified by:\n * <pre>\n *   id-cct-PKIResponse ::= {id-pkix id-cct(12) 3  }\n * </pre>\n * The ASN.1 structure corresponding to the PKIResponse content type is:\n * <pre>\n *    PKIResponse ::= SEQUENCE {\n     *        controlSequence   SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\n     *        cmsSequence       SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\n     *        otherMsgSequence  SEQUENCE SIZE(0..MAX) OF OtherMsg\n     *    }\n *\n *    ReponseBody ::= PKIResponse\n * </pre>\n *\n * Note: In [RFC2797], this ASN.1 type was named ResponseBody.  It has\n * been renamed to PKIResponse for clarity and the old name kept as a\n * synonym.<br><br>\n *\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIData}<br><br>\n *\n * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272}\n *\n * @class GostASN1.PKIResponse\n * @extends GostASN1.Sequence\n * @property {GostASN1.Attributes[]} controlSequence\n * @property {GostASN1.ContentInfo[]} cmsSequence\n * @property {GostASN1.Sequence[]} otherMsgSequence\n */\nvar PKIResponse = SEQUENCE({\n    controlSequence: SEQUENCE_OF(TaggedAttribute),\n    cmsSequence: SEQUENCE_OF(TaggedContentInfo),\n    otherMsgSequence: SEQUENCE_OF(OtherMsg)\n}, 'PKI RESPONSE');\n\n// </editor-fold>\n\n/**\n * ASN.1 syntax definitions\n *\n * @class GostASN1\n */\nexport function GostASN1() {\n}\n\nGostASN1.prototype = {\n    /**\n     * Gost PrivateKey info encoder\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostPrivateKeyInfo\n     */\n    GostPrivateKeyInfo: GostPrivateKeyInfo,\n    /**\n     * Gost subject PublicKey info encoder\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostSubjectPublicKeyInfo\n     */\n    GostSubjectPublicKeyInfo: GostSubjectPublicKeyInfo,\n    /**\n     * CryptoPro key container header\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostKeyContainer\n     */\n    GostKeyContainer: GostKeyContainer,\n    /**\n     * CryptoPro key container name\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostKeyContainerName\n     */\n    GostKeyContainerName: GostKeyContainerName,\n    /**\n     * CryptoPro encrypted PrivateKey for key containers\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostPrivateKeys\n     */\n    GostPrivateKeys: GostPrivateKeys,\n    /**\n     * CryptoPro PrivateKey masks for key containers\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostPrivateMasks\n     */\n    GostPrivateMasks: GostPrivateMasks,\n    /**\n     * ViPNet key container\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.ViPNetInfo\n     */\n    ViPNetInfo: ViPNetInfo,\n    /**\n     * Gost Signature encoders\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostSignature\n     */\n    GostSignature: GostSignature,\n    /**\n     * Gost Encrypted key encoder for CMS\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostEncryptedKey\n     */\n    GostEncryptedKey: GostEncryptedKey,\n    /**\n     * SignalCom wrapped PrivateKey\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.GostWrappedPrivateKey\n     */\n    GostWrappedPrivateKey: GostWrappedPrivateKey,\n    /**\n     * PKCS#8 PrivateKey info\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.PrivateKeyInfo\n     */\n    PrivateKeyInfo: PrivateKeyInfo,\n    /**\n     * PKCS#8 encrypted PrivateKey info\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.EncryptedPrivateKeyInfo\n     */\n    EncryptedPrivateKeyInfo: EncryptedPrivateKeyInfo,\n    /**\n     * X.509 subject PublicKey info\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.SubjectPublicKeyInfo\n     */\n    SubjectPublicKeyInfo: SubjectPublicKeyInfo,\n    /**\n     * X.509 To be signed Certificate\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.TBSCertificate\n     */\n    TBSCertificate: TBSCertificate,\n    /**\n     * X.509 Certificate\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.Certificate\n     */\n    Certificate: Certificate,\n    /**\n     * PKCS#10 Certification request definition\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.CertificationRequestInfo\n     */\n    CertificationRequestInfo: CertificationRequestInfo,\n    /**\n     * PKCS#10 Certification request\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.CertificationRequest\n     */\n    CertificationRequest: CertificationRequest,\n    /**\n     * X.509 To be signed CRL\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.TBSCertList\n     */\n    TBSCertList: TBSCertList,\n    /**\n     * X.509 CRL\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.CertificateList\n     */\n    CertificateList: CertificateList,\n    /**\n     * X.509 Attribute Certificate definition\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.AttributeCertificateInfo\n     */\n    AttributeCertificateInfo: AttributeCertificateInfo,\n    /**\n     * X.509 Attribute Certificate\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.AttributeCertificate\n     */\n    AttributeCertificate: AttributeCertificate,\n    /**\n     * CMS Signed Attributes\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.SignedAttributes\n     */\n    SignedAttributes: SignedAttributes,\n    /**\n     * CMS Unsigned Attributes\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.UnsignedAttributes\n     */\n    UnsignedAttributes: UnsignedAttributes,\n    /**\n     * CMS Content definition\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.ContentInfo\n     */\n    ContentInfo: ContentInfo,\n    /**\n     * PKCS#12 Safe Contents\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.SafeContents\n     */\n    SafeContents: SafeContents,\n    /**\n     * PKCS#12 Authenticated Safe\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.AuthenticatedSafe\n     */\n    AuthenticatedSafe: AuthenticatedSafe,\n    /**\n     * PKCS#12 Personal Information Exchange (PFX)\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.PFX\n     */\n    PFX: PFX,\n    /**\n     * PKI Request\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.PKIData\n     */\n    PKIData: PKIData,\n    /**\n     * PKI Response\n     *\n     * @memberOf GostASN1\n     * @instance\n     * @type GostASN1.PKIResponse\n     */\n    PKIResponse: PKIResponse\n};\n\nexport const gostASN1Instance  = new GostASN1();\n","/**\n * @file GOST and common ASN.1 Object and Algorithm Identifiers\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\n// <editor-fold defaultstate=\"collapsed\">\n// Expand javascript object\nfunction expand() {\n    var r = {};\n    for (var i = 0, n = arguments.length; i < n; i++) {\n        var item = arguments[i];\n        if (typeof item === 'object')\n            for (var name in item)\n                r[name] = item[name];\n    }\n    return r;\n}\n\n// </editor-fold>\n\n/**\n * Freandly names for ASN.1 Object Identifiers\n *\n * @field names\n * @memberOf GostSecurity\n */ // <editor-fold defaultstate=\"collapsed\">\nvar names = {\n    // CryptoPro algoritms\n    '1.2.643.2.2': 'CryptoPro',\n    '1.2.643.2.2.3': 'id-GostR3411-94-with-GostR3410-2001',\n    '1.2.643.2.2.4': 'id-GostR3411-94-with-GostR3410-94',\n    '1.2.643.2.2.9': 'id-GostR3411-94',\n    '1.2.643.2.2.10': 'id-HMACGostR3411-94',\n    '1.2.643.2.2.13.0': 'id-Gost28147-89-None-KeyWrap',\n    '1.2.643.2.2.13.1': 'id-Gost28147-89-CryptoPro-KeyWrap',\n    '1.2.643.2.2.14.0': 'id-Gost28147-89-None-KeyMeshing',\n    '1.2.643.2.2.14.1': 'id-Gost28147-89-CryptoPro-KeyMeshing',\n    '1.2.643.2.2.19': 'id-GostR3410-2001',\n    '1.2.643.2.2.20': 'id-GostR3410-94',\n    '1.2.643.2.2.20.1': 'id-GostR3410-94-a',\n    '1.2.643.2.2.20.2': 'id-GostR3410-94-aBis',\n    '1.2.643.2.2.20.3': 'id-GostR3410-94-b',\n    '1.2.643.2.2.20.4': 'id-GostR3410-94-bBis',\n    '1.2.643.2.2.21': 'id-Gost28147-89',\n    '1.2.643.2.2.22': 'id-Gost28147-89-MAC',\n    '1.2.643.2.2.30.0': 'id-GostR3411-94-TestParamSet',\n    '1.2.643.2.2.30.1': 'id-GostR3411-94-CryptoProParamSet',\n    '1.2.643.2.2.30.2': 'id-GostR3411-94-CryptoPro-B-ParamSet',\n    '1.2.643.2.2.30.3': 'id-GostR3411-94-CryptoPro-C-ParamSet',\n    '1.2.643.2.2.30.4': 'id-GostR3411-94-CryptoPro-D-ParamSet',\n    '1.2.643.2.2.31.0': 'id-Gost28147-89-TestParamSet',\n    '1.2.643.2.2.31.1': 'id-Gost28147-89-CryptoPro-A-ParamSet',\n    '1.2.643.2.2.31.2': 'id-Gost28147-89-CryptoPro-B-ParamSet',\n    '1.2.643.2.2.31.3': 'id-Gost28147-89-CryptoPro-C-ParamSet',\n    '1.2.643.2.2.31.4': 'id-Gost28147-89-CryptoPro-D-ParamSet',\n    '1.2.643.2.2.31.5': 'id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet',\n    '1.2.643.2.2.31.6': 'id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet',\n    '1.2.643.2.2.31.7': 'id-Gost28147-89-CryptoPro-RIC-1-ParamSet ',\n    '1.2.643.2.2.31.12': 'id-Gost28147-89-CryptoPro-tc26-1',\n    '1.2.643.2.2.31.13': 'id-Gost28147-89-CryptoPro-tc26-2',\n    '1.2.643.2.2.31.14': 'id-Gost28147-89-CryptoPro-tc26-3',\n    '1.2.643.2.2.31.15': 'id-Gost28147-89-CryptoPro-tc26-4',\n    '1.2.643.2.2.31.16': 'id-Gost28147-89-CryptoPro-tc26-5',\n    '1.2.643.2.2.31.17': 'id-Gost28147-89-CryptoPro-tc26-6',\n    '1.2.643.2.2.32.0': 'id-GostR3410-94-TestParamSet',\n    '1.2.643.2.2.32.2': 'id-GostR3410-94-CryptoPro-A-ParamSet',\n    '1.2.643.2.2.32.3': 'id-GostR3410-94-CryptoPro-B-ParamSet',\n    '1.2.643.2.2.32.4': 'id-GostR3410-94-CryptoPro-C-ParamSet',\n    '1.2.643.2.2.32.5': 'id-GostR3410-94-CryptoPro-D-ParamSet',\n    '1.2.643.2.2.33.1': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\n    '1.2.643.2.2.33.2': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\n    '1.2.643.2.2.33.3': 'id-GostR3410-94-CryptoPro-XchC-ParamSet',\n    // Certificate center attributes\n    '1.2.643.2.2.34.2': 'temporaryAccessToRC',\n    '1.2.643.2.2.34.3': 'internetContentSignature',\n    '1.2.643.2.2.34.4': 'adminRC',\n    '1.2.643.2.2.34.5': 'operatorRC',\n    '1.2.643.2.2.34.6': 'userRC',\n    '1.2.643.2.2.34.7': 'clientRC',\n    '1.2.643.2.2.34.8': 'serverRC',\n    '1.2.643.2.2.34.9': 'sysAdminRC',\n    '1.2.643.2.2.34.10': 'arcAdminRC',\n    '1.2.643.2.2.34.11': 'authorityPersonRC',\n    '1.2.643.2.2.34.12': 'clientCC',\n    '1.2.643.2.2.34.13': 'sysAdminCC',\n    '1.2.643.2.2.34.14': 'arcAdminCC',\n    '1.2.643.2.2.34.15': 'accessIPSecCA',\n    '1.2.643.2.2.34.16': 'auditAdminHSM',\n    '1.2.643.2.2.34.21': 'adminHSM',\n    '1.2.643.2.2.34.22': 'serverAdminHSH',\n    '1.2.643.2.2.34.24': 'winlogonCA',\n    '1.2.643.2.2.34.25': 'timestampServiceUser',\n    '1.2.643.2.2.34.26': 'statusServiceUser',\n    '1.2.643.2.2.34.27': 'arcAdminHSM',\n    '1.2.643.2.2.34.28': 'auditorHSM',\n    // CryptoPro algoritms\n    '1.2.643.2.2.35.0': 'id-GostR3410-2001-CryptoPro-TestParamSet',\n    '1.2.643.2.2.35.1': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\n    '1.2.643.2.2.35.2': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\n    '1.2.643.2.2.35.3': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\n    '1.2.643.2.2.36.0': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\n    '1.2.643.2.2.36.1': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\n    \"1.2.643.2.2.37.1\": 'id-CryptoPro-GostPrivateKeys-V1',\n    \"1.2.643.2.2.37.2\": 'id-CryptoPro-GostPrivateKeys-V2',\n    \"1.2.643.2.2.37.2.1\": 'id-CryptoPro-GostPrivateKeys-V2-Full',\n    \"1.2.643.2.2.37.2.2\": 'id-CryptoPro-GostPrivateKeys-V2-PartOf',\n    '1.2.643.2.2.37.3.1': 'intermediateCertificates',\n    '1.2.643.2.2.37.3.2': 'trustedCertificatesSignature',\n    '1.2.643.2.2.37.3.3': 'trustedCertificatesExchange',\n    '1.2.643.2.2.37.3.10': 'keyValidity',\n    '1.2.643.2.2.38.1': 'personalBaseProlicy',\n    '1.2.643.2.2.38.2': 'networkBasePolicy',\n    '1.2.643.2.2.47.1': 'id-CryptoPro-ocsp-treats-exp-key-or-exp-cert-rev',\n    '1.2.643.2.2.47.2': 'id-CryptoPro-ocsp-crl-locator',\n    '1.2.643.2.2.47.3': 'id-CryptoPro-ocsp-instant-revocation-indicator',\n    '1.2.643.2.2.47.4': 'id-CryptoPro-ocsp-revocation-announcement-reference',\n    '1.2.643.2.2.47.5': 'id-CryptoPro-ocsp-historical-request',\n    '1.2.643.2.2.49.2': 'limitedLicense',\n    '1.2.643.2.2.96': 'id-GostR3410-2001-CryptoPro-ESDH',\n    '1.2.643.2.2.97': 'id-GostR3410-94-CryptoPro-ESDH',\n    '1.2.643.2.2.98': 'id-GostR3410-2001DH',\n    '1.2.643.2.2.99': 'id-GostR3410-94DH',\n    // signature attributes\n    '1.2.643.2.45.1.1.1': 'signatureComment',\n    '1.2.643.2.45.1.1.2': 'resourceName',\n    '1.2.643.2.45.1.1.3': 'signatureUsage',\n    // params\n    '1.2.643.3.131.1.1': 'INN',\n    '1.2.643.3.141.1.1': 'RNS FSS',\n    '1.2.643.3.141.1.2': 'KP FSS',\n    // tc26\n    '1.2.643.7.1': 'tc26',\n    '1.2.643.7.1.1.1.1': 'id-tc26-gost3410-12-256',\n    '1.2.643.7.1.1.1.2': 'id-tc26-gost3410-12-512',\n    '1.2.643.7.1.1.2.1': 'id-tc26-gost3411-94',\n    '1.2.643.7.1.1.2.2': 'id-tc26-gost3411-12-256',\n    '1.2.643.7.1.1.2.3': 'id-tc26-gost3411-12-512',\n    '1.2.643.7.1.1.3.1': 'id-tc26-signwithdigest-gost3410-12-94',\n    '1.2.643.7.1.1.3.2': 'id-tc26-signwithdigest-gost3410-12-256',\n    '1.2.643.7.1.1.3.3': 'id-tc26-signwithdigest-gost3410-12-512',\n    '1.2.643.7.1.1.4.1': 'id-tc26-hmac-gost-3411-12-256',\n    '1.2.643.7.1.1.4.2': 'id-tc26-hmac-gost-3411-12-512',\n    '1.2.643.7.1.1.6.1': 'id-tc26-agreement-gost-3410-12-256',\n    '1.2.643.7.1.1.6.2': 'id-tc26-agreement-gost-3410-12-512',\n    '1.2.643.7.1.2.1.1.0': 'id-tc26-gost-3410-12-256-paramSetTest',\n    '1.2.643.7.1.2.1.1.1': 'id-tc26-gost-3410-12-256-paramSetA',\n    '1.2.643.7.1.2.1.1.2': 'id-tc26-gost-3410-12-256-paramSetB',\n    '1.2.643.7.1.2.1.2.0': 'id-tc26-gost-3410-12-512-paramSetTest',\n    '1.2.643.7.1.2.1.2.1': 'id-tc26-gost-3410-12-512-paramSetA',\n    '1.2.643.7.1.2.1.2.2': 'id-tc26-gost-3410-12-512-paramSetB',\n    '1.2.643.7.1.2.1.2.3': 'id-tc26-gost-3410-12-512-paramSetC',\n    '1.2.643.7.1.2.1.2.4': 'id-tc26-gost-3410-12-512-paramSetD',\n    '1.2.643.7.1.2.5.1.1': 'id-tc26-gost-28147-param-Z',\n    // GOST Parameters\n    '1.2.643.100.1': 'OGRN',\n    '1.2.643.100.2.1': 'SMEV-person',\n    '1.2.643.100.2.2': 'SMEV-government',\n    '1.2.643.100.3': 'SNILS',\n    '1.2.643.100.4': 'KPP',\n    '1.2.643.100.5': 'OGRNIP',\n    '1.2.643.100.6': 'internal-government',\n    '1.2.643.100.111': 'subjectSignTool',\n    '1.2.643.100.112': 'issuerSignTool',\n    '1.2.643.100.113.1': 'signToolClassKC1',\n    '1.2.643.100.113.2': 'signToolClassKC2',\n    '1.2.643.100.113.3': 'signToolClassKC3',\n    '1.2.643.100.113.4': 'signToolClassKB1',\n    '1.2.643.100.113.5': 'signToolClassKB2',\n    '1.2.643.100.113.6': 'signToolClassKA1',\n    '1.2.643.100.114.1': 'issuerToolClassKC1',\n    '1.2.643.100.114.2': 'issuerToolClassKC2',\n    '1.2.643.100.114.3': 'issuerToolClassKC3',\n    '1.2.643.100.114.4': 'issuerToolClassKB2',\n    '1.2.643.100.114.5': 'issuerToolClassKB1',\n    '1.2.643.100.114.6': 'issuerToolClassKA1',\n    // Common algorithms\n    '1.2.840.10040.4': 'x9cm',\n    '1.2.840.10040.4.1': 'dsa',\n    '1.2.840.10040.4.3': 'dsa-with-SHA1',\n    '1.2.840.10045': 'ansi-x962',\n    '1.2.840.10045.1': 'id-fieldType',\n    '1.2.840.10045.1.1': 'id-prime-Field',\n    '1.2.840.10045.1.2': 'id-characteristic-two-field',\n    '1.2.840.10045.2.1': 'ecPublicKey',\n    '1.2.840.10045.3.0': 'characteristicTwo',\n    '1.2.840.10045.3.1.1': 'secp192r1',\n    '1.2.840.10045.3.1.2': 'prime192v2',\n    '1.2.840.10045.3.1.3': 'prime192v3',\n    '1.2.840.10045.3.1.4': 'prime239v1',\n    '1.2.840.10045.3.1.5': 'prime239v2',\n    '1.2.840.10045.3.1.6': 'prime239v3',\n    '1.2.840.10045.3.1.7': 'secp256r1',\n    '1.2.840.10045.4': 'ecdsa',\n    '1.2.840.10045.4.1': 'ecdsa-with-SHA1',\n    '1.2.840.10045.4.2': 'ecdsa-with-Recommended',\n    '1.2.840.10045.4.4': 'ecdsa-with-SHA2',\n    '1.2.840.10045.4.4.1': 'ecdsa-with-SHA224',\n    '1.2.840.10045.4.4.2': 'ecdsa-with-SHA256',\n    '1.2.840.10045.4.4.3': 'ecdsa-with-SHA384',\n    '1.2.840.10045.4.4.4': 'ecdsa-with-SHA512',\n    '1.2.840.113533.7.66.13': 'PasswordBasedMac',\n    '1.3.6.1.4.1.22554.1.1.2.1.2': 'pbeWithSHAAndAES128-CBC',\n    '1.3.6.1.4.1.22554.1.1.2.1.22': 'pbeWithSHAAndAES192-CBC',\n    '1.3.6.1.4.1.22554.1.1.2.1.42': 'pbeWithSHAAndAES256-CBC',\n    '1.3.6.1.4.1.22554.1.2.1.2.1.2': 'pbeWithSHA256AndAES128-CBC',\n    '1.3.6.1.4.1.22554.1.2.1.2.1.22': 'pbeWithSHA256AndAES192-CBC',\n    '1.3.6.1.4.1.22554.1.2.1.2.1.42': 'pbeWithSHA256AndAES256-CBC',\n    //  Diffie-Hellman Key Exchange Keys\n    '1.2.840.113549': 'rsa',\n    '1.2.840.113549.1.1.1': 'rsaEncryption',\n    '1.2.840.113549.1.1.2': 'md2withRSAEncryption',\n    '1.2.840.113549.1.1.3': 'md4withRSAEncryption',\n    '1.2.840.113549.1.1.4': 'md5withRSAEncryption',\n    '1.2.840.113549.1.1.5': 'sha1withRSAEncryption',\n    '1.2.840.113549.1.1.7': 'rsaes-oaep',\n    '1.2.840.113549.1.1.8': 'mgf1',\n    '1.2.840.113549.1.1.9': 'pSpecified',\n    '1.2.840.113549.1.1.10': 'rsassa-pss',\n    '1.2.840.113549.1.1.11': 'sha256withRSAEncryption',\n    '1.2.840.113549.1.1.12': 'sha384withRSAEncryption',\n    '1.2.840.113549.1.1.13': 'sha512withRSAEncryption',\n    '1.2.840.113549.1.2.7': 'hmacWithSHA1',\n    '1.2.840.113549.1.2.8': 'hmacWithSHA224',\n    '1.2.840.113549.1.2.9': 'hmacWithSHA256',\n    '1.2.840.113549.1.2.10': 'hmacWithSHA384',\n    '1.2.840.113549.1.2.11': 'hmacWithSHA512',\n    '1.2.840.113549.1.3.1': 'dhKeyAgreement',\n    // pkcs#7 content types\n    '1.2.840.113549.1.5.12': 'PBKDF2',\n    '1.2.840.113549.1.5.13': 'PBES2',\n    '1.2.840.113549.1.5.14': 'PBMAC1',\n    '1.2.840.113549.1.7.1': 'data',\n    '1.2.840.113549.1.7.2': 'signedData',\n    '1.2.840.113549.1.7.3': 'envelopedData',\n    '1.2.840.113549.1.7.4': 'signedAndEnvelopedData',\n    '1.2.840.113549.1.7.5': 'digestedData',\n    '1.2.840.113549.1.7.6': 'encryptedData',\n    '1.2.840.113549.1.9.1': 'emailAddress',\n    '1.2.840.113549.1.9.2': 'unstructuredName',\n    '1.2.840.113549.1.9.3': 'contentType',\n    '1.2.840.113549.1.9.4': 'messageDigest',\n    '1.2.840.113549.1.9.5': 'signingTime',\n    '1.2.840.113549.1.9.6': 'countersignature',\n    '1.2.840.113549.1.9.7': 'challengePassword',\n    '1.2.840.113549.1.9.8': 'unstructuredAddress',\n    '1.2.840.113549.1.9.9': 'extendedCertificateAttributes',\n    '1.2.840.113549.1.9.10': 'issuerAndSerialNumber',\n    '1.2.840.113549.1.9.11': 'passwordCheck',\n    '1.2.840.113549.1.9.12': 'publicKey',\n    '1.2.840.113549.1.9.13': 'signingDescription',\n    '1.2.840.113549.1.9.14': 'extensionRequest',\n    '1.2.840.113549.1.9.15': 'sMimeCapabilities',\n    '1.2.840.113549.1.9.16': 'sMimeObjectIdentifierRegistry',\n    '1.2.840.113549.1.9.16.1.2': 'authData',\n    '1.2.840.113549.1.9.16.1.4 ': 'timestampToken',\n    '1.2.840.113549.1.9.16.1.17 ': 'firmwareLoadReceipt',\n    '1.2.840.113549.1.9.16.1.21': 'encKeyWithID',\n    '1.2.840.113549.1.9.16.1.23': 'authEnvelopedData',\n    '1.2.840.113549.1.9.16.2': 'sMimeAttributes',\n    '1.2.840.113549.1.9.16.2.1': 'receiptRequest',\n    '1.2.840.113549.1.9.16.2.12': 'signingCertificate',\n    '1.2.840.113549.1.9.16.2.14': 'timeStampToken',\n    '1.2.840.113549.1.9.16.2.2': 'securityLabel',\n    '1.2.840.113549.1.9.16.2.3': 'mlExpansionHistory',\n    '1.2.840.113549.1.9.16.2.34': 'unsignedData',\n    '1.2.840.113549.1.9.16.2.47': 'signingCertificateV2',\n    '1.2.840.113549.1.9.16.3.5': 'ESDH',\n    // pkcs#9 oids\n    '1.2.840.113549.1.9.20': 'friendlyName',\n    '1.2.840.113549.1.9.21': 'localKeyId',\n    '1.2.840.113549.1.9.22': 'certTypes',\n    '1.2.840.113549.1.9.22.1': 'x509Certificate',\n    '1.2.840.113549.1.9.22.2': 'sdsiCertificate',\n    '1.2.840.113549.1.9.23': 'crlTypes',\n    '1.2.840.113549.1.9.23.1': 'x509CRL',\n    '1.2.840.113549.1.9.24': 'secretTypes',\n    '1.2.840.113549.1.9.24.1': 'secret',\n    '1.2.840.113549.1.9.25.1': 'pkcs15Token',\n    '1.2.840.113549.1.9.25.2': 'encryptedPrivateKeyInfo',\n    '1.2.840.113549.1.9.25.3': 'randomNonce',\n    '1.2.840.113549.1.9.25.4': 'sequenceNumber',\n    '1.2.840.113549.1.9.25.5': 'pkcs7PDU',\n    '1.2.840.113549.1.9.26.1': 'pkcs9String',\n    '1.2.840.113549.1.9.26.2': 'signingTimeString',\n    '1.2.840.113549.1.9.27.1': 'caseIgnoreMatch',\n    '1.2.840.113549.1.9.27.2': 'signingTimeMatch',\n    // password-based-encryption for pkcs#12\n    '1.2.840.113549.1.12.0.1': 'pkcs-12',\n    '1.2.840.113549.1.12.1': 'pbe',\n    '1.2.840.113549.1.12.1.1': 'pbeWithSHAAnd128BitRC4',\n    '1.2.840.113549.1.12.1.2': 'pbeWithSHAAnd40BitRC4',\n    '1.2.840.113549.1.12.1.3': 'pbeWithSHAAnd3-KeyTripleDES-CBC',\n    '1.2.840.113549.1.12.1.4': 'pbeWithSHAAnd2-KeyTripleDES-CBC',\n    '1.2.840.113549.1.12.1.5': 'pbeWithSHAAnd128BitRC2-CBC',\n    '1.2.840.113549.1.12.1.6': 'pbeWithSHAAnd40BitRC2-CBC',\n    '1.2.840.113549.1.12.1.80': 'pbeUnknownGost',\n    '1.2.840.113549.1.12.2.1': 'pkcs8-key-shrouding',\n    '1.2.840.113549.1.12.3.1': 'keyBagId',\n    '1.2.840.113549.1.12.3.2': 'certAndCRLBagId',\n    '1.2.840.113549.1.12.3.3': 'secretBagId',\n    '1.2.840.113549.1.12.3.4': 'safeContentsId',\n    '1.2.840.113549.1.12.3.5': 'pkcs-8ShroudedKeyBagId',\n    '1.2.840.113549.1.12.4.1': 'x509CertCRLBagId',\n    '1.2.840.113549.1.12.4.2': 'pkcs-12-SDSICertBag',\n    // pkcs#12 safe bags\n    '1.2.840.113549.1.12.10.1.1': 'keyBag',\n    '1.2.840.113549.1.12.10.1.2': 'pkcs8ShroudedKeyBag',\n    '1.2.840.113549.1.12.10.1.3': 'certBag',\n    '1.2.840.113549.1.12.10.1.4': 'crlBag',\n    '1.2.840.113549.1.12.10.1.5': 'secretBag',\n    '1.2.840.113549.1.12.10.1.6': 'safeContentsBag',\n    // hash algorithm\n    '1.2.840.113549.2.5': 'md-5',\n    // symmetric key algorithm oids\n    '1.2.840.113549.3.7': 'des-EDE3-CBC',\n    // additional algorithms\n    '1.3.132.0.34': 'secp384r1',\n    '1.3.132.0.35': 'secp521r1',\n    '1.3.132.112': 'ecDH',\n    '1.3.14.3.2.26': 'sha1',\n    '1.3.6.1.4.1.311.2.1.14': 'msCertExtensions',\n    '1.3.6.1.4.1.311.17.1': 'keyProviderNameAttr',\n    '1.3.6.1.4.1.311.17.2': 'localMachineKeyset',\n    '1.3.6.1.4.1.311.17.3.20': 'certKeyIdentifierPropId',\n    // SignalCom algorithms\n    '1.3.6.1.4.1.5849': 'SignalCom',\n    '1.3.6.1.4.1.5849.1.1.1': 'id-sc-gost28147-ecb',\n    '1.3.6.1.4.1.5849.1.1.2': 'id-sc-gost28147-gamma',\n    '1.3.6.1.4.1.5849.1.1.3': 'id-sc-gost28147-gfb',\n    '1.3.6.1.4.1.5849.1.1.4': 'id-sc-gost28147-mac',\n    '1.3.6.1.4.1.5849.1.1.5': 'id-sc-gostR3410-94',\n    '1.3.6.1.4.1.5849.1.1.6.1.1.1': 'id-sc-gostR3410-94-default',\n    '1.3.6.1.4.1.5849.1.1.6.1.1.2': 'id-sc-gostR3410-94-test',\n    '1.3.6.1.4.1.5849.1.2.1': 'id-sc-gostR3411-94',\n    '1.3.6.1.4.1.5849.1.3.1': 'id-sc-gostR3411-94-with-gostR3410-94',\n    '1.3.6.1.4.1.5849.1.3.2': 'id-sc-gostR3411-94-with-gostR3410-2001',\n    '1.3.6.1.4.1.5849.1.4.1': 'id-sc-cmsGostWrap',\n    '1.3.6.1.4.1.5849.1.4.2': 'id-sc-cmsGost28147Wrap',\n    '1.3.6.1.4.1.5849.1.5.1': 'id-sc-pbeWithGost3411AndGost28147',\n    '1.3.6.1.4.1.5849.1.5.2': 'id-sc-pbeWithGost3411AndGost28147CFB',\n    '1.3.6.1.4.1.5849.1.6.2': 'id-sc-gostR3410-2001',\n    '1.3.6.1.4.1.5849.1.7.2': 'id-sc-hmacWithGostR3411',\n    '1.3.6.1.4.1.5849.1.8.1': 'id-sc-r3410-ESDH-r3411kdf',\n    '1.3.6.1.4.1.5849.1.8.3': 'id-sc-ecdh-singlePass-cofactor-r3411kdf',\n    '1.3.6.1.4.1.5849.2.2.1': 'id-sc-gostR3410-2001-publicKey',\n    // additinal data\n    '1.3.6.1.5.5.7.0.12': 'attribute-cert',\n    '1.3.6.1.5.5.7.1.1': 'authorityInfoAccess',\n    '1.3.6.1.5.5.7.1.4': 'auditIdentity',\n    '1.3.6.1.5.5.7.1.6': 'aaControls',\n    '1.3.6.1.5.5.7.1.10': 'ac-proxying',\n    '1.3.6.1.5.5.7.1.11': 'subjectInfoAccess',\n    '1.3.6.1.5.5.7.3.1': 'serverAuth',\n    '1.3.6.1.5.5.7.3.2': 'clientAuth',\n    '1.3.6.1.5.5.7.3.3': 'codeSigning',\n    '1.3.6.1.5.5.7.3.4': 'emailProtection',\n    '1.3.6.1.5.5.7.3.5': 'ipsecEndSystem',\n    '1.3.6.1.5.5.7.3.6': 'ipsecTunnel',\n    '1.3.6.1.5.5.7.3.7': 'ipsecUser',\n    '1.3.6.1.5.5.7.3.8': 'timeStamping',\n    '1.3.6.1.5.5.7.3.9': 'OCSPSigning',\n    '1.3.6.1.5.5.7.5.1': 'regCtrl',\n    '1.3.6.1.5.5.7.5.1.1': 'regToken',\n    '1.3.6.1.5.5.7.5.1.2': 'authenticator',\n    '1.3.6.1.5.5.7.5.1.3': 'pkiPublicationInfo',\n    '1.3.6.1.5.5.7.5.1.4': 'pkiArchiveOptions',\n    '1.3.6.1.5.5.7.5.1.5': 'oldCertID',\n    '1.3.6.1.5.5.7.5.1.6': 'protocolEncrKey',\n    '1.3.6.1.5.5.7.5.2': 'regInfoAttr',\n    '1.3.6.1.5.5.7.5.2.1': 'UTF8Pairs',\n    '1.3.6.1.5.5.7.5.2.2': 'certReq',\n    '1.3.6.1.5.5.7.6.2': 'noSignature',\n    '1.3.6.1.5.5.7.7.1': 'statusInfo',\n    '1.3.6.1.5.5.7.7.2': 'identification',\n    '1.3.6.1.5.5.7.7.3': 'identityProof',\n    '1.3.6.1.5.5.7.7.4': 'dataReturn',\n    '1.3.6.1.5.5.7.7.5': 'transactionId',\n    '1.3.6.1.5.5.7.7.6': 'senderNonce',\n    '1.3.6.1.5.5.7.7.7': 'recipientNonce',\n    '1.3.6.1.5.5.7.7.8': 'addExtensions',\n    '1.3.6.1.5.5.7.7.9': 'encryptedPOP',\n    '1.3.6.1.5.5.7.7.10': 'decryptedPOP',\n    '1.3.6.1.5.5.7.7.11': 'lraPOPWitness',\n    '1.3.6.1.5.5.7.7.15': 'getCert',\n    '1.3.6.1.5.5.7.7.16': 'getCRL',\n    '1.3.6.1.5.5.7.7.17': 'revokeRequest',\n    '1.3.6.1.5.5.7.7.18': 'regInfo',\n    '1.3.6.1.5.5.7.7.19': 'responseInfo',\n    '1.3.6.1.5.5.7.7.21': 'queryPending',\n    '1.3.6.1.5.5.7.7.22': 'popLinkRandom',\n    '1.3.6.1.5.5.7.7.23': 'popLinkWitness',\n    '1.3.6.1.5.5.7.7.24': 'confirmCertAcceptance',\n    '1.3.6.1.5.5.7.7.25': 'statusInfoV2',\n    '1.3.6.1.5.5.7.7.26': 'trustedAnchors',\n    '1.3.6.1.5.5.7.7.27': 'authPublish',\n    '1.3.6.1.5.5.7.7.28': 'batchRequests',\n    '1.3.6.1.5.5.7.7.29': 'batchResponses',\n    '1.3.6.1.5.5.7.7.30': 'publishCert',\n    '1.3.6.1.5.5.7.7.31': 'modCertTemplate',\n    '1.3.6.1.5.5.7.7.32': 'controlProcessed',\n    '1.3.6.1.5.5.7.7.33': 'popLinkWitnessV2',\n    '1.3.6.1.5.5.7.7.34': 'identityProofV2',\n    '1.3.6.1.5.5.7.9.1': 'dateOfBirth',\n    '1.3.6.1.5.5.7.9.2': 'placeOfBirth',\n    '1.3.6.1.5.5.7.9.3': 'gender',\n    '1.3.6.1.5.5.7.9.4': 'countryOfCitizenship',\n    '1.3.6.1.5.5.7.9.5': 'countryOfResidence',\n    '1.3.6.1.5.5.7.10.1': 'authenticationInfo',\n    '1.3.6.1.5.5.7.10.2': 'accessIdentity',\n    '1.3.6.1.5.5.7.10.3': 'chargingIdentity',\n    '1.3.6.1.5.5.7.10.4': 'group',\n    '1.3.6.1.5.5.7.10.6': 'encAttrs',\n    '1.3.6.1.5.5.7.12.2': 'PKIData',\n    '1.3.6.1.5.5.7.12.3': 'PKIResponse',\n    '1.3.6.1.5.5.7.48.1.1': 'ocsp-basic',\n    '1.3.6.1.5.5.7.48.1.2': 'ocsp-nonce',\n    '1.3.6.1.5.5.7.48.1.3': 'ocsp-crl',\n    '1.3.6.1.5.5.7.48.1.4': 'ocsp-response',\n    '1.3.6.1.5.5.7.48.1.5': 'ocsp-nocheck',\n    '1.3.6.1.5.5.7.48.1.6': 'ocsp-archive-cutoff',\n    '1.3.6.1.5.5.7.48.1.7': 'ocsp-service-locator',\n    // Key packages\n    '2.16.840.1.101.2.1.2.78.2': 'encryptedKeyPkg',\n    '2.16.840.1.101.2.1.2.78.3': 'keyPackageReceipt',\n    '2.16.840.1.101.2.1.2.78.5': 'aKeyPackage',\n    '2.16.840.1.101.2.1.2.78.6': 'keyPackageError',\n    // symmetric key algorithm oids\n    '2.16.840.1.101.3.4': 'nistAlgorithms',\n    '2.16.840.1.101.3.4.1': 'aes',\n    '2.16.840.1.101.3.4.1.1': 'aes128-ECB',\n    '2.16.840.1.101.3.4.1.2': 'aes128-CBC',\n    '2.16.840.1.101.3.4.1.3': 'aes128-OFB',\n    '2.16.840.1.101.3.4.1.4': 'aes128-CFB',\n    '2.16.840.1.101.3.4.1.5': 'aes128-wrap',\n    '2.16.840.1.101.3.4.1.6': 'aes128-GCM',\n    '2.16.840.1.101.3.4.1.7': 'aes128-CCM',\n    '2.16.840.1.101.3.4.1.8': 'aes128-wrap-pad',\n    '2.16.840.1.101.3.4.1.21': 'aes192-ECB',\n    '2.16.840.1.101.3.4.1.22': 'aes192-CBC',\n    '2.16.840.1.101.3.4.1.23': 'aes192-OFB',\n    '2.16.840.1.101.3.4.1.24': 'aes192-CFB',\n    '2.16.840.1.101.3.4.1.25': 'aes192-wrap',\n    '2.16.840.1.101.3.4.1.26': 'aes192-GCM',\n    '2.16.840.1.101.3.4.1.27': 'aes192-CCM',\n    '2.16.840.1.101.3.4.1.28': 'aes192-wrap-pad',\n    '2.16.840.1.101.3.4.1.41': 'aes256-ECB',\n    '2.16.840.1.101.3.4.1.42': 'aes256-CBC',\n    '2.16.840.1.101.3.4.1.43': 'aes256-OFB',\n    '2.16.840.1.101.3.4.1.44': 'aes256-CFB',\n    '2.16.840.1.101.3.4.1.45': 'aes256-wrap',\n    '2.16.840.1.101.3.4.1.46': 'aes256-GCM',\n    '2.16.840.1.101.3.4.1.47': 'aes256-CCM',\n    '2.16.840.1.101.3.4.1.48': 'aes256-wrap-pad',\n    // hash algorihtms\n    '2.16.840.1.101.3.4.2.1': 'sha256',\n    '2.16.840.1.101.3.4.2.2': 'sha384',\n    '2.16.840.1.101.3.4.2.3': 'sha512',\n    // pkcs12\n    '2.16.840.1.113730.3.1.216': 'userPKCS12',\n    // certificate issuer/subject OIDsets\n    '2.5.1.5.55': 'clearance',\n    '2.5.4.0': 'objectClass',\n    '2.5.4.1': 'aliasedEntryName',\n    '2.5.4.2': 'knowldgeinformation',\n    '2.5.4.3': 'commonName',\n    '2.5.4.5': 'serialName',\n    '2.5.4.6': 'countryName',\n    '2.5.4.7': 'localityName',\n    '2.5.4.8': 'stateOrProvinceName',\n    '2.5.4.9': 'streetAddress',\n    '2.5.4.10': 'organizationName',\n    '2.5.4.11': 'organizationalUnitName',\n    '2.5.4.12': 'title',\n    '2.5.4.13': 'description',\n    '2.5.4.14': 'searchGuide',\n    '2.5.4.15': 'businessCategory',\n    '2.5.4.16': 'postalAddress',\n    '2.5.4.17': 'postalCode',\n    '2.5.4.18': 'postOfficeBox',\n    '2.5.4.19': 'physicalDeliveryOfficeName',\n    '2.5.4.20': 'telephoneNumber',\n    '2.5.4.21': 'telexNumber',\n    '2.5.4.22': 'teletexTerminalIdentifier',\n    '2.5.4.23': 'facsimileTelephoneNumber',\n    '2.5.4.24': 'x121Address',\n    '2.5.4.25': 'internationalISDNNumber',\n    '2.5.4.26': 'registeredAddress',\n    '2.5.4.27': 'destinationIndicator',\n    '2.5.4.28': 'preferredDeliveryMethod',\n    '2.5.4.29': 'presentationAddress',\n    '2.5.4.30': 'supportedApplicationContext',\n    '2.5.4.31': 'member',\n    '2.5.4.32': 'owner',\n    '2.5.4.33': 'roleOccupant',\n    '2.5.4.34': 'seeAlso',\n    '2.5.4.35': 'userPassword',\n    '2.5.4.36': 'userCertificate',\n    '2.5.4.37': 'cACertificate',\n    '2.5.4.38': 'authorityRevocationList',\n    '2.5.4.39': 'certificateRevocationList',\n    '2.5.4.40': 'crossCertificatePair',\n    '2.5.4.41': 'name',\n    '2.5.4.42': 'givenName',\n    '2.5.4.43': 'initials',\n    '2.5.4.44': 'generationQualifier',\n    '2.5.4.45': 'uniqueIdentifier',\n    '2.5.4.46': 'dnQualifier',\n    '2.5.4.47': 'enhancedSearchGuide',\n    '2.5.4.48': 'protocolInformation',\n    '2.5.4.49': 'distinguishedName',\n    '2.5.4.50': 'uniqueMember',\n    '2.5.4.51': 'houseIdentifier',\n    '2.5.4.52': 'supportedAlgorithms',\n    '2.5.4.53': 'deltaRevocationList',\n    '2.5.4.58': 'attributeCertificate',\n    '2.5.4.65': 'pseudonym',\n    '2.5.4.72': 'role',\n    // X.509 extension OIDsets\n    '2.5.29.1': 'authorityKeyIdentifierX',\n    '2.5.29.2': 'keyAttributesX',\n    '2.5.29.3': 'certificatePoliciesX',\n    '2.5.29.4': 'keyUsageRestriction',\n    '2.5.29.5': 'policyMapping',\n    '2.5.29.6': 'subtreesConstraint',\n    '2.5.29.7': 'subjectAltNameX',\n    '2.5.29.8': 'issuerAltNameX',\n    '2.5.29.9': 'subjectDirectoryAttributes',\n    '2.5.29.10': 'basicConstraintsX',\n    '2.5.29.11': 'nameConstraintsX',\n    '2.5.29.12': 'policyConstraintsX',\n    '2.5.29.13': 'basicConstraintsY',\n    '2.5.29.14': 'subjectKeyIdentifier',\n    '2.5.29.15': 'keyUsage',\n    '2.5.29.16': 'privateKeyUsagePeriod',\n    '2.5.29.17': 'subjectAltName',\n    '2.5.29.18': 'issuerAltName',\n    '2.5.29.19': 'basicConstraints',\n    '2.5.29.20': 'cRLNumber',\n    '2.5.29.21': 'cRLReason',\n    '2.5.29.22': 'expirationDate',\n    '2.5.29.23': 'instructionCode',\n    '2.5.29.24': 'invalidityDate',\n    '2.5.29.25': 'cRLDistributionPointsX',\n    '2.5.29.26': 'issuingDistributionPointX',\n    '2.5.29.27': 'deltaCRLIndicator',\n    '2.5.29.28': 'issuingDistributionPoint',\n    '2.5.29.29': 'certificateIssuer',\n    '2.5.29.30': 'nameConstraints',\n    '2.5.29.31': 'cRLDistributionPoints',\n    '2.5.29.32': 'certificatePolicies',\n    '2.5.29.33': 'policyMappings',\n    '2.5.29.34': 'policyConstraintsY',\n    '2.5.29.35': 'authorityKeyIdentifier',\n    '2.5.29.36': 'policyConstraints',\n    '2.5.29.37': 'extKeyUsage',\n    '2.5.29.46': 'freshestCRL',\n    '2.5.29.54': 'inhibitAnyPolicy',\n    '2.5.29.55': 'targetInformation',\n    '2.5.29.56': 'noRevAvail'\n};\n\n/**\n * ASN.1 Object Identifiers for friandly names\n * Generated automaticly\n * @field identifiers\n * @memberOf GostSecurity\n */\nvar identifiers = {};\nfor (let id in names)\n    identifiers[names[id]] = id;\n\n// </editor-fold>\n\n/**\n * Algorithm identifiers {@link gostCrypto.AlgorithmIdentifier} for Object Identifiers\n *\n * @field algorithms\n * @memberOf GostSecurity\n */ // <editor-fold defaultstate=\"collapsed\">\nvar algorithms = {\n    // CryptoPro algoritms\n    'id-GostR3411-94-with-GostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94',\n    'id-GostR3411-94-with-GostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94',\n    'id-GostR3411-94': 'GOST R 34.11-94',\n    'id-HMACGostR3411-94': { name: 'HMAC', hash: { name: 'GOST R 34.11-94' } },\n    'id-Gost28147-89-None-KeyWrap': 'GOST 28147-89-KW',\n    'id-Gost28147-89-CryptoPro-KeyWrap': 'GOST 28147-89-CPKW',\n    'id-GostR3410-2001': 'GOST R 34.10-2001',\n    'id-GostR3410-94': 'GOST R 34.10-94',\n    'id-GostR3410-94-a': 'GOST R 34.10-94',\n    'id-GostR3410-94-aBis': 'GOST R 34.10-94',\n    'id-GostR3410-94-b': 'GOST R 34.10-94',\n    'id-GostR3410-94-bBis': 'GOST R 34.10-94',\n    'id-Gost28147-89': 'GOST 28147-89',\n    'id-Gost28147-89-MAC': 'GOST 28147-89-MAC',\n    'id-GostR3410-2001-CryptoPro-ESDH': 'GOST R 34.10-2001-DH/GOST R 34.11-94',\n    'id-GostR3410-94-CryptoPro-ESDH': 'GOST R 34.10-94-DH/GOST R 34.11-94',\n    'id-GostR3410-2001DH': 'GOST R 34.10-2001-DH',\n    'id-GostR3410-94DH': 'GOST R 34.10-94-DH',\n    // TK-26 attributes\n    'id-tc26-gost3410-12-256': 'GOST R 34.10-256',\n    'id-tc26-gost3410-12-512': 'GOST R 34.10-512',\n    'id-tc26-gost3411-94': 'GOST R 34.11-94',\n    'id-tc26-gost3411-12-256': 'GOST R 34.11-256',\n    'id-tc26-gost3411-12-512': 'GOST R 34.11-512',\n    'id-tc26-signwithdigest-gost3410-12-94': 'GOST R 34.10-256/GOST R 34.11-94',\n    'id-tc26-signwithdigest-gost3410-12-256': 'GOST R 34.10-256/GOST R 34.11-256',\n    'id-tc26-signwithdigest-gost3410-12-512': 'GOST R 34.10-512/GOST R 34.11-512',\n    'id-tc26-hmac-gost-3411-12-256': { name: 'HMAC', hash: { name: 'GOST R 34.11-256' } },\n    'id-tc26-hmac-gost-3411-12-512': { name: 'HMAC', hash: { name: 'GOST R 34.11-512' } },\n    'id-tc26-agreement-gost-3410-12-256': 'GOST R 34.10-256-DH/GOST R 34.11-256',\n    'id-tc26-agreement-gost-3410-12-512': 'GOST R 34.10-512-DH/GOST R 34.11-256',\n    // SignalCom algorithms\n    'id-sc-gost28147-ecb': 'GOST 28147-89-ECB/SC',\n    'id-sc-gost28147-gamma': 'GOST 28147-89-CTR/SC',\n    'id-sc-gost28147-gfb': 'GOST 28147-89-CFB/SC',\n    'id-sc-gost28147-mac': 'GOST 28147-89-MAC/SC',\n    'id-sc-gostR3410-94': 'GOST R 34.10-94/SC',\n    'id-sc-gostR3410-94-default': 'GOST R 34.10-94/SC',\n    'id-sc-gostR3410-94-test': 'GOST R 34.10-94/SC/S-TEST',\n    'id-sc-gostR3411-94': 'GOST R 34.11-94/SC',\n    'id-sc-gostR3411-94-with-gostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94/SC',\n    'id-sc-gostR3411-94-with-gostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94/SC',\n    'id-sc-cmsGostWrap': 'GOST 28147-89-SCKW/SC',\n    'id-sc-cmsGost28147Wrap': 'GOST 28147-89-KW/SC',\n    'id-sc-pbeWithGost3411AndGost28147': {\n        derivation: { name: 'GOST R 34.11-94-PBKDF2/SC' },\n        encryption: { name: 'GOST 28147-ECB/SC' }\n    },\n    'id-sc-pbeWithGost3411AndGost28147CFB': {\n        derivation: { name: 'GOST R 34.11-94-PBKDF2/SC' },\n        encryption: { name: 'GOST 28147-CFB/SC' }\n    },\n    'id-sc-gostR3410-2001': 'GOST R 34.10-2001/SC',\n    'id-sc-hmacWithGostR3411': { name: 'HMAC', hash: { name: 'GOST R 34.11-94/SC' } },\n    'id-sc-r3410-ESDH-r3411kdf': 'GOST R 34.10-2001-DH/GOST R 34.11-94/SC',\n    // RSA algorithms\n    noSignature: 'NONE',\n    rsaEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } },\n    sha1withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-1' } },\n    sha256withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } },\n    sha384withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-384' } },\n    sha512withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-512' } },\n    'rsaes-oaep': 'RSA-OAEP',\n    'rsassa-pss': 'RSA-PSS',\n    // ECDSA\n    'ecdsa': 'ECDSA',\n    'ecdsa-with-SHA1': { name: 'ECDSA', hash: { name: 'SHA-1' } },\n    'ecdsa-with-SHA256': { name: 'ECDSA', hash: { name: 'SHA-256' } },\n    'ecdsa-with-SHA384': { name: 'ECDSA', hash: { name: 'SHA-384' } },\n    'ecdsa-with-SHA512': { name: 'ECDSA', hash: { name: 'SHA-512' } },\n    // Legion of the Bouncy Castle pbe\n    'pbeWithSHAAndAES128-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\n        encryption: { name: 'AES-CBC', length: 128 }\n    },\n    'pbeWithSHAAndAES192-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\n        encryption: { name: 'AES-CBC', length: 192 }\n    },\n    'pbeWithSHAAndAES256-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\n        encryption: { name: 'AES-CBC', length: 256 }\n    },\n    'pbeWithSHA256AndAES128-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\n        encryption: { name: 'AES-CBC', length: 128 }\n    },\n    'pbeWithSHA256AndAES192-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\n        encryption: { name: 'AES-CBC', length: 192 }\n    },\n    'pbeWithSHA256AndAES256-CBC': {\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\n        encryption: { name: 'AES-CBC', length: 256 }\n    },\n    // PKCS12 PBE\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': {\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\n        encryption: { name: '3DES', block: 'CBC' }\n    },\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': {\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\n        encryption: { name: '2DES', block: 'CBC' }\n    },\n    'pbeWithSHAAnd128BitRC2-CBC': {\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\n        encryption: { name: 'RC2', block: 'CBC', length: 128 }\n    },\n    'pbeWithSHAAnd40BitRC2-CBC': {\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\n        encryption: { name: 'RC2', block: 'CBC', length: 40 }\n    },\n    'pbeUnknownGost': {\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'GOST R 34.11-94' },\n        encryption: { name: 'GOST 28147-89-CFB' }\n    },\n    //  Diffie-Hellman Key Exchange Keys\n    ecDH: 'ECDH',\n    dhKeyAgreement: 'DH',\n    // symmetric key algorithm oids\n    'aes128-CBC': { name: 'AES-CBC', length: 128 },\n    'aes128-CFB': { name: 'AES-CFB-8', length: 128 },\n    'aes128-GCM': { name: 'AES-GCM', length: 128 },\n    'aes128-wrap': { name: 'AES-KW', length: 128 },\n    'aes192-CBC': { name: 'AES-CBC', length: 192 },\n    'aes192-CFB': { name: 'AES-CFB-8', length: 192 },\n    'aes192-GCM': { name: 'AES-GCM', length: 192 },\n    'aes192-wrap': { name: 'AES-KW', length: 192 },\n    'aes256-CBC': { name: 'AES-CBC', length: 256 },\n    'aes256-CFB': { name: 'AES-CFB-8', length: 256 },\n    'aes256-GCM': { name: 'AES-GCM', length: 256 },\n    'aes256-wrap': { name: 'AES-KW', length: 256 },\n    // hash algorihtms\n    sha1: 'SHA-1',\n    sha256: 'SHA-256',\n    sha384: 'SHA-384',\n    sha512: 'SHA-512',\n    // PBE\n    PBKDF2: 'PBKDF2',\n    PBES2: { derivation: { name: 'PBKDF2' }, encryption: {} },\n    PBMAC1: { derivation: { name: 'PBKDF2' }, hmac: {} },\n    // HMAC\n    hmacWithSHA1: 'SHA-1-HMAC',\n    hmacWithSHA256: { name: 'HMAC', hash: { name: 'SHA-256' } },\n    hmacWithSHA384: { name: 'HMAC', hash: { name: 'SHA-384' } },\n    hmacWithSHA512: { name: 'HMAC', hash: { name: 'SHA-512' } }\n};\n\n// Each algorithm must has id for convertions\nfor (let id in algorithms) {\n    let algorithm = algorithms[id];\n    if (typeof algorithm === 'string') {\n        algorithm = { name: algorithm };\n    }\n    algorithm.id = id;\n    algorithms[id] = algorithm;\n}  // </editor-fold>\n\n/**\n * Algorithm parameters\n *\n * @field parameters\n * @memberOf GostSecurity\n */ // <editor-fold defaultstate=\"collapsed\">\nvar parameters = {\n    'id-GostR3410-94-TestParamSet': { namedParam: 'S-TEST' },\n    'id-GostR3410-94-CryptoPro-A-ParamSet': { namedParam: 'S-A' },\n    'id-GostR3410-94-CryptoPro-B-ParamSet': { namedParam: 'S-B' },\n    'id-GostR3410-94-CryptoPro-C-ParamSet': { namedParam: 'S-C' },\n    'id-GostR3410-94-CryptoPro-D-ParamSet': { namedParam: 'S-D' },\n    'id-GostR3410-94-CryptoPro-XchA-ParamSet': { namedParam: 'X-A' },\n    'id-GostR3410-94-CryptoPro-XchB-ParamSet': { namedParam: 'X-B' },\n    'id-GostR3410-94-CryptoPro-XchC-ParamSet': { namedParam: 'X-C' },\n    // CryptoPro named curves\n    'id-GostR3410-2001-CryptoPro-TestParamSet': { namedCurve: 'S-256-TEST' },\n    'id-GostR3410-2001-CryptoPro-A-ParamSet': { namedCurve: 'S-256-A' },\n    'id-GostR3410-2001-CryptoPro-B-ParamSet': { namedCurve: 'S-256-B' },\n    'id-GostR3410-2001-CryptoPro-C-ParamSet': { namedCurve: 'S-256-C' },\n    'id-GostR3410-2001-CryptoPro-XchA-ParamSet': { namedCurve: 'X-256-A' },\n    'id-GostR3410-2001-CryptoPro-XchB-ParamSet': { namedCurve: 'X-256-B' },\n    // TC-26 named curves\n    'id-tc26-gost-3410-12-256-paramSetTest': { namedCurve: 'T-256-TEST' },\n    'id-tc26-gost-3410-12-256-paramSetA': { namedCurve: 'T-256-A' },\n    'id-tc26-gost-3410-12-256-paramSetB': { namedCurve: 'T-256-B' },\n    'id-tc26-gost-3410-12-512-paramSetTest': { namedCurve: 'T-512-TEST' },\n    'id-tc26-gost-3410-12-512-paramSetA': { namedCurve: 'T-512-A' },\n    'id-tc26-gost-3410-12-512-paramSetB': { namedCurve: 'T-512-B' },\n    'id-tc26-gost-3410-12-512-paramSetC': { namedCurve: 'T-512-C' },\n    'id-tc26-gost-3410-12-512-paramSetD': { namedCurve: 'T-512-D' },\n    // Curve attributes additional algorithms\n    secp256r1: { namedCurve: 'P-256' },\n    secp384r: { namedCurve: 'P-384' },\n    secp521r: { namedCurve: 'P-521' },\n    // CryptoPro encryption parameters\n    'id-GostR3411-94-TestParamSet': { sBox: 'D-TEST' },\n    'id-GostR3411-94-CryptoProParamSet': { sBox: 'D-A' },\n    'id-GostR3411-94-CryptoPro-A-ParamSet': { sBox: 'D-B' },\n    'id-GostR3411-94-CryptoPro-B-ParamSet': { sBox: 'D-C' },\n    'id-GostR3411-94-CryptoPro-C-ParamSet': { sBox: 'D-D' },\n    'id-Gost28147-89-TestParamSet': { block: 'CTR', sBox: 'E-TEST' },\n    'id-Gost28147-89-CryptoPro-A-ParamSet': { block: 'CFB', sBox: 'E-A', keyMeshing: 'CP' },\n    'id-Gost28147-89-CryptoPro-B-ParamSet': { block: 'CFB', sBox: 'E-B', keyMeshing: 'CP' },\n    'id-Gost28147-89-CryptoPro-C-ParamSet': { block: 'CFB', sBox: 'E-C', keyMeshing: 'CP' },\n    'id-Gost28147-89-CryptoPro-D-ParamSet': { block: 'CFB', sBox: 'E-D', keyMeshing: 'CP' },\n    'id-Gost28147-89-None-KeyMeshing': { keyMeshing: 'NO' },\n    'id-Gost28147-89-CryptoPro-KeyMeshing': { keyMeshing: 'CP' },\n    // TC-26 encryption parameters\n    'id-tc26-gost-28147-param-Z': { block: 'CFB', sBox: 'E-Z' }\n};  // </editor-fold>\n\n/**\n * Named attributes for Algorithm identifiers {@link AlgorithmIdentifier}<br><br>\n *\n * Recognized attributes:\n *  <ul>\n *      <li>sBox - Paramsets for GOST 28147. Supported values:\n *          <ul>\n *              <li>D-TEST - id-GostR3411-94-TestParamSet</li>\n *              <li>D-A - id-GostR3411-94-CryptoProParamSet</li>\n *              <li>D-B - id-GostR3411-94-CryptoPro-A-ParamSet</li>\n *              <li>D-C - id-GostR3411-94-CryptoPro-B-ParamSet</li>\n *              <li>D-D - id-GostR3411-94-CryptoPro-C-ParamSet</li>\n *              <li>E-TEST - id-Gost28147-89-TestParamSet</li>\n *              <li>E-A - id-Gost28147-89-CryptoPro-A-ParamSet</li>\n *              <li>E-B - id-Gost28147-89-CryptoPro-B-ParamSet</li>\n *              <li>E-C - id-Gost28147-89-CryptoPro-C-ParamSet</li>\n *              <li>E-D - id-Gost28147-89-CryptoPro-D-ParamSet</li>\n *              <li>E-Z - id-tc26-gost-28147-param-Z</li>\n *              <li>D-256 - id-tc26-gost3411-12-256</li>\n *              <li>D-512 - id-tc26-gost3411-12-512</li>\n *          </ul>\n *      </li>\n *      <li>namedParam - Paramset for GOST R 34.10-94\n *          <ul>\n *              <li>S-TEST - id-GostR3410-94-TestParamSet</li>\n *              <li>S-A - id-GostR3410-94-CryptoPro-A-ParamSet</li>\n *              <li>S-B - id-GostR3410-94-CryptoPro-B-ParamSet</li>\n *              <li>S-C - id-GostR3410-94-CryptoPro-C-ParamSet</li>\n *              <li>S-D - id-GostR3410-94-CryptoPro-D-ParamSet</li>\n *              <li>X-A - id-GostR3410-94-CryptoPro-XchA-ParamSet</li>\n *              <li>X-B - id-GostR3410-94-CryptoPro-XchB-ParamSet</li>\n *              <li>X-C - id-GostR3410-94-CryptoPro-XchC-ParamSet</li>\n *          </ul>\n *      </li>\n *      <li>namedCurve - Paramset for GOST R 34.10-01 and GOST R 34.10-12\n *          <ul>\n *              <li>S-256-TEST - id-GostR3410-2001-CryptoPro-TestParamSet</li>\n *              <li>S-256-A - id-GostR3410-2001-CryptoPro-A-ParamSet</li>\n *              <li>S-256-B - id-GostR3410-2001-CryptoPro-B-ParamSet</li>\n *              <li>S-256-C - id-GostR3410-2001-CryptoPro-C-ParamSet</li>\n *              <li>X-256-A - id-GostR3410-2001-CryptoPro-XchA-ParamSet</li>\n *              <li>X-256-B - id-GostR3410-2001-CryptoPro-XchB-ParamSet</li>\n *              <li>P-256 - secp256r1</li>\n *              <li>T-256-TEST - id-tc26-gost-3410-12-256-paramSetTest</li>\n *              <li>T-256-A - id-tc26-gost-3410-12-256-paramSetA</li>\n *              <li>T-256-B - id-tc26-gost-3410-12-256-paramSetB</li>\n *              <li>T-512-TEST - id-tc26-gost-3410-12-512-paramSetTest</li>\n *              <li>T-512-A - id-tc26-gost-3410-12-512-paramSetA</li>\n *              <li>T-512-B - id-tc26-gost-3410-12-512-paramSetB</li>\n *          </ul>\n *      </li>\n *  </ul>\n * @field attributes\n * @memberOf GostSecurity\n */ // <editor-fold defaultstate=\"collapsed\">\nvar attributes = {\n    sBox: {\n        'D-TEST': 'id-GostR3411-94-TestParamSet',\n        'D-A': 'id-GostR3411-94-CryptoProParamSet',\n        'D-B': 'id-GostR3411-94-CryptoPro-A-ParamSet',\n        'D-C': 'id-GostR3411-94-CryptoPro-B-ParamSet',\n        'D-D': 'id-GostR3411-94-CryptoPro-C-ParamSet',\n        'E-TEST': 'id-Gost28147-89-TestParamSet',\n        'E-A': 'id-Gost28147-89-CryptoPro-A-ParamSet',\n        'E-B': 'id-Gost28147-89-CryptoPro-B-ParamSet',\n        'E-C': 'id-Gost28147-89-CryptoPro-C-ParamSet',\n        'E-D': 'id-Gost28147-89-CryptoPro-D-ParamSet',\n        'E-Z': 'id-tc26-gost-28147-param-Z',\n        'D-256': 'id-tc26-gost3411-12-256',\n        'D-512': 'id-tc26-gost3411-12-512'\n    },\n    namedParam: {\n        'S-TEST': 'id-GostR3410-94-TestParamSet',\n        'S-A': 'id-GostR3410-94-CryptoPro-A-ParamSet',\n        'S-B': 'id-GostR3410-94-CryptoPro-B-ParamSet',\n        'S-C': 'id-GostR3410-94-CryptoPro-C-ParamSet',\n        'S-D': 'id-GostR3410-94-CryptoPro-D-ParamSet',\n        'X-A': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\n        'X-B': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\n        'X-C': 'id-GostR3410-94-CryptoPro-XchC-ParamSet'\n    },\n    namedCurve: {\n        'S-256-TEST': 'id-GostR3410-2001-CryptoPro-TestParamSet',\n        'S-256-A': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\n        'S-256-B': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\n        'S-256-C': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\n        'X-256-A': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\n        'X-256-B': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\n        'P-256': 'secp256r1',\n        'T-256-TEST': 'id-tc26-gost-3410-12-256-paramSetTest',\n        'T-256-A': 'id-tc26-gost-3410-12-256-paramSetA',\n        'T-256-B': 'id-tc26-gost-3410-12-256-paramSetB',\n        'T-512-TEST': 'id-tc26-gost-3410-12-512-paramSetTest',\n        'T-512-A': 'id-tc26-gost-3410-12-512-paramSetA',\n        'T-512-B': 'id-tc26-gost-3410-12-512-paramSetB'\n    }\n}; // </editor-fold>\n\n/**\n * Set of algorithms for different providers<br><br>\n * Supported providers:\n *  <ul>\n *      <li><b>CP-94</b> - CryptoPro GOST R 34.10-94 algorithm set</li>\n *      <li><b>CP-01</b> - CryptoPro GOST R 34.10-2001 algorithm set</li>\n *      <li><b>TC-256</b> - Technical Commitee GOST R 34.10-256 algorithm set</li>\n *      <li><b>TC-512</b> - Technical Commitee GOST R 34.10-512 algorithm set</li>\n *      <li><b>SC-94</b> - SignalCom GOST R 34.10-94 algorithm set</li>\n *      <li><b>SC-01</b> - SignalCom GOST R 34.10-2001 algorithm set</li>\n *  </ul>\n *\n *  Follow set can be used if it's supported your browser native WebCrypto API:\n *  <ul>\n *      <li><b>RSA-2048</b> - RSA Encryption 2048 bits with SHA-256 algorithm set</li>\n *      <li><b>ECDSA-256</b> - ECDSA-256 with SHA-256 algorithm set</li>\n *  </ul>\n *\n *  Each provider records has follow standart algorithm identifiers:\n *  <ul>\n *      <li><b>signature</b> - Signature algorithm</li>\n *      <li><b>generation</b> - Asymmetric key generation algorithm</li>\n *      <li><b>digest</b> - Digest algorithm</li>\n *      <li><b>wrapping</b> - Key wrapping algorithm</li>\n *      <li><b>hmac</b> - Hash-based message authentication code algorithm</li>\n *      <li><b>agreement</b> - Key agreement algorithm (except RSA schema)</li>\n *      <li><b>encryption</b> - Content encription algorithm</li>\n *      <li><b>derivation</b> - Password-based derivation algorithm</li>\n *      <li><b>pbes</b> - Password-based encryption algorithm</li>\n *      <li><b>pbmac</b> - Password-based message authentication code algorithm</li>\n *  </ul>\n *\n * @field providers\n * @memberOf GostSecurity\n */ // <editor-fold defaultstate=\"collapsed\">\nvar providers = {\n    'CP-94': {\n        title: 'Crypto-Pro GOST R 34.10-94 Cryptographic Service Provider',\n        signature: algorithms['id-GostR3411-94-with-GostR3410-94'],\n        publicKey: { id: 'id-GostR3410-94', name: 'GOST R 34.10-94', namedParam: 'X-A' },\n        privateKey: { id: 'id-GostR3410-94DH', name: 'GOST R 34.10-94-DH', namedParam: 'X-A' },\n        digest: algorithms['id-GostR3411-94'],\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\n        hmac: algorithms['id-HMACGostR3411-94'],\n        agreement: algorithms['id-GostR3410-94-CryptoPro-ESDH'],\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89', block: 'CFB', sBox: 'E-A', keyMeshing: 'CP' },\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000 }\n    },\n    'CP-01': {\n        title: 'Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider',\n        signature: algorithms['id-GostR3411-94-with-GostR3410-2001'],\n        publicKey: { id: 'id-GostR3410-2001', name: 'GOST R 34.10-2001', namedCurve: 'X-256-A' },\n        privateKey: { id: 'id-GostR3410-2001DH', name: 'GOST R 34.10-2001-DH', namedCurve: 'X-256-A' },\n        digest: { id: 'id-GostR3411-94', name: 'GOST R 34.11-94', sBox: 'D-A' },\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\n        hmac: algorithms['id-HMACGostR3411-94'],\n        agreement: algorithms['id-GostR3410-2001-CryptoPro-ESDH'],\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000 }\n    },\n    'TC-256': {\n        title: 'Crypto-Pro GOST R 34.10-2012 Cryptographic Service Provider',\n        signature: algorithms['id-tc26-signwithdigest-gost3410-12-256'],\n        publicKey: { id: 'id-tc26-gost3410-12-256', name: 'GOST R 34.10-256', namedCurve: 'X-256-A' },\n        privateKey: {\n            id: 'id-tc26-agreement-gost-3410-12-256',\n            name: 'GOST R 34.10-256-DH/GOST R 34.11-256',\n            namedCurve: 'X-256-A'\n        },\n        digest: algorithms['id-tc26-gost3411-12-256'],\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\n        hmac: algorithms['id-tc26-hmac-gost-3411-12-256'],\n        agreement: algorithms['id-tc26-agreement-gost-3410-12-256'],\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-256-12-PBKDF2', iterations: 2000 }\n    },\n    'TC-512': {\n        title: 'Crypto-Pro GOST R 34.10-2012 Strong Cryptographic Service Provider',\n        signature: algorithms['id-tc26-signwithdigest-gost3410-12-512'],\n        publicKey: { id: 'id-tc26-gost3410-12-512', name: 'GOST R 34.10-512', namedCurve: 'T-512-A' },\n        privateKey: {\n            id: 'id-tc26-agreement-gost-3410-12-512',\n            name: 'GOST R 34.10-512-DH/GOST R 34.11-256',\n            namedCurve: 'T-512-A'\n        },\n        digest: algorithms['id-tc26-gost3411-12-512'],\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\n        hmac: algorithms['id-tc26-hmac-gost-3411-12-512'],\n        agreement: algorithms['id-tc26-agreement-gost-3410-12-512'],\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-256-PBKDF2', iterations: 2000 }\n    },\n    'SC-94': {\n        title: 'Signal-COM GOST Cryptographic Provider',\n        signature: algorithms['id-sc-gostR3411-94-with-gostR3410-94'],\n        publicKey: { id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', namedParam: 'S-A' },\n        privateKey: {\n            id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', modulusLength: 1024, param: {\n                p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\n                q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\n                a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\n            }\n        },\n        digest: algorithms['id-sc-gostR3411-94'],\n        encryption: { id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC' },\n        hmac: algorithms['id-sc-hmacWithGostR3411'],\n        wrapping: ['id-sc-cmsGostWrap'],\n        agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\n        pbes: {\n            id: 'id-sc-pbeWithGost3411AndGost28147CFB',\n            derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\n            encryption: {\n                id: 'id-sc-gost28147-gfb',\n                name: 'GOST 28147-CFB/SC',\n                iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])\n            }\n        }\n    },\n    'SC-01': {\n        title: 'Signal-COM ECGOST Cryptographic Provider',\n        signature: algorithms['id-sc-gostR3411-94-with-gostR3410-2001'],\n        publicKey: { id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', namedCurve: 'P-256' },\n        privateKey: {\n            id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', curve: {\n                p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\n                a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\n                b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\n                x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\n                y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\n                q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\n            }\n        },\n        digest: algorithms['id-sc-gostR3411-94'],\n        encryption: { id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC' },\n        hmac: algorithms['id-sc-hmacWithGostR3411'],\n        wrapping: algorithms['id-sc-cmsGostWrap'],\n        agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\n        pbes: {\n            id: 'id-sc-pbeWithGost3411AndGost28147CFB',\n            derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\n            encryption: {\n                id: 'id-sc-gost28147-gfb',\n                name: 'GOST 28147-CFB/SC',\n                iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])\n            }\n        }\n    },\n    'RSA-2048': {\n        title: 'Microsoft Strong Cryptographic Provider',\n        signature: algorithms['sha256withRSAEncryption'],\n        publicKey: {\n            id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']\n        },\n        privateKey: {\n            id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']\n        },\n        digest: algorithms['sha256'],\n        encryption: algorithms['aes256-CFB'],\n        hmac: algorithms['hmacWithSHA256']\n    },\n    'ECDSA-256': {\n        title: 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider',\n        signature: algorithms['ecdsa-with-SHA256'],\n        publicKey: { id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256' },\n        privateKey: { id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256' },\n        digest: algorithms['sha256'],\n        encryption: algorithms['aes256-CFB'],\n        hmac: algorithms['hmacWithSHA256'],\n        agreement: algorithms['ecDH']\n    }\n};\n// Russian providers extension\n['CP-94', 'CP-01', 'TC-256', 'TC-512', 'SC-94', 'SC-01'].forEach(function (name) {\n    var provider = providers[name];\n    provider.hmac = expand(provider.hmac, { hash: provider.digest });\n    provider.derivation = expand(provider.derivation, { hash: provider.digest, hmac: provider.hmac });\n    provider.pbes = provider.pbes || {\n        id: 'PBES2', derivation: provider.derivation,\n        encryption: provider.encryption\n    };\n    provider.pbmac = provider.pbmac || {\n        id: 'PBMAC1', derivation: provider.derivation,\n        hmac: provider.hmac\n    };\n    provider.agreement = expand(provider.agreement, { wrapping: provider.wrapping });\n});\n// RSA & ECDA providers extension\n['RSA-2048', 'ECDSA-256'].forEach(function (name) {\n    var provider = providers[name];\n    provider.derivation = provider.derivation || {\n        id: 'PBKDF2', name: 'PBKDF2',\n        iterations: 2048, hash: provider.digest\n    };\n    provider.pbes = provider.pbes || {\n        id: 'PBES2',\n        derivation: provider.derivation,\n        encryption: provider.encryption\n    };\n    provider.pbmac = provider.pbmac || {\n        id: 'PBMAC1',\n        derivation: provider.derivation,\n        hmac: provider.hmac\n    };\n});\n// Workaround for Chrome error for RSA algorithm when hash for keys is not defined\n// if (root.crypto && root.crypto.subtle)\n//    setTimeout(function () {\n//        root.crypto.subtle.generateKey(providers['RSA-2048'].generation, false, [\"sign\"])['catch'](function () {\n//            providers['RSA-2048'].generation.hash = providers['RSA-2048'].digest;\n//            algorithms['rsaEncryption'].hash = providers['RSA-2048'].digest;\n//        });\n//    });\n// </editor-fold>\n\n/**\n * GOST and common ASN.1 Object and Algorithm Identifiers\n * @class GostSecurity\n */\nexport function GostSecurity() {\n}\n\nGostSecurity.prototype = {\n    names,\n    identifiers,\n    algorithms,\n    parameters,\n    attributes,\n    providers\n};\n\nexport const gostSecurityInstance = new GostSecurity();\n","/**\n * @file Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { DataError } from '../utils/errors';\n\n/**\n * The Coding interface provides string converting methods: Base64, Hex,\n * Int16, Chars, BER and PEM\n * @class GostCoding\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CryptoOperationData = ArrayBuffer;\n\nfunction buffer(d) {\n    if (d instanceof CryptoOperationData)\n        return d;\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n    else\n        throw new DataError('CryptoOperationData required');\n} // </editor-fold>\n\nexport function GostCoding() {\n}\n\n/**\n * BASE64 conversion\n *\n * @class GostCoding.Base64\n */\nvar Base64 = {// <editor-fold defaultstate=\"collapsed\">\n    /**\n     * Base64.decode convert BASE64 string s to CryptoOperationData\n     *\n     * @memberOf GostCoding.Base64\n     * @param {String} s BASE64 encoded string value\n     * @returns {CryptoOperationData} Binary decoded data\n     */\n    decode: function (s) {\n        s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n        var n = s.length,\n          k = n * 3 + 1 >> 2, r = new Uint8Array(k);\n\n        for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\n            m4 = i & 3;\n            var c = s.charCodeAt(i);\n\n            c = c > 64 && c < 91 ?\n              c - 65 : c > 96 && c < 123 ?\n                c - 71 : c > 47 && c < 58 ?\n                  c + 4 : c === 43 ?\n                    62 : c === 47 ?\n                      63 : 0;\n\n            u24 |= c << 18 - 6 * m4;\n            if (m4 === 3 || n - i === 1) {\n                for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\n                    r[j] = u24 >>> (16 >>> m3 & 24) & 255;\n                }\n                u24 = 0;\n\n            }\n        }\n        return r.buffer;\n    },\n    /**\n     * Base64.encode(data) convert CryptoOperationData data to BASE64 string\n     *\n     * @memberOf GostCoding.Base64\n     * @param {CryptoOperationData} data Bynary data for encoding\n     * @returns {String} BASE64 encoded data\n     */\n    encode: function (data) {\n        var slen = 8, d = new Uint8Array(buffer(data));\n        var m3 = 2, s = '';\n        for (var n = d.length, u24 = 0, i = 0; i < n; i++) {\n            m3 = i % 3;\n            if (i > 0 && (i * 4 / 3) % (12 * slen) === 0)\n                s += '\\r\\n';\n            u24 |= d[i] << (16 >>> m3 & 24);\n            if (m3 === 2 || n - i === 1) {\n                for (var j = 18; j >= 0; j -= 6) {\n                    var c = u24 >>> j & 63;\n                    c = c < 26 ? c + 65 : c < 52 ? c + 71 : c < 62 ? c - 4 :\n                      c === 62 ? 43 : c === 63 ? 47 : 65;\n                    s += String.fromCharCode(c);\n                }\n                u24 = 0;\n            }\n        }\n        return s.substr(0, s.length - 2 + m3) + (m3 === 2 ? '' : m3 === 1 ? '=' : '==');\n    } // </editor-fold>\n};\n\n/**\n * BASE64 conversion\n *\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.Base64\n */\nGostCoding.prototype.Base64 = Base64;\n\n/**\n * Text string conversion <br>\n * Methods support charsets: ascii, win1251, utf8, utf16 (ucs2, unicode), utf32 (ucs4)\n *\n * @class GostCoding.Chars\n */\nvar Chars = (function () { // <editor-fold defaultstate=\"collapsed\">\n\n    var _win1251_ = {\n        0x402: 0x80,\n        0x403: 0x81,\n        0x201A: 0x82,\n        0x453: 0x83,\n        0x201E: 0x84,\n        0x2026: 0x85,\n        0x2020: 0x86,\n        0x2021: 0x87,\n        0x20AC: 0x88,\n        0x2030: 0x89,\n        0x409: 0x8A,\n        0x2039: 0x8B,\n        0x40A: 0x8C,\n        0x40C: 0x8D,\n        0x40B: 0x8E,\n        0x40f: 0x8f,\n        0x452: 0x90,\n        0x2018: 0x91,\n        0x2019: 0x92,\n        0x201C: 0x93,\n        0x201D: 0x94,\n        0x2022: 0x95,\n        0x2013: 0x96,\n        0x2014: 0x97,\n        0x2122: 0x99,\n        0x459: 0x9A,\n        0x203A: 0x9B,\n        0x45A: 0x9C,\n        0x45C: 0x9D,\n        0x45B: 0x9E,\n        0x45f: 0x9f,\n        0xA0: 0xA0,\n        0x40E: 0xA1,\n        0x45E: 0xA2,\n        0x408: 0xA3,\n        0xA4: 0xA4,\n        0x490: 0xA5,\n        0xA6: 0xA6,\n        0xA7: 0xA7,\n        0x401: 0xA8,\n        0xA9: 0xA9,\n        0x404: 0xAA,\n        0xAB: 0xAB,\n        0xAC: 0xAC,\n        0xAD: 0xAD,\n        0xAE: 0xAE,\n        0x407: 0xAf,\n        0xB0: 0xB0,\n        0xB1: 0xB1,\n        0x406: 0xB2,\n        0x456: 0xB3,\n        0x491: 0xB4,\n        0xB5: 0xB5,\n        0xB6: 0xB6,\n        0xB7: 0xB7,\n        0x451: 0xB8,\n        0x2116: 0xB9,\n        0x454: 0xBA,\n        0xBB: 0xBB,\n        0x458: 0xBC,\n        0x405: 0xBD,\n        0x455: 0xBE,\n        0x457: 0xBf\n    };\n    var _win1251back_ = {};\n    for (var from in _win1251_) {\n        var to = _win1251_[from];\n        _win1251back_[to] = from;\n    }\n\n    return {\n        /**\n         * Chars.decode(s, charset) convert string s with defined charset to CryptoOperationData\n         *\n         * @memberOf GostCoding.Chars\n         * @param {string} s Javascript string\n         * @param {string} charset Charset, default 'win1251'\n         * @returns {CryptoOperationData} Decoded binary data\n         */\n        decode: function (s, charset) {\n            charset = (charset || 'win1251').toLowerCase().replace('-', '');\n            var r = [];\n            for (var i = 0, j = s.length; i < j; i++) {\n                var c = s.charCodeAt(i);\n                if (charset === 'utf8') {\n                    if (c < 0x80) {\n                        r.push(c);\n                    } else if (c < 0x800) {\n                        r.push(0xc0 + (c >>> 6));\n                        r.push(0x80 + (c & 63));\n                    } else if (c < 0x10000) {\n                        r.push(0xe0 + (c >>> 12));\n                        r.push(0x80 + (c >>> 6 & 63));\n                        r.push(0x80 + (c & 63));\n                    } else if (c < 0x200000) {\n                        r.push(0xf0 + (c >>> 18));\n                        r.push(0x80 + (c >>> 12 & 63));\n                        r.push(0x80 + (c >>> 6 & 63));\n                        r.push(0x80 + (c & 63));\n                    } else if (c < 0x4000000) {\n                        r.push(0xf8 + (c >>> 24));\n                        r.push(0x80 + (c >>> 18 & 63));\n                        r.push(0x80 + (c >>> 12 & 63));\n                        r.push(0x80 + (c >>> 6 & 63));\n                        r.push(0x80 + (c & 63));\n                    } else {\n                        r.push(0xfc + (c >>> 30));\n                        r.push(0x80 + (c >>> 24 & 63));\n                        r.push(0x80 + (c >>> 18 & 63));\n                        r.push(0x80 + (c >>> 12 & 63));\n                        r.push(0x80 + (c >>> 6 & 63));\n                        r.push(0x80 + (c & 63));\n                    }\n                } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\n                    if (c < 0xD800 || (c >= 0xE000 && c <= 0x10000)) {\n                        r.push(c >>> 8);\n                        r.push(c & 0xff);\n                    } else if (c >= 0x10000 && c < 0x110000) {\n                        c -= 0x10000;\n                        var first = ((0xffc00 & c) >> 10) + 0xD800;\n                        var second = (0x3ff & c) + 0xDC00;\n                        r.push(first >>> 8);\n                        r.push(first & 0xff);\n                        r.push(second >>> 8);\n                        r.push(second & 0xff);\n                    }\n                } else if (charset === 'utf32' || charset === 'ucs4') {\n                    r.push(c >>> 24 & 0xff);\n                    r.push(c >>> 16 & 0xff);\n                    r.push(c >>> 8 & 0xff);\n                    r.push(c & 0xff);\n                } else if (charset === 'win1251') {\n                    if (c >= 0x80) {\n                        if (c >= 0x410 && c < 0x450) // А..Яа..я\n                            c -= 0x350;\n                        else\n                            c = _win1251_[c] || 0;\n                    }\n                    r.push(c);\n                } else\n                    r.push(c & 0xff);\n            }\n            return new Uint8Array(r).buffer;\n        },\n        /**\n         * Chars.encode(data, charset) convert CryptoOperationData data to string with defined charset\n         *\n         * @memberOf GostCoding.Chars\n         * @param {CryptoOperationData} data Binary data\n         * @param {string} charset Charset, default win1251\n         * @returns {string} Encoded javascript string\n         */\n        encode: function (data, charset) {\n            charset = (charset || 'win1251').toLowerCase().replace('-', '');\n            var r = [], d = new Uint8Array(buffer(data));\n            for (var i = 0, n = d.length; i < n; i++) {\n                var c = d[i];\n                if (charset === 'utf8') {\n                    c = c >= 0xfc && c < 0xfe && i + 5 < n ? // six bytes\n                      (c - 0xfc) * 1073741824 + (d[++i] - 0x80 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                      : c >> 0xf8 && c < 0xfc && i + 4 < n ? // five bytes\n                        (c - 0xf8 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                        : c >> 0xf0 && c < 0xf8 && i + 3 < n ? // four bytes\n                          (c - 0xf0 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                          : c >= 0xe0 && c < 0xf0 && i + 2 < n ? // three bytes\n                            (c - 0xe0 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\n                            : c >= 0xc0 && c < 0xe0 && i + 1 < n ? // two bytes\n                              (c - 0xc0 << 6) + d[++i] - 0x80\n                              : c; // one byte\n                } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\n                    c = (c << 8) + d[++i];\n                    if (c >= 0xD800 && c < 0xE000) {\n                        var first = (c - 0xD800) << 10;\n                        c = d[++i];\n                        c = (c << 8) + d[++i];\n                        var second = c - 0xDC00;\n                        c = first + second + 0x10000;\n                    }\n                } else if (charset === 'utf32' || charset === 'ucs4') {\n                    c = (c << 8) + d[++i];\n                    c = (c << 8) + d[++i];\n                    c = (c << 8) + d[++i];\n                } else if (charset === 'win1251') {\n                    if (c >= 0x80) {\n                        if (c >= 0xC0 && c < 0x100)\n                            c += 0x350; // А..Яа..я\n                        else\n                            c = _win1251back_[c] || 0;\n                    }\n                }\n                r.push(String.fromCharCode(c));\n            }\n            return r.join('');\n        }\n    }; // </editor-fold>\n})();\n\n/**\n * Text string conversion\n *\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.Chars\n */\nGostCoding.prototype.Chars = Chars;\n\n/**\n * HEX conversion\n *\n * @class GostCoding.Hex\n */\nvar Hex = {// <editor-fold defaultstate=\"collapsed\">\n    /**\n     * Hex.decode(s, endean) convert HEX string s to CryptoOperationData in endean mode\n     *\n     * @memberOf GostCoding.Hex\n     * @param {string} s Hex encoded string\n     * @param {boolean} endean Little or Big Endean, default Little\n     * @returns {CryptoOperationData} Decoded binary data\n     */\n    decode: function (s, endean) {\n        s = s.replace(/[^A-fa-f0-9]/g, '');\n        var n = Math.ceil(s.length / 2), r = new Uint8Array(n);\n        s = (s.length % 2 > 0 ? '0' : '') + s;\n        if (endean && ((typeof endean !== 'string') ||\n          (endean.toLowerCase().indexOf('little') < 0)))\n            for (var i = 0; i < n; i++)\n                r[i] = parseInt(s.substr((n - i - 1) * 2, 2), 16);\n        else\n            for (var i = 0; i < n; i++)\n                r[i] = parseInt(s.substr(i * 2, 2), 16);\n        return r.buffer;\n    },\n    /**\n     * Hex.encode(data, endean) convert CryptoOperationData data to HEX string in endean mode\n     *\n     * @memberOf GostCoding.Hex\n     * @param {CryptoOperationData} data Binary data\n     * @param {boolean} endean Little/Big Endean, default Little\n     * @returns {string} Hex decoded string\n     */\n    encode: function (data, endean) {\n        var s = [], d = new Uint8Array(buffer(data)), n = d.length;\n        if (endean && ((typeof endean !== 'string') ||\n          (endean.toLowerCase().indexOf('little') < 0)))\n            for (var i = 0; i < n; i++) {\n                var j = n - i - 1;\n                s[j] = (j > 0 && j % 32 === 0 ? '\\r\\n' : '') +\n                  ('00' + d[i].toString(16)).slice(-2);\n            }\n        else\n            for (var i = 0; i < n; i++)\n                s[i] = (i > 0 && i % 32 === 0 ? '\\r\\n' : '') +\n                  ('00' + d[i].toString(16)).slice(-2);\n        return s.join('');\n    } // </editor-fold>\n};\n\n/**\n *  HEX conversion\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.Hex\n */\nGostCoding.prototype.Hex = Hex;\n\n/**\n * String hex-encoded integer conversion\n *\n * @class GostCoding.Int16\n */\nvar Int16 = {// <editor-fold defaultstate=\"collapsed\">\n    /**\n     * Int16.decode(s) convert hex big insteger s to CryptoOperationData\n     *\n     * @memberOf GostCoding.Int16\n     * @param {string} s Int16 string\n     * @returns {CryptoOperationData} Decoded binary data\n     */\n    decode: function (s) {\n        s = (s || '').replace(/[^\\-A-fa-f0-9]/g, '');\n        if (s.length === 0)\n            s = '0';\n        // Signature\n        var neg = false;\n        if (s.charAt(0) === '-') {\n            neg = true;\n            s = s.substring(1);\n        }\n        // Align 2 chars\n        while (s.charAt(0) === '0' && s.length > 1)\n            s = s.substring(1);\n        s = (s.length % 2 > 0 ? '0' : '') + s;\n        // Padding for singanuture\n        // '800000' - 'ffffff' - for positive\n        // '800001' - 'ffffff' - for negative\n        if ((!neg && !/^[0-7]/.test(s)) ||\n          (neg && !/^[0-7]|8[0]+$/.test(s)))\n            s = '00' + s;\n        // Convert hex\n        var n = s.length / 2, r = new Uint8Array(n), t = 0;\n        for (var i = n - 1; i >= 0; --i) {\n            var c = parseInt(s.substr(i * 2, 2), 16);\n            if (neg && (c + t > 0)) {\n                c = 256 - c - t;\n                t = 1;\n            }\n            r[i] = c;\n        }\n        return r.buffer;\n    },\n    /**\n     * Int16.encode(data) convert CryptoOperationData data to big integer hex string\n     *\n     * @memberOf GostCoding.Int16\n     * @param {CryptoOperationData} data Binary data\n     * @returns {string} Int16 encoded string\n     */\n    encode: function (data) {\n        var d = new Uint8Array(buffer(data)), n = d.length;\n        if (d.length === 0)\n            return '0x00';\n        var s = [], neg = d[0] > 0x7f, t = 0;\n        for (var i = n - 1; i >= 0; --i) {\n            var v = d[i];\n            if (neg && (v + t > 0)) {\n                v = 256 - v - t;\n                t = 1;\n            }\n            s[i] = ('00' + v.toString(16)).slice(-2);\n        }\n        s = s.join('');\n        while (s.charAt(0) === '0')\n            s = s.substring(1);\n        return (neg ? '-' : '') + '0x' + s;\n    } // </editor-fold>\n};\n\n/**\n * String hex-encoded integer conversion\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.Int16\n */\nGostCoding.prototype.Int16 = Int16;\n\n/**\n * BER, DER, CER conversion\n *\n * @class GostCoding.BER\n */\nvar BER = (function () { // <editor-fold defaultstate=\"collapsed\">\n\n    // Predefenition block\n    function encodeBER(source, format, onlyContent) {\n        // Correct primitive type\n        var object = source.object;\n        if (object === undefined)\n            object = source;\n\n        // Determinate tagClass\n        var tagClass = source.tagClass = source.tagClass || 0; // Universial default\n\n        // Determinate tagNumber. Use only for Universal class\n        if (tagClass === 0) {\n            var tagNumber = source.tagNumber;\n            if (typeof tagNumber === 'undefined') {\n                if (typeof object === 'string') {\n                    if (object === '')   // NULL\n                        tagNumber = 0x05;\n                    else if (/^\\-?0x[0-9a-fA-F]+$/.test(object)) // INTEGER\n                        tagNumber = 0x02;\n                    else if (/^(\\d+\\.)+\\d+$/.test(object)) // OID\n                        tagNumber = 0x06;\n                    else if (/^[01]+$/.test(object)) // BIT STRING\n                        tagNumber = 0x03;\n                    else if (/^(true|false)$/.test(object)) // BOOLEAN\n                        tagNumber = 0x01;\n                    else if (/^[0-9a-fA-F]+$/.test(object)) // OCTET STRING\n                        tagNumber = 0x04;\n                    else\n                        tagNumber = 0x13; // Printable string (later can be changed to UTF8String)\n                } else if (typeof object === 'number') { // INTEGER\n                    tagNumber = 0x02;\n                } else if (typeof object === 'boolean') { // BOOLEAN\n                    tagNumber = 0x01;\n                } else if (object instanceof Array) { // SEQUENCE\n                    tagNumber = 0x10;\n                } else if (object instanceof Date) { // GeneralizedTime\n                    tagNumber = 0x18;\n                } else if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) {\n                    tagNumber = 0x04;\n                } else\n                    throw new DataError('Unrecognized type for ' + object);\n            }\n        }\n\n        // Determinate constructed\n        var tagConstructed = source.tagConstructed;\n        if (typeof tagConstructed === 'undefined')\n            tagConstructed = source.tagConstructed = object instanceof Array;\n\n        // Create content\n        var content;\n        if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) { // Direct\n            content = new Uint8Array(buffer(object));\n            if (tagNumber === 0x03) { // BITSTRING\n                // Set unused bits\n                var a = new Uint8Array(buffer(content));\n                content = new Uint8Array(a.length + 1);\n                content[0] = 0; // No unused bits\n                content.set(a, 1);\n            }\n        } else if (tagConstructed) { // Sub items coding\n            if (object instanceof Array) {\n                var bytelen = 0, ba = [], offset = 0;\n                for (var i = 0, n = object.length; i < n; i++) {\n                    ba[i] = encodeBER(object[i], format);\n                    bytelen += ba[i].length;\n                }\n                if (tagNumber === 0x11)\n                    ba.sort(function (a, b) { // Sort order for SET components\n                        for (var i = 0, n = Math.min(a.length, b.length); i < n; i++) {\n                            var r = a[i] - b[i];\n                            if (r !== 0)\n                                return r;\n                        }\n                        return a.length - b.length;\n                    });\n                if (format === 'CER') { // final for CER 00 00\n                    ba[n] = new Uint8Array(2);\n                    bytelen += 2;\n                }\n                content = new Uint8Array(bytelen);\n                for (var i = 0, n = ba.length; i < n; i++) {\n                    content.set(ba[i], offset);\n                    offset = offset + ba[i].length;\n                }\n            } else\n                throw new DataError('Constracted block can\\'t be primitive');\n        } else {\n            switch (tagNumber) {\n              // 0x00: // EOC\n                case 0x01: // BOOLEAN\n                    content = new Uint8Array(1);\n                    content[0] = object ? 0xff : 0;\n                    break;\n                case 0x02: // INTEGER\n                case 0x0a: // ENUMIRATED\n                    content = Int16.decode(\n                      typeof object === 'number' ? object.toString(16) : object);\n                    break;\n                case 0x03: // BIT STRING\n                    if (typeof object === 'string') {\n                        var unusedBits = 7 - (object.length + 7) % 8;\n                        var n = Math.ceil(object.length / 8);\n                        content = new Uint8Array(n + 1);\n                        content[0] = unusedBits;\n                        for (var i = 0; i < n; i++) {\n                            var c = 0;\n                            for (var j = 0; j < 8; j++) {\n                                var k = i * 8 + j;\n                                c = (c << 1) + (k < object.length ? (object.charAt(k) === '1' ? 1 : 0) : 0);\n                            }\n                            content[i + 1] = c;\n                        }\n                    }\n                    break;\n                case 0x04:\n                    content = Hex.decode(\n                      typeof object === 'number' ? object.toString(16) : object);\n                    break;\n              // case 0x05: // NULL\n                case 0x06: // OBJECT IDENTIFIER\n                    var a = object.match(/\\d+/g), r = [];\n                    for (var i = 1; i < a.length; i++) {\n                        var n = +a[i], r1 = [];\n                        if (i === 1)\n                            n = n + a[0] * 40;\n                        do {\n                            r1.push(n & 0x7F);\n                            n = n >>> 7;\n                        } while (n);\n                        // reverse order\n                        for (j = r1.length - 1; j >= 0; --j)\n                            r.push(r1[j] + (j === 0 ? 0x00 : 0x80));\n                    }\n                    content = new Uint8Array(r);\n                    break;\n              // case 0x07: // ObjectDescriptor\n              // case 0x08: // EXTERNAL\n              // case 0x09: // REAL\n              // case 0x0A: // ENUMERATED\n              // case 0x0B: // EMBEDDED PDV\n                case 0x0C: // UTF8String\n                    content = Chars.decode(object, 'utf8');\n                    break;\n              // case 0x10: // SEQUENCE\n              // case 0x11: // SET\n                case 0x12: // NumericString\n                case 0x16: // IA5String // ASCII\n                case 0x13: // PrintableString // ASCII subset\n                case 0x14: // TeletexString // aka T61String\n                case 0x15: // VideotexString\n                case 0x19: // GraphicString\n                case 0x1A: // VisibleString // ASCII subset\n                case 0x1B: // GeneralString\n                    // Reflect on character encoding\n                    for (var i = 0, n = object.length; i < n; i++)\n                        if (object.charCodeAt(i) > 255)\n                            tagNumber = 0x0C;\n                    if (tagNumber === 0x0C)\n                        content = Chars.decode(object, 'utf8');\n                    else\n                        content = Chars.decode(object, 'ascii');\n                    break;\n                case 0x17: // UTCTime\n                case 0x18: // GeneralizedTime\n                    var result = object.original;\n                    if (!result) {\n                        var date = new Date(object);\n                        date.setMinutes(date.getMinutes() + date.getTimezoneOffset()); // to UTC\n                        var ms = tagNumber === 0x18 ? date.getMilliseconds().toString() : ''; // Milliseconds, remove trailing zeros\n                        while (ms.length > 0 && ms.charAt(ms.length - 1) === '0')\n                            ms = ms.substring(0, ms.length - 1);\n                        if (ms.length > 0)\n                            ms = '.' + ms;\n                        result = (tagNumber === 0x17 ? date.getYear().toString().slice(-2) : date.getFullYear().toString()) +\n                          ('00' + (date.getMonth() + 1)).slice(-2) +\n                          ('00' + date.getDate()).slice(-2) +\n                          ('00' + date.getHours()).slice(-2) +\n                          ('00' + date.getMinutes()).slice(-2) +\n                          ('00' + date.getSeconds()).slice(-2) + ms + 'Z';\n                    }\n                    content = Chars.decode(result, 'ascii');\n                    break;\n                case 0x1C: // UniversalString\n                    content = Chars.decode(object, 'utf32');\n                    break;\n                case 0x1E: // BMPString\n                    content = Chars.decode(object, 'utf16');\n                    break;\n            }\n        }\n\n        if (!content)\n            content = new Uint8Array(0);\n        if (content instanceof CryptoOperationData)\n            content = new Uint8Array(content);\n\n        if (!tagConstructed && format === 'CER') {\n            // Encoding CER-form for string types\n            var k;\n            switch (tagNumber) {\n                case 0x03: // BIT_STRING\n                    k = 1; // ingnore unused bit for bit string\n                case 0x04: // OCTET_STRING\n                case 0x0C: // UTF8String\n                case 0x12: // NumericString\n                case 0x13: // PrintableString\n                case 0x14: // TeletexString\n                case 0x15: // VideotexString\n                case 0x16: // IA5String\n                case 0x19: // GraphicString\n                case 0x1A: // VisibleString\n                case 0x1B: // GeneralString\n                case 0x1C: // UniversalString\n                case 0x1E: // BMPString\n                    k = k || 0;\n                    // Split content on 1000 octet len parts\n                    var size = 1000;\n                    var bytelen = 0, ba = [], offset = 0;\n                    for (var i = k, n = content.length; i < n; i += size - k) {\n                        ba[i] = encodeBER({\n                            object: new Unit8Array(content.buffer, i, Math.min(size - k, n - i)),\n                            tagNumber: tagNumber,\n                            tagClass: 0,\n                            tagConstructed: false\n                        }, format);\n                        bytelen += ba[i].length;\n                    }\n                    ba[n] = new Uint8Array(2); // final for CER 00 00\n                    bytelen += 2;\n                    content = new Uint8Array(bytelen);\n                    for (var i = 0, n = ba.length; i < n; i++) {\n                        content.set(ba[i], offset);\n                        offset = offset + ba[i].length;\n                    }\n            }\n        }\n\n        // Restore tagNumber for all classes\n        if (tagClass === 0)\n            source.tagNumber = tagNumber;\n        else\n            source.tagNumber = tagNumber = source.tagNumber || 0;\n        source.content = content;\n\n        if (onlyContent)\n            return content;\n\n        // Create header\n        // tagNumber\n        var ha = [], first = tagClass === 3 ? 0xC0 : tagClass === 2 ? 0x80 :\n          tagClass === 1 ? 0x40 : 0x00;\n        if (tagConstructed)\n            first |= 0x20;\n        if (tagNumber < 0x1F) {\n            first |= tagNumber & 0x1F;\n            ha.push(first);\n        } else {\n            first |= 0x1F;\n            ha.push(first);\n            var n = tagNumber, ha1 = [];\n            do {\n                ha1.push(n & 0x7F);\n                n = n >>> 7;\n            } while (n)\n            // reverse order\n            for (var j = ha1.length - 1; j >= 0; --j)\n                ha.push(ha1[j] + (j === 0 ? 0x00 : 0x80));\n        }\n        // Length\n        if (tagConstructed && format === 'CER') {\n            ha.push(0x80);\n        } else {\n            var len = content.length;\n            if (len > 0x7F) {\n                var l2 = len, ha2 = [];\n                do {\n                    ha2.push(l2 & 0xff);\n                    l2 = l2 >>> 8;\n                } while (l2);\n                ha.push(ha2.length + 0x80); // reverse order\n                for (var j = ha2.length - 1; j >= 0; --j)\n                    ha.push(ha2[j]);\n            } else {\n                // simple len\n                ha.push(len);\n            }\n        }\n        var header = source.header = new Uint8Array(ha);\n\n        // Result - complete buffer\n        var block = new Uint8Array(header.length + content.length);\n        block.set(header, 0);\n        block.set(content, header.length);\n        return block;\n    }\n\n    function decodeBER(source, offset) {\n\n        // start pos\n        var pos = offset || 0, start = pos;\n        var tagNumber, tagClass, tagConstructed,\n          content, header, buffer, sub, len;\n\n        if (source.object) {\n            // Ready from source\n            tagNumber = source.tagNumber;\n            tagClass = source.tagClass;\n            tagConstructed = source.tagConstructed;\n            content = source.content;\n            header = source.header;\n            buffer = source.object instanceof CryptoOperationData ?\n              new Uint8Array(source.object) : null;\n            sub = source.object instanceof Array ? source.object : null;\n            len = buffer && buffer.length || null;\n        } else {\n            // Decode header\n            var d = source;\n\n            // Read tag\n            var buf = d[pos++];\n            tagNumber = buf & 0x1f;\n            tagClass = buf >> 6;\n            tagConstructed = (buf & 0x20) !== 0;\n            if (tagNumber === 0x1f) { // long tag\n                tagNumber = 0;\n                do {\n                    if (tagNumber > 0x1fffffffffff80)\n                        throw new DataError('Convertor not supported tag number more then (2^53 - 1) at position ' + offset);\n                    buf = d[pos++];\n                    tagNumber = (tagNumber << 7) + (buf & 0x7f);\n                } while (buf & 0x80);\n            }\n\n            // Read len\n            buf = d[pos++];\n            len = buf & 0x7f;\n            if (len !== buf) {\n                if (len > 6) // no reason to use Int10, as it would be a huge buffer anyways\n                    throw new DataError('Length over 48 bits not supported at position ' + offset);\n                if (len === 0)\n                    len = null; // undefined\n                else {\n                    buf = 0;\n                    for (var i = 0; i < len; ++i)\n                        buf = (buf << 8) + d[pos++];\n                    len = buf;\n                }\n            }\n\n            start = pos;\n            sub = null;\n\n            if (tagConstructed) {\n                // must have valid content\n                sub = [];\n                if (len !== null) {\n                    // definite length\n                    var end = start + len;\n                    while (pos < end) {\n                        var s = decodeBER(d, pos);\n                        sub.push(s);\n                        pos += s.header.length + s.content.length;\n                    }\n                    if (pos !== end)\n                        throw new DataError('Content size is not correct for container starting at offset ' + start);\n                } else {\n                    // undefined length\n                    try {\n                        for (; ;) {\n                            var s = decodeBER(d, pos);\n                            pos += s.header.length + s.content.length;\n                            if (s.tagClass === 0x00 && s.tagNumber === 0x00)\n                                break;\n                            sub.push(s);\n                        }\n                        len = pos - start;\n                    } catch (e) {\n                        throw new DataError('Exception ' + e + ' while decoding undefined length content at offset ' + start);\n                    }\n                }\n            }\n\n            // Header and content\n            header = new Uint8Array(d.buffer, offset, start - offset);\n            content = new Uint8Array(d.buffer, start, len);\n            buffer = content;\n        }\n\n        // Constructed types - check for string concationation\n        if (sub !== null && tagClass === 0) {\n            var k;\n            switch (tagNumber) {\n                case 0x03: // BIT_STRING\n                    k = 1; // ingnore unused bit for bit string\n                case 0x04: // OCTET_STRING\n                case 0x0C: // UTF8String\n                case 0x12: // NumericString\n                case 0x13: // PrintableString\n                case 0x14: // TeletexString\n                case 0x15: // VideotexString\n                case 0x16: // IA5String\n                case 0x19: // GraphicString\n                case 0x1A: // VisibleString\n                case 0x1B: // GeneralString\n                case 0x1C: // UniversalString\n                case 0x1E: // BMPString\n                    k = k || 0;\n                    // Concatination\n                    if (sub.length === 0)\n                        throw new DataError('No constructed encoding content of string type at offset ' + start);\n                    len = k;\n                    for (var i = 0, n = sub.length; i < n; i++) {\n                        var s = sub[i];\n                        if (s.tagClass !== tagClass || s.tagNumber !== tagNumber || s.tagConstructed)\n                            throw new DataError('Invalid constructed encoding of string type at offset ' + start);\n                        len += s.content.length - k;\n                    }\n                    buffer = new Uint8Array(len);\n                    for (var i = 0, n = sub.length, j = k; i < n; i++) {\n                        var s = sub[i];\n                        if (k > 0)\n                            buffer.set(s.content.subarray(1), j);\n                        else\n                            buffer.set(s.content, j);\n                        j += s.content.length - k;\n                    }\n                    tagConstructed = false; // follow not required\n                    sub = null;\n                    break;\n            }\n        }\n        // Primitive types\n        var object = '';\n        if (sub === null) {\n            if (len === null)\n                throw new DataError('Invalid tag with undefined length at offset ' + start);\n\n            if (tagClass === 0) {\n                switch (tagNumber) {\n                    case 0x01: // BOOLEAN\n                        object = buffer[0] !== 0;\n                        break;\n                    case 0x02: // INTEGER\n                    case 0x0a: // ENUMIRATED\n                        if (len > 6) {\n                            object = Int16.encode(buffer);\n                        } else {\n                            var v = buffer[0];\n                            if (buffer[0] > 0x7f)\n                                v = v - 256;\n                            for (var i = 1; i < len; i++)\n                                v = v * 256 + buffer[i];\n                            object = v;\n                        }\n                        break;\n                    case 0x03: // BIT_STRING\n                        if (len > 5) { // Content buffer\n                            object = new Uint8Array(buffer.subarray(1)).buffer;\n                        } else { // Max bit mask only for 32 bit\n                            var unusedBit = buffer[0],\n                              skip = unusedBit, s = [];\n                            for (var i = len - 1; i >= 1; --i) {\n                                var b = buffer[i];\n                                for (var j = skip; j < 8; ++j)\n                                    s.push((b >> j) & 1 ? '1' : '0');\n                                skip = 0;\n                            }\n                            object = s.reverse().join('');\n                        }\n                        break;\n                    case 0x04: // OCTET_STRING\n                        object = new Uint8Array(buffer).buffer;\n                        break;\n                  //  case 0x05: // NULL\n                    case 0x06: // OBJECT_IDENTIFIER\n                        var s = '',\n                          n = 0,\n                          bits = 0;\n                        for (var i = 0; i < len; ++i) {\n                            var v = buffer[i];\n                            n = (n << 7) + (v & 0x7F);\n                            bits += 7;\n                            if (!(v & 0x80)) { // finished\n                                if (s === '') {\n                                    var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                                    s = m + \".\" + (n - m * 40);\n                                } else\n                                    s += \".\" + n.toString();\n                                n = 0;\n                                bits = 0;\n                            }\n                        }\n                        if (bits > 0)\n                            throw new DataError('Incompleted OID at offset ' + start);\n                        object = s;\n                        break;\n                  //case 0x07: // ObjectDescriptor\n                  //case 0x08: // EXTERNAL\n                  //case 0x09: // REAL\n                  //case 0x0A: // ENUMERATED\n                  //case 0x0B: // EMBEDDED_PDV\n                    case 0x10: // SEQUENCE\n                    case 0x11: // SET\n                        object = [];\n                        break;\n                    case 0x0C: // UTF8String\n                        object = Chars.encode(buffer, 'utf8');\n                        break;\n                    case 0x12: // NumericString\n                    case 0x13: // PrintableString\n                    case 0x14: // TeletexString\n                    case 0x15: // VideotexString\n                    case 0x16: // IA5String\n                    case 0x19: // GraphicString\n                    case 0x1A: // VisibleString\n                    case 0x1B: // GeneralString\n                        object = Chars.encode(buffer, 'ascii');\n                        break;\n                    case 0x1C: // UniversalString\n                        object = Chars.encode(buffer, 'utf32');\n                        break;\n                    case 0x1E: // BMPString\n                        object = Chars.encode(buffer, 'utf16');\n                        break;\n                    case 0x17: // UTCTime\n                    case 0x18: // GeneralizedTime\n                        var shortYear = tagNumber === 0x17;\n                        var s = Chars.encode(buffer, 'ascii'),\n                          m = (shortYear ?\n                            /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/ :\n                            /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/).exec(s);\n                        if (!m)\n                            throw new DataError('Unrecognized time format \"' + s + '\" at offset ' + start);\n                        if (shortYear) {\n                            // Where YY is greater than or equal to 50, the year SHALL be interpreted as 19YY; and\n                            // Where YY is less than 50, the year SHALL be interpreted as 20YY\n                            m[1] = +m[1];\n                            m[1] += (m[1] < 50) ? 2000 : 1900;\n                        }\n                        var dt = new Date(m[1], +m[2] - 1, +m[3], +(m[4] || '0'), +(m[5] || '0'), +(m[6] || '0'), +(m[7] || '0')),\n                          tz = dt.getTimezoneOffset();\n                        if (m[8] || tagNumber === 0x17) {\n                            if (m[8].toUpperCase() !== 'Z' && m[9]) {\n                                tz = tz + parseInt(m[9]);\n                            }\n                            dt.setMinutes(dt.getMinutes() - tz);\n                        }\n                        dt.original = s;\n                        object = dt;\n                        break;\n                }\n            } else // OCTET_STRING\n                object = new Uint8Array(buffer).buffer;\n        } else\n            object = sub;\n\n        // result\n        return {\n            tagConstructed: tagConstructed,\n            tagClass: tagClass,\n            tagNumber: tagNumber,\n            header: header,\n            content: content,\n            object: object\n        };\n    }\n\n    return {\n        /**\n         * BER.decode(object, format) convert javascript object to ASN.1 format CryptoOperationData<br><br>\n         * If object has members tagNumber, tagClass and tagConstructed\n         * it is clear define encoding rules. Else method use defaul rules:\n         * <ul>\n         *   <li>Empty string or null - NULL</li>\n         *   <li>String starts with '0x' and has 0-9 and a-f characters - INTEGER</li>\n         *   <li>String like d.d.d.d (d - set of digits) - OBJECT IDENTIFIER</li>\n         *   <li>String with characters 0 and 1 - BIT STRING</li>\n         *   <li>Strings 'true' or 'false' - BOOLEAN</li>\n         *   <li>String has only 0-9 and a-f characters - OCTET STRING</li>\n         *   <li>String has only characters with code 0-255 - PrintableString</li>\n         *   <li>Other strings - UTF8String</li>\n         *   <li>Number - INTEGER</li>\n         *   <li>Date - GeneralizedTime</li>\n         *   <li>Boolean - SEQUENCE</li>\n         *   <li>CryptoOperationData - OCTET STRING</li>\n         * </ul>\n         * SEQUENCE or SET arrays recursively encoded for each item.<br>\n         * OCTET STRING and BIT STRING can presents as array with one item.\n         * It means encapsulates encoding for child element.<br>\n         *\n         * If CONTEXT or APPLICATION classes item presents as array with one\n         * item we use EXPLICIT encoding for element, else IMPLICIT encoding.<br>\n         *\n         * @memberOf GostCoding.BER\n         * @param {Object} object Object to encoding\n         * @param {string} format Encoding rule: 'DER' or 'CER', default 'DER'\n         * @param {boolean} onlyContent Encode content only, without header\n         * @returns {CryptoOperationData} BER encoded data\n         */\n        encode: function (object, format, onlyContent) {\n            return encodeBER(object, format, onlyContent).buffer;\n        },\n        /**\n         * BER.encode(data) convert ASN.1 format CryptoOperationData data to javascript object<br><br>\n         *\n         * Conversion rules to javascript object:\n         *  <ul>\n         *      <li>BOOLEAN - Boolean object</li>\n         *      <li>INTEGER, ENUMIRATED - Integer object if len <= 6 (48 bits) else Int16 encoded string</li>\n         *      <li>BIT STRING - Integer object if len <= 5 (w/o unsedBit octet - 32 bits) else String like '10111100' or  Array with one item in case of incapsulates encoding</li>\n         *      <li>OCTET STRING - Hex encoded string or Array with one item in case of incapsulates encoding</li>\n         *      <li>OBJECT IDENTIFIER - String with object identifier</li>\n         *      <li>SEQUENCE, SET - Array of encoded items</li>\n         *      <li>UTF8String, NumericString, PrintableString, TeletexString, VideotexString,\n         *          IA5String, GraphicString, VisibleString, GeneralString, UniversalString,\n         *          BMPString - encoded String</li>\n         *      <li>UTCTime, GeneralizedTime - Date</li>\n         *  </ul>\n         * @memberOf GostCoding.BER\n         * @param {(CryptoOperationData|GostCoding.BER)} data Binary data to decode\n         * @returns {Object} Javascript object with result of decoding\n         */\n        decode: function (data) {\n            return decodeBER(data.object ? data : new Uint8Array(buffer(data)), 0);\n        }\n    }; // </editor-fold>\n})();\n\n/**\n * BER, DER, CER conversion\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.BER\n */\nGostCoding.prototype.BER = BER;\n\n/**\n * PEM conversion\n * @class GostCoding.PEM\n */\nvar PEM = {// <editor-fold defaultstate=\"collapsed\">\n    /**\n     * PEM.encode(data, name) encode CryptoOperationData to PEM format with name label\n     *\n     * @memberOf GostCoding.PEM\n     * @param {(Object|CryptoOperationData)} data Java script object or BER-encoded binary data\n     * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\n     * @returns {string} Encoded object\n     */\n    encode: function (data, name) {\n        return (name ? '-----BEGIN ' + name.toUpperCase() + '-----\\r\\n' : '') +\n          Base64.encode(data instanceof CryptoOperationData ? data : BER.encode(data)) +\n          (name ? '\\r\\n-----END ' + name.toUpperCase() + '-----' : '');\n    },\n    /**\n     * PEM.decode(s, name, deep) decode PEM format s labeled name to CryptoOperationData or javascript object in according to deep parameter\n     *\n     * @memberOf GostCoding.PEM\n     * @param {string} s PEM encoded string\n     * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\n     * @param {boolean} deep If true method do BER-decoding, else only BASE64 decoding\n     * @param {integer} index Index of decoded value\n     * @returns {(Object|CryptoOperationData)} Decoded javascript object if deep=true, else CryptoOperationData for father BER decoding\n     */\n    decode: function (s, name, deep, index) {\n        // Try clear base64\n        var re1 = /([A-Za-z0-9\\+\\/\\s\\=]+)/g,\n          valid = re1.exec(s);\n        if (valid[1].length !== s.length)\n            valid = false;\n        if (!valid && name) {\n            // Try with the name\n            var re2 = new RegExp(\n              '-----\\\\s?BEGIN ' + name.toUpperCase() +\n              '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\n              name.toUpperCase() + '-----', 'g');\n            valid = re2.exec(s);\n        }\n        if (!valid) {\n            // Try with some name\n            var re3 = new RegExp(\n              '-----\\\\s?BEGIN [A-Z0-9\\\\s]+' +\n              '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\n              '[A-Z0-9\\\\s]+-----', 'g');\n            valid = re3.exec(s);\n        }\n        var r = valid && valid[1 + (index || 0)];\n        if (!r)\n            throw new DataError('Not valid PEM format');\n        var out = Base64.decode(r);\n        if (deep)\n            out = BER.decode(out);\n        return out;\n    } // </editor-fold>\n};\n\n/**\n * PEM conversion\n * @memberOf GostCoding\n * @insnance\n * @type GostCoding.PEM\n */\nGostCoding.prototype.PEM = PEM;\n\nexport const gostCodingInstance = new GostCoding();\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","import { gostEngine } from '../engine/gostEngineSync';\nimport { getCryptoModule } from '../utils/environment';\nimport { DataError, NotSupportedError } from '../utils/errors';\nimport { gostASN1Instance } from './gostASN1';\n\n\nclass InvalidStateError extends Error {\n}\n\nclass InvalidAccessError extends Error {\n}\n\n/*\n * Algorithm normalization\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\nconst rootCrypto = getCryptoModule();\n\n// Normalize algorithm\nfunction normalize(algorithm, method) {\n    if (typeof algorithm === 'string' || algorithm instanceof String)\n        algorithm = { name: algorithm };\n    var name = algorithm.name;\n    if (!name)\n        throw new SyntaxError('Algorithm name not defined');\n    // Extract algorithm modes from name\n    var modes = name.split('/'), modes = modes[0].split('-').concat(modes.slice(1));\n    // Normalize the name with default modes\n    var na = {};\n    name = modes[0].replace(/[\\.\\s]/g, '');\n    modes = modes.slice(1);\n    if (name.indexOf('28147') >= 0) {\n        na = {\n            name: 'GOST 28147',\n            version: 1989,\n            mode: (algorithm.mode || (// ES, MAC, KW\n              (method === 'sign' || method === 'verify') ? 'MAC' :\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n            length: algorithm.length || 64\n        };\n    } else if (name.indexOf('3412') >= 0) {\n        na = {\n            name: 'GOST R 34.12',\n            version: 2015,\n            mode: (algorithm.mode || (// ES, MAC, KW\n              (method === 'sign' || method === 'verify') ? 'MAC' :\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n            length: algorithm.length || 64 // 128\n        };\n    } else if (name.indexOf('3411') >= 0) {\n        na = {\n            name: 'GOST R 34.11',\n            version: 2012, // 1994\n            mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF, CPKDF\n              (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\n                (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\n            length: algorithm.length || 256 // 512\n        };\n    } else if (name.indexOf('3410') >= 0) {\n        na = {\n            name: 'GOST R 34.10',\n            version: 2012, // 1994, 2001\n            mode: (algorithm.mode || (// SIGN, DH, MASK\n              (method === 'deriveKey' || method === 'deriveBits') ? 'DH' : 'SIGN')).toUpperCase(),\n            length: algorithm.length || 256 // 512\n        };\n    } else if (name.indexOf('SHA') >= 0) {\n        na = {\n            name: 'SHA',\n            version: (algorithm.length || 160) === 160 ? 1 : 2, // 1, 2\n            mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF\n              (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\n                (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\n            length: algorithm.length || 160\n        };\n    } else if (name.indexOf('RC2') >= 0) {\n        na = {\n            name: 'RC2',\n            version: 1,\n            mode: (algorithm.mode || (// ES, MAC, KW\n              (method === 'sign' || method === 'verify') ? 'MAC' :\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\n            length: algorithm.length || 32 // 1 - 1024\n        };\n    } else if (name.indexOf('PBKDF2') >= 0) {\n        na = normalize(algorithm.hash, 'digest');\n        na.mode = 'PBKDF2';\n    } else if (name.indexOf('PFXKDF') >= 0) {\n        na = normalize(algorithm.hash, 'digest');\n        na.mode = 'PFXKDF';\n    } else if (name.indexOf('CPKDF') >= 0) {\n        na = normalize(algorithm.hash, 'digest');\n        na.mode = 'CPKDF';\n    } else if (name.indexOf('HMAC') >= 0) {\n        na = normalize(algorithm.hash, 'digest');\n        na.mode = 'HMAC';\n    } else\n        throw new NotSupportedError('Algorithm not supported');\n\n    // Compile modes\n    modes.forEach(function (mode) {\n        mode = mode.toUpperCase();\n        if (/^[0-9]+$/.test(mode)) {\n            if ((['8', '16', '32'].indexOf(mode) >= 0) || (na.length === '128' && mode === '64')) { // Shift bits\n                if (na.mode === 'ES')\n                    na.shiftBits = parseInt(mode);\n                else if (na.mode === 'MAC')\n                    na.macLength = parseInt(mode);\n                else\n                    throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n            } else if (['89', '94', '01', '12', '15', '1989', '1994', '2001', '2012', '2015'].indexOf(mode) >= 0) { // GOST Year\n                var version = parseInt(mode);\n                version = version < 1900 ? (version < 80 ? 2000 + version : 1900 + version) : version;\n                na.version = version;\n            } else if (['1'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-1\n                na.version = 1;\n                na.length = 160;\n            } else if (['256', '384', '512'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-2\n                na.version = 2;\n                na.length = parseInt(mode);\n            } else if (['40', '128'].indexOf(mode) >= 0 && na.name === 'RC2') { // RC2\n                na.version = 1;\n                na.length = parseInt(mode); // key size\n            } else if (['64', '128', '256', '512'].indexOf(mode) >= 0) // block size\n                na.length = parseInt(mode);\n            else if (['1000', '2000'].indexOf(mode) >= 0) // Iterations\n                na.iterations = parseInt(mode);\n            // Named Paramsets\n        } else if (['E-TEST', 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC', 'E-Z', 'D-TEST', 'D-A', 'D-SC'].indexOf(mode) >= 0) {\n            na.sBox = mode;\n        } else if (['S-TEST', 'S-A', 'S-B', 'S-C', 'S-D', 'X-A', 'X-B', 'X-C'].indexOf(mode) >= 0) {\n            na.namedParam = mode;\n        } else if (['S-256-TEST', 'S-256-A', 'S-256-B', 'S-256-C', 'P-256', 'T-512-TEST', 'T-512-A',\n            'T-512-B', 'X-256-A', 'X-256-B', 'T-256-TEST', 'T-256-A', 'T-256-B', 'S-256-B', 'T-256-C', 'S-256-C'].indexOf(mode) >= 0) {\n            na.namedCurve = mode;\n        } else if (['SC', 'CP', 'VN'].indexOf(mode) >= 0) {\n            na.procreator = mode;\n\n            // Encription GOST 28147 or GOST R 34.12\n        } else if (na.name === 'GOST 28147' || na.name === 'GOST R 34.12' || na.name === 'RC2') {\n            if (['ES', 'MAC', 'KW', 'MASK'].indexOf(mode) >= 0) {\n                na.mode = mode;\n            } else if (['ECB', 'CFB', 'OFB', 'CTR', 'CBC'].indexOf(mode) >= 0) {\n                na.mode = 'ES';\n                na.block = mode;\n            } else if (['CPKW', 'NOKW', 'SCKW'].indexOf(mode) >= 0) {\n                na.mode = 'KW';\n                na.keyWrapping = mode.replace('KW', '');\n            } else if (['ZEROPADDING', 'PKCS5PADDING', 'NOPADDING', 'RANDOMPADDING', 'BITPADDING'].indexOf(mode) >= 0) {\n                na.padding = mode.replace('PADDING', '');\n            } else if (['NOKM', 'CPKM'].indexOf(mode) >= 0) {\n                na.keyMeshing = mode.replace('KM', '');\n            } else\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n\n            // Digesting GOST 34.11\n        } else if (na.name === 'GOST R 34.11' || na.name === 'SHA') {\n            if (['HASH', 'KDF', 'HMAC', 'PBKDF2', 'PFXKDF', 'CPKDF'].indexOf(mode) >= 0)\n                na.mode = mode;\n            else\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n\n            // Signing GOST 34.10\n        } else if (na.name === 'GOST R 34.10') {\n            var hash = mode.replace(/[\\.\\s]/g, '');\n            if (hash.indexOf('GOST') >= 0 && hash.indexOf('3411') >= 0)\n                na.hash = mode;\n            else if (['SIGN', 'DH', 'MASK'].indexOf(mode))\n                na.mode = mode;\n            else\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\n        }\n    });\n\n    // Procreator\n    na.procreator = algorithm.procreator || na.procreator || 'CP';\n\n    // Key size\n    switch (na.name) {\n        case 'GOST R 34.10':\n            na.keySize = na.length / (na.version === 1994 ? 4 : 8);\n            break;\n        case 'GOST R 34.11':\n            na.keySize = 32;\n            break;\n        case 'GOST 28147':\n        case 'GOST R 34.12':\n            na.keySize = 32;\n            break;\n        case 'RC2':\n            na.keySize = Math.ceil(na.length / 8);\n            break;\n        case 'SHA':\n            na.keySize = na.length / 8;\n            break;\n    }\n\n    // Encrypt additional modes\n    if (na.mode === 'ES') {\n        if (algorithm.block)\n            na.block = algorithm.block; // ECB, CFB, OFB, CTR, CBC\n        if (na.block)\n            na.block = na.block.toUpperCase();\n        if (algorithm.padding)\n            na.padding = algorithm.padding; // NO, ZERO, PKCS5, RANDOM, BIT\n        if (na.padding)\n            na.padding = na.padding.toUpperCase();\n        if (algorithm.shiftBits)\n            na.shiftBits = algorithm.shiftBits; // 8, 16, 32, 64\n        if (algorithm.keyMeshing)\n            na.keyMeshing = algorithm.keyMeshing; // NO, CP\n        if (na.keyMeshing)\n            na.keyMeshing = na.keyMeshing.toUpperCase();\n        // Default values\n        if (method !== 'importKey' && method !== 'generateKey') {\n            na.block = na.block || 'ECB';\n            na.padding = na.padding || (na.block === 'CBC' || na.block === 'ECB' ? 'ZERO' : 'NO');\n            if (na.block === 'CFB' || na.block === 'OFB')\n                na.shiftBits = na.shiftBits || na.length;\n            na.keyMeshing = na.keyMeshing || 'NO';\n        }\n    }\n    if (na.mode === 'KW') {\n        if (algorithm.keyWrapping)\n            na.keyWrapping = algorithm.keyWrapping; // NO, CP, SC\n        if (na.keyWrapping)\n            na.keyWrapping = na.keyWrapping.toUpperCase();\n        if (method !== 'importKey' && method !== 'generateKey')\n            na.keyWrapping = na.keyWrapping || 'NO';\n    }\n\n    // Paramsets\n    ['sBox', 'namedParam', 'namedCurve', 'curve', 'param', 'modulusLength'].forEach(function (name) {\n        algorithm[name] && (na[name] = algorithm[name]);\n    });\n    // Default values\n    if (method !== 'importKey' && method !== 'generateKey') {\n        if (na.name === 'GOST 28147') {\n            na.sBox = na.sBox || (na.procreator === 'SC' ? 'E-SC' : 'E-A'); // 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC'\n        } else if (na.name === 'GOST R 34.12' && na.length === 64) {\n            na.sBox = 'E-Z';\n        } else if (na.name === 'GOST R 34.11' && na.version === 1994) {\n            na.sBox = na.sBox || (na.procreator === 'SC' ? 'D-SC' : 'D-A'); // 'D-SC'\n        } else if (na.name === 'GOST R 34.10' && na.version === 1994) {\n            na.namedParam = na.namedParam || (na.mode === 'DH' ? 'X-A' : 'S-A'); // 'S-B', 'S-C', 'S-D', 'X-B', 'X-C'\n        } else if (na.name === 'GOST R 34.10' && na.version === 2001) {\n            na.namedCurve = na.namedCurve || (na.length === 256 ?\n              na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\n              na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\n        } else if (na.name === 'GOST R 34.10' && na.version === 2012) {\n            na.namedCurve = na.namedCurve || (na.length === 256 ?\n              na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\n              na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\n        }\n    }\n\n    // Vectors\n    switch (na.mode) {\n        case 'DH':\n            algorithm.ukm && (na.ukm = algorithm.ukm);\n            algorithm['public'] && (na['public'] = algorithm['public']);\n            break;\n        case 'SIGN':\n        case 'KW':\n            algorithm.ukm && (na.ukm = algorithm.ukm);\n            break;\n        case 'ES':\n        case 'MAC':\n            algorithm.iv && (na.iv = algorithm.iv);\n            break;\n        case 'KDF':\n            algorithm.label && (na.label = algorithm.label);\n            algorithm.contex && (na.context = algorithm.contex);\n            break;\n        case 'PBKDF2':\n            algorithm.salt && (na.salt = algorithm.salt);\n            algorithm.iterations && (na.iterations = algorithm.iterations);\n            algorithm.diversifier && (na.diversifier = algorithm.diversifier);\n            break;\n        case 'PFXKDF':\n            algorithm.salt && (na.salt = algorithm.salt);\n            algorithm.iterations && (na.iterations = algorithm.iterations);\n            algorithm.diversifier && (na.diversifier = algorithm.diversifier);\n            break;\n        case 'CPKDF':\n            algorithm.salt && (na.salt = algorithm.salt);\n            algorithm.iterations && (na.iterations = algorithm.iterations);\n            break;\n    }\n\n    // Verification method and modes\n    if (method && (\n      ((na.mode !== 'ES' && na.mode !== 'SIGN' && na.mode !== 'MAC' &&\n        na.mode !== 'HMAC' && na.mode !== 'KW' && na.mode !== 'DH'\n        && na.mode !== 'MASK') &&\n        (method === 'generateKey')) ||\n      ((na.mode !== 'ES') &&\n        (method === 'encrypt' || method === 'decrypt')) ||\n      ((na.mode !== 'SIGN' && na.mode !== 'MAC' && na.mode !== 'HMAC') &&\n        (method === 'sign' || method === 'verify')) ||\n      ((na.mode !== 'HASH') &&\n        (method === 'digest')) ||\n      ((na.mode !== 'KW' && na.mode !== 'MASK') &&\n        (method === 'wrapKey' || method === 'unwrapKey')) ||\n      ((na.mode !== 'DH' && na.mode !== 'PBKDF2' && na.mode !== 'PFXKDF' &&\n        na.mode !== 'CPKDF' && na.mode !== 'KDF') &&\n        (method === 'deriveKey' || method === 'deriveBits'))))\n        throw new NotSupportedError('Algorithm mode ' + na.mode + ' not valid for method ' + method);\n\n    // Normalize hash algorithm\n    algorithm.hash && (na.hash = algorithm.hash);\n    if (na.hash) {\n        if ((typeof na.hash === 'string' || na.hash instanceof String)\n          && na.procreator)\n            na.hash = na.hash + '/' + na.procreator;\n        na.hash = normalize(na.hash, 'digest');\n    }\n\n    // Algorithm object identirifer\n    algorithm.id && (na.id = algorithm.id);\n\n    return na;\n}\n\n// Check for possibility use native crypto.subtle\nfunction checkNative(algorithm) {\n    if (!rootCrypto || !rootCrypto.subtle || !algorithm)\n        return false;\n    // Prepare name\n    var name = (typeof algorithm === 'string' || algorithm instanceof String) ?\n      name = algorithm : algorithm.name;\n    if (!name)\n        return false;\n    name = name.toUpperCase();\n    // Digest algorithm for key derivation\n    if ((name.indexOf('KDF') >= 0 || name.indexOf('HMAC') >= 0) && algorithm.hash)\n        return checkNative(algorithm.hash);\n    // True if no supported names\n    return name.indexOf('GOST') === -1 &&\n      name.indexOf('SHA-1') === -1 &&\n      name.indexOf('RC2') === -1 &&\n      name.indexOf('?DES') === -1;\n}\n\n// </editor-fold>\n\n/*\n * Key conversion methods\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Check key parameter\nfunction checkKey(key, method) {\n    if (!key.algorithm)\n        throw new SyntaxError('Key algorithm not defined');\n\n    if (!key.algorithm.name)\n        throw new SyntaxError('Key algorithm name not defined');\n\n    var name = key.algorithm.name,\n      gostCipher = name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2',\n      gostDigest = name === 'GOST R 34.11' || name === 'SHA',\n      gostSign = name === 'GOST R 34.10';\n\n    if (!gostCipher && !gostSign && !gostDigest)\n        throw new NotSupportedError('Key algorithm ' + name + ' is unsupproted');\n\n    if (!key.type)\n        throw new SyntaxError('Key type not defined');\n\n    if (((gostCipher || gostDigest) && key.type !== 'secret') ||\n      (gostSign && !(key.type === 'public' || key.type === 'private')))\n        throw new DataError('Key type ' + key.type + ' is not valid for algorithm ' + name);\n\n    if (!key.usages || !key.usages.indexOf)\n        throw new SyntaxError('Key usages not defined');\n\n    for (var i = 0, n = key.usages.length; i < n; i++) {\n        var md = key.usages[i];\n        if (((md === 'encrypt' || md === 'decrypt') && key.type !== 'secret') ||\n          (md === 'sign' && key.type === 'public') ||\n          (md === 'verify' && key.type === 'private'))\n            throw new InvalidStateError('Key type ' + key.type + ' is not valid for ' + md);\n    }\n\n    if (method)\n        if (key.usages.indexOf(method) === -1)\n            throw new InvalidAccessError('Key usages is not contain method ' + method);\n\n    if (!key.buffer)\n        throw new SyntaxError('Key buffer is not defined');\n\n    var size = key.buffer.byteLength * 8, keySize = 8 * key.algorithm.keySize;\n    if ((key.type === 'secret' && size !== (keySize || 256) &&\n      (key.usages.indexOf('encrypt') >= 0 || key.usages.indexOf('decrypt') >= 0)) ||\n      (key.type === 'private' && !(size === 256 || size === 512)) ||\n      (key.type === 'public' && !(size === 512 || size === 1024)))\n        throw new SyntaxError('Key buffer has wrong size ' + size + ' bit');\n}\n\n// Extract key and enrich cipher algorithm\nfunction extractKey(method, algorithm, key) {\n    checkKey(key, method);\n    if (algorithm) {\n        var params;\n        switch (algorithm.mode) {\n            case 'ES':\n                params = ['sBox', 'keyMeshing', 'padding', 'block'];\n                break;\n            case 'SIGN':\n                params = ['namedCurve', 'namedParam', 'sBox', 'curve', 'param', 'modulusLength'];\n                break;\n            case 'MAC':\n                params = ['sBox'];\n                break;\n            case 'KW':\n                params = ['keyWrapping', 'ukm'];\n                break;\n            case 'DH':\n                params = ['namedCurve', 'namedParam', 'sBox', 'ukm', 'curve', 'param', 'modulusLength'];\n                break;\n            case 'KDF':\n                params = ['context', 'label'];\n                break;\n            case 'PBKDF2':\n                params = ['sBox', 'iterations', 'salt'];\n                break;\n            case 'PFXKDF':\n                params = ['sBox', 'iterations', 'salt', 'diversifier'];\n                break;\n            case 'CPKDF':\n                params = ['sBox', 'salt'];\n                break;\n        }\n        if (params)\n            params.forEach(function (name) {\n                key.algorithm[name] && (algorithm[name] = key.algorithm[name]);\n            });\n    }\n    return key.buffer;\n}\n\n// Make key definition\nfunction convertKey(algorithm, extractable, keyUsages, keyData, keyType) {\n    var key = {\n        type: keyType || (algorithm.name === 'GOST R 34.10' ? 'private' : 'secret'),\n        extractable: extractable || 'false',\n        algorithm: algorithm,\n        usages: keyUsages || [],\n        buffer: keyData\n    };\n    checkKey(key);\n    return key;\n}\n\nfunction convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, publicBuffer, privateBuffer) {\n\n    if (!keyUsages || !keyUsages.indexOf)\n        throw new SyntaxError('Key usages not defined');\n\n    var publicUsages = keyUsages.filter(function (value) {\n        return value !== 'sign';\n    });\n    var privateUsages = keyUsages.filter(function (value) {\n        return value !== 'verify';\n    });\n\n    return {\n        publicKey: convertKey(publicAlgorithm, extractable, publicUsages, publicBuffer, 'public'),\n        privateKey: convertKey(privateAlgorithm, extractable, privateUsages, privateBuffer, 'private')\n    };\n}\n\n// Swap bytes in buffer\nfunction swapBytes(src) {\n    if (src instanceof CryptoOperationData)\n        src = new Uint8Array(src);\n    var dst = new Uint8Array(src.length);\n    for (var i = 0, n = src.length; i < n; i++)\n        dst[n - i - 1] = src[i];\n    return dst.buffer;\n}\n\n// </editor-fold>\n\n// Executor for any method\nfunction execute(algorithm, method, args) {\n    return new Promise(function (resolve, reject) {\n        try {\n            resolve(gostEngine.execute(algorithm, method, args));\n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\n// Self resolver\nfunction call(callback) {\n    try {\n        callback();\n    } catch (e) {\n    }\n}\n\n// </editor-fold>\n\n/*\n * WebCrypto common class references\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n/**\n * The Algorithm object is a dictionary object [WebIDL] which is used to\n * specify an algorithm and any additional parameters required to fully\n * specify the desired operation.<br>\n * <pre>\n *  dictionary Algorithm {\n     *      DOMString name;\n     *  };\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\n * @class Algorithm\n * @param {DOMString} name The name of the registered algorithm to use.\n */\n\n/**\n * AlgorithmIdentifier - Algorithm or DOMString name of algorithm<br>\n * <pre>\n *  typedef (Algorithm or DOMString) AlgorithmIdentifier;\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\n * @class AlgorithmIdentifier\n */\n\n/**\n * The KeyAlgorithm interface represents information about the contents of a\n * given Key object.\n * <pre>\n *  interface KeyAlgorithm {\n     *      readonly attribute DOMString name\n     *  };\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-algorithm-interface}\n * @class KeyAlgorithm\n * @param {DOMString} name The name of the algorithm used to generate the Key\n */\n\n/**\n * The type of a key. The recognized key type values are \"public\", \"private\"\n * and \"secret\". Opaque keying material, including that used for symmetric\n * algorithms, is represented by \"secret\", while keys used as part of asymmetric\n * algorithms composed of public/private keypairs will be either \"public\" or \"private\".\n * <pre>\n *  typedef DOMString KeyType;\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n * @class KeyType\n */\n\n/**\n * Sequence of operation type that may be performed using a key. The recognized\n * key usage values are \"encrypt\", \"decrypt\", \"sign\", \"verify\", \"deriveKey\",\n * \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n * <pre>\n *  typedef DOMString[] KeyUsages;\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n * @class KeyUsages\n */\n\n/**\n * The Key object represents an opaque reference to keying material that is\n * managed by the user agent.<br>\n * This specification provides a uniform interface for many different kinds of\n * keying material managed by the user agent. This may include keys that have\n * been generated by the user agent, derived from other keys by the user agent,\n * imported to the user agent through user actions or using this API,\n * pre-provisioned within software or hardware to which the user agent has\n * access or made available to the user agent in other ways. The term key refers\n * broadly to any keying material including actual keys for cryptographic\n * operations and secret values obtained within key derivation or exchange operations.<br>\n * The Key object is not required to directly interface with the underlying key\n * storage mechanism, and may instead simply be a reference for the user agent\n * to understand how to obtain the keying material when needed, eg. when performing\n * a cryptographic operation.\n * <pre>\n *  interface Key {\n     *      readonly attribute KeyType type;\n     *      readonly attribute boolean extractable;\n     *      readonly attribute KeyAlgorithm algorithm;\n     *      readonly attribute KeyUsages usages;\n     *  };\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n * @class Key\n * @param {KeyType} type The type of a key. The recognized key type values are \"public\", \"private\" and \"secret\".\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application.\n * @param {KeyAlgorithm} algorithm The Algorithm used to generate the key.\n * @param {KeyUsages} usages Key usage array: type of operation that may be performed using a key.\n */\n\n/**\n * The KeyPair interface represents an asymmetric key pair that is comprised of both public and private keys.\n * <pre>\n *  interface KeyPair {\n     *      readonly attribute Key publicKey;\n     *      readonly attribute Key privateKey;\n     *  };\n * </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#keypair}\n * @class KeyPair\n * @param {Key} privateKey Private key\n * @param {Key} publicKey Public key\n */\n\n/**\n * Specifies a serialization format for a key. The recognized key format values are:\n *  <ul>\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n *      <li>'jwk' - The key is represented as JSON according to the JSON Web Key format.</li>\n *  </ul>\n *  <pre>\n *  typedef DOMString KeyFormat;\n *  </pre>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\n *  @class KeyFormat\n */\n\n/**\n * Binary data\n *  <pre>\n *  typedef (ArrayBuffer or ArrayBufferView) CryptoOperationData;\n *  </pre>\n * @class CryptoOperationData\n */\nvar CryptoOperationData = ArrayBuffer;\n\n/**\n * DER-encoded ArrayBuffer or PEM-encoded DOMString constains ASN.1 object<br>\n * <pre>\n *  typedef (ArrayBuffer or DOMString) FormatedData;\n * </pre>\n * @class FormatedData\n */\n\n// </editor-fold>\n\n/**\n * The SubtleCrypto class provides low-level cryptographic primitives and algorithms.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface}\n *\n * @class SubtleCrypto\n */ // <editor-fold>\nexport function SubtleCrypto() {\n}\n\n/**\n * The encrypt method returns a new Promise object that will encrypt data\n * using the specified algorithm identifier with the supplied Key.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-encrypt}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\n *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\n *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n *  </ul>\n *  For more information see {@link GostCipher}\n *\n * @memberOf SubtleCrypto\n * @method encrypt\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} key Key object\n * @param {CryptoOperationData} data Operation data\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.encrypt = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.encrypt(algorithm, key, data);\n\n        algorithm = normalize(algorithm, 'encrypt');\n        return execute(algorithm, 'encrypt',\n          [extractKey('encrypt', algorithm, key), data]);\n    });\n}; // </editor-fold>\n\n/**\n * The decrypt method returns a new Promise object that will decrypt data\n * using the specified algorithm identifier with the supplied Key.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-decrypt}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\n *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\n *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n *  </ul>\n *  For additional modes see {@link GostCipher}\n *\n * @memberOf SubtleCrypto\n * @method decrypt\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} key Key object\n * @param {CryptoOperationData} data Operation data\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.decrypt = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.decrypt(algorithm, key, data);\n\n        algorithm = normalize(algorithm, 'decrypt');\n        return execute(algorithm, 'decrypt',\n          [extractKey('decrypt', algorithm, key), data]);\n    });\n}; // </editor-fold>\n\n/**\n * The sign method returns a new Promise object that will sign data using\n * the specified algorithm identifier with the supplied Key.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-sign}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\n *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\n *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\n *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\n *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\n *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\n *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 43.12</li>\n *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\n *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\n *  </ul>\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\n *\n * @memberOf SubtleCrypto\n * @method sign\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} key Key object\n * @param {CryptoOperationData} data Operation data\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.sign = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.sign(algorithm, key, data);\n\n        algorithm = normalize(algorithm, 'sign');\n        var value = execute(algorithm, 'sign',\n          [extractKey('sign', algorithm, key), data]).then(function (data) {\n            if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\n                data = gostASN1Instance.GostSignature.encode(data);\n            }\n            return data;\n        });\n        return value;\n    });\n}; // </editor-fold>\n\n/**\n * The verify method returns a new Promise object that will verify data\n * using the specified algorithm identifier with the supplied Key.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-verify}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\n *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\n *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\n *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\n *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\n *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\n *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 34.12</li>\n *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\n *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\n *  </ul>\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\n *\n * @memberOf SubtleCrypto\n * @method verify\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} key Key object\n * @param {CryptoOperationData} signature Signature data\n * @param {CryptoOperationData} data Operation data\n * @returns {Promise} Promise that resolves with boolean value of verification result\n */\nSubtleCrypto.prototype.verify = function (algorithm, key, signature, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.verify(algorithm, key, signature, data);\n\n        algorithm = normalize(algorithm, 'verify');\n        if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\n            var obj = gostASN1Instance.GostSignature.decode(signature);\n            signature = { r: obj.r, s: obj.s };\n        }\n        return execute(algorithm, 'verify',\n          [extractKey('verify', algorithm, key), signature, data]);\n    });\n}; // </editor-fold>\n\n/**\n * The digest method returns a new Promise object that will digest data\n * using the specified algorithm identifier.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-digest}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.11-94</b> Old-Style GOST Hash</li>\n *      <li><b>GOST R 34.11</b> GOST Streebog Hash</li>\n *      <li><b>SHA</b> SHA Hash</li>\n *  </ul>\n *  For additional modes see {@link GostDigest}\n *\n * @memberOf SubtleCrypto\n * @method digest\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {CryptoOperationData} data Operation data\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.digest = function (algorithm, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.digest(algorithm, data);\n\n        algorithm = normalize(algorithm, 'digest');\n        return execute(algorithm, 'digest', [data]);\n    });\n}; // </editor-fold>\n\n/**\n * The generateKey method returns a new Promise object that will key(s) using\n * the specified algorithm identifier. Key can be used in according with\n * KeyUsages sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-generateKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10</b> ECGOST Key Pairs</li>\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n *      <li><b>GOST 28147-KW</b> Key for wrapping GOST 28147 modes</li>\n *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.12-KW</b> Key for wrapping GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n *  </ul>\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n *  Note: Generation key for GOST R 34.10-94 not supported.\n *\n * @memberOf SubtleCrypto\n * @method generateKey\n * @instance\n * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n * @returns {Promise} Promise that resolves with {@link Key} or {@link KeyPair} in according to key algorithm\n */\nSubtleCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.generateKey(algorithm, extractable, keyUsages);\n\n        var privateAlgorithm = algorithm.privateKey,\n          publicAlgorithm = algorithm.publicKey;\n        algorithm = normalize(algorithm, 'generateKey');\n        if (privateAlgorithm)\n            privateAlgorithm = normalize(privateAlgorithm, 'generateKey');\n        else\n            privateAlgorithm = algorithm;\n        if (publicAlgorithm)\n            publicAlgorithm = normalize(publicAlgorithm, 'generateKey');\n        else\n            publicAlgorithm = algorithm;\n        return execute(algorithm, 'generateKey', []).then(function (data) {\n            if (data.publicKey && data.privateKey)\n                return convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, data.publicKey, data.privateKey);\n            else\n                return convertKey(algorithm, extractable, keyUsages, data);\n        });\n    });\n}; // </editor-fold>\n\n/**\n * The deriveKey method returns a new Promise object that will key(s) using\n * the specified algorithm identifier. Key can be used in according with\n * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\n *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n *  </ul>\n *  For additional modes see {@link GostSign} and {@link GostDigest}\n *\n * @memberOf SubtleCrypto\n * @method deriveKey\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} baseKey Derivation key object\n * @param {AlgorithmIdentifier} derivedKeyType Derived key algorithm identifier\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n * @returns {Promise} Promise that resolves with {@link Key}\n */\nSubtleCrypto.prototype.deriveKey = function (algorithm, baseKey,\n                                             derivedKeyType, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.deriveKey(algorithm, baseKey,\n              derivedKeyType, extractable, keyUsages);\n\n        algorithm = normalize(algorithm, 'deriveKey');\n        derivedKeyType = normalize(derivedKeyType, 'generateKey');\n        algorithm.keySize = derivedKeyType.keySize;\n        if (algorithm['public']) {\n            algorithm['public'].algorithm = normalize(algorithm['public'].algorithm);\n            algorithm['public'] = extractKey('deriveKey', algorithm, algorithm['public']);\n        }\n        return execute(algorithm, 'deriveKey', [extractKey('deriveKey', algorithm, baseKey)]).then(function (data) {\n            return convertKey(derivedKeyType, extractable, keyUsages, data);\n        });\n    });\n}; // </editor-fold>\n\n/**\n * The deriveBits method returns length bits on baseKey using the\n * specified algorithm identifier.\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveBits}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\n *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\n *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\n *  </ul>\n *  For additional modes see {@link GostSign} and {@link GostDigest}\n *\n * @memberOf SubtleCrypto\n * @method deriveBits\n * @instance\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\n * @param {Key} baseKey Derivation key object\n * @param {number} length Length bits\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.deriveBits = function (algorithm, baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.deriveBits(algorithm, baseKey, length);\n\n        algorithm = normalize(algorithm, 'deriveBits');\n        if (algorithm['public'])\n            algorithm['public'] = extractKey('deriveBits', algorithm, algorithm['public']);\n        return execute(algorithm, 'deriveBits', [extractKey('deriveBits', algorithm, baseKey), length]);\n    });\n}; // </editor-fold>\n\n/**\n * The importKey method returns a new Promise object that will key(s) using\n * the specified algorithm identifier. Key can be used in according with\n * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".<br><br>\n * Parameter keyData contains data in defined format.\n * The suppored key format values are:\n *  <ul>\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n *  </ul>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-importKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\n *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\n *      <li><b>GOST R 34.12</b> Key for encryption GOST 34.12 modes</li>\n *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST 34.12 modes</li>\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n *  </ul>\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n *\n * @memberOf SubtleCrypto\n * @method importKey\n * @instance\n * @param {KeyFormat} format Key format Format specifies a serialization format for a key\n * @param {CryptoOperationData} keyData\n * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n * @returns {Promise} Promise that resolves with {@link Key}\n */\nSubtleCrypto.prototype.importKey = function (format, keyData, algorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\n{\n    var type;\n    return new Promise(call).then(function () {\n        if (checkNative(algorithm))\n            return rootCrypto.subtle.importKey(format, keyData, algorithm, extractable, keyUsages);\n\n        if (format === 'raw') {\n            algorithm = normalize(algorithm, 'importKey');\n            if (keyUsages && keyUsages.indexOf) {\n                var name = algorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\n                if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\n                    type = 'private';\n                else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\n                    type = 'public';\n            }\n            return keyData;\n        } else {\n            var key;\n            if (format === 'pkcs8')\n                key = gostASN1Instance.GostPrivateKeyInfo.decode(keyData).object;\n            else if (format === 'spki')\n                key = gostASN1Instance.GostSubjectPublicKeyInfo.decode(keyData).object;\n            else\n                throw new NotSupportedError('Key format not supported');\n\n            algorithm = normalize(key.algorithm, 'importKey');\n            type = key.type;\n            if (extractable !== false)\n                extractable = extractable || key.extractable;\n            if (keyUsages) {\n                for (var i = 0; i < keyUsages.length; i++) {\n                    if (key.usages.indexOf(keyUsages[i]) < 0)\n                        throw DataError('Key usage not valid for this key');\n                }\n            } else\n                keyUsages = key.usages;\n            var data = key.buffer, keySize = algorithm.keySize, dataLen = data.byteLength;\n            if (type === 'public' || keySize === dataLen)\n                return data;\n            else {\n                // Remove private key masks\n                if (dataLen % keySize > 0)\n                    throw new DataError('Invalid key size');\n                algorithm.mode = 'MASK';\n                algorithm.procreator = 'VN';\n                var chain = [];\n                for (var i = keySize; i < dataLen; i += keySize) {\n                    chain.push((function (mask) {\n                        return function (data) {\n                            return execute(algorithm, 'unwrapKey', [mask, data]).then(function (data) {\n                                var next = chain.pop();\n                                if (next)\n                                    return next(data);\n                                else {\n                                    delete algorithm.mode;\n                                    return data;\n                                }\n                            });\n                        };\n                    })(new Uint8Array(data, i, keySize)));\n                }\n                return chain.pop()(new Uint8Array(data, 0, keySize));\n            }\n        }\n    }).then(function (data) {\n        return convertKey(algorithm, extractable, keyUsages, data, type);\n    });\n}; // </editor-fold>\n\n/**\n * The exportKey method returns a new Promise object that will key data in\n * defined format. <br><br>\n * The suppored key format values are:\n *  <ul>\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\n *  </ul>\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-exportKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\n *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\n *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\n *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\n *      <li><b>GOST R 34.11-CPKDF</b> Import Password Key for CryptoPro Derivation Algorithm</li>\n *      <li><b>SHA-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\n *      <li><b>SHA-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\n *  </ul>\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\n *\n * @memberOf SubtleCrypto\n * @method exportKey\n * @instance\n * @param {KeyFormat} format Format specifies a serialization format for a key\n * @param {Key} key Key object\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.exportKey = function (format, key) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (key && checkNative(key.algorithm))\n            return rootCrypto.subtle.exportKey(format, key);\n\n        if (!key.extractable)\n            throw new InvalidAccessError('Key not extractable');\n\n        var raw = extractKey(null, null, key);\n        if (format === 'raw')\n            return raw;\n        else if (format === 'pkcs8' && key.algorithm && key.algorithm.id) {\n            if (key.algorithm.procreator === 'VN') {\n                // Add masks for ViPNet\n                var algorithm = key.algorithm, mask;\n                algorithm.mode = 'MASK';\n                return execute(algorithm, 'generateKey').then(function (data) {\n                    mask = data;\n                    return execute(algorithm, 'wrapKey', [mask, key.buffer]);\n                }).then(function (data) {\n                    delete algorithm.mode;\n                    var d = new Uint8Array(data.byteLength + mask.byteLength);\n                    d.set(new Uint8Array(data, 0, data.byteLength));\n                    d.set(new Uint8Array(mask, 0, mask.byteLength), data.byteLength);\n                    var buffer = d.buffer;\n                    buffer.enclosed = true;\n                    return gostASN1Instance.GostPrivateKeyInfo.encode({\n                        algorithm: algorithm,\n                        buffer: buffer\n                    });\n                });\n            } else\n                return gostASN1Instance.GostPrivateKeyInfo.encode(key);\n        } else if (format === 'spki' && key.algorithm && key.algorithm.id)\n            return gostASN1Instance.GostSubjectPublicKeyInfo.encode(key);\n        else\n            throw new NotSupportedError('Key format not supported');\n    });\n}; // </editor-fold>\n\n/**\n * The wrapKey method returns a new Promise object that will wrapped key(s).\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-wrapKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\n *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\n *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\n *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\n *  </ul>\n *  For additional modes see {@link GostCipher}<br>\n *\n * @memberOf SubtleCrypto\n * @method wrapKey\n * @instance\n * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\n * @param {Key} key Key object\n * @param {Key} wrappingKey Wrapping key object\n * @param {AlgorithmIdentifier} wrapAlgorithm Algorithm identifier\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\n */\nSubtleCrypto.prototype.wrapKey = function (format, key, wrappingKey, wrapAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(wrapAlgorithm))\n            return rootCrypto.subtle.wrapKey(format, key, wrappingKey, wrapAlgorithm);\n\n        wrapAlgorithm = normalize(wrapAlgorithm, 'wrapKey');\n        var keyData = extractKey(null, null, key);\n        if (wrapAlgorithm.procreator === 'SC' && key.type === 'private')\n            keyData = swapBytes(keyData);\n        return execute(wrapAlgorithm, 'wrapKey',\n          [extractKey('wrapKey', wrapAlgorithm, wrappingKey), keyData]).then(function (data) {\n            if (format === 'raw')\n                return data;\n            else\n                throw new NotSupportedError('Key format not supported');\n        });\n    });\n}; // </editor-fold>\n\n/**\n * The unwrapKey method returns a new Promise object that will unwrapped key(s).\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-unwrapKey}<br><br>\n *\n * Supported algorithm names:\n *  <ul>\n *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\n *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\n *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\n *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\n *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\n *  </ul>\n *  For additional modes see {@link GostCipher}<br>\n *\n * @memberOf SubtleCrypto\n * @method unwrapKey\n * @instance\n * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\n * @param {CryptoOperationData} wrappedKey Wrapped key data\n * @param {Key} unwrappingKey Unwrapping key object\n * @param {AlgorithmIdentifier} unwrapAlgorithm Algorithm identifier\n * @param {AlgorithmIdentifier} unwrappedKeyAlgorithm Key algorithm identifier\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\n * @returns {Promise} Promise that resolves with {@link Key}\n */\nSubtleCrypto.prototype.unwrapKey = function (format, wrappedKey, unwrappingKey,\n                                             unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Promise(call).then(function () {\n        if (checkNative(unwrapAlgorithm))\n            return rootCrypto.subtle.unwrapKey(format, wrappedKey, unwrappingKey,\n              unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages);\n\n        unwrapAlgorithm = normalize(unwrapAlgorithm, 'unwrapKey');\n        unwrappedKeyAlgorithm = normalize(unwrappedKeyAlgorithm, 'importKey');\n        if (format !== 'raw')\n            throw new NotSupportedError('Key format not supported');\n\n        return execute(unwrapAlgorithm, 'unwrapKey', [extractKey('unwrapKey', unwrapAlgorithm, unwrappingKey), wrappedKey]).then(function (data) {\n            var type;\n            if (unwrappedKeyAlgorithm && unwrappedKeyAlgorithm.name) {\n                var name = unwrappedKeyAlgorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\n                if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\n                    type = 'private';\n                else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\n                    type = 'public';\n            }\n            if (unwrapAlgorithm.procreator === 'SC' && type === 'private')\n                data = swapBytes(data);\n            return convertKey(unwrappedKeyAlgorithm, extractable, keyUsages, data, type);\n        });\n    });\n}; // </editor-fold>\n\nexport const gostSubtleInstance = new SubtleCrypto();\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = new Buffer(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen)\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","/**\n * @file Provides facilities for handling certificates, CRLs, etc.\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { gostCrypto } from './gostCrypto';\nimport { gostSecurityInstance } from './gostSecurity';\nimport { gostCodingInstance } from './gostCoding';\nimport { gostASN1Instance } from './gostASN1';\nimport { gostSubtleInstance } from './gostSubtle';\n\n/*\n * Common algorithms\n *\n */ // <editor-fold defaultstate=\"collapsed\">\nvar CryptoOperationData = ArrayBuffer;\n\n// Coding\nvar coding = gostCodingInstance;\n\n// Providers\nvar providers = gostSecurityInstance.providers;\n\n// ASN.1 syntax\nvar asn1 = gostASN1Instance;\n\n// Crypto subtle\nvar subtle = gostSubtleInstance;\n\n// Expand javascript object\nfunction expand(r) {\n    for (var i = 1, n = arguments.length; i < n; i++) {\n        var item = arguments[i];\n        if (typeof item === 'object')\n            for (var name in item)\n                if (item.hasOwnProperty(name))\n                    r[name] = item[name];\n    }\n    return r;\n}\n\n// Extend javascript class\nfunction extend(Class) {\n    var F = function () {\n    };\n    F.prototype = Class.prototype;\n    var r = new F, args = [r];\n    for (var i = 1; i < arguments.length; i++)\n        args.push(arguments[i]);\n    return expand.apply(this, args);\n}\n\n// Today date + n days\nfunction today(n) {\n    var date = new Date();\n    date.setHours(0, 0, 0, 0);\n    if (n)\n        date.setDate(date.getDate() + n);\n    return date;\n}\n\n// Self resolver\nfunction call(callback) {\n    try {\n        callback();\n    } catch (e) {\n    }\n}\n\n// Serial number\nfunction genSerialNumber() {\n    var seed = new Uint8Array(4);\n    gostCrypto.getRandomValues(seed);\n    seed[0] = seed[0] & 0x7f;\n    return coding.Int16.encode(seed);\n}\n\n// True if equal numbers\nvar equalNumbers = (function () {\n    // Convert number to bigendian hex string\n    var hex = function (s) {\n        var t = typeof s;\n        return t === 'undefined' || s === '' ? '0' :\n          t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\n            s.replace('0x', '').toLowerCase();\n    };\n    // Zero left padding\n    var lpad = function (s, size) {\n        return (new Array(size + 1).join('0') + s).slice(-size);\n    };\n    return function (s1, s2) {\n        s1 = hex(s1);\n        s2 = hex(s2);\n        var len = Math.max(s1.length, s2.length);\n        return lpad(s1, len) === lpad(s2, len);\n    };\n})();\n\n// Check equal names\nfunction equalNames(name1, name2) {\n    for (var key in name1)\n        if (name1[key] !== name2[key])\n            return false;\n    for (var key in name2)\n        if (name1[key] !== name2[key])\n            return false;\n    return true;\n}\n\n// Check the buffers to equal\nfunction equalBuffers(r1, r2) {\n    var s1 = new Uint8Array(r1),\n      s2 = new Uint8Array(r2);\n    if (s1.length !== s2.length)\n        return false;\n    for (var i = 0, n = s1.length; i < n; i++)\n        if (s1[i] !== s2[i])\n            return false;\n    return true;\n}\n\n// Match certificate\nfunction matchCertificate(cert, selector) {\n    var skid = cert.extensions && cert.extensions.subjectKeyIdentifier;\n    return (cert && selector &&\n      (!selector.issuer || equalNames(cert.issuer, selector.issuer)) &&\n      (!selector.serialNumber || equalNumbers(cert.serialNumber, selector.serialNumber)) &&\n      (!selector.subjectKeyIdentifier || equalBuffers(skid, selector.subjectKeyIdentifier)) &&\n      (!selector.subject || equalNames(cert.subject, selector.subject)) &&\n      (!selector.date || (cert.notBefore.getTime() <= selector.date.getTime() &&\n        cert.notAfter.getTime() > selector.date.getTime())));\n}\n\n// Create authority certificate selector\nfunction authoritySelector(cert, extensions, date) {\n    var selector = { subject: cert.issuer, date: date },\n      akid = extensions && extensions.authorityKeyIdentifier;\n    if (akid) {\n        selector.subjectKeyIdentifier = akid.keyIdentifier;\n        if (akid.authorityCertIssuer && akid.authorityCertIssuer[0] &&\n          akid.authorityCertSerialNumber) {\n            selector.issuer = akid.authorityCertIssuer[0];\n            selector.serialNumber = akid.authorityCertSerialNumber;\n        }\n    }\n    return selector;\n}\n\n// Find certificates\nfunction selectCertificates(certs, selector) {\n    var result = [];\n    for (var i = 0, n = certs.length; i < n; i++)\n        if (matchCertificate(certs[i], selector))\n            result.push(certs[i]);\n    return result;\n}\n\n// Match CRL\nfunction matchCRL(crl, selector) {\n    return ((!selector.issuer || equalNames(crl.issuer, selector.issuer)) &&\n      (!selector.date || (crl.thisUpdate.getTime() < selector.date.getTime())));\n}\n\n// Find certificates\nfunction selectCRLs(crls, selector) {\n    var result = [];\n    for (var i = 0, n = crls.length; i < n; i++)\n        if (matchCRL(crls[i], selector))\n            result.push(crls[i]);\n    return result;\n}\n\n// Define provider for key algorithm\nfunction keyProvider(algorithm) {\n    var id = algorithm.id;\n    for (var name in providers) {\n        var provider = providers[name];\n        if (provider.publicKey.id === id)\n            return provider;\n    }\n}\n\nfunction defineProperty(object, name, descriptor, enumerable) {\n    if (typeof descriptor !== 'object')\n        descriptor = { value: descriptor };\n    if (enumerable !== undefined)\n        descriptor.enumerable = enumerable;\n    Object.defineProperty(object, name, descriptor);\n}\n\nfunction defineProperties(object, properties, enumerable) {\n    for (var name in properties)\n        defineProperty(object, name, properties[name], enumerable);\n}\n\n// Extend javascript class\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\n    // If constructor not defined\n    if (typeof Class !== 'function') {\n        propertiesClass = propertiesObject;\n        propertiesObject = Class;\n        Class = function () {\n            Super.apply(this, arguments);\n        };\n    }\n    // Create prototype properties\n    Class.prototype = Object.create(Super.prototype, {\n        constructor: {\n            value: Class\n        },\n        superclass: {\n            value: Super.prototype\n        }\n    });\n    if (propertiesObject)\n        defineProperties(Class.prototype, propertiesObject, true);\n    // Inherites super class properties\n    if (Super !== Object)\n        for (var name in Super)\n            Class[name] = Super[name];\n    Class.super = Super;\n    if (propertiesClass)\n        defineProperties(Class, propertiesClass, true);\n    return Class;\n}\n\n// </editor-fold>\n\n/**\n * Provides facilities for handling certificates, CRLs, etc.\n *\n * @class GostCert\n */\nexport function GostCert() {\n}\n\n/**\n * Certificate templates\n * <ul>\n *      <li>providerName - provider name for key generation, default 'CP-01'</li>\n *      <li>subject - template of subject name {countryName: 'RU', commonName: 'Anonymous'}</li>\n *      <li>caKeyUsage - default key usages for a CA certificates\n *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\n *          'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign']</li>\n *      <li>caExtKeyUsage - default extended key usages for a CA certificates\n *          ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\n *          'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning']</li>\n *      <li>userKeyUsage - default key usages for a user certificate\n *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\n *      <li>userExtKeyUsage - default extended key usages for user certificate\n *          ['clientAuth', 'emailProtection']</li>\n *      <li>days - validity of the certificate in days, default 7305</li>\n * </ul>\n *\n * @memberOf GostCert\n * @instance\n */\nvar options = {// <editor-fold defaultstate=\"collapsed\">\n    providerName: 'CP-01',\n    subject: { countryName: 'RU', commonName: 'Anonymous' },\n    caKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\n        'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign'],\n    caExtKeyUsage: ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\n        'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning'],\n    userKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\n    userExtKeyUsage: ['clientAuth', 'emailProtection'],\n    days: 7305 // </editor-fold>\n};\n\nGostCert.prototype.options = options;\n\n/**\n * This class encapsulates X.509 Version 3 certificates.<br><br>\n *\n * Constructs an X.509 certificate from the given DER encoding or ASN.1 Certificate object.\n *\n * @class GostCert.X509\n * @extends GostASN1.Certificate\n * @param {(FormatedData|GostASN1.Certificate)} cert The certificate\n */\nvar X509 = function (cert) // <editor-fold defaultstate=\"collapsed\">\n{\n    try {\n        // Try to use decode X.509 certificate\n        asn1.Certificate.call(this, cert, true);\n    } catch (e) {\n        try {\n            // Try to decode certification request\n            cert = new asn1.CertificationRequest(cert, true);\n        } catch (e) {\n        }\n        // Create new certificate structure\n        cert = cert || {};\n        asn1.Certificate.call(this, {\n            version: 2,\n            serialNumber: cert.serialNumber || genSerialNumber(),\n            signature: cert.signature || { id: 'noSignature' },\n            issuer: cert.subject || options.subject,\n            notBefore: cert.notBefore || today(),\n            notAfter: cert.notAfter ||\n            today(cert.days || options.days),\n            subject: cert.subject || options.subject,\n            subjectPublicKeyInfo: cert.subjectPublicKeyInfo || {\n                algorithm: { id: 'noSignature' },\n                subjectPublicKey: new CryptoOperationData(0)\n            },\n            extensions: (cert.attributes && (cert.attributes.extensionRequest ||\n              cert.attributes.msCertExtensions)) || cert.extensions,\n            signatureAlgorithm: { id: 'noSignature' },\n            signatureValue: new CryptoOperationData(0)\n        });\n    }\n}; // </editor-fold>\n\nextend(asn1.Certificate, X509, {\n    /**\n     * Generate the contents of this certificate and sign it.<br><br>\n     *\n     * If issuerCertificate is not defined self signed certificate generated\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey The issuer's private key\n     * @param {GostCert.X509} issuerCertificate The issuer's certificate or undefined for self-signed certificate\n     * @returns {Promise} Promise to return self object after sign the certificate\n     */\n    sign: function (issuerPrivateKey, issuerCertificate) // <editor-fold defaultstate=\"collapsed\">\n    {\n\n        var self = this, spki = self.subjectPublicKeyInfo;\n        return new Promise(call).then(function () {\n\n            // Need generated key\n            if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\n                throw new Error('Key pair was not generated for the certificate');\n            // Check issuer private key\n            if (!issuerPrivateKey)\n                throw new Error('The private key of the issuer is not defined');\n\n            // Certificate can be self signed\n            issuerCertificate = issuerCertificate || self;\n\n            // Calculate subject key indentifier\n            return subtle.digest('SHA-1', spki.subjectPublicKey);\n        }).then(function (digest) {\n\n            // Signature algorithm\n            var provider = issuerCertificate.getProvider() || providers[options.providerName];\n            if (!self.signature || self.signature.id === 'noSignature')\n                self.signature = provider.signature;\n            self.signatureAlgorithm = self.signature;\n\n            // Set issuer\n            self.issuer = issuerCertificate.subject;\n            // Set default extensions\n            if (!self.extensions)\n                self.extensions = {};\n            var exts = self.extensions, ae = issuerCertificate.extensions;\n            if (self === issuerCertificate) { // Self-signed CA certificate\n                // Set key usage\n                exts.keyUsage = exts.keyUsage || options.caKeyUsage;\n                exts.extKeyUsage = exts.extKeyUsage || options.caExtKeyUsage;\n                // Set basic constraints\n                exts.basicConstraints = exts.basicConstraints || { cA: true };\n            } else {\n                // Check key usage and validity\n                if (!issuerCertificate.checkUsage('keyCertSign', self.notBefore))\n                    throw new Error('The issuer\\'s certificate is not valid for signing a certificate');\n\n                // Set key usage\n                exts.keyUsage = exts.keyUsage || options.userKeyUsage;\n                exts.extKeyUsage = exts.extKeyUsage || options.userExtKeyUsage;\n                // Set basic constraints\n                exts.basicConstraints = exts.basicConstraints || {\n                    cA: exts.keyUsage.indexOf('keyCertSign') >= 0\n                };\n                // Check path length constraint\n                if (exts.basicConstraints.cA) {\n                    var pathLen = ae && ae.basicConstraints && ae.pathLenConstraint;\n                    if (pathLen !== undefined) {\n                        if (pathLen > 0)\n                            exts.basicConstraints.pathLenConstraint = pathLen - 1;\n                        else\n                            throw new Error('Path length constraint exceeded');\n                    }\n                }\n            }\n            // Subject key identifier 160 bit from public key hash\n            exts.subjectKeyIdentifier = digest;\n            // Authority key identifier\n            if (ae && ae.subjectKeyIdentifier)\n                exts.authorityKeyIdentifier = {\n                    keyIdentifier: ae.subjectKeyIdentifier,\n                    authorityCertIssuer: [issuerCertificate.issuer],\n                    authorityCertSerialNumber: issuerCertificate.serialNumber\n                };\n\n            // Import the private key\n            return subtle.importKey('pkcs8', issuerPrivateKey.encode(), issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\n        }).then(function (key) {\n\n            // Sign certificate\n            return subtle.sign(self.signatureAlgorithm, key, self.tbsCertificate.encode());\n        }).then(function (signatureValue) {\n            // Siganture value\n            self.signatureValue = signatureValue;\n\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Generate key pair for certificate\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The key algorithm or name of provider\n     * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after self-signed certificate generation\n     */\n    generate: function (keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, privateKey, provider;\n        if (keyAlgorithm)\n            provider = providers[keyAlgorithm];\n        else\n            provider = this.getProvider() || providers[options.providerName];\n        if (provider)\n            keyAlgorithm = expand(provider.publicKey, { privateKey: provider.privateKey });\n\n        return new Promise(call).then(function () {\n\n            // Generate key pair\n            return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\n        }).then(function (keyPair) {\n            privateKey = keyPair.privateKey;\n\n            // Export public key\n            return subtle.exportKey('spki', keyPair.publicKey);\n        }).then(function (spki) {\n            self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\n\n            return subtle.exportKey('pkcs8', privateKey);\n        }).then(function (pkcs8) {\n\n            return new asn1.PrivateKeyInfo(pkcs8);\n        });\n    }, // </editor-fold>\n    /**\n     * Gets the public key.\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @returns {Promise} Promise to return {@link Key}\n     */\n    getPublicKey: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        var spki = this.subjectPublicKeyInfo,\n          keyUsages = (spki.algorithm.id === 'rsaEncryption') ? ['verify'] :\n            ['verify', 'deriveKey', 'deriveBits'];\n        return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', keyUsages);\n    }, // </editor-fold>\n    /**\n     * Get appropriate crypto provider for public key\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @returns Object Set of crypto provider algorithms\n     */\n    getProvider: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        return keyProvider(this.subjectPublicKeyInfo.algorithm);\n    }, // </editor-fold>\n    /**\n     * Verifies this certificate.<br><br>\n     *\n     * More precisely:<br><br>\n     * <ul>\n     *      <li>Verifies that the current VM date/time is within the validity period of the certificate.</li>\n     *      <li>If an unrecognized critical extension is present, the certificate is rejected.</li>\n     *      <li>If the issuer certificate has been set, verifies that the signing certificate is a\n     *          CA certificate, and that the signature is correct. The signing certificate is considered\n     *          to be a CA certificate unless one of the following two conditions hold: The signing\n     *          certificate contains a basicConstraints extension, and the CA flag is false; or the\n     *          signing certificate contains a keyUsage extension, the keyUsage extension is marked\n     *          critical, and the keyCertSign bit is false.</li>\n     *      <li>If the issuer CRL has been set, verifies that the certificate has not been revoked.</li>\n     * </ul>\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @param {GostCert.X509} issuerCertificate The issuer X.509 certificate\n     * @param {GostCert.CRL} issuerCRL The issuer CRL\n     * @param {Date} date Validation date. Default current date\n     * @returns {Promise} Promise to return self object if the certificate is valid\n     */\n    verify: function (issuerCertificate, issuerCRL, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, exts = self.extensions;\n        return new Promise(call).then(function () {\n            // Current date\n            date = date || today();\n            if (self.notBefore.getTime() > date.getTime() ||\n              self.notAfter.getTime() <= date.getTime())\n                throw new Error('The certificate has not yet started or expired');\n            // A unrecognized critical extensions\n            for (var name in exts) {\n                var value = exts[name];\n                if (value.critical &&\n                  ['authorityKeyIdentifier', 'subjectKeyIdentifier', 'keyUsage', 'certificatePolicies',\n                      'policyMappings', 'basicConstraints', 'nameConstraints', 'policyConstraints',\n                      'extKeyUsage'].indexOf(name) < 0)\n                    throw new Error('The critical extension \\'' + name + '\\' is unrecognized');\n            }\n            // The certificate can be self-signed\n            var selector = authoritySelector(self, exts, self.notBefore);\n            if (!issuerCertificate && matchCertificate(self, selector))\n                issuerCertificate = self;\n            // Check issuer\n            if (issuerCertificate) {\n                if (!matchCertificate(issuerCertificate, selector) ||\n                  !issuerCertificate.checkUsage('keyCertSign', self.notBefore))\n                    throw new Error('The issuer\\'s certificate is not valid');\n                // Check certificate signature\n                return issuerCertificate.verifySignature(self.tbsCertificate.encode(),\n                  self.signatureValue, self.signatureAlgorithm);\n            }\n            return true;\n        }).then(function (result) {\n            if (!result)\n                throw new Error('The certificate has invalid signature');\n            // Check CRL\n            if (issuerCRL) {\n                if (!matchCRL(issuerCRL, { issuer: self.issuer, date: date }))\n                    throw new Error('The issuer\\'s CRL is not valid');\n                if (issuerCRL.isRevoked(self.serialNumber))\n                    throw new Error('The certificate is revoked');\n            }\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Verify a signature made with this certificate's public key.\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @param {CryptoOperationData} data The signed document.\n     * @param {CryptoOperationData} signature The signature\n     * @param {AlgorithmIdentifier} algorithm The algorithm ID used for the signature.\n     * @returns {Promise} Promise to return true if the signature is verified, and false otherwise\n     */\n    verifySignature: function (data, signature, algorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return this.getPublicKey().then(function (publicKey) {\n            return subtle.verify(algorithm, publicKey, signature, data);\n        });\n    }, // </editor-fold>\n    /**\n     * Check key usage and date validation\n     *\n     * @memberOf GostCert.X509\n     * @instance\n     * @param {DOMString} operation The operation\n     * @param {Date} date Operation date. Default current date\n     * @returns {boolean}\n     */\n    checkUsage: function (operation, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, exts = self.extensions;\n        date = date || today();\n        return (self.notBefore.getTime() <= date.getTime() && self.notAfter.getTime() > date.getTime()) &&\n          (!exts || !((['keyCertSign', 'cRLSign'].indexOf(operation) > 0 && exts.basicConstraints && !exts.basicConstraints.cA) ||\n            ((exts.keyUsage && exts.keyUsage.indexOf(operation) < 0) && (exts.extKeyUsage && exts.extKeyUsage.indexOf(operation) < 0))));\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates X.509 Version 3 certificates.\n *\n * @memberOf GostCert\n * @type GostCert.X509\n */\nGostCert.prototype.X509 = X509;\n\n/**\n * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.<br><br>\n *\n * Note: the methods and constructors that input a CRL do not automatically verify it.\n * You need to explicitly call the verify method.\n *\n * @class GostCert.CRL\n * @extends GostASN1.CertificateList\n * @param {(FormatedData|GostASN1.CertificateList)} crl\n */\nvar CRL = function (crl) // <editor-fold defaultstate=\"collapsed\">\n{\n    // Call super\n    CRL.super.call(this, crl);\n    // Initialize defaults\n    if (!this.version)\n        this.version = 1;\n    if (!this.revokedCertificates)\n        this.revokedCertificates = [];\n    if (!this.thisUpdate)\n        this.thisUpdate = today();\n}; // </editor-fold>\n\nextend(asn1.CertificateList, CRL, {\n    /**\n     * Signs this CRL. The issuer's private key has to be set. The default random number generator is used, if needed.<br><br>\n     *\n     * Note: Making any modifications to the contents of the CRL after signing invalidates the signature.\n     * The sign method must be invoked again after any modifications for a valid signature to be computed.\n     *\n     * @memberOf GostCert.CRL\n     * @instance\n     * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey the issuer's private signing key\n     * @param {GostCert.X509} issuerCertificate the issuer's certificate\n     * @returns {Promise} Promise to return self object after sign the CRL\n     */\n    sign: function (issuerPrivateKey, issuerCertificate) // <editor-fold defaultstate=\"collapsed\">\n    {\n\n        var self = this;\n        return new Promise(call).then(function () {\n            // Check issuer private key\n            if (!issuerPrivateKey)\n                throw new Error('The issuer\\'s private key is not defined');\n            // Check issuer certificate\n            if (!issuerCertificate)\n                throw new Error('The issuer\\'s certificate is not defined');\n            // Check issuer name\n            if (!self.issuer)\n                self.issuer = issuerCertificate.issuer;\n            else if (!equalNames(self.issuer, issuerCertificate.issuer))\n                throw new Error('The CRL prototype and authority certificate have different issuers');\n            // Check key usage and validity\n            if (!issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\n                throw new Error('The issuer\\'s certificate is not valid for signing a CRL');\n\n            // Signature algorithm\n            var provider = issuerCertificate.getProvider() || providers[options.providerName];\n            if (!self.signature)\n                self.signature = provider.signature;\n            self.signatureAlgorithm = self.signature;\n\n            // Set issuer\n            self.issuer = issuerCertificate.subject;\n            // Set default extensions\n            if (!self.crlExtensions)\n                self.crlExtensions = {};\n            var exts = self.crlExtensions,\n              ae = issuerCertificate.extensions;\n            if (ae && ae.subjectKeyIdentifier)\n                exts.authorityKeyIdentifier = {\n                    keyIdentifier: ae.subjectKeyIdentifier,\n                    authorityCertIssuer: [issuerCertificate.issuer],\n                    authorityCertSerialNumber: issuerCertificate.serialNumber\n                };\n            exts.cRLNumber = exts.cRLNumber || 0;\n\n            // Import the private key\n            return subtle.importKey('pkcs8', issuerPrivateKey.encode(),\n              issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\n        }).then(function (key) {\n\n            // Sign CRL\n            return subtle.sign(self.signatureAlgorithm, key, self.tbsCertList.encode());\n        }).then(function (signatureValue) {\n\n            // Siganture value\n            self.signatureValue = signatureValue;\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Verify the CRL. Checks the date and signature if issuer's certifiate has been defined.\n     *\n     * @memberOf GostCert.CRL\n     * @instance\n     * @param {GostCert.X509} issuerCertificate the issuer's certificate\n     * @param {Date} date Validation date. Default current date\n     * @returns {Promise} Promise to return self object if the certificate is valid\n     */\n    verify: function (issuerCertificate, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, exts = self.crlExtensions;\n        return new Promise(call).then(function () {\n            // Current date\n            date = date || today();\n            if (!self.thisUpdate.getTime() > date.getTime())\n                throw new Error('The CRL has not yet started');\n            // Check issuer\n            if (issuerCertificate) {\n                if (!matchCertificate(issuerCertificate, authoritySelector(self, exts, self.thisUpdate)) ||\n                  !issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\n                    throw new Error('The issuer\\'s certificate is not valid');\n                if (!self.signatureValue || !self.signatureAlgorithm)\n                    throw new Error('The has no signature');\n                // Check CRL signature\n                return issuerCertificate.verifySignature(self.tbsCertList.encode(),\n                  self.signatureValue, self.signatureAlgorithm);\n            }\n        }).then(function (result) {\n            if (!result)\n                throw new Error('The CRL has invalid signature');\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Checks whether this certificate serial number is on the list.\n     *\n     * @memberOf GostCert.CRL\n     * @instance\n     * @param {Number} serialNumber the issuer's certificate\n     * @param {Date} date Validation date. Default current date\n     * @returns {boolean} True if the certificate is valid, and false otherwise\n     */\n    isRevoked: function (serialNumber, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var rc = this.revokedCertificates;\n        date = date || today();\n        for (var i = 0; i < rc.length; i++) {\n            // Check date and serial number\n            if (date.getTime() >= rc[i].revocationDate.getTime() &&\n              equalNumbers(rc[i].userCertificate, serialNumber))\n                return true;\n        }\n        return false;\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.\n *\n * @memberOf GostCert\n * @type GostCert.CRL\n */\nGostCert.prototype.CRL = CRL;\n\n/**\n * A class that encapsulates a DER-encoded PKCS #10 certificate request. The request contains\n * the subject's name and public key, and it is signed with the subject's private key.\n * The public key contained in the request is used to verify the signature.\n * The signature on the request is verified automatically when the request is read.\n * Note that the subject's private key is used only to produce a signature when the request is output,\n * and is not actually stored with the request.\n *\n * @class GostCert.Request\n * @extends GostASN1.CertificationRequest\n * @param {(FormatedData|GostASN1.CertificationRequest)} req\n */\nfunction Request(req) // <editor-fold defaultstate=\"collapsed\">\n{\n    try {\n        // Try to use encode\n        asn1.CertificationRequest.call(this, req, true);\n    } catch (e) {\n        // Create new certificate structure\n        req = req || {};\n        asn1.CertificationRequest.call(this, {\n            version: 0,\n            subject: req.subject || options.subject,\n            subjectPublicKeyInfo: req.subjectPublicKeyInfo || {\n                algorithm: { id: 'noSignature' },\n                subjectPublicKey: new CryptoOperationData(0)\n            },\n            attributes: req.attributes || {\n                extensionRequest: {\n                    keyUsage: options.userKeyUsage,\n                    extKeyUsage: options.userExtKeyUsage\n                }\n            },\n            signatureAlgorithm: { id: 'noSignature' },\n            signatureValue: new CryptoOperationData(0)\n        });\n    }\n} // </editor-fold>\n\nextend(asn1.CertificationRequest, Request, {\n    /**\n     * Generate key pair and sign request\n     *\n     * @memberOf GostCert.Request\n     * @instance\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n     * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after request generation\n     */\n    generate: function (keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, privateKey, provider;\n        if (keyAlgorithm)\n            provider = providers[keyAlgorithm];\n        else\n            provider = this.getProvider() || providers[options.providerName];\n        if (provider)\n            keyAlgorithm = expand(provider.publicKey, { privateKey: provider.privateKey });\n\n        return new Promise(call).then(function () {\n\n            // Generate key pair\n            return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\n        }).then(function (keyPair) {\n            privateKey = keyPair.privateKey;\n\n            // Export public key\n            return subtle.exportKey('spki', keyPair.publicKey);\n        }).then(function (spki) {\n            self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\n\n            return subtle.exportKey('pkcs8', privateKey);\n        }).then(function (pkcs8) {\n            privateKey = new asn1.PrivateKeyInfo(pkcs8);\n\n            // Sign request\n            return self.sign(privateKey);\n        }).then(function () {\n\n            return privateKey;\n        });\n    }, // </editor-fold>\n    /**\n     * Get appropriate crypto provider for public key\n     *\n     * @memberOf GostCert.Request\n     * @instance\n     * @returns Object Set of crypto provider algorithms\n     */\n    getProvider: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        return keyProvider(this.subjectPublicKeyInfo.algorithm);\n    }, // </editor-fold>\n    /**\n     * Generate the contents of this request and sign it.<br><br>\n     *\n     * @memberOf GostCert.Request\n     * @instance\n     * @param {GostASN1.PrivateKeyInfo} privateKey The subject's private key\n     * @returns Promise to return self object after sign the request\n     */\n    sign: function (privateKey) // <editor-fold defaultstate=\"collapsed\">\n    {\n\n        var self = this, spki = self.subjectPublicKeyInfo;\n        return new Promise(call).then(function () {\n\n            // Need generated key\n            if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\n                throw new Error('Key pair was not generated for the certificate');\n            // Check issuer private key\n            if (!privateKey)\n                throw new Error('The private key is not defined');\n\n            // Signature algorithm\n            var provider = keyProvider(spki.algorithm) || providers[options.providerName];\n            self.signatureAlgorithm = provider.signature;\n\n            // Import the private key\n            return subtle.importKey('pkcs8', privateKey.encode(),\n              privateKey.privateKeyAlgorithm, false, ['sign']);\n        }).then(function (key) {\n\n            // Sign the certification request\n            return subtle.sign(self.signatureAlgorithm, key, self.requestInfo.encode());\n        }).then(function (signatureValue) {\n\n            // Siganture value\n            self.signatureValue = signatureValue;\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Verify the Certification Request. Checks the signature on the public key in the request.\n     *\n     * @memberOf GostCert.Request\n     * @instance\n     * @returns {Promise} Promise to return self object  if the certificate is valid\n     */\n    verify: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, spki = self.subjectPublicKeyInfo;\n        return new Promise(call).then(function () {\n\n            // Import key\n            return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', ['verify']);\n        }).then(function (publicKey) {\n\n            // Verify signature\n            return subtle.verify(self.signatureAlgorithm, publicKey, self.signatureValue,\n              self.requestInfo.encode());\n        }).then(function (result) {\n            if (!result)\n                throw new Error('The certification request has invalid signature');\n            return self;\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class that encapsulates a DER-encoded PKCS #10 certificate request.\n *\n * @memberOf GostCert\n * @type GostCert.Request\n */\nGostCert.prototype.Request = Request;\n\n/**\n * A class for retrieving Certificates and CRLs from a repository.<br><br>\n *\n * Once the CertStore has been created, it can be used to retrieve Certificates\n * and CRLs by calling its getCertificates and getCRLs methods. Unlike a KeyStore,\n * which provides access to a cache of private keys and trusted certificates,\n * a CertStore is designed to provide access to a potentially vast repository\n * of untrusted certificates and CRLs.\n *\n * @class GostCert.CertStore\n * @param {GostCert.X509[]} certificates Certificates\n * @param {GostCert.CRL[]} crls CLRs\n */\nfunction CertStore(certificates, crls) // <editor-fold defaultstate=\"collapsed\">\n{\n    this.certificates = certificates || [];\n    this.crls = crls || [];\n} // </editor-fold>\n\nextend(Object, CertStore, {\n    /**\n     * Returns a Array of Certificates that match the specified selector.\n     *\n     * @memberOf GostCert.CertStore\n     * @instance\n     * @param {GostCert.CertSelector} selector Certificate filter selector\n     * @returns {GostCert.X509[]} Selected certificates\n     */\n    getCertificates: function (selector) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return selectCertificates(this.certificates, selector);\n    }, // </editor-fold>\n    /**\n     * Returns a Collection of CRLs that match the specified selector.\n     *\n     * @memberOf GostCert.CertStore\n     * @instance\n     * @param {GostCert.CertSelector} selector CRL filter selector\n     * @returns {GostCert.CRL[]} selected CRLs\n     */\n    getCRLs: function (selector) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return selectCRLs(this.certificates, selector);\n    }, // </editor-fold>\n    /**\n     * Loads this CertStore from the given PKCS#7 formated input stream.\n     *\n     * @memberOf GostCert.CertStore\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} store The input stream from which the certstore is loaded\n     * @returns {GostCert.CertStore} Self object after store loaded\n     */\n    load: function (store) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var info = new asn1.ContentInfo(store),\n          certs = info.certificates, crls = info.crls;\n        for (var i = 0; i < certs.length; i++)\n            this.certificates.push(new X509(certs[i]));\n        for (var i = 0; i < crls.length; i++)\n            this.crls.push(new CRL(crls[i]));\n        return this;\n    }, // </editor-fold>\n    /**\n     * Stores this CertStore to the given output stream in PKCS#7 format.\n     *\n     * @memberOf GostCert.CertStore\n     * @instance\n     * @returns {GostASN1.ContentInfo} PKCS#7 content info with certificates and crls from CertStore\n     */\n    store: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        return new asn1.ContentInfo({\n            contentType: 'signedData',\n            version: 0,\n            digestAlgorithms: [],\n            encapContentInfo: { contentType: 'data' },\n            certificates: this.certs,\n            crls: this.crls,\n            signerInfos: []\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class for retrieving Certificates and CRLs from a repository.\n *\n * @memberOf GostCert\n * @type GostCert.Request\n */\nGostCert.prototype.CertStore = CertStore;\n\n/**\n * A class for building and validating certification paths (also known as certificate chains).\n *\n * @class GostCert.CertPath\n * @param {GostCert.CertStore} certStore\n */\nfunction CertPath(certStore) // <editor-fold defaultstate=\"collapsed\">\n{\n    this.certStore = certStore;\n} // </editor-fold>\n\nextend(Object, CertPath, {\n    /**\n     * Attempts to build a certification path using the specified algorithm parameter set.\n     *\n     * @memberOf GostCert.CertPath\n     * @instance\n     * @param {GostCert.X509} certificate Starting path certificate\n     * @param {Date} date Validation date. Default today\n     * @returns {Promise} Promise to return array of {@link GostCert.X509} with certification path\n     */\n    build: function (certificate, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            // Build certification path\n            var current = new X509(certificate), certPath = [], success = false, verifiers = [];\n            while (current) {\n                var foundCRLs = [], founds = [];\n                certPath.push(current);\n                if (!success) {\n                    // Select issuer CRL\n                    foundCRLs = self.certStore.getCRLs({ issuer: current.issuer, date: date });\n                    // Create issuer's selection criteria\n                    var selector = authoritySelector(current, current.extensions,\n                      current.notBefore);\n                    // Self-signed certificate?\n                    if (!matchCertificate(current, selector))\n                    // Select issuer form trusted CA root list\n                        founds = self.certStore.getCertificates(selector);\n                    else\n                        success = true;\n                }\n                // Add verification tasks\n                var next = founds.length > 0 && new X509(founds[0]),\n                  crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\n                // Verify CRLs\n                if (crl)\n                    verifiers.push(crl.verify(next, date));\n\n                // Verify the certificate\n                verifiers.push(current.verify(next, crl, date));\n                current = next;\n            }\n            if (!success)\n                throw new Error('Root certificate is not found');\n            // Verify all certificates in path\n            return Promise.all(verifiers).then(function (results) {\n                for (var i = 0; i < results; i++)\n                    if (!results[i])\n                        throw new Error('Certification path is not validated');\n                return certPath;\n            });\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class for building and validating certification paths (also known as certificate chains).\n *\n * @memberOf GostCert\n * @type GostCert.CertPath\n */\nGostCert.prototype.CertPath = CertPath;\n\n/**\n * A generic interface for implementing a particular certificate verification\n * scheme, such as constructing and verifying\n * certificate chains.\n *\n * @class GostCert.CertificateTrustPolicy\n */\nfunction CertificateTrustPolicy() {\n}\n\nextend(Object, CertificateTrustPolicy, {\n    /**\n     * Returns a certificate, known to be valid (according to criteria dependent\n     * on the verification scheme), which has the given selector, certificate and\n     * CRL lists to implement a particular certificate verification  scheme,\n     * such a forming valid certificate chains.<br>\n     * Second and third argument to this method may be undefined, and such a case\n     * must be treated exactly the same as if the particular argument was an empty array.\n     *\n     * @memberOf GostCert.CertificateTrustPolicy\n     * @instance\n     * @param {GostCert.CertificateSelector} selector Certificate selector\n     * @param {GostCert.X509[]} certificates Certificates\n     * @param {GostCert.CRL[]} crls CLRs\n     * @returns {Promise} Promise to return valid {@link GostCert.X509}\n     */\n    getValidCertificate: function (selector, certificates, crls) {\n    }\n});\n\n/**\n * A generic interface for implementing a particular certificate verification\n *\n * @memberOf GostCert\n * @type GostCert.CertificateTrustPolicy\n */\nGostCert.prototype.CertificateTrustPolicy = CertificateTrustPolicy;\n\n/**\n * A certificate trust policy based on a set of trusted root CAs.<br><br>\n *\n * In this policy, a certificate will be trusted if and only if it is part of a\n * valid certificate chain which terminates in one of the trusted root CAs. <br><br>\n *\n * This policy has two options for certificate chain verification:\n * <ul>\n *      <li>requireCRL - If true, then for every certificate in a chain\n *          (unless it is one of the trusted root CA certificates) a valid CRL\n *          must be provided to determine its revocation status. The default is false.</li>\n *      <li>requireCAFlag - If true, then every intermediate CA certificate (excluding\n *          the root CA or the end entity certificate) must contain a Basic Constraints\n *          extension, with the CA flag set. The default for this option is true.</li>\n * </ul>\n *\n * @class GostCert.TrustedCAPolicy\n * @extends GostCert.CertificateTrustPolicy\n * @param {GostCert.X509[]} trustedCACerts\n * @param {boolean} requireCRL\n * @param {boolean} requireCA\n */\nfunction TrustedCAPolicy(trustedCACerts, requireCRL, requireCA) // <editor-fold defaultstate=\"collapsed\">\n{\n    this.trustedCACerts = trustedCACerts || [];\n    this.requireCRL = requireCRL || false;\n    this.requireCA = requireCA || true;\n} // </editor-fold>\n\nextend(CertificateTrustPolicy, TrustedCAPolicy, {\n    /**\n     * Returns a certificate, known to be valid (according to criteria dependent\n     * on the verification scheme), which has the given selector, certificate and\n     * CRL lists to implement a particular certificate verification  scheme,\n     * such a forming valid certificate chains.<br>\n     * Second and third argument to this method may be undefined, and such a case\n     * must be treated exactly the same as if the particular argument was an empty array.\n     *\n     * @memberOf GostCert.TrustedCAPolicy\n     * @instance\n     * @param {GostCert.CertificateSelector} selector Certificate selector\n     * @param {GostASN1.Certificate[]} certificates Certificates\n     * @param {GostASN1.CertificateList[]} crls CLRs\n     * @param {Date} date Validation date. Default today\n     * @returns {Promise} Promise to return valid {@link GostCert.X509}\n     */\n    getValidCertificate: function (selector, certificates, crls, date) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, certPath;\n        return new Promise(call).then(function () {\n            certificates = certificates || [];\n            crls = crls || [];\n            // Get certificates from the trusted list\n            var certs = selectCertificates(self.trustedCACerts, selector);\n            if (certs.length > 0)\n                return new X509(certs[0]);\n            // Get certificates from the list\n            certs = selectCertificates(certificates, selector);\n            if (certs.length === 0)\n                return;\n            // Build certification path\n            var current = new X509(certs[0]), success = false, verifiers = [];\n            certPath = [];\n            while (current) {\n                var foundCRLs = [], founds = [];\n                certPath.push(current);\n                if (!success) {\n                    // Select issuer CRL\n                    foundCRLs = selectCRLs(crls, { issuer: current.issuer, date: date });\n                    if (foundCRLs.length === 0 && self.requireCRL)\n                        return; // The issuer\\'s CRL is not found\n                    // Create issuer's selection criteria\n                    selector = authoritySelector(current, current.extensions,\n                      current.notBefore);\n                    // Select issuer form trusted CA root list\n                    founds = selectCertificates(self.trustedCACerts, selector);\n                    if (founds.length === 0) {\n                        // Non-trusted self-signed certificate?\n                        if (!matchCertificate(current, selector)) {\n                            // Select issuer from certificate list\n                            founds = selectCertificates(certificates, selector);\n                            if (founds.length > 0) {\n                                // Check basic contrains and CA flag\n                                var exts = founds[0].extensions;\n                                if (self.requireCA) {\n                                    if (!exts || !exts.basicConstraints || !exts.basicConstraints.cA)\n                                        return; // The issuer\\'s certificate is not valid\n                                    // Check path length limit\n                                    if (exts.basicConstraints.pathLenConstraint !== undefined &&\n                                      exts.basicConstraints.pathLenConstraint < certPath.length - 1)\n                                        return; // The issuer\\'s certificate path length constraint exceeded\n                                }\n                            } else\n                                return; // Certification path is not built\n                        }\n                    } else\n                        success = true;\n                }\n                // Add verification tasks\n                var next = founds.length > 0 && new X509(founds[0]),\n                  crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\n                // Verify CRLs\n                if (crl)\n                    verifiers.push(crl.verify(next, date));\n\n                // Verify the certificate\n                verifiers.push(current.verify(next, crl, date));\n                current = next;\n            }\n            if (!success)\n                throw new Error('Trusted root certificate is not found');\n            // Verify all certificates in path\n            return Promise.all(verifiers).then(function (results) {\n                for (var i = 0; i < results; i++)\n                    if (!results[i])\n                        throw new Error('Certification path is not validated');\n                return certPath[0];\n            });\n        });\n    } // </editor-fold>\n});\n\n/**\n * A certificate trust policy based on a set of trusted root CAs.\n *\n * @memberOf GostCert\n * @type GostCert.TrustedCAPolicy\n */\nGostCert.prototype.TrustedCAPolicy = TrustedCAPolicy;\n\nexport const gostCertInstance = new GostCert();\n","import { GostRandom } from '../gostRandom';\n\n// Get random values\nexport function getSeed(length) {\n    const gostRandom = new GostRandom();\n    try {\n        const d = new Uint8Array(Math.ceil(length / 8));\n        gostRandom.getRandomValues(d);\n        return d;\n    } catch (e) {\n        throw new Error('Error occurred during random values generation');\n    }\n}\n\n// Set random values into Uint8Arry\n// Random generator\nexport function randomSeed(e) {\n    try {\n        const gostRandom = new GostRandom();\n        return gostRandom.getRandomValues(e);\n    } catch (e) {\n        throw new Error('Error occurred during random values generation');\n    }\n}\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","/**\n * @file Implements the Cryptographic Message Syntax as specified in RFC-2630.\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { gostSubtleInstance } from './gostSubtle';\nimport { gostASN1Instance } from './gostASN1';\nimport { gostCodingInstance } from './gostCoding';\nimport { gostCertInstance } from './gostCert';\nimport { gostSecurityInstance } from './gostSecurity';\n\n/*\n * Common algorithms\n */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CryptoOperationData = ArrayBuffer;\n\nvar providers = gostSecurityInstance.providers;\nvar coding = gostCodingInstance;\nvar asn1 = gostASN1Instance;\nvar subtle = gostSubtleInstance;\nvar cert = gostCertInstance;\n\n// Expand javascript object\nfunction expand() {\n    var r = {};\n    for (var i = 0, n = arguments.length; i < n; i++) {\n        var item = arguments[i];\n        if (typeof item === 'object')\n            for (var name in item)\n                if (item.hasOwnProperty(name))\n                    r[name] = item[name];\n    }\n    return r;\n}\n\nfunction defineProperty(object, name, descriptor, enumerable) {\n    if (typeof descriptor !== 'object')\n        descriptor = { value: descriptor };\n    if (enumerable !== undefined)\n        descriptor.enumerable = enumerable;\n    Object.defineProperty(object, name, descriptor);\n}\n\nfunction defineProperties(object, properties, enumerable) {\n    for (var name in properties)\n        defineProperty(object, name, properties[name], enumerable);\n}\n\n// Extend javascript class\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\n    // If constructor not defined\n    if (typeof Class !== 'function') {\n        propertiesClass = propertiesObject;\n        propertiesObject = Class;\n        Class = function () {\n            Super.apply(this, arguments);\n        };\n    }\n    // Create prototype properties\n    Class.prototype = Object.create(Super.prototype, {\n        constructor: {\n            value: Class\n        },\n        superclass: {\n            value: Super.prototype\n        }\n    });\n    if (propertiesObject)\n        defineProperties(Class.prototype, propertiesObject, true);\n    // Inherites super class properties\n    if (Super !== Object)\n        for (var name in Super)\n            Class[name] = Super[name];\n    Class.super = Super;\n    if (propertiesClass)\n        defineProperties(Class, propertiesClass, true);\n    return Class;\n}\n\n// Self resolver\nfunction call(callback) {\n    try {\n        callback();\n    } catch (e) {\n    }\n}\n\n// Check the buffers to equal\nfunction equalBuffers(r1, r2) {\n    var s1 = new Uint8Array(r1),\n      s2 = new Uint8Array(r2);\n    if (s1.length !== s2.length)\n        return false;\n    for (var i = 0, n = s1.length; i < n; i++)\n        if (s1[i] !== s2[i])\n            return false;\n    return true;\n}\n\n// True if equal numbers\nvar equalNumbers = (function () {\n    // Convert number to bigendian hex string\n    var hex = function (s) {\n        var t = typeof s;\n        return t === 'undefined' || s === '' ? '0' :\n          t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\n            s.replace('0x', '').toLowerCase();\n    };\n    // Zero left padding\n    var lpad = function (s, size) {\n        return (new Array(size + 1).join('0') + s).slice(-size);\n    };\n    return function (s1, s2) {\n        s1 = hex(s1);\n        s2 = hex(s2);\n        var len = Math.max(s1.length, s2.length);\n        return lpad(s1, len) === lpad(s2, len);\n    };\n})();\n\n// Check equal names\nfunction equalNames(name1, name2) {\n    for (var key in name1)\n        if (name1[key] !== name2[key])\n            return false;\n    for (var key in name2)\n        if (name1[key] !== name2[key])\n            return false;\n    return true;\n}\n\n// Add unique value to array\nfunction addUnique(array, item, comparator) {\n    var found = false;\n    for (var i = 0, n = array.length; i < n; i++)\n        if (comparator(array[i], item)) {\n            found = true;\n            break;\n        }\n    if (!found)\n        array.push(item);\n}\n\n// Set content data\nfunction setContentData(object, data) {\n    var content = object.content;\n    switch (object.contentType) {\n        case 'data':\n            object.content = data.content;\n            break;\n        case 'digestedData':\n        case 'signedData':\n        case 'authData':\n            content.encapContentInfo = {\n                eContentType: data.contentType,\n                eContent: data.content\n            };\n            break;\n        case 'envelopedData':\n        case 'encryptedData':\n            content.encryptedContentInfo = {\n                contentType: data.contentType,\n                encryptedContent: data.content\n            };\n            break;\n    }\n}\n\n// Get content data\nfunction getContentData(object) {\n    var content = object.content;\n    switch (object.contentType) {\n        case 'data':\n            return {\n                contentType: object.contentType,\n                content: object.content\n            };\n        case 'digestedData':\n        case 'signedData':\n        case 'authData':\n            var encap = content.encapContentInfo;\n            return {\n                contentType: encap.eContentType,\n                content: encap.eContent\n            };\n        case 'envelopedData':\n        case 'encryptedData':\n            var enc = content.encryptedContentInfo;\n            return {\n                contentType: enc.contentType,\n                content: enc.encryptedContent\n            };\n    }\n}\n\n// Check content info type\nfunction checkContentInfo(contentInfo) {\n    var content, contentType;\n    if (contentInfo) {\n        if (typeof contentInfo === 'string')\n            try {\n                contentInfo = coding.PEM.decode(contentInfo);\n            } catch (e1) {\n                contentInfo = coding.Chars.decode(contentInfo);\n            }\n        if (contentInfo instanceof CryptoOperationData)\n            try {\n                contentInfo = asn1.ContentInfo.decode(contentInfo);\n            } catch (e) {\n                contentInfo = { contentType: 'data', content: contentInfo };\n            }\n        contentType = contentInfo.contentType;\n        if (!contentType)\n            throw new Error('Invalid content object');\n        content = contentInfo.content;\n        if (!(content instanceof CryptoOperationData))\n            content = content.encode();\n        return { contentType: contentType, content: content };\n    } else\n        contentInfo = { contentType: 'data' };\n    return contentInfo;\n}\n\nfunction createContentInfo(contentInfo) {\n    try {\n        // Some provider has mistake to envelop ContentInfo enstead\n        // content field of ContentInfo\n        contentInfo = new asn1.ContentInfo(contentInfo.content, true);\n    } catch (e) {\n    }\n    // Create situable content info object\n    switch (contentInfo.contentType) {\n        case 'data':\n            return new DataContentInfo(contentInfo);\n        case 'digestedData':\n            return new DigestedDataContentInfo(contentInfo);\n        case 'signedData':\n            return new SignedDataContentInfo(contentInfo);\n        case 'encryptedData':\n            return new EncryptedDataContentInfo(contentInfo);\n        case 'envelopedData':\n            return new EnvelopedDataContentInfo(contentInfo);\n        default:\n            return new asn1.ContentInfo(contentInfo);\n    }\n}\n;\n\nfunction matchCert(id, cert) {\n    return (id instanceof CryptoOperationData ? cert.extensions &&\n      equalBuffers(id, cert.extensions.subjectKeyIdentifier) :\n      equalNames(cert.issuer, id.issuer) &&\n      equalNumbers(cert.serialNumber, id.serialNumber));\n}\n\n// Get random values\nfunction getSeed(length) {\n    var seed = new Uint8Array(length);\n    gostCrypto.getRandomValues(seed);\n    return seed.buffer;\n}\n\n// Salt size\nfunction saltSize(algorithm) {\n    switch (algorithm.id) {\n        case 'pbeWithSHAAnd40BitRC2-CBC':\n        case 'pbeWithSHAAnd128BitRC2-CBC':\n            return 8;\n        case 'pbeUnknownGost':\n            return 16;\n        case 'sha1':\n            return 20;\n        default:\n            return 32;\n    }\n}\n\n// Password to bytes\nfunction passwordData(derivation, password) {\n    if (!password)\n        return new CryptoOperationData(0);\n    if (password instanceof CryptoOperationData)\n        return password;\n    if (typeof password !== 'string')\n        throw new Error('The password must be string or raw data type');\n    if (derivation.name.indexOf('CPKDF') >= 0) {\n        // CryptoPro store password\n        var r = [];\n        for (var i = 0; i < password.length; i++) {\n            var c = password.charCodeAt(i);\n            r.push(c & 0xff);\n            r.push(c >>> 8 & 0xff);\n            r.push(0);\n            r.push(0);\n        }\n        return new Uint8Array(r).buffer;\n    } else if (derivation.name.indexOf('PFXKDF') >= 0)\n    // PKCS#12 unicode password\n        return coding.Chars.decode(password + '\\0', 'unicode');\n    else\n    // PKCS#5 password mode\n        return coding.Chars.decode(password, 'utf8');\n}\n\n// Define provider for encription algorithm\nfunction encryptionProvider(algorithm) {\n    var id = algorithm.id;\n    for (var name in providers) {\n        var provider = providers[name];\n        if (provider.encryption.id === id)\n            return provider;\n    }\n}\n\n// </editor-fold>\n\n/**\n * Provides facilities for handling certificates, CRLs, etc.\n * @class GostCMS\n */\nexport function GostCMS() {\n}\n\n/**\n * Message templates\n * <ul>\n *      <li>providerName - provider name for key generation, default 'CP-01'</li>\n *      <li>autoAddCert - automatic add signer certificate to signature, default false</li>\n *      <li>useKeyIdentifier - true to add Signer as the SignerIdentifier (v3), otherwise, as the IssuerAndSerialNumber (v1) (default false).</li>\n * </ul>\n *\n * @memberOf GostCMS\n * @instance\n */\nvar options = {// <editor-fold defaultstate=\"collapsed\">\n    providerName: 'CP-01',\n    autoAddCert: false,\n    useKeyIdentifier: false // </editor-fold>\n};\n\nGostCMS.prototype.options = options;\n\n/**\n * The base class for all CMS objects.<br><br>\n *\n * A CMS object consists of a content type, and content.<br><br>\n *\n * @class GostCMS.DataContentInfo\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content object.\n * @param {string} defaultSet The default object initialization set.\n * @extends GostASN1.ContentInfo\n */\nfunction DataContentInfo(contentInfo, defaultSet) // <editor-fold defaultstate=\"collapsed\">\n{\n    asn1.ContentInfo.call(this, contentInfo || defaultSet || { contentType: 'data' });\n    if (defaultSet && this.contentType !== (defaultSet.contentType || 'data'))\n        throw new Error('Invalid content type');\n} // </editor-fold>\n\nextend(asn1.ContentInfo, DataContentInfo, {\n    /**\n     * Indicates if this is a detached CMS object.\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @returns {boolean} true if detached; false otherwise.\n     */\n    isDetached: {// <editor-fold defaultstate=\"collapsed\">\n        value: false,\n        enumerable: true,\n        writable: true // </editor-fold>\n    },\n    /**\n     * Indicates if an external (detached) signature must be created.\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @param {boolean} createDetached True if detached; false otherwise.\n     */\n    writeDetached: function (createDetached) // <editor-fold defaultstate=\"collapsed\">\n    {\n        // Define external signature mode\n        this.isDetached = createDetached;\n    }, // </editor-fold>\n    /**\n     * Encode the message to binary format 'DER' or 'PEM'\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @param {string} format\n     * @returns {FormatedData}\n     */ // <editor-fold defaultstate=\"collapsed\">\n    encode: function (format) // <editor-fold defaultstate=\"collapsed\">\n    {\n        if (this.isDetached) {\n            var data = getContentData(this);\n            setContentData(this, { contentType: data.contentType });\n            var result = asn1.ContentInfo.method('encode').call(this, format);\n            setContentData(this, data);\n            return result;\n        } else\n            return asn1.ContentInfo.method('encode').call(this, format);\n    }, // </editor-fold>\n    /**\n     * Enclose content to document.\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo\n     * @returns {Promise} Promise to return self object after enclose content\n     */\n    encloseContent: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            self.setEnclosed(contentInfo);\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Sets the content of attached document.<br><br>\n     *\n     * This is necessary only in detached mode.\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The encapsulated CMS Object.\n     */\n    setEnclosed: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        setContentData(this, checkContentInfo(contentInfo));\n    }, // </editor-fold>\n    /**\n     * Returns the document which attached. If the content is not attached, the CMS object\n     * which is returned will be degenerate.\n     *\n     * @memberOf GostCMS.DataContentInfo\n     * @instance\n     * @returns {GostASN1.ContentInfo} The encapsulated CMS Object.\n     */\n    getEnclosed: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        return createContentInfo(getContentData(this));\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates a CMS object of content type binary data.\n *\n * @memberOf GostCMS\n * @type GostCMS.DigestedDataContentInfo\n */\nGostCMS.prototype.DataContentInfo = DataContentInfo;\n\n/**\n * This class encapsulates a CMS object of content type digested-data.\n *\n * @class GostCMS.DigestedDataContentInfo\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The content that is to be signed.\n * @extends GostCMS.DataContentInfo\n * @extends GostASN1.DigestedData\n */\nfunction DigestedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\n{\n    DataContentInfo.call(this, contentInfo, {\n        contentType: 'digestedData',\n        version: 0,\n        digestAlgorithm: providers[options.providerName].digest,\n        encapContentInfo: {\n            eContentType: 'data'\n        },\n        digest: new CryptoOperationData(0)\n    });\n}  // </editor-fold>\n\nextend(DataContentInfo, DigestedDataContentInfo, {\n    /**\n     * Enclose the content and calculate the message digest with given digest algorithm\n     *\n     * @memberOf GostCMS.DigestedDataContentInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo Content data to be enclosed.\n     * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\n     * @returns {Promise}\n     */\n    encloseContent: function (contentInfo, digestAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            // Set enclosed data\n            self.setEnclosed(contentInfo);\n\n            // Define digest algorithm\n            if (digestAlgorithm) {\n                var digestProvider = providers[digestAlgorithm];\n                self.digestAlgorithm = (digestProvider && digestProvider.digest) || digestAlgorithm;\n            }\n\n            // Calculate digest\n            return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\n        }).then(function (digest) {\n\n            // Set digest attribute\n            self.digest = digest;\n        });\n    }, // </editor-fold>\n    /**\n     * Verify the Message Digest. <br><br>\n     *\n     * @memberOf GostCMS.DigestedDataContentInfo\n     * @instance\n     * @param contentInfo Detached content (optional)\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if digest verified\n     */\n    verify: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            // Append attached\n            if (contentInfo)\n                self.setEnclosed(contentInfo);\n\n            // Check data\n            var dataToVerify = self.encapContentInfo &&\n              self.encapContentInfo.eContent;\n            if (!dataToVerify)\n                throw new Error('Detached content is not found');\n\n            // Calculate digest\n            return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\n        }).then(function (digest) {\n            if (!equalBuffers(digest, self.digest))\n                throw Error('Message digest is not verified');\n            // Return content\n            return createContentInfo({\n                contentType: self.encapContentInfo.eContentType,\n                content: self.encapContentInfo.eContent\n            });\n        });\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates a CMS object of content type digested-data.\n *\n * @memberOf GostCMS\n * @type GostCMS.DigestedDataContentInfo\n */\nGostCMS.prototype.DigestedDataContentInfo = DigestedDataContentInfo;\n\n/**\n * This class encapsulates a CMS object of content type signed-data.\n *\n * Use encloseContent or setEnclosed methods to add a enclosed content before add signatures\n *\n * @class GostCMS.SignedDataContentInfo\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The signed content.\n * @extends GostCMS.DataContentInfo\n * @extends GostASN1.SignedData\n */\nfunction SignedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\n{\n    DataContentInfo.call(this, contentInfo, {\n        contentType: 'signedData',\n        version: 1,\n        digestAlgorithms: [],\n        encapContentInfo: {\n            eContentType: 'data'\n        },\n        signerInfos: []\n    });\n}  // </editor-fold>\n\nextend(DataContentInfo, SignedDataContentInfo, {\n    /**\n     * Add a Signer using the the IssuerAndSerialNumber as the SignerIdentifier i.e a Version1 CMSSignerInfo\n     * or SubjectPublicKeyIdentifier as the SignerIdentifier i.e a Version3 CMSSignerInfo.\n     *\n     * @memberOf GostCMS.SignedDataContentInfo\n     * @instance\n     * @param {GostASN1.PrivateKeyInfo} signerKey Private Key of the signer.\n     * @param {GostCert.X509} signerCert Signer certificate or certificate chain\n     * @param {GostASN1.SignedAttributes} signedAttrs The set of signed attributes. Default undefined. If true or {} standard attributes will be appended: contentType and messageDigest\n     * @param {GostASN1.UnsignedAttributes} unsignedAttrs  The set of unsigned attributes. Default undefined.\n     * @returns {Promise} Promise to return self object after add signature\n     */\n    addSignature: function (signerKey, signerCert, signedAttrs, unsignedAttrs) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, signerInfo, dataToSign, signerCertChain;\n        return new Promise(call).then(function () {\n            // Check attribures\n            if (!signerKey || !signerCert)\n                throw new Error('Signer key or certificate is not defined');\n            // Cert chain\n            if (signerCert instanceof Array) {\n                signerCertChain = signerCert;\n                signerCert = signerCertChain[0];\n            } else\n                signerCertChain = [signerCert];\n            // Signature algorithm provider\n            var provider = signerCert.getProvider() ||\n              providers[options.providerName];\n            var useKeyIdentifier = options.useKeyIdentifier && signerCert.extensions &&\n              signerCert.extensions.subjectKeyIdentifier;\n            // Get enclosed data\n            dataToSign = self.encapContentInfo.eContent;\n            // Prepare signer info structure\n            signerInfo = {\n                version: useKeyIdentifier ? 2 : 0,\n                sid: useKeyIdentifier ? signerCert.extensions.subjectKeyIdentifier : {\n                    issuer: signerCert.issuer,\n                    serialNumber: signerCert.serialNumber\n                },\n                digestAlgorithm: provider.digest,\n                signatureAlgorithm: signerCert.subjectPublicKeyInfo.algorithm\n            };\n            // Set an unsigned attributes\n            if (unsignedAttrs)\n                signerInfo.unsignedAttrs = unsignedAttrs;\n            // For a signed attributes calculate digest\n            if (signedAttrs) {\n                if (typeof signedAttrs !== 'object')\n                    signedAttrs = {};\n                return subtle.digest(signerInfo.digestAlgorithm, dataToSign);\n            }\n        }).then(function (digest) {\n            if (digest) {\n                // Add standard signed attributes\n                signedAttrs.contentType = self.encapContentInfo.eContentType,\n                  signedAttrs.messageDigest = digest,\n                  signedAttrs.signingTime = new Date();\n                signerInfo.signedAttrs = signedAttrs,\n                  // Now data to sign = attributes\n                  dataToSign = asn1.SignedAttributes.encode(signerInfo.signedAttrs);\n            }\n\n            // Import the private key\n            return subtle.importKey('pkcs8', asn1.PrivateKeyInfo.encode(signerKey),\n              signerKey.privateKeyAlgorithm, false, ['sign']);\n        }).then(function (key) {\n\n            // Sign data\n            var algorithm = expand(signerInfo.signatureAlgorithm, { hash: signerInfo.digestAlgorithm });\n            return subtle.sign(algorithm, key, dataToSign);\n        }).then(function (signatureValue) {\n            signerInfo.signatureValue = signatureValue;\n\n            // Add digest algorithm\n            addUnique(self.digestAlgorithms, signerInfo.digestAlgorithm, function (algorithm1, algorithm2) {\n                return algorithm1.id === algorithm2.id;\n            });\n\n            // Add signer certificate\n            if (options.autoAddCert) {\n                if (!self.certificates)\n                    self.certificates = [];\n                for (var i = 0, n = signerCertChain.length; i < n; i++) {\n                    addUnique(self.certificates, signerCertChain[i], function (cert1, cert2) {\n                        return equalNames(cert1.issuer, cert2.issuer) &&\n                          equalNumbers(cert1.serialNumber, cert2.serialNumber);\n                    });\n                }\n            }\n\n            // Add signer info\n            self.signerInfos.push(signerInfo);\n        });\n    }, // </editor-fold>\n    /**\n     * Indicates if this object has any signers i.e. checks for the absence of any SignerInfo structures.\n     * CMS (RFC-2630) defines a degenerate object as one which has no signers.\n     *\n     * @memberOf GostCMS.SignedDataContentInfo\n     * @instance\n     * @returns {boolean} True if this object has no signers; false otherwise.\n     */\n    isDegenerate: {// <editor-fold defaultstate=\"collapsed\">\n        get: function () {\n            return !(this.signerInfos && this.signerInfos.length > 0);\n        } // </editor-fold>\n    },\n    /**\n     * Returns normally if this CMS signed data object contains at least one valid signature,\n     * according to the given trust policy; otherwise throws an Error.<br><br>\n     *\n     * In order to be considered valid, there must be at least one signature on this CMS\n     * message which is validated by one of the certificates included with it; furthermore,\n     * the validating certificate must itself be valid according to the given certificate\n     * trust policy. This latter validation process may involve examining the other certificates\n     * or CRLs included with this object, if called for by the trust policy.<br><br>\n     *\n     * If a signature is encountered for which a certification path can be found, but is\n     * invalid, an Error will be created, but will not be thrown until\n     * all other signatures have been checked. If another signature is found which is valid,\n     * then the method simply returns and no exception at all is thrown.\n     *\n     * @memberOf GostCMS.SignedDataContentInfo\n     * @instance\n     * @param {GostCert.CertificateTrustPolicy} trustPolicy The trust prolicy for verification\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\n     */\n    verify: function (trustPolicy, contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, result;\n        return new Promise(call).then(function () {\n            // Append attached\n            if (contentInfo)\n                self.setEnclosed(contentInfo);\n            if (!self.signerInfos || self.signerInfos.length === 0)\n                throw new Error('No signatures found');\n            // Validate certificate of signers\n            return Promise.all(self.signerInfos.map(function (signerInfo, i) {\n                var sid = signerInfo.sid, selector = sid instanceof CryptoOperationData ? {\n                    subjectKeyIdentifier: sid\n                } : {\n                    issuer: sid.issuer,\n                    serialNumber: sid.serialNumber\n                };\n                // Signing date\n                var date;\n                if (signerInfo.signedAttrs && signerInfo.signedAttrs.signingTime)\n                    date = signerInfo.signedAttrs.signingTime;\n                // Use certificate trust policy validation\n                return trustPolicy.getValidCertificate(selector,\n                  self.certificates, self.crls, date).catch(function () {\n                    return; // Ignore error\n                });\n            }));\n\n        }).then(function (certs) {\n            // Get encapsulated data\n            var verifiers = [];\n            // Verify signatures for each signers\n            certs.forEach(function (signerCert) {\n                if (signerCert)\n                    verifiers.push(self.verifySignature(signerCert).then(function (data) {\n                        result = data; // Enough one valid signature\n                    }, function () {\n                        return; // Ignore error\n                    }));\n            });\n            if (verifiers.length === 0)\n                throw new Error('Valid verification path not found');\n            return Promise.all(verifiers);\n        }).then(function () {\n            if (!result)\n                throw Error('Verification path found but no valid signature');\n            // Return content\n            return result;\n        });\n    }, // </editor-fold>\n    /**\n     * Returns successfully if this CMS signed data object contains a signature which is\n     * validated by the given certificate and data; otherwise throws an Error.<br><br>\n     *\n     * This method verifies the specified signature directly and ignores any certificates\n     * or CRLs which may be contained in this CMS object. A more complex verification process,\n     * which does make use of attached certificates and CRLs, is provided by the verify method.\n     *\n     * @memberOf GostCMS.SignedDataContentInfo\n     * @instance\n     * @param {GostCert.X509} signerCert The signer certificate\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\n     */\n    verifySignature: function (signerCert, contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, signerInfo, dataToVerify, dataDigest;\n        return new Promise(call).then(function () {\n            // Append attached\n            if (contentInfo)\n                self.setEnclosed(contentInfo);\n            dataToVerify = self.encapContentInfo && self.encapContentInfo.eContent;\n            if (!dataToVerify)\n                throw new Error('Detached content is not found');\n            // Find signer\n            for (var i = 0; i < self.signerInfos.length; i++) {\n                var sid = self.signerInfos[i].sid;\n                if (matchCert(sid, signerCert)) {\n                    signerInfo = self.signerInfos[i];\n                    break;\n                }\n            }\n            if (!signerInfo)\n                throw new Error('Signature not found for the certificate');\n            // Choice data for verification\n            if (signerInfo.signedAttrs) {\n                dataDigest = signerInfo.signedAttrs.messageDigest;\n                if (!dataDigest)\n                    throw new Error('Message digest must present in signed attributes');\n\n                // To exclude implicit [0] need to reassemble signed attributes (auto on CTX object)\n                dataToVerify = signerInfo.signedAttrs.encode();\n            }\n            if (!dataToVerify)\n                throw new Error('Data for verification not found');\n            // Verify signature\n            var algorithm = expand(signerInfo.signatureAlgorithm, { hash: signerInfo.digestAlgorithm });\n            return signerCert.verifySignature(dataToVerify, signerInfo.signatureValue, algorithm);\n        }).then(function (result) {\n            if (!result)\n                throw new Error('Signature not verified');\n            // Verify digest\n            if (signerInfo.signedAttrs)\n                return subtle.digest(signerInfo.digestAlgorithm, self.encapContentInfo.eContent);\n        }).then(function (digest) {\n            if (digest && !equalBuffers(digest, dataDigest))\n                throw new Error('Message digest not verified');\n            // Return content\n            return createContentInfo({\n                contentType: self.encapContentInfo.eContentType,\n                content: self.encapContentInfo.eContent\n            });\n        });\n    }  // </editor-fold>\n});\n\n/**\n * This class encapsulates a CMS object of content type signed-data.\n *\n * @memberOf GostCMS\n * @type GostCMS.SignedDataContentInfo\n */\nGostCMS.prototype.SignedDataContentInfo = SignedDataContentInfo;\n\n/**\n * This class encapsulates a CMS object of content type encrypted-data.\n *\n * @class GostCMS.EncryptedDataContentInfo\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\n * @extends GostCMS.DataContentInfo\n * @extends GostASN1.EncryptedData\n */\nfunction EncryptedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\n{\n    DataContentInfo.call(this, contentInfo, {\n        contentType: 'encryptedData',\n        version: 0,\n        encryptedContentInfo: {\n            contentType: 'data',\n            contentEncryptionAlgorithm: providers[options.providerName].encryption\n        }\n    });\n}  // </editor-fold>\n\nextend(DataContentInfo, EncryptedDataContentInfo, {\n    /**\n     * Encrypt the content with given encryption algorithm, secret key or password\n     *\n     * @memberOf GostCMS.EncryptedDataContentInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\n     * @param {Key|string} contentEncryptionKey content The encryption key or password for derive key\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n     * @returns {Promise} Promise to return self object after encrypt content\n     */\n    encloseContent: function (contentInfo, contentEncryptionKey, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, encryption, derivation;\n        return new Promise(call).then(function () {\n            // Check content info\n            contentInfo = checkContentInfo(contentInfo);\n            if (!contentInfo.content)\n                throw new Error('Content for encryption must be specified');\n\n            // Define encryption algorithm\n            var type = typeof contentEncryptionKey === 'string' ? 'pbes' : 'encryption';\n            if (encryptionAlgorithm) {\n                var provider = providers[encryptionAlgorithm];\n                encryptionAlgorithm = (provider && provider[type]) || encryptionAlgorithm;\n            } else\n                encryptionAlgorithm = providers[options.providerName][type];\n            // Prepare content encryption key\n            if (encryptionAlgorithm.derivation) {\n                // Encrypt with password\n                derivation = expand(encryptionAlgorithm.derivation);\n                encryption = expand(encryptionAlgorithm.encryption);\n                derivation.salt = getSeed(saltSize(encryptionAlgorithm));\n                // Import password for key generation\n                var integrityKey;\n                return subtle.importKey('raw', passwordData(derivation, contentEncryptionKey),\n                  derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\n                    integrityKey = key;\n                    // Derive IV\n                    if (derivation.name.indexOf('PFXKDF') >= 0) {\n                        derivation.diversifier = 2;\n                        return subtle.deriveBits(derivation, integrityKey, 64);\n                    }\n                }).then(function (iv) {\n                    if (iv)\n                        encryption.iv = iv;\n                    // Generate key from password\n                    derivation.diversifier = 1;\n                    return subtle.deriveKey(derivation, integrityKey, encryption, false, ['encrypt']);\n                }).then(function (encryptionKey) {\n                    // Content encryption with key\n                    return encryptionKey;\n                });\n            } else {\n                // Base encryption\n                encryption = expand(encryptionAlgorithm);\n                if (contentEncryptionKey instanceof CryptoOperationData) {\n                    // Import key\n                    return subtle.importKey('raw', contentEncryptionKey, encryption, false, ['encrypt']);\n                } else if (contentEncryptionKey.type === 'secret') {\n                    return contentEncryptionKey;\n                } else\n                    throw new Error('Content encryption key must be raw data or secret key type');\n            }\n        }).then(function (encryptionKey) {\n            // Initial vector\n            if (!encryption.iv)\n                encryption.iv = getSeed(8);\n\n            return subtle.encrypt(encryption, encryptionKey, contentInfo.content);\n        }).then(function (encryptedContent) {\n            if (encryptionAlgorithm.derivation) {\n                delete derivation.diversifier;\n                encryptionAlgorithm = expand(encryptionAlgorithm, {\n                    derivation: derivation,\n                    encryption: encryption\n                });\n            } else\n                encryptionAlgorithm = encryption;\n            // Set enclosed data\n            self.encryptedContentInfo = {\n                contentType: contentInfo.contentType,\n                contentEncryptionAlgorithm: encryptionAlgorithm,\n                encryptedContent: encryptedContent\n            };\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Returns the decrypted content.\n     *\n     * @memberOf GostCMS.EncryptedDataContentInfo\n     * @instance\n     * @param {Key|string} decryptionKey The decryption key or password for derive key\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\n     * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\n     */\n    getEnclosed: function (decryptionKey, contentInfo) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, encryption, derivation, encryptedContent;\n        return new Promise(call).then(function () {\n            // Append attached\n            if (contentInfo)\n                self.setEnclosed(contentInfo);\n            encryptedContent = self.encryptedContentInfo.encryptedContent;\n            if (!encryptedContent)\n                throw new Error('Encrypted content must be specified');\n\n            encryption = expand(self.encryptedContentInfo.contentEncryptionAlgorithm);\n            if (encryption.derivation) {\n                // Decrypt with password\n                derivation = expand(encryption.derivation);\n                encryption = expand(encryption.encryption);\n                // Derive encryption key from password\n                var integrityKey;\n                return subtle.importKey('raw', passwordData(derivation, decryptionKey),\n                  derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\n                    integrityKey = key;\n                    // Derive iv for PFX\n                    if (derivation.name.indexOf('PFXKDF') >= 0) {\n                        derivation.diversifier = 2;\n                        return subtle.deriveBits(derivation, integrityKey, 64);\n                    }\n                }).then(function (iv) {\n                    if (iv)\n                        encryption.iv = iv;\n                    // Generate key from password\n                    derivation.diversifier = 1;\n                    return subtle.deriveKey(derivation, integrityKey, encryption, false, ['decrypt']);\n                });\n            } else {\n                // Base encryption. Password should be secret key\n                if (decryptionKey instanceof CryptoOperationData) {\n                    // Import key\n                    return subtle.importKey('raw', decryptionKey, encryption, false, ['decrypt']);\n                } else if (decryptionKey.type === 'secret') {\n                    return decryptionKey;\n                } else\n                    throw new Error('Decryption key must be raw data or secret key type');\n            }\n        }).then(function (encryptionKey) {\n            // Decrypt key with encryption key\n            return subtle.decrypt(encryption, encryptionKey, encryptedContent);\n        }).then(function (decryptedContent) {\n            // Create content info object\n            return createContentInfo({\n                contentType: self.encryptedContentInfo.contentType,\n                content: decryptedContent\n            });\n        });\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates a CMS object of content type encrypted-data.\n *\n * @memberOf GostCMS\n * @type GostCMS.EncryptedDataContentInfo\n */\nGostCMS.prototype.EncryptedDataContentInfo = EncryptedDataContentInfo;\n\n/**\n * This class encapsulates a CMS object of content type enveloped-data.\n *\n * @class GostCMS.EnvelopedDataContentInfo\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\n * @extends GostCMS.DataContentInfo\n * @extends GostASN1.EnvelopedData\n */\nfunction EnvelopedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\n{\n    DataContentInfo.call(this, contentInfo, {\n        contentType: 'envelopedData',\n        version: 0,\n        recipientInfos: [],\n        encryptedContentInfo: {\n            contentType: 'data',\n            contentEncryptionAlgorithm: providers[options.providerName].encryption\n        }\n    });\n}  // </editor-fold>\n\nextend(DataContentInfo, EnvelopedDataContentInfo, {\n    /**\n     * Generate content encryption key with given encryption algorithm and encrypt the content\n     *\n     * @memberOf GostCMS.EnvelopedDataContentInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n     * @returns {Promise} Promise to return self object after encrypt content\n     */\n    encloseContent: function (contentInfo, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            // Check content info\n            contentInfo = checkContentInfo(contentInfo);\n            if (!contentInfo.content)\n                throw new Error('Content for encryption must be specified');\n            // Define encryption algorithm\n            if (encryptionAlgorithm) {\n                var provider = providers[encryptionAlgorithm];\n                encryptionAlgorithm = (provider && provider.encryption) || encryptionAlgorithm;\n            } else\n                encryptionAlgorithm = providers[options.providerName].encryption;\n            // Generate key for encryption content\n            return subtle.generateKey(encryptionAlgorithm, true, ['encrypt']);\n        }).then(function (encryptionKey) {\n            // Encrypt content\n            self.contentEncryptionKey = encryptionKey;\n            // Initial vector\n            if (!encryptionAlgorithm.iv)\n                encryptionAlgorithm.iv = getSeed(8);\n            return subtle.encrypt(encryptionAlgorithm, encryptionKey, contentInfo.content);\n        }).then(function (encryptedContent) {\n            self.encryptedContentInfo = {\n                contentType: contentInfo.contentType,\n                contentEncryptionAlgorithm: encryptionAlgorithm,\n                encryptedContent: encryptedContent\n            };\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Add a recipient. <br><br>\n     *\n     * Uses the Recipient Information with IssuerAndSerialNumber as the Recipient Identifier.\n     * Note: If senderCert specified uses the Key Agreement algorithm overwise Key Transport algorithm.\n     *\n     * @memberOf GostCMS.EnvelopedDataContentInfo\n     * @instance\n     * @param {GostCert.X509} recipientCert The certificate of recepient\n     * @param {(AlgorithmIdentifier|string)} keyEncryptionAlgorithm Key encryption algorithm or provider name\n     * @param {GostASN1.PrivateKeyInfo} senderKey The private key of sender for key agreement protocol\n     * @param {GostCert.X509} senderCert The certificate of sender for key agreement protocol\n     * @returns {Promise} Promise to return self object after add recipient\n     */\n    addRecipient: function (recipientCert, keyEncryptionAlgorithm, senderKey, senderCert) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, privateKey, encryptionProvider, derivation, wrapping;\n        return new Promise(call).then(function () {\n            // Check for recepient cert\n            recipientCert = new cert.X509(recipientCert);\n            if (keyEncryptionAlgorithm && typeof keyEncryptionAlgorithm !== 'string' &&\n              !keyEncryptionAlgorithm.algorithm) {\n                // Sender parameters\n                senderCert = senderKey;\n                senderKey = keyEncryptionAlgorithm;\n                keyEncryptionAlgorithm = undefined;\n            }\n            if (keyEncryptionAlgorithm) {\n                encryptionProvider = providers[keyEncryptionAlgorithm];\n            } else\n                encryptionProvider = recipientCert.getProvider();\n\n            // Check for content encryption key\n            if (!self.contentEncryptionKey)\n                throw new Error('The content encryption key is not assigned');\n\n            if (senderCert) {\n                // Sender certificate for agreement protocol\n                var senderCertChain;\n                if (senderCert instanceof Array) {\n                    senderCertChain = senderCert;\n                    senderCert = senderCertChain[0];\n                } else\n                    senderCertChain = [senderCert];\n\n                // Add sender certificate\n                if (options.autoAddCert) {\n                    if (!self.originatorInfo)\n                        self.originatorInfo = { certs: [] };\n                    else if (!self.originatorInfo.certs)\n                        self.originatorInfo.certs = [];\n                    for (var i = 0, n = senderCertChain.length; i < n; i++) {\n                        addUnique(self.originatorInfo.certs, senderCertChain[i], function (cert1, cert2) {\n                            return equalNames(cert1.issuer, cert2.issuer) &&\n                              equalNumbers(cert1.serialNumber, cert2.serialNumber);\n                        });\n                    }\n                }\n                // Key Agreement\n                if (encryptionProvider)\n                    keyEncryptionAlgorithm = expand(encryptionProvider.agreement);\n                else\n                    encryptionProvider = recipientCert.getProvider();\n                // Certificates must have similar curve parameters\n                if (recipientCert.subjectPublicKeyInfo.algorithm.namedCurve !==\n                  senderCert.subjectPublicKeyInfo.algorithm.namedCurve)\n                    throw new Error('The sender and the recipient have different public key algorithms');\n                // Get private sender key\n                return subtle.importKey('pkcs8', senderKey.encode(), senderKey.privateKeyAlgorithm,\n                  false, ['deriveKey']);\n            } else {\n                // Key Transport\n                if (encryptionProvider)\n                    keyEncryptionAlgorithm = expand(recipientCert.subjectPublicKeyInfo.algorithm);\n                else\n                    encryptionProvider = recipientCert.getProvider();\n                // Generate key pair\n                return subtle.generateKey(keyEncryptionAlgorithm, true, ['deriveKey']).then(function (keyPair) {\n                    keyEncryptionAlgorithm['public'] = keyPair.publicKey;\n                    return keyPair.privateKey;\n                });\n            }\n        }).then(function (key) {\n            privateKey = key;\n            // Get public key from recipient certificate\n            return subtle.importKey('spki', recipientCert.subjectPublicKeyInfo.encode(),\n              recipientCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\n        }).then(function (publicKey) {\n            // Derivate key encryption key\n            keyEncryptionAlgorithm.ukm = getSeed(8);\n            derivation = expand(encryptionProvider.agreement,\n              { sBox: keyEncryptionAlgorithm.sBox, ukm: keyEncryptionAlgorithm.ukm, 'public': publicKey });\n            wrapping = expand(keyEncryptionAlgorithm.wrapping || encryptionProvider.wrapping,\n              { ukm: keyEncryptionAlgorithm.ukm });\n            return subtle.deriveKey(derivation, privateKey, wrapping, true, ['wrapKey']);\n        }).then(function (wrappingKey) {\n            // Wrap content encryption key\n            keyEncryptionAlgorithm.wrapping = wrapping;\n            return subtle.wrapKey('raw', self.contentEncryptionKey, wrappingKey, wrapping);\n        }).then(function (wrappedKey) {\n            // Create recipient info\n            var recipientInfo;\n            var useKeyIdentifier = options.useKeyIdentifier && recipientCert.extensions &&\n              recipientCert.extensions.subjectKeyIdentifier,\n              rid = useKeyIdentifier ? recipientCert.extensions.subjectKeyIdentifier : {\n                  issuer: recipientCert.issuer,\n                  serialNumber: recipientCert.serialNumber\n              };\n            if (senderCert) {\n                var spki = senderCert.subjectPublicKeyInfo;\n                recipientInfo = {// KeyAgreeRecipientInfo\n                    version: 3, // always set to 3\n                    originator: {\n                        algorithm: spki.algorithm,\n                        publicKey: spki.subjectPublicKey\n                    },\n                    ukm: keyEncryptionAlgorithm.ukm,\n                    keyEncryptionAlgorithm: keyEncryptionAlgorithm,\n                    recipientEncryptedKeys: [{// use only one recipient in domain\n                        rid: rid,\n                        encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode(wrappedKey)\n                    }]\n                };\n            } else {\n                recipientInfo = {\n                    version: 0, // always set to 0 or 2\n                    rid: rid,\n                    keyEncryptionAlgorithm: keyEncryptionAlgorithm,\n                    encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode({\n                        algorithm: keyEncryptionAlgorithm,\n                        sessionEncryptedKey: wrappedKey\n                    })\n                };\n            }\n            self.recipientInfos.push(recipientInfo);\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Returns the decrypted content.\n     *\n     * @memberOf GostCMS.EnvelopedDataContentInfo\n     * @instance\n     * @param {GostASN1.PrivateKeyInfo} recipientKey The decryption key or password for derive key\n     * @param {GostCert.X509} recipientCert  The decryption key or password for derive key\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\n     * @param {GostCert.X509} originatorCert The originator certificate (optional).\n     * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\n     */\n    getEnclosed: function (recipientKey, recipientCert, contentInfo, originatorCert) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, wrappedKey, encryptedContent, derivation, wrapping, encryption;\n        return new Promise(call).then(function () {\n            var encryptionProvider = recipientCert.getProvider();\n            // Append attached\n            if (contentInfo)\n                self.setEnclosed(contentInfo);\n            encryptedContent = self.encryptedContentInfo.encryptedContent;\n            if (!encryptedContent)\n                throw new Error('Encrypted content must be specified');\n\n            encryption = self.encryptedContentInfo.contentEncryptionAlgorithm;\n\n            // Find receiver\n            for (var i = 0; i < self.recipientInfos.length; i++) {\n                var recipientInfo = self.recipientInfos[i],\n                  algorithm = expand(recipientInfo.keyEncryptionAlgorithm);\n                if (recipientInfo.rid) {\n                    if (matchCert(recipientInfo.rid, recipientCert)) {\n                        // Algorithm and wrapped key\n                        var transportKey = asn1.GostEncryptedKey(algorithm).decode(recipientInfo.encryptedKey).object;\n                        wrappedKey = transportKey.sessionEncryptedKey;\n                        algorithm = expand(algorithm, transportKey.algorithm);\n                        derivation = expand(encryptionProvider.agreement, {\n                            ukm: algorithm.ukm,\n                            sBox: algorithm.sBox\n                        });\n                        wrapping = expand(encryptionProvider.wrapping, algorithm.wrapping, { ukm: algorithm.ukm });\n                        return algorithm['public'];\n                    }\n                } else {\n                    var keys = recipientInfo.recipientEncryptedKeys;\n                    if (keys) {\n                        for (var j = 0; j < keys.length; j++) {\n                            if (matchCert(keys[j].rid, recipientCert)) {\n                                // Algorithm and wrapped key\n                                algorithm = expand(encryptionProvider.agreement, algorithm, { ukm: recipientInfo.ukm });\n                                wrappedKey = asn1.GostEncryptedKey(algorithm).decode(keys[j].encryptedKey).object;\n                                derivation = algorithm;\n                                wrapping = expand(algorithm.wrapping || encryptionProvider.wrapping, { ukm: recipientInfo.ukm });\n                                // Check originator\n                                var originator = recipientInfo.originator;\n                                if (originator.algorithm) {\n                                    var spki = new asn1.SubjectPublicKeyInfo({\n                                        algorithm: originator.algorithm,\n                                        subjectPublicKey: originator.publicKey\n                                    });\n                                    return subtle.importKey('spki', spki.encode(), spki.algorithm, false, ['deriveKey', 'deriveBits']);\n                                } else if (originatorCert && matchCert(originator, originatorCert))\n                                    return importKey('pkcs', originatorCert.subjectPublicKeyInfo.encode(),\n                                      originatorCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\n                                else\n                                    throw Error('Originator certificate not specified or not valid');\n                            }\n                        }\n                    }\n                }\n            }\n            throw new Error('Recipient not found or format not supported');\n        }).then(function (publicKey) {\n            derivation['public'] = publicKey;\n            // Import private key\n            return subtle.importKey('pkcs8', recipientKey.encode(), recipientKey.privateKeyAlgorithm,\n              false, ['deriveKey', 'deriveBits']);\n        }).then(function (privateKey) {\n            // Derive key\n            return subtle.deriveKey(derivation, privateKey, wrapping, true, ['unwrapKey']);\n        }).then(function (unwrappingKey) {\n            // Unwrap key\n            return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\n              wrapping, encryption, false, ['decrypt']);\n        }).then(function (encryptionKey) {\n            // Decrypt content\n            return subtle.decrypt(encryption, encryptionKey, encryptedContent);\n        }).then(function (decryptedContent) {\n            return createContentInfo({\n                contentType: self.encryptedContentInfo.contentType,\n                content: decryptedContent\n            });\n        });\n    } // </editor-fold>\n});\n\n/**\n * This class encapsulates a CMS object of content type enveloped-data.\n *\n * @memberOf GostCMS\n * @type GostCMS.EnvelopedDataContentInfo\n */\nGostCMS.prototype.EnvelopedDataContentInfo = EnvelopedDataContentInfo;\n\nexport const gostCMSInstance = new GostCMS();\n","/**\n * @file GOST R 34.11-94 / GOST R 34.11-12 implementation\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { getSeed } from '../utils/seeds';\nimport { GostCipher } from './gostCipher';\nimport { NotSupportedError, DataError } from '../utils/errors';\n\n/*\n * GOST R 34.11\n * Common methods\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Copy len values from s[sOfs] to d[dOfs]\nfunction arraycopy(s, sOfs, d, dOfs, len) {\n    for (var i = 0; i < len; i++)\n        d[dOfs + i] = s[sOfs + i];\n}\n\n// Swap bytes in buffer\nfunction swap(s) {\n    var src = new Uint8Array(s),\n      dst = new Uint8Array(src.length);\n    for (var i = 0, n = src.length; i < n; i++)\n        dst[n - i - 1] = src[i];\n    return dst.buffer;\n}\n\n// Convert BASE64 string to Uint8Array\n// for decompression of constants and precalc values\nfunction b64decode(s) {\n    // s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n    var n = s.length,\n      k = n * 3 + 1 >> 2, r = new Uint8Array(k);\n\n    for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\n        m4 = i & 3;\n        var c = s.charCodeAt(i);\n\n        c = c > 64 && c < 91 ?\n          c - 65 : c > 96 && c < 123 ?\n            c - 71 : c > 47 && c < 58 ?\n              c + 4 : c === 43 ?\n                62 : c === 47 ?\n                  63 : 0;\n\n        u24 |= c << 18 - 6 * m4;\n        if (m4 === 3 || n - i === 1) {\n            for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\n                r[j] = u24 >>> (16 >>> m3 & 24) & 255;\n            }\n            u24 = 0;\n\n        }\n    }\n    return r.buffer;\n}\n\n// Check buffer\nfunction buffer(d) {\n    if (d instanceof ArrayBuffer)\n        return d;\n    else if (d && d.buffer && d.buffer instanceof ArrayBuffer)\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n    else\n        throw new DataError('ArrayBuffer or ArrayBufferView required');\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11 or GOST R 34.11-12<br><br>\n *\n * http://tools.ietf.org/html/rfc6986\n *\n * The digest method returns digest data in according to GOST R 4311-2012.<br>\n * Size of digest also defines in algorithm name.\n *  <ul>\n *      <li>GOST R 34.11-256-12 - 256 bits digest</li>\n *      <li>GOST R 34.11-512-12 - 512 bits digest</li>\n *  </ul>\n *\n * @memberOf GostDigest\n * @method digest\n * @instance\n * @param {(ArrayBuffer|TypedArray)} data Data\n * @returns {ArrayBuffer} Digest of data\n */\nvar digest2012 = (function () // <editor-fold defaultstate=\"collapsed\">\n  {\n      // Constants\n      var buffer0 = new Int32Array(16); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n      var buffer512 = new Int32Array(16); // [512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      buffer512[0] = 512;\n\n      // Constant C\n      var C = (function (s) {\n          var h = new Int32Array(b64decode(s)),\n            r = new Array(12);\n          for (var i = 0; i < 12; i++)\n              r[i] = new Int32Array(h.buffer, i * 64, 16);\n          return r;\n      })(\n        'B0Wm8lllgN0jTXTMNnR2BRXTYKQIKkKiAWlnkpHgfEv8xIV1jbhOcRbQRS5DdmovH3xlwIEvy+vp2soe2lsIsbebsSFwBHnmVs3L1xui3VXKpwrbwmG1XFiZ1hJrF7WaMQG1Fg9e1WGYKyMKcur+89e1cA9GneNPGi+dqYq1o2+yCroK9ZYemTHbeoZD9LbCCdtiYDc6ycGxnjWQ5A/i03t7KbEUderyix+cUl9e8QY1hD1qKPw5Cscvzius3HT1LtHjhLy+DCLxN+iToepTNL4DUpMzE7fYddYD7YIs16k/NV5orRxynX08XDN+hY5I3eRxXaDhSPnSZhXos98f71f+bHz9WBdg9WPqqX6iVnoWGicjtwD/36P1OiVHF82/vf8PgNc1njVKEIYWHxwVf2MjqWwMQT+amUdHraxr6ktufWRGekBo+jVPkDZyxXG/tsa+wmYf8gq0t5oct6b6z8aO8Jq0mn8YbKRCUfnEZi3AOTB6O8Okb9nTOh2urk+uk9QUOk1WhojzSjyiTEUXNQQFSiiDaUcGNyyCLcWrkgnJk3oZMz5H08mHv+bHxp45VAkkv/6GrFHsxaruFg7H9B7nAr/UDX+k' +\n        '2ahRWTXCrDYvxKXRK43RaZAGm5LLK4n0msTbTTtEtIke3jaccfi3TkFBbgwCqucDp8mTTUJbH5vbWiODUURhcmAqH8uS3DgOVJwHppqKK3uxzrLbC0QKgIQJDeC3Vdk8JEKJJRs6fTreXxbs2JpMlJsiMRZUWo837ZxFmPvHtHTDtjsV0fqYNvRSdjswbB56SzNprwJn558DYTMbiuH/H9t4iv8c50GJ8/PkskjlKjhSbwWApt6+qxst84HNpMprXdhvwEpZot6Ybkd9Hc2678q5SOrvcR2KeWaEFCGAASBhB6vru2v62JT+WmPNxgIw+4nI79CezXsg1xvxSpK8SJkbstnVF/T6UijhiKqkHeeGzJEYne+AXZufITDUEiD4dx3fvDI8pM16sUkEsIAT0roxFvFn5443');\n\n      // Precalc Ax\n      var Ax = (function (s) {\n          return new Int32Array(b64decode(s));\n      })(\n        '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'); //==\n\n      // Variables\n      var sigma, N, h;\n\n      // 64bit tools\n      function get8(x, i) {\n          return (x[i >> 2] >> ((i & 3) << 3)) & 0xff;\n      }\n\n      // 512bit tools\n      function add512(x, y) {\n          var CF = 0, w0, w1;\n          for (var i = 0; i < 16; i++) {\n              w0 = (x[i] & 0xffff) + (y[i] & 0xffff) + (CF || 0);\n              w1 = (x[i] >>> 16) + (y[i] >>> 16) + (w0 >>> 16);\n              x[i] = (w0 & 0xffff) | (w1 << 16);\n              CF = (w1 >>> 16);\n          }\n      }\n\n      function get512(d) {\n          return new Int32Array(d.buffer, d.byteOffset, 16);\n      }\n\n\n      function copy512(r, d) {\n          for (var i = 0; i < 16; i++)\n              r[i] = d[i];\n      }\n\n      function new512() {\n          return new Int32Array(16);\n      }\n\n      // Core private algorithms\n      function xor512(x, y) {\n          for (var i = 0; i < 16; i++)\n              x[i] = x[i] ^ y[i];\n      }\n\n\n      var r = new512();\n\n      function XLPS(x, y) {\n          copy512(r, x);\n          xor512(r, y);\n          for (var i = 0; i < 8; i++) {\n              var z0, z1, k = get8(r, i) << 1;\n              z0 = Ax[k];\n              z1 = Ax[k + 1];\n              for (var j = 1; j < 8; j++) {\n                  k = (j << 9) + (get8(r, (j << 3) + i) << 1);\n                  z0 = z0 ^ Ax[k];\n                  z1 = z1 ^ Ax[k + 1];\n              }\n              x[i << 1] = z0;\n              x[(i << 1) + 1] = z1;\n          }\n      }\n\n      var data = new512(), Ki = new512();\n\n      function g(h, N, m) {\n          var i;\n\n          copy512(data, h);\n          XLPS(data, N);\n\n          /* Starting E() */\n          copy512(Ki, data);\n          XLPS(data, m);\n\n          for (i = 0; i < 11; i++) {\n              XLPS(Ki, C[i]);\n              XLPS(data, Ki);\n          }\n\n          XLPS(Ki, C[11]);\n          xor512(data, Ki);\n          /* E() done */\n\n          xor512(h, data);\n          xor512(h, m);\n      }\n\n      // Stages\n      function stage2(d) {\n          var m = get512(d);\n          g(h, N, m);\n\n          add512(N, buffer512);\n          add512(sigma, m);\n      }\n\n      function stage3(d) {\n          var n = d.length;\n          if (n > 63)\n              return;\n\n          var b0 = new Int32Array(16);\n          b0[0] = n << 3;\n\n          var b = new Uint8Array(64);\n          for (var i = 0; i < n; i++)\n              b[i] = d[i];\n          b[n] = 0x01;\n\n          var m = get512(b), m0 = get512(b0);\n          g(h, N, m);\n\n          add512(N, m0);\n          add512(sigma, m);\n\n          g(h, buffer0, N);\n          g(h, buffer0, sigma);\n      }\n\n      return function (data) {\n\n          // Cleanup\n          sigma = new512();\n          N = new512();\n\n          // Initial vector\n          h = new512();\n          for (var i = 0; i < 16; i++)\n              if (this.bitLength === 256)\n                  h[i] = 0x01010101;\n\n          // Make data\n          var d = new Uint8Array(buffer(data));\n\n          var n = d.length;\n          var r = n % 64, q = (n - r) / 64;\n\n          for (var i = 0; i < q; i++)\n              stage2.call(this, new Uint8Array(d.buffer, i * 64, 64));\n\n          stage3.call(this, new Uint8Array(d.buffer, q * 64, r));\n\n          var digest;\n          if (this.bitLength === 256) {\n              digest = new Int32Array(8);\n              for (var i = 0; i < 8; i++)\n                  digest[i] = h[8 + i];\n          } else {\n              digest = new Int32Array(16);\n              for (var i = 0; i < 16; i++)\n                  digest[i] = h[i];\n          }\n          // Swap hash for SignalCom\n          if (this.procreator === 'SC' || this.procreator === 'VN')\n              return swap(digest.buffer);\n          else\n              return digest.buffer;\n      };\n  } // </editor-fold>\n)();\n\n/**\n * Algorithm name GOST R 34.11-94<br><br>\n *\n * http://tools.ietf.org/html/rfc5831\n *\n * The digest method returns digest data in according to GOST R 34.11-94.\n * @memberOf GostDigest\n * @method digest\n * @instance\n * @param {(ArrayBuffer|TypedArray)} data Data\n * @returns {ArrayBuffer} Digest of data\n */\nvar digest94 = (function () // <editor-fold defaultstate=\"collapsed\">\n  {\n      var C, H, M, Sum;\n\n      // (i + 1 + 4(k - 1)) = 8i + k      i = 0-3, k = 1-8\n      function P(d) {\n          var K = new Uint8Array(32);\n\n          for (var k = 0; k < 8; k++) {\n              K[4 * k] = d[k];\n              K[1 + 4 * k] = d[8 + k];\n              K[2 + 4 * k] = d[16 + k];\n              K[3 + 4 * k] = d[24 + k];\n          }\n\n          return K;\n      }\n\n      //A (x) = (x0 ^ x1) || x3 || x2 || x1\n      function A(d) {\n          var a = new Uint8Array(8);\n\n          for (var j = 0; j < 8; j++) {\n              a[j] = (d[j] ^ d[j + 8]);\n          }\n\n          arraycopy(d, 8, d, 0, 24);\n          arraycopy(a, 0, d, 24, 8);\n\n          return d;\n      }\n\n      // (in:) n16||..||n1 ==> (out:) n1^n2^n3^n4^n13^n16||n16||..||n2\n      function fw(d) {\n          var wS = new Uint16Array(d.buffer, 0, 16);\n          var wS15 = wS[0] ^ wS[1] ^ wS[2] ^ wS[3] ^ wS[12] ^ wS[15];\n          arraycopy(wS, 1, wS, 0, 15);\n          wS[15] = wS15;\n      }\n\n      //Encrypt function, ECB mode\n      function encrypt(key, s, sOff, d, dOff) {\n          var t = new Uint8Array(8);\n          arraycopy(d, dOff, t, 0, 8);\n          var r = new Uint8Array(this.cipher.encrypt(key, t));\n          arraycopy(r, 0, s, sOff, 8);\n      }\n\n      // block processing\n      function process(d, dOff) {\n          var S = new Uint8Array(32), U = new Uint8Array(32),\n            V = new Uint8Array(32), W = new Uint8Array(32);\n\n          arraycopy(d, dOff, M, 0, 32);\n\n          //key step 1\n\n          // H = h3 || h2 || h1 || h0\n          // S = s3 || s2 || s1 || s0\n          arraycopy(H, 0, U, 0, 32);\n          arraycopy(M, 0, V, 0, 32);\n          for (var j = 0; j < 32; j++) {\n              W[j] = (U[j] ^ V[j]);\n          }\n          // Encrypt GOST 28147-ECB\n          encrypt.call(this, P(W), S, 0, H, 0); // s0 = EK0 [h0]\n\n          //keys step 2,3,4\n          for (var i = 1; i < 4; i++) {\n              var tmpA = A(U);\n              for (var j = 0; j < 32; j++) {\n                  U[j] = (tmpA[j] ^ C[i][j]);\n              }\n              V = A(A(V));\n              for (var j = 0; j < 32; j++) {\n                  W[j] = (U[j] ^ V[j]);\n              }\n              // Encrypt GOST 28147-ECB\n              encrypt.call(this, P(W), S, i * 8, H, i * 8); // si = EKi [hi]\n          }\n\n          // x(M, H) = y61(H^y(M^y12(S)))\n          for (var n = 0; n < 12; n++) {\n              fw(S);\n          }\n          for (var n = 0; n < 32; n++) {\n              S[n] = (S[n] ^ M[n]);\n          }\n\n          fw(S);\n\n          for (var n = 0; n < 32; n++) {\n              S[n] = (H[n] ^ S[n]);\n          }\n          for (var n = 0; n < 61; n++) {\n              fw(S);\n          }\n          arraycopy(S, 0, H, 0, H.length);\n      }\n\n\n      //  256 bitsblock modul -> (Sum + a mod (2^256))\n      function summing(d) {\n          var carry = 0;\n          for (var i = 0; i < Sum.length; i++) {\n              var sum = (Sum[i] & 0xff) + (d[i] & 0xff) + carry;\n\n              Sum[i] = sum;\n\n              carry = sum >>> 8;\n          }\n      }\n\n      // reset the chaining variables to the IV values.\n      var C2 = new Uint8Array([\n          0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,\n          0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,\n          0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF,\n          0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF\n      ]);\n\n      return function (data) {\n\n          // Reset buffers\n          H = new Uint8Array(32);\n          M = new Uint8Array(32);\n          Sum = new Uint8Array(32);\n\n          // Reset IV value\n          C = new Array(4);\n          for (var i = 0; i < 4; i++)\n              C[i] = new Uint8Array(32);\n          arraycopy(C2, 0, C[2], 0, C2.length);\n\n          // Make data\n          var d = new Uint8Array(buffer(data));\n\n          var n = d.length;\n          var r = n % 32, q = (n - r) / 32;\n\n          // Proccess full blocks\n          for (var i = 0; i < q; i++) {\n              var b = new Uint8Array(d.buffer, i * 32, 32);\n\n              summing.call(this, b); // calc sum M\n              process.call(this, b, 0);\n          }\n\n          // load d the remadder with padding zero;\n          if (r > 0) {\n              var b = new Uint8Array(d.buffer, q * 32),\n                c = new Uint8Array(32);\n              arraycopy(b, 0, c, 0, r);\n              summing.call(this, c); // calc sum M\n              process.call(this, c, 0);\n\n          }\n\n          // get length into L (byteCount * 8 = bitCount) in little endian.\n          var L = new Uint8Array(32), n8 = n * 8, k = 0;\n          while (n8 > 0) {\n              L[k++] = n8 & 0xff;\n              n8 = Math.floor(n8 / 256);\n          }\n          process.call(this, L, 0);\n          process.call(this, Sum, 0);\n\n          var h = H.buffer;\n\n          // Swap hash for SignalCom\n          if (this.procreator === 'SC')\n              h = swap(h);\n\n          return h;\n      };\n\n  } // </editor-fold>\n)();\n\n/**\n * Algorithm name SHA-1<br><br>\n *\n * https://tools.ietf.org/html/rfc3174\n *\n * The digest method returns digest data in according to SHA-1.<br>\n *\n * @memberOf GostDigest\n * @method digest\n * @instance\n * @param {(ArrayBuffer|TypedArray)} data Data\n * @returns {ArrayBuffer} Digest of data\n */\nvar digestSHA1 = (function () // <editor-fold defaultstate=\"collapsed\">\n  {\n\n      // Create a buffer for each 80 word block.\n      var state, block = new Uint32Array(80);\n\n      function common(a, e, w, k, f) {\n          return (f + e + w + k + ((a << 5) | (a >>> 27))) >>> 0;\n      }\n\n      function f1(a, b, c, d, e, w) {\n          return common(a, e, w, 0x5A827999, d ^ (b & (c ^ d)));\n      }\n\n      function f2(a, b, c, d, e, w) {\n          return common(a, e, w, 0x6ED9EBA1, b ^ c ^ d);\n      }\n\n      function f3(a, b, c, d, e, w) {\n          return common(a, e, w, 0x8F1BBCDC, (b & c) | (d & (b | c)));\n      }\n\n      function f4(a, b, c, d, e, w) {\n          return common(a, e, w, 0xCA62C1D6, b ^ c ^ d);\n      }\n\n      function cycle(state, block) {\n          var a = state[0],\n            b = state[1],\n            c = state[2],\n            d = state[3],\n            e = state[4];\n\n          // Partially unroll loops so we don't have to shift variables.\n          var fn = f1;\n          for (var i = 0; i < 80; i += 5) {\n              if (i === 20) {\n                  fn = f2;\n              }\n              else if (i === 40) {\n                  fn = f3;\n              }\n              else if (i === 60) {\n                  fn = f4;\n              }\n              e = fn(a, b, c, d, e, block[i]);\n              b = ((b << 30) | (b >>> 2)) >>> 0;\n              d = fn(e, a, b, c, d, block[i + 1]);\n              a = ((a << 30) | (a >>> 2)) >>> 0;\n              c = fn(d, e, a, b, c, block[i + 2]);\n              e = ((e << 30) | (e >>> 2)) >>> 0;\n              b = fn(c, d, e, a, b, block[i + 3]);\n              d = ((d << 30) | (d >>> 2)) >>> 0;\n              a = fn(b, c, d, e, a, block[i + 4]);\n              c = ((c << 30) | (c >>> 2)) >>> 0;\n          }\n          state[0] += a;\n          state[1] += b;\n          state[2] += c;\n          state[3] += d;\n          state[4] += e;\n      }\n\n      // Swap bytes for 32bits word\n      function swap32(b) {\n          return ((b & 0xff) << 24)\n            | ((b & 0xff00) << 8)\n            | ((b >> 8) & 0xff00)\n            | ((b >> 24) & 0xff);\n      }\n\n      // input is a Uint8Array bitstream of the data\n      return function (data) {\n          var d = new Uint8Array(buffer(data)), dlen = d.length;\n\n          // Pad the input string length.\n          var len = dlen + 9;\n          if (len % 64) {\n              len += 64 - (len % 64);\n          }\n\n          state = new Uint32Array(5);\n          state[0] = 0x67452301;\n          state[1] = 0xefcdab89;\n          state[2] = 0x98badcfe;\n          state[3] = 0x10325476;\n          state[4] = 0xc3d2e1f0;\n\n          for (var ofs = 0; ofs < len; ofs += 64) {\n\n              // Copy input to block and write padding as needed\n              for (var i = 0; i < 64; i++) {\n                  var b = 0,\n                    o = ofs + i;\n                  if (o < dlen) {\n                      b = d[o];\n                  }\n                  else if (o === dlen) {\n                      b = 0x80;\n                  }\n                  else {\n                      // Write original bit length as a 64bit big-endian integer to the end.\n                      var x = len - o - 1;\n                      if (x >= 0 && x < 4) {\n                          b = (dlen << 3 >>> (x * 8)) & 0xff;\n                      }\n                  }\n\n                  // Interpret the input bytes as big-endian per the spec\n                  if (i % 4 === 0) {\n                      block[i >> 2] = b << 24;\n                  }\n                  else {\n                      block[i >> 2] |= b << ((3 - (i % 4)) * 8);\n                  }\n              }\n\n              // Extend the block\n              for (var i = 16; i < 80; i++) {\n                  var w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\n                  block[i] = (w << 1) | (w >>> 31);\n              }\n\n              cycle(state, block);\n\n          }\n\n          // Swap the bytes around since they are big endian internally\n          for (var i = 0; i < 5; i++)\n              state[i] = swap32(state[i]);\n          return state.buffer;\n      };\n\n  } // </editor-fold>\n)();\n\n/**\n * Algorithm name GOST R 34.11-HMAC<br><br>\n *\n * HMAC with the specified hash function.\n * @memberOf GostDigest\n * @method sign\n * @instance\n * @param {ArrayBuffer} key The key for HMAC.\n * @param {Hash} data Data\n */\nfunction signHMAC(key, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    // GOST R 34.11-94 - B=32b, L=32b\n    // GOST R 34.11-256 - B=64b, L=32b\n    // GOST R 34.11-512 - B=64b, L=64b\n    var b = (this.digest === digest94) ? 32 : 64,\n      l = this.bitLength / 8,\n      k = buffer(key),\n      d = buffer(data), k0;\n    if (k.byteLength === b)\n        k0 = new Uint8Array(k);\n    else {\n        var k0 = new Uint8Array(b);\n        if (k.byteLength > b) {\n            k0.set(new Uint8Array(this.digest(k)));\n        } else {\n            k0.set(new Uint8Array(k));\n        }\n    }\n    var s0 = new Uint8Array(b + d.byteLength),\n      s1 = new Uint8Array(b + l);\n    for (var i = 0; i < b; i++) {\n        s0[i] = k0[i] ^ 0x36;\n        s1[i] = k0[i] ^ 0x5C;\n    }\n    s0.set(new Uint8Array(d), b);\n    s1.set(new Uint8Array(this.digest(s0)), b);\n    return this.digest(s1);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-HMAC<br><br>\n *\n * Verify HMAC based on GOST R 34.11 hash\n *\n * @memberOf GostDigest\n * @method verify\n * @instance\n * @param {(ArrayBuffer|TypedArray)} key Key which used for HMAC generation\n * @param {(ArrayBuffer|TypedArray)} signature generated HMAC\n * @param {(ArrayBuffer|TypedArray)} data Data\n * @returns {boolean} HMAC verified = true\n */\nfunction verifyHMAC(key, signature, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    var hmac = new Uint8Array(this.sign(key, data)),\n      test = new Uint8Array(signature);\n    if (hmac.length !== test.length)\n        return false;\n    for (var i = 0, n = hmac.length; i < n; i++)\n        if (hmac[i] !== test[i])\n            return false;\n    return true;\n} // </editor-fold>\n\n\n/**\n * Algorithm name GOST R 34.11-KDF<br><br>\n *\n * Simple generate key 256/512 bit random seed for derivation algorithms\n *\n * @memberOf GostDigest\n * @method generateKey\n * @instance\n * @returns {ArrayBuffer} Generated key\n */\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\n{\n    return getSeed(this.bitLength).buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-PFXKDF<br><br>\n *\n * Derive bits from password (PKCS12 mode)\n *  <ul>\n *      <li>algorithm.salt - random value, salt</li>\n *      <li>algorithm.iterations - number of iterations</li>\n *  </ul>\n * @memberOf GostDigest\n * @method deriveBits\n * @instance\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n * @param {number} length output bit-length\n * @returns {ArrayBuffer} result\n */\nfunction deriveBitsPFXKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (length % 8 > 0)\n        throw new DataError('Length must multiple of 8');\n    var u = this.bitLength / 8, v = (this.digest === digest94) ? 32 : 64,\n      n = length / 8, r = this.iterations;\n    //   1.  Construct a string, D (the \"diversifier\"), by concatenating v/8\n    //       copies of ID.\n    var ID = this.diversifier, D = new Uint8Array(v);\n    for (var i = 0; i < v; i++)\n        D[i] = ID;\n    //   2.  Concatenate copies of the salt together to create a string S of\n    //       length v(ceiling(s/v)) bits (the final copy of the salt may be\n    //       truncated to create S).  Note that if the salt is the empty\n    //       string, then so is S.\n    var S0 = new Uint8Array(buffer(this.salt)), s = S0.length,\n      slen = v * Math.ceil(s / v), S = new Uint8Array(slen);\n    for (var i = 0; i < slen; i++)\n        S[i] = S0[i % s];\n    //   3.  Concatenate copies of the password together to create a string P\n    //       of length v(ceiling(p/v)) bits (the final copy of the password\n    //       may be truncated to create P).  Note that if the password is the\n    //       empty string, then so is P.\n    var P0 = new Uint8Array(buffer(baseKey)), p = P0.length,\n      plen = v * Math.ceil(p / v), P = new Uint8Array(plen);\n    for (var i = 0; i < plen; i++)\n        P[i] = P0[i % p];\n    //   4.  Set I=S||P to be the concatenation of S and P.\n    var I = new Uint8Array(slen + plen);\n    arraycopy(S, 0, I, 0, slen);\n    arraycopy(P, 0, I, slen, plen);\n    //   5.  Set c=ceiling(n/u).\n    var c = Math.ceil(n / u);\n    //   6.  For i=1, 2, ..., c, do the following:\n    var A = new Uint8Array(c * u);\n    for (var i = 0; i < c; i++) {\n        //  A.  Set A2=H^r(D||I). (i.e., the r-th hash of D||1,\n        //      H(H(H(... H(D||I))))\n        var H = new Uint8Array(v + slen + plen);\n        arraycopy(D, 0, H, 0, v);\n        arraycopy(I, 0, H, v, slen + plen);\n        for (var j = 0; j < r; j++)\n            H = new Uint8Array(this.digest(H));\n        arraycopy(H, 0, A, i * u, u);\n        //  B.  Concatenate copies of Ai to create a string B of length v\n        //      bits (the final copy of Ai may be truncated to create B).\n        var B = new Uint8Array(v);\n        for (var j = 0; j < v; j++)\n            B[j] = H[j % u];\n        //  C.  Treating I as a concatenation I_0, I_1, ..., I_(k-1) of v-bit\n        //      blocks, where k=ceiling(s/v)+ceiling(p/v), modify I by\n        //      setting I_j=(I_j+B+1) mod 2^v for each j.\n        var k = (slen + plen) / v;\n        for (j = 0; j < k; j++) {\n            var cf = 1, w;\n            for (var l = v - 1; l >= 0; --l) {\n                w = I[v * j + l] + B[l] + cf;\n                cf = w >>> 8;\n                I[v * j + l] = w & 0xff;\n            }\n        }\n    }\n    //   7.  Concatenate A_1, A_2, ..., A_c together to form a pseudorandom\n    //       bit string, A.\n    //   8.  Use the first n bits of A as the output of this entire process.\n    var R = new Uint8Array(n);\n    arraycopy(A, 0, R, 0, n);\n    return R.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-KDF<br><br>\n *\n * Derive bits for KEK deversification in 34.10-2012 algorithm\n * KDF(KEK, UKM, label) = HMAC256 (KEK,  0x01|label|0x00|UKM|0x01|0x00)\n * Default label = 0x26|0xBD|0xB8|0x78\n *\n * @memberOf GostDigest\n * @method deriveBits\n * @instance\n * @param {(ArrayBuffer|TypedArray)} baseKey base key for deriviation\n * @param {number} length output bit-length\n * @returns {ArrayBuffer} result\n */\nfunction deriveBitsKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (length % 8 > 0)\n        throw new DataError('Length must be multiple of 8');\n    var rlen = length / 8, label, context = new Uint8Array(buffer(this.context)),\n      blen = this.bitLength / 8, n = Math.ceil(rlen / blen);\n    if (this.label)\n        label = new Uint8Array(buffer(this.label));\n    else\n        label = new Uint8Array([0x26, 0xBD, 0xB8, 0x78]);\n    var result = new Uint8Array(rlen);\n    for (var i = 0; i < n; i++) {\n        var data = new Uint8Array(label.length + context.length + 4);\n        data[0] = i + 1;\n        data.set(label, 1);\n        data[label.length + 1] = 0x00;\n        data.set(context, label.length + 2);\n        data[data.length - 2] = length >>> 8;\n        data[data.length - 1] = length & 0xff;\n        result.set(new Uint8Array(signHMAC.call(this, baseKey, data), 0,\n          i < n - 1 ? blen : rlen - i * blen), i * blen);\n    }\n    return result.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-PBKDF1<br><br>\n *\n * Derive bits from password\n *  <ul>\n *      <li>algorithm.salt - random value, salt</li>\n *      <li>algorithm.iterations - number of iterations</li>\n *  </ul>\n * @memberOf GostDigest\n * @method deriveBits\n * @instance\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n * @param {number} length output bit-length\n * @returns {ArrayBuffer} result\n */\nfunction deriveBitsPBKDF1(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (length < this.bitLength / 2 || length % 8 > 0)\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\n    var hLen = this.bitLength / 8, dkLen = length / 8,\n      c = this.iterations,\n      P = new Uint8Array(buffer(baseKey)),\n      S = new Uint8Array(buffer(this.salt)),\n      slen = S.length, plen = P.length,\n      T = new Uint8Array(plen + slen),\n      DK = new Uint8Array(dkLen);\n    if (dkLen > hLen)\n        throw new DataError('Invalid parameters: Length value');\n    arraycopy(P, 0, T, 0, plen);\n    arraycopy(S, 0, T, plen, slen);\n    for (var i = 0; i < c; i++)\n        T = new Uint8Array(this.digest(T));\n    arraycopy(T, 0, DK, 0, dkLen);\n    return DK.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-PBKDF2<br><br>\n *\n * Derive bits from password\n *  <ul>\n *      <li>algorithm.salt - random value, salt</li>\n *      <li>algorithm.iterations - number of iterations</li>\n *  </ul>\n * @memberOf GostDigest\n * @method deriveBits\n * @instance\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n * @param {number} length output bit-length\n * @returns {ArrayBuffer} result\n */\nfunction deriveBitsPBKDF2(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    var diversifier = this.diversifier || 1; // For PKCS12 MAC required 3*length\n    length = length * diversifier;\n    if (length < this.bitLength / 2 || length % 8 > 0)\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\n    var hLen = this.bitLength / 8, dkLen = length / 8,\n      c = this.iterations,\n      P = new Uint8Array(buffer(baseKey)),\n      S = new Uint8Array(buffer(this.salt));\n    var slen = S.byteLength,\n      data = new Uint8Array(slen + 4);\n    arraycopy(S, 0, data, 0, slen);\n\n    if (dkLen > (0xffffffff - 1) * 32)\n        throw new DataError('Invalid parameters: Length value');\n    var n = Math.ceil(dkLen / hLen),\n      DK = new Uint8Array(dkLen);\n    for (var i = 1; i <= n; i++) {\n        data[slen] = i >>> 24 & 0xff;\n        data[slen + 1] = i >>> 16 & 0xff;\n        data[slen + 2] = i >>> 8 & 0xff;\n        data[slen + 3] = i & 0xff;\n\n        var U = new Uint8Array(signHMAC.call(this, P, data)), Z = U;\n        for (var j = 1; j < c; j++) {\n            U = new Uint8Array(signHMAC.call(this, P, U));\n            for (var k = 0; k < hLen; k++)\n                Z[k] = U[k] ^ Z[k];\n        }\n        var ofs = (i - 1) * hLen;\n        arraycopy(Z, 0, DK, ofs, Math.min(hLen, dkLen - ofs));\n    }\n    if (diversifier > 1) {\n        var rLen = dkLen / diversifier, R = new Uint8Array(rLen);\n        arraycopy(DK, dkLen - rLen, R, 0, rLen);\n        return R.buffer;\n    } else\n        return DK.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.11-CPKDF<br><br>\n *\n * Derive bits from password. CryptoPro algorithm\n *  <ul>\n *      <li>algorithm.salt - random value, salt</li>\n *      <li>algorithm.iterations - number of iterations</li>\n *  </ul>\n * @memberOf GostDigest\n * @method deriveBits\n * @instance\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\n * @param {number} length output bit-length\n * @returns {ArrayBuffer} result\n */\nfunction deriveBitsCP(baseKey, length) {\n    if (length > this.bitLength || length % 8 > 0)\n        throw new DataError('Length can\\'t be more than ' + this.bitLength + ' bits and multiple of 8');\n    // GOST R 34.11-94 - B=32b, L=32b\n    // GOST R 34.11-256 - B=64b, L=32b\n    // GOST R 34.11-512 - B=64b, L=64b\n    var b = (this.digest === digest94) ? 32 : 64,\n      l = this.bitLength / 8,\n      p = baseKey && baseKey.byteLength > 0 ? new Uint8Array(buffer(baseKey)) : false,\n      plen = p ? p.length : 0,\n      iterations = this.iterations,\n      salt = new Uint8Array(buffer(this.salt)),\n      slen = salt.length,\n      d = new Uint8Array(slen + plen);\n    arraycopy(salt, 0, d, 0, slen);\n    if (p)\n        arraycopy(p, 0, d, slen, plen);\n\n    var h = new Uint8Array(this.digest(d)),\n      k = new Uint8Array(b),\n      s0 = new Uint8Array(b),\n      s1 = new Uint8Array(b);\n    var c = 'DENEFH028.760246785.IUEFHWUIO.EF';\n    for (var i = 0; i < c.length; i++)\n        k[i] = c.charCodeAt(i);\n\n    d = new Uint8Array(2 * (b + l));\n    for (var j = 0; j < iterations; j++) {\n        for (var i = 0; i < b; i++) {\n            s0[i] = k[i] ^ 0x36;\n            s1[i] = k[i] ^ 0x5C;\n            k[i] = 0;\n        }\n        arraycopy(s0, 0, d, 0, b);\n        arraycopy(h, 0, d, b, l);\n        arraycopy(s1, 0, d, b + l, b);\n        arraycopy(h, 0, d, b + l + b, l);\n        arraycopy(new Uint8Array(this.digest(d)), 0, k, 0, l);\n    }\n    for (var i = 0; i < l; i++) {\n        s0[i] = k[i] ^ 0x36;\n        s1[i] = k[i] ^ 0x5C;\n        k[i] = 0;\n    }\n    d = new Uint8Array(2 * l + slen + plen);\n    arraycopy(s0, 0, d, 0, l);\n    arraycopy(salt, 0, d, l, slen);\n    arraycopy(s1, 0, d, l + slen, l);\n    if (p)\n        arraycopy(p, 0, d, l + slen + l, plen);\n    h = this.digest(this.digest(d));\n    if (length === this.bitLength)\n        return h;\n    else {\n        var rlen = length / 8, r = new Uint8Array(rlen);\n        arraycopy(h, 0, r, 0, rlen);\n        return r.buffer;\n    }\n}\n\n/**\n * Algorithm name GOST R 34.11-KDF or GOST R 34.11-PBKDF2 or other<br><br>\n *\n * Derive key from derive bits subset\n *\n * @memberOf GostDigest\n * @method deriveKey\n * @instance\n * @param {ArrayBuffer} baseKey\n * @returns {ArrayBuffer}\n */\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\n{\n    return this.deriveBits(baseKey, this.keySize * 8);\n} // </editor-fold>\n\n/**\n * GOST R 34.11 Algorithm<br><br>\n *\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\n *\n * Normalized algorithm identifier common parameters:\n *\n *  <ul>\n *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\n *      <li><b>version</b> Algorithm version\n *          <ul>\n *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\n *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\n *          </ul>\n *      </li>\n *      <li><b>length</b> Digest length\n *          <ul>\n *              <li><b>256</b> 256 bits digest</li>\n *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\n *          </ul>\n *      </li>\n *      <li><b>mode</b> Algorithm mode\n *          <ul>\n *              <li><b>HASH</b> simple digest mode (default)</li>\n *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\n *              <li><b>KDF</b> Derive bits for KEK deversification</li>\n *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\n *              <li><b>PFXKDF</b> Password based PFX key dirivation algorithms</li>\n *              <li><b>CPKDF</b> CpyptoPro Password based key dirivation algorithms</li>\n *          </ul>\n *      </li>\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\n *  </ul>\n *\n * Supported algorithms, modes and parameters:\n *\n *  <ul>\n *      <li>Digest HASH mode (default)</li>\n *      <li>Sign/Verify HMAC modes parameters depends on version and length\n *          <ul>\n *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\n *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\n *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\n *          </ul>\n *      </li>\n *      <li>DeriveBits/DeriveKey KDF mode\n *          <ul>\n *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\n *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\n *          </ul>\n *      </li>\n *      <li>DeriveBits/DeriveKey PBKDF2 mode\n *          <ul>\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, ID=3 - integrity key for MACing</li>\n *          </ul>\n *      </li>\n *      <li>DeriveBits/DeriveKey PFXKDF mode\n *          <ul>\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\n *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\n *          </ul>\n *      </li>\n *      <li>DeriveBits/DeriveKey CPKDF mode\n *          <ul>\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n *          </ul>\n *      </li>\n *  </ul>\n *\n * @class GostDigest\n * @param {AlgorithmIdentifier} algorithm WebCryptoAPI algorithm identifier\n */\nexport function GostDigest(algorithm) // <editor-fold defaultstate=\"collapsed\">\n{\n    algorithm = algorithm || {};\n\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' + ((algorithm.version || 2012) % 100) +\n      ((algorithm.version || 2012) > 1 ? '-' + (algorithm.length || 256) : '') +\n      (((algorithm.mode || 'HASH') !== 'HASH') ? '-' + algorithm.mode : '') +\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n    // Algorithm procreator\n    this.procreator = algorithm.procreator;\n\n    // Bit length\n    this.bitLength = algorithm.length || 256;\n\n    switch (algorithm.version || 2012) {\n        case 1: // SHA-1\n            this.digest = digestSHA1;\n            this.bitLength = 160;\n            break;\n        case 1994:\n            this.digest = digest94;\n            // Define chiper algorithm\n            this.sBox = (algorithm.sBox || (algorithm.procreator === 'SC' ? 'D-SC' : 'D-A')).toUpperCase();\n\n            this.cipher = new GostCipher({\n                name: 'GOST 28147',\n                block: 'ECB',\n                sBox: this.sBox,\n                procreator: this.procreator\n            });\n\n            break;\n        case 2012:\n            this.digest = digest2012;\n            break;\n        default:\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\n    }\n\n    // Key size\n    this.keySize = algorithm.keySize || (algorithm.version <= 2 ? this.bitLength / 8 : 32);\n\n    switch (algorithm.mode || 'HASH') {\n        case 'HASH':\n            break;\n        case 'HMAC':\n            this.sign = signHMAC;\n            this.verify = verifyHMAC;\n            this.generateKey = generateKey;\n            break;\n        case 'KDF':\n            this.deriveKey = deriveKey;\n            this.deriveBits = deriveBitsKDF;\n            this.label = algorithm.label;\n            this.context = algorithm.context;\n            break;\n        case 'PBKDF2':\n            this.deriveKey = deriveKey;\n            this.deriveBits = deriveBitsPBKDF2;\n            this.generateKey = generateKey;\n            this.salt = algorithm.salt;\n            this.iterations = algorithm.iterations || 2000;\n            this.diversifier = algorithm.diversifier || 1;\n            break;\n        case 'PFXKDF':\n            this.deriveKey = deriveKey;\n            this.deriveBits = deriveBitsPFXKDF;\n            this.generateKey = generateKey;\n            this.salt = algorithm.salt;\n            this.iterations = algorithm.iterations || 2000;\n            this.diversifier = algorithm.diversifier || 1;\n            break;\n        case 'CPKDF':\n            this.deriveKey = deriveKey;\n            this.deriveBits = deriveBitsCP;\n            this.generateKey = generateKey;\n            this.salt = algorithm.salt;\n            this.iterations = algorithm.iterations || 2000;\n            break;\n        default:\n            throw new NotSupportedError('Algorithm mode ' + algorithm.mode + ' not supported');\n    }\n} // </editor-fold>\n","/**\n * @file GOST 28147-89/GOST R 34.12-2015/GOST R 32.13-2015 Encryption Algorithm\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { NotSupportedError, DataError } from '../utils/errors';\nimport { randomSeed } from '../utils/seeds';\n\n/*\n * Initial parameters and common algortithms of GOST 28147-89\n *\n * http://tools.ietf.org/html/rfc5830\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CryptoOperationData = ArrayBuffer;\n\n/*\n * Check supported\n * This implementation support only Little Endian arhitecture\n */\n\nvar littleEndian = (function () {\n    var buffer = new CryptoOperationData(2);\n    new DataView(buffer).setInt16(0, 256, true);\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n// Default initial vector\nvar defaultIV = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\n\n// Predefined sBox collection\nvar sBoxes = {\n    'E-TEST': [\n        0x4, 0x2, 0xF, 0x5, 0x9, 0x1, 0x0, 0x8, 0xE, 0x3, 0xB, 0xC, 0xD, 0x7, 0xA, 0x6,\n        0xC, 0x9, 0xF, 0xE, 0x8, 0x1, 0x3, 0xA, 0x2, 0x7, 0x4, 0xD, 0x6, 0x0, 0xB, 0x5,\n        0xD, 0x8, 0xE, 0xC, 0x7, 0x3, 0x9, 0xA, 0x1, 0x5, 0x2, 0x4, 0x6, 0xF, 0x0, 0xB,\n        0xE, 0x9, 0xB, 0x2, 0x5, 0xF, 0x7, 0x1, 0x0, 0xD, 0xC, 0x6, 0xA, 0x4, 0x3, 0x8,\n        0x3, 0xE, 0x5, 0x9, 0x6, 0x8, 0x0, 0xD, 0xA, 0xB, 0x7, 0xC, 0x2, 0x1, 0xF, 0x4,\n        0x8, 0xF, 0x6, 0xB, 0x1, 0x9, 0xC, 0x5, 0xD, 0x3, 0x7, 0xA, 0x0, 0xE, 0x2, 0x4,\n        0x9, 0xB, 0xC, 0x0, 0x3, 0x6, 0x7, 0x5, 0x4, 0x8, 0xE, 0xF, 0x1, 0xA, 0x2, 0xD,\n        0xC, 0x6, 0x5, 0x2, 0xB, 0x0, 0x9, 0xD, 0x3, 0xE, 0x7, 0xA, 0xF, 0x4, 0x1, 0x8\n    ],\n    'E-A': [\n        0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5,\n        0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1,\n        0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9,\n        0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6,\n        0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6,\n        0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6,\n        0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE,\n        0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4\n    ],\n    'E-B': [\n        0x8, 0x4, 0xB, 0x1, 0x3, 0x5, 0x0, 0x9, 0x2, 0xE, 0xA, 0xC, 0xD, 0x6, 0x7, 0xF,\n        0x0, 0x1, 0x2, 0xA, 0x4, 0xD, 0x5, 0xC, 0x9, 0x7, 0x3, 0xF, 0xB, 0x8, 0x6, 0xE,\n        0xE, 0xC, 0x0, 0xA, 0x9, 0x2, 0xD, 0xB, 0x7, 0x5, 0x8, 0xF, 0x3, 0x6, 0x1, 0x4,\n        0x7, 0x5, 0x0, 0xD, 0xB, 0x6, 0x1, 0x2, 0x3, 0xA, 0xC, 0xF, 0x4, 0xE, 0x9, 0x8,\n        0x2, 0x7, 0xC, 0xF, 0x9, 0x5, 0xA, 0xB, 0x1, 0x4, 0x0, 0xD, 0x6, 0x8, 0xE, 0x3,\n        0x8, 0x3, 0x2, 0x6, 0x4, 0xD, 0xE, 0xB, 0xC, 0x1, 0x7, 0xF, 0xA, 0x0, 0x9, 0x5,\n        0x5, 0x2, 0xA, 0xB, 0x9, 0x1, 0xC, 0x3, 0x7, 0x4, 0xD, 0x0, 0x6, 0xF, 0x8, 0xE,\n        0x0, 0x4, 0xB, 0xE, 0x8, 0x3, 0x7, 0x1, 0xA, 0x2, 0x9, 0x6, 0xF, 0xD, 0x5, 0xC\n    ],\n    'E-C': [\n        0x1, 0xB, 0xC, 0x2, 0x9, 0xD, 0x0, 0xF, 0x4, 0x5, 0x8, 0xE, 0xA, 0x7, 0x6, 0x3,\n        0x0, 0x1, 0x7, 0xD, 0xB, 0x4, 0x5, 0x2, 0x8, 0xE, 0xF, 0xC, 0x9, 0xA, 0x6, 0x3,\n        0x8, 0x2, 0x5, 0x0, 0x4, 0x9, 0xF, 0xA, 0x3, 0x7, 0xC, 0xD, 0x6, 0xE, 0x1, 0xB,\n        0x3, 0x6, 0x0, 0x1, 0x5, 0xD, 0xA, 0x8, 0xB, 0x2, 0x9, 0x7, 0xE, 0xF, 0xC, 0x4,\n        0x8, 0xD, 0xB, 0x0, 0x4, 0x5, 0x1, 0x2, 0x9, 0x3, 0xC, 0xE, 0x6, 0xF, 0xA, 0x7,\n        0xC, 0x9, 0xB, 0x1, 0x8, 0xE, 0x2, 0x4, 0x7, 0x3, 0x6, 0x5, 0xA, 0x0, 0xF, 0xD,\n        0xA, 0x9, 0x6, 0x8, 0xD, 0xE, 0x2, 0x0, 0xF, 0x3, 0x5, 0xB, 0x4, 0x1, 0xC, 0x7,\n        0x7, 0x4, 0x0, 0x5, 0xA, 0x2, 0xF, 0xE, 0xC, 0x6, 0x1, 0xB, 0xD, 0x9, 0x3, 0x8\n    ],\n    'E-D': [\n        0xF, 0xC, 0x2, 0xA, 0x6, 0x4, 0x5, 0x0, 0x7, 0x9, 0xE, 0xD, 0x1, 0xB, 0x8, 0x3,\n        0xB, 0x6, 0x3, 0x4, 0xC, 0xF, 0xE, 0x2, 0x7, 0xD, 0x8, 0x0, 0x5, 0xA, 0x9, 0x1,\n        0x1, 0xC, 0xB, 0x0, 0xF, 0xE, 0x6, 0x5, 0xA, 0xD, 0x4, 0x8, 0x9, 0x3, 0x7, 0x2,\n        0x1, 0x5, 0xE, 0xC, 0xA, 0x7, 0x0, 0xD, 0x6, 0x2, 0xB, 0x4, 0x9, 0x3, 0xF, 0x8,\n        0x0, 0xC, 0x8, 0x9, 0xD, 0x2, 0xA, 0xB, 0x7, 0x3, 0x6, 0x5, 0x4, 0xE, 0xF, 0x1,\n        0x8, 0x0, 0xF, 0x3, 0x2, 0x5, 0xE, 0xB, 0x1, 0xA, 0x4, 0x7, 0xC, 0x9, 0xD, 0x6,\n        0x3, 0x0, 0x6, 0xF, 0x1, 0xE, 0x9, 0x2, 0xD, 0x8, 0xC, 0x4, 0xB, 0xA, 0x5, 0x7,\n        0x1, 0xA, 0x6, 0x8, 0xF, 0xB, 0x0, 0x4, 0xC, 0x3, 0x5, 0x9, 0x7, 0xD, 0x2, 0xE\n    ],\n    'E-SC': [\n        0x3, 0x6, 0x1, 0x0, 0x5, 0x7, 0xd, 0x9, 0x4, 0xb, 0x8, 0xc, 0xe, 0xf, 0x2, 0xa,\n        0x7, 0x1, 0x5, 0x2, 0x8, 0xb, 0x9, 0xc, 0xd, 0x0, 0x3, 0xa, 0xf, 0xe, 0x4, 0x6,\n        0xf, 0x1, 0x4, 0x6, 0xc, 0x8, 0x9, 0x2, 0xe, 0x3, 0x7, 0xa, 0xb, 0xd, 0x5, 0x0,\n        0x3, 0x4, 0xf, 0xc, 0x5, 0x9, 0xe, 0x0, 0x6, 0x8, 0x7, 0xa, 0x1, 0xb, 0xd, 0x2,\n        0x6, 0x9, 0x0, 0x7, 0xb, 0x8, 0x4, 0xc, 0x2, 0xe, 0xa, 0xf, 0x1, 0xd, 0x5, 0x3,\n        0x6, 0x1, 0x2, 0xf, 0x0, 0xb, 0x9, 0xc, 0x7, 0xd, 0xa, 0x5, 0x8, 0x4, 0xe, 0x3,\n        0x0, 0x2, 0xe, 0xc, 0x9, 0x1, 0x4, 0x7, 0x3, 0xf, 0x6, 0x8, 0xa, 0xd, 0xb, 0x5,\n        0x5, 0x2, 0xb, 0x8, 0x4, 0xc, 0x7, 0x1, 0xa, 0x6, 0xe, 0x0, 0x9, 0x3, 0xd, 0xf\n    ],\n    'E-Z': [// This is default S-box in according to draft of new standard\n        0xc, 0x4, 0x6, 0x2, 0xa, 0x5, 0xb, 0x9, 0xe, 0x8, 0xd, 0x7, 0x0, 0x3, 0xf, 0x1,\n        0x6, 0x8, 0x2, 0x3, 0x9, 0xa, 0x5, 0xc, 0x1, 0xe, 0x4, 0x7, 0xb, 0xd, 0x0, 0xf,\n        0xb, 0x3, 0x5, 0x8, 0x2, 0xf, 0xa, 0xd, 0xe, 0x1, 0x7, 0x4, 0xc, 0x9, 0x6, 0x0,\n        0xc, 0x8, 0x2, 0x1, 0xd, 0x4, 0xf, 0x6, 0x7, 0x0, 0xa, 0x5, 0x3, 0xe, 0x9, 0xb,\n        0x7, 0xf, 0x5, 0xa, 0x8, 0x1, 0x6, 0xd, 0x0, 0x9, 0x3, 0xe, 0xb, 0x4, 0x2, 0xc,\n        0x5, 0xd, 0xf, 0x6, 0x9, 0x2, 0xc, 0xa, 0xb, 0x7, 0x8, 0x1, 0x4, 0x3, 0xe, 0x0,\n        0x8, 0xe, 0x2, 0x5, 0x6, 0x9, 0x1, 0xc, 0xf, 0x4, 0xb, 0x0, 0xd, 0xa, 0x3, 0x7,\n        0x1, 0x7, 0xe, 0xd, 0x0, 0x5, 0x8, 0x3, 0x4, 0xf, 0xa, 0x6, 0x9, 0xc, 0xb, 0x2\n    ],\n    //S-box for digest\n    'D-TEST': [\n        0x4, 0xA, 0x9, 0x2, 0xD, 0x8, 0x0, 0xE, 0x6, 0xB, 0x1, 0xC, 0x7, 0xF, 0x5, 0x3,\n        0xE, 0xB, 0x4, 0xC, 0x6, 0xD, 0xF, 0xA, 0x2, 0x3, 0x8, 0x1, 0x0, 0x7, 0x5, 0x9,\n        0x5, 0x8, 0x1, 0xD, 0xA, 0x3, 0x4, 0x2, 0xE, 0xF, 0xC, 0x7, 0x6, 0x0, 0x9, 0xB,\n        0x7, 0xD, 0xA, 0x1, 0x0, 0x8, 0x9, 0xF, 0xE, 0x4, 0x6, 0xC, 0xB, 0x2, 0x5, 0x3,\n        0x6, 0xC, 0x7, 0x1, 0x5, 0xF, 0xD, 0x8, 0x4, 0xA, 0x9, 0xE, 0x0, 0x3, 0xB, 0x2,\n        0x4, 0xB, 0xA, 0x0, 0x7, 0x2, 0x1, 0xD, 0x3, 0x6, 0x8, 0x5, 0x9, 0xC, 0xF, 0xE,\n        0xD, 0xB, 0x4, 0x1, 0x3, 0xF, 0x5, 0x9, 0x0, 0xA, 0xE, 0x7, 0x6, 0x8, 0x2, 0xC,\n        0x1, 0xF, 0xD, 0x0, 0x5, 0x7, 0xA, 0x4, 0x9, 0x2, 0x3, 0xE, 0x6, 0xB, 0x8, 0xC\n    ],\n    'D-A': [\n        0xA, 0x4, 0x5, 0x6, 0x8, 0x1, 0x3, 0x7, 0xD, 0xC, 0xE, 0x0, 0x9, 0x2, 0xB, 0xF,\n        0x5, 0xF, 0x4, 0x0, 0x2, 0xD, 0xB, 0x9, 0x1, 0x7, 0x6, 0x3, 0xC, 0xE, 0xA, 0x8,\n        0x7, 0xF, 0xC, 0xE, 0x9, 0x4, 0x1, 0x0, 0x3, 0xB, 0x5, 0x2, 0x6, 0xA, 0x8, 0xD,\n        0x4, 0xA, 0x7, 0xC, 0x0, 0xF, 0x2, 0x8, 0xE, 0x1, 0x6, 0x5, 0xD, 0xB, 0x9, 0x3,\n        0x7, 0x6, 0x4, 0xB, 0x9, 0xC, 0x2, 0xA, 0x1, 0x8, 0x0, 0xE, 0xF, 0xD, 0x3, 0x5,\n        0x7, 0x6, 0x2, 0x4, 0xD, 0x9, 0xF, 0x0, 0xA, 0x1, 0x5, 0xB, 0x8, 0xE, 0xC, 0x3,\n        0xD, 0xE, 0x4, 0x1, 0x7, 0x0, 0x5, 0xA, 0x3, 0xC, 0x8, 0xF, 0x6, 0x2, 0x9, 0xB,\n        0x1, 0x3, 0xA, 0x9, 0x5, 0xB, 0x4, 0xF, 0x8, 0x6, 0x7, 0xE, 0xD, 0x0, 0x2, 0xC\n    ],\n    'D-SC': [\n        0xb, 0xd, 0x7, 0x0, 0x5, 0x4, 0x1, 0xf, 0x9, 0xe, 0x6, 0xa, 0x3, 0xc, 0x8, 0x2,\n        0x1, 0x2, 0x7, 0x9, 0xd, 0xb, 0xf, 0x8, 0xe, 0xc, 0x4, 0x0, 0x5, 0x6, 0xa, 0x3,\n        0x5, 0x1, 0xd, 0x3, 0xf, 0x6, 0xc, 0x7, 0x9, 0x8, 0xb, 0x2, 0x4, 0xe, 0x0, 0xa,\n        0xd, 0x1, 0xb, 0x4, 0x9, 0xc, 0xe, 0x0, 0x7, 0x5, 0x8, 0xf, 0x6, 0x2, 0xa, 0x3,\n        0x2, 0xd, 0xa, 0xf, 0x9, 0xb, 0x3, 0x7, 0x8, 0xc, 0x5, 0xe, 0x6, 0x0, 0x1, 0x4,\n        0x0, 0x4, 0x6, 0xc, 0x5, 0x3, 0x8, 0xd, 0xa, 0xb, 0xf, 0x2, 0x1, 0x9, 0x7, 0xe,\n        0x1, 0x3, 0xc, 0x8, 0xa, 0x6, 0xb, 0x0, 0x2, 0xe, 0x7, 0x9, 0xf, 0x4, 0x5, 0xd,\n        0xa, 0xb, 0x6, 0x0, 0x1, 0x3, 0x4, 0x7, 0xe, 0xd, 0x5, 0xf, 0x8, 0x2, 0x9, 0xc\n    ]\n};\n\nvar C = new Uint8Array([\n    0x69, 0x00, 0x72, 0x22, 0x64, 0xC9, 0x04, 0x23,\n    0x8D, 0x3A, 0xDB, 0x96, 0x46, 0xE9, 0x2A, 0xC4,\n    0x18, 0xFE, 0xAC, 0x94, 0x00, 0xED, 0x07, 0x12,\n    0xC0, 0x86, 0xDC, 0xC2, 0xEF, 0x4C, 0xA9, 0x2B\n]);\n\nfunction signed(x) {\n    return x >= 0x80000000 ? x - 0x100000000 : x;\n}\n\nfunction unsigned(x) {\n    return x < 0 ? x + 0x100000000 : x;\n}\n\n// Get buffer\nfunction buffer(d) {\n    if (d instanceof CryptoOperationData)\n        return d;\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n    else\n        throw new DataError('CryptoOperationData required');\n}\n\n// Get byte array\nfunction byteArray(d) {\n    return new Uint8Array(buffer(d));\n}\n\n// Clone byte array\nfunction cloneArray(d) {\n    return new Uint8Array(byteArray(d));\n}\n\n// Get int32 array\nfunction intArray(d) {\n    return new Int32Array(buffer(d));\n}\n\n// Swap bytes for version 2015\nfunction swap32(b) {\n    return ((b & 0xff) << 24)\n      | ((b & 0xff00) << 8)\n      | ((b >> 8) & 0xff00)\n      | ((b >> 24) & 0xff);\n}\n\n// </editor-fold>\n\n/*\n * Initial parameters and common algortithms of GOST R 34.12-15\n * Algorithm \"Kuznechik\" 128bit\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Default initial vector\nvar defaultIV128 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n// Mult table for R function\nvar multTable = (function () {\n\n    // Multiply two numbers in the GF(2^8) finite field defined\n    // by the polynomial x^8 + x^7 + x^6 + x + 1 = 0 */\n    function gmul(a, b) {\n        var p = 0, counter, carry;\n        for (counter = 0; counter < 8; counter++) {\n            if (b & 1)\n                p ^= a;\n            carry = a & 0x80; // detect if x^8 term is about to be generated\n            a = (a << 1) & 0xff;\n            if (carry)\n                a ^= 0xc3; // replace x^8 with x^7 + x^6 + x + 1\n            b >>= 1;\n        }\n        return p & 0xff;\n    }\n\n    // It is required only this values for R function\n    //       0   1   2    3    4    5    6    7\n    var x = [1, 16, 32, 133, 148, 192, 194, 251];\n    var m = [];\n    for (var i = 0; i < 8; i++) {\n        m[i] = [];\n        for (var j = 0; j < 256; j++)\n            m[i][j] = gmul(x[i], j);\n    }\n    return m;\n})();\n\n// 148, 32, 133, 16, 194, 192, 1, 251, 1, 192, 194, 16, 133, 32, 148, 1\nvar kB = [4, 2, 3, 1, 6, 5, 0, 7, 0, 5, 6, 1, 3, 2, 4, 0];\n\n// R - function\nfunction funcR(d) {\n    var sum = 0;\n    for (var i = 0; i < 16; i++)\n        sum ^= multTable[kB[i]][d[i]];\n\n    for (var i = 16; i > 0; --i)\n        d[i] = d[i - 1];\n    d[0] = sum;\n}\n\nfunction funcReverseR(d) {\n    var tmp = d[0];\n    for (var i = 0; i < 15; i++)\n        d[i] = d[i + 1];\n    d[15] = tmp;\n\n    var sum = 0;\n    for (i = 0; i < 16; i++)\n        sum ^= multTable[kB[i]][d[i]];\n    d[15] = sum;\n}\n\n// Nonlinear transformation\nvar kPi = [\n    252, 238, 221, 17, 207, 110, 49, 22, 251, 196, 250, 218, 35, 197, 4, 77,\n    233, 119, 240, 219, 147, 46, 153, 186, 23, 54, 241, 187, 20, 205, 95, 193,\n    249, 24, 101, 90, 226, 92, 239, 33, 129, 28, 60, 66, 139, 1, 142, 79,\n    5, 132, 2, 174, 227, 106, 143, 160, 6, 11, 237, 152, 127, 212, 211, 31,\n    235, 52, 44, 81, 234, 200, 72, 171, 242, 42, 104, 162, 253, 58, 206, 204,\n    181, 112, 14, 86, 8, 12, 118, 18, 191, 114, 19, 71, 156, 183, 93, 135,\n    21, 161, 150, 41, 16, 123, 154, 199, 243, 145, 120, 111, 157, 158, 178, 177,\n    50, 117, 25, 61, 255, 53, 138, 126, 109, 84, 198, 128, 195, 189, 13, 87,\n    223, 245, 36, 169, 62, 168, 67, 201, 215, 121, 214, 246, 124, 34, 185, 3,\n    224, 15, 236, 222, 122, 148, 176, 188, 220, 232, 40, 80, 78, 51, 10, 74,\n    167, 151, 96, 115, 30, 0, 98, 68, 26, 184, 56, 130, 100, 159, 38, 65,\n    173, 69, 70, 146, 39, 94, 85, 47, 140, 163, 165, 125, 105, 213, 149, 59,\n    7, 88, 179, 64, 134, 172, 29, 247, 48, 55, 107, 228, 136, 217, 231, 137,\n    225, 27, 131, 73, 76, 63, 248, 254, 141, 83, 170, 144, 202, 216, 133, 97,\n    32, 113, 103, 164, 45, 43, 9, 91, 203, 155, 37, 208, 190, 229, 108, 82,\n    89, 166, 116, 210, 230, 244, 180, 192, 209, 102, 175, 194, 57, 75, 99, 182\n];\n\nvar kReversePi = (function () {\n    var m = [];\n    for (var i = 0, n = kPi.length; i < n; i++)\n        m[kPi[i]] = i;\n    return m;\n})();\n\nfunction funcS(d) {\n    for (var i = 0; i < 16; ++i)\n        d[i] = kPi[d[i]];\n}\n\nfunction funcReverseS(d) {\n    for (var i = 0; i < 16; ++i)\n        d[i] = kReversePi[d[i]];\n}\n\nfunction funcX(a, b) {\n    for (var i = 0; i < 16; ++i)\n        a[i] ^= b[i];\n}\n\nfunction funcL(d) {\n    for (var i = 0; i < 16; ++i)\n        funcR(d);\n}\n\nfunction funcReverseL(d) {\n    for (var i = 0; i < 16; ++i)\n        funcReverseR(d);\n}\n\nfunction funcLSX(a, b) {\n    funcX(a, b);\n    funcS(a);\n    funcL(a);\n}\n\nfunction funcReverseLSX(a, b) {\n    funcX(a, b);\n    funcReverseL(a);\n    funcReverseS(a);\n}\n\nfunction funcF(inputKey, inputKeySecond, iterationConst) {\n    var tmp = new Uint8Array(inputKey);\n    funcLSX(inputKey, iterationConst);\n    funcX(inputKey, inputKeySecond);\n    inputKeySecond.set(tmp);\n}\n\nfunction funcC(number, d) {\n    for (var i = 0; i < 15; i++)\n        d[i] = 0;\n    d[15] = number;\n    funcL(d);\n}\n\n// </editor-fold>\n\n/**\n * Key schedule for GOST R 34.12-15 128bits\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method keySchedule\n * @param {type} k\n * @returns {Uint8Array}\n */\nfunction keySchedule128(k) // <editor-fold defaultstate=\"collapsed\">\n{\n    var keys = new Uint8Array(160), c = new Uint8Array(16);\n    keys.set(byteArray(k));\n    for (var j = 0; j < 4; j++) {\n        var j0 = 32 * j, j1 = 32 * (j + 1);\n        keys.set(new Uint8Array(keys.buffer, j0, 32), j1);\n        for (var i = 1; i < 9; i++) {\n            funcC(j * 8 + i, c);\n            funcF(new Uint8Array(keys.buffer, j1, 16),\n              new Uint8Array(keys.buffer, j1 + 16, 16), c);\n        }\n    }\n    return keys;\n} // </editor-fold>\n\n/**\n * GOST R 34.12-15 128 bits encrypt/decrypt process\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method round\n * @param {Uint8Array} k Scheduled key\n * @param {Uint8Array} d Data\n * @param {number} ofs Offsec\n * @param {number} e true - decrypt\n */\nfunction process128(k, d, ofs, e) // <editor-fold defaultstate=\"collapsed\">\n{\n    ofs = ofs || d.byteOffset;\n    var r = new Uint8Array(d.buffer, ofs, 16);\n    if (e) {\n        for (var i = 0; i < 9; i++)\n            funcReverseLSX(r, new Uint8Array(k.buffer, (9 - i) * 16, 16));\n\n        funcX(r, new Uint8Array(k.buffer, 0, 16));\n    } else {\n        for (var i = 0; i < 9; i++)\n            funcLSX(r, new Uint8Array(k.buffer, 16 * i, 16));\n\n        funcX(r, new Uint8Array(k.buffer, 16 * 9, 16));\n    }\n} // </editor-fold>\n\n/**\n * One GOST encryption round\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method round\n * @param {Int8Array} S sBox\n * @param {Int32Array} m 2x32 bits cipher block\n * @param {Int32Array} k 32 bits key[i]\n */\nfunction round(S, m, k) // <editor-fold defaultstate=\"collapsed\">\n{\n    var cm = (m[0] + k) & 0xffffffff;\n\n    var om = S[0 + ((cm >> (0 * 4)) & 0xF)] << (0 * 4);\n    om |= S[16 + ((cm >> (1 * 4)) & 0xF)] << (1 * 4);\n    om |= S[32 + ((cm >> (2 * 4)) & 0xF)] << (2 * 4);\n    om |= S[48 + ((cm >> (3 * 4)) & 0xF)] << (3 * 4);\n    om |= S[64 + ((cm >> (4 * 4)) & 0xF)] << (4 * 4);\n    om |= S[80 + ((cm >> (5 * 4)) & 0xF)] << (5 * 4);\n    om |= S[96 + ((cm >> (6 * 4)) & 0xF)] << (6 * 4);\n    om |= S[112 + ((cm >> (7 * 4)) & 0xF)] << (7 * 4);\n    cm = om << 11 | om >>> (32 - 11);\n\n    cm ^= m[1];\n    m[1] = m[0];\n    m[0] = cm;\n\n} // </editor-fold>\n\n/**\n * Process encrypt/decrypt block with key K using GOST 28147-89\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method process\n * @param k {Int32Array} 8x32 bits key\n * @param d {Int32Array} 8x8 bits cipher block\n * @param ofs {number} offset\n */\nfunction process89(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\n{\n    ofs = ofs || d.byteOffset;\n    var s = this.sBox,\n      m = new Int32Array(d.buffer, ofs, 2);\n\n    for (var i = 0; i < 32; i++)\n        round(s, m, k[i]);\n\n    var r = m[0];\n    m[0] = m[1];\n    m[1] = r;\n} // </editor-fold>\n\n/**\n * Process encrypt/decrypt block with key K using GOST R 34.12-15 64bit block\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method process\n * @param k {Int32Array} 8x32 bits key\n * @param d {Int32Array} 8x8 bits cipher block\n * @param ofs {number} offset\n */\nfunction process15(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\n{\n    ofs = ofs || d.byteOffset;\n    var s = this.sBox,\n      m = new Int32Array(d.buffer, ofs, 2),\n      r = swap32(m[0]);\n    m[0] = swap32(m[1]);\n    m[1] = r;\n\n    for (var i = 0; i < 32; i++)\n        round(s, m, k[i]);\n\n    m[0] = swap32(m[0]);\n    m[1] = swap32(m[1]);\n} // </editor-fold>\n\n/**\n * Key keySchedule algorithm for GOST 28147-89 64bit cipher\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method process\n * @param k {Uint8Array} 8 bit key array\n * @param e {boolean}  true - decrypt\n * @returns {Int32Array} keyScheduled 32-bit key\n */\nfunction keySchedule89(k, e) // <editor-fold defaultstate=\"collapsed\">\n{\n    var sch = new Int32Array(32),\n      key = new Int32Array(buffer(k));\n\n    for (var i = 0; i < 8; i++)\n        sch[i] = key[i];\n\n    if (e) {\n        for (var i = 0; i < 8; i++)\n            sch[i + 8] = sch[7 - i];\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 16] = sch[7 - i];\n    } else {\n        for (var i = 0; i < 8; i++)\n            sch[i + 8] = sch[i];\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 16] = sch[i];\n    }\n\n    for (var i = 0; i < 8; i++)\n        sch[i + 24] = sch[7 - i];\n\n    return sch;\n} // </editor-fold>\n\n/**\n * Key keySchedule algorithm for GOST R 34.12-15 64bit cipher\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method process\n * @param k {Uint8Array} 8 bit key array\n * @param e {boolean}  true - decrypt\n * @returns {Int32Array} keyScheduled 32-bit key\n */\nfunction keySchedule15(k, e) // <editor-fold defaultstate=\"collapsed\">\n{\n    var sch = new Int32Array(32),\n      key = new Int32Array(buffer(k));\n\n    for (var i = 0; i < 8; i++)\n        sch[i] = swap32(key[i]);\n\n    if (e) {\n        for (var i = 0; i < 8; i++)\n            sch[i + 8] = sch[7 - i];\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 16] = sch[7 - i];\n    } else {\n        for (var i = 0; i < 8; i++)\n            sch[i + 8] = sch[i];\n\n        for (var i = 0; i < 8; i++)\n            sch[i + 16] = sch[i];\n    }\n\n    for (var i = 0; i < 8; i++)\n        sch[i + 24] = sch[7 - i];\n\n    return sch;\n} // </editor-fold>\n\n/**\n * Key schedule for RC2\n *\n * https://tools.ietf.org/html/rfc2268\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method keySchedule\n * @param {Uint8Array} k\n * @returns {Uint16Array}\n */\nvar keyScheduleRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\n  {\n      // an array of \"random\" bytes based on the digits of PI = 3.14159...\n      var PITABLE = new Uint8Array([\n          0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n          0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n          0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n          0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n          0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n          0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n          0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n          0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n          0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n          0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n          0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n          0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n          0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n          0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n          0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n          0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n      ]);\n\n      return function (k) {\n          var key = new Uint8Array(buffer(k)),\n            T = Math.min(key.length, 128),\n            T1 = this.effectiveLength,\n            T8 = Math.floor((T1 + 7) / 8),\n            TM = 0xff % Math.pow(2, 8 + T1 - 8 * T8);\n\n          var L = new Uint8Array(128), K = new Uint16Array(L.buffer);\n          for (var i = 0; i < T; i++)\n              L[i] = key[i];\n          for (var i = T; i < 128; i++)\n              L[i] = PITABLE[(L[i - 1] + L[i - T]) % 256];\n          L[128 - T8] = PITABLE[L[128 - T8] & TM];\n          for (var i = 127 - T8; i >= 0; --i)\n              L[i] = PITABLE[L[i + 1] ^ L[i + T8]];\n          return K;\n      };\n  } // </editor-fold>\n)();\n\n/**\n * RC2 encrypt/decrypt process\n *\n * https://tools.ietf.org/html/rfc2268\n *\n * @memberOf GostCipher\n * @private\n * @instance\n * @method round\n * @param {CryptoOperationData} k Scheduled key\n * @param {CryptoOperationData} d Data\n * @param {number} ofs Offsec\n * @param {number} e true - decrypt\n */\nvar processRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\n  {\n      var K, j, R = new Uint16Array(4),\n        s = new Uint16Array([1, 2, 3, 5]), reverse;\n\n      function rol(R, s) {\n          return (R << s | R >>> (16 - s)) & 0xffff;\n      }\n\n      function ror(R, s) {\n          return (R >>> s | R << (16 - s)) & 0xffff;\n      }\n\n      function mix(i) {\n          if (reverse) {\n              R[i] = ror(R[i], s[i]);\n              R[i] = R[i] - K[j] - (R[(i + 3) % 4] & R[(i + 2) % 4]) - ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n              j = j - 1;\n          } else {\n              R[i] = R[i] + K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) + ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n              j = j + 1;\n              R[i] = rol(R[i], s[i]);\n          }\n      }\n\n      function mash(i) {\n          if (reverse) {\n              R[i] = R[i] - K[R[(i + 3) % 4] & 63];\n          } else {\n              R[i] = R[i] + K[R[(i + 3) % 4] & 63];\n          }\n      }\n\n      function perform(method, count) {\n          count = count || 1;\n          for (var j = 0; j < count; j++) {\n              if (reverse) {\n                  for (var i = 3; i >= 0; --i)\n                      method(i);\n              } else {\n                  for (var i = 0; i < 4; i++)\n                      method(i);\n              }\n          }\n      }\n\n      return function (k, d, ofs, e) {\n          reverse = e;\n          //  1. Initialize words R[0], ..., R[3] to contain the 64-bit\n          //     ciphertext value.\n          R = new Uint16Array(d.buffer, ofs || d.byteOffset, 4);\n          //  2. Expand the key, so that words K[0], ..., K[63] become\n          //     defined.\n          K = k;\n          //  3. Initialize j to zero (enc) j to 63 (dec).\n          j = e ? 63 : 0;\n          //  4. Perform five mixing rounds.\n          perform(mix, 5);\n          //  5. Perform one mashing round.\n          perform(mash);\n          //  6. Perform six mixing rounds.\n          perform(mix, 6);\n          //  7. Perform one mashing round.\n          perform(mash);\n          //  8. Perform five mixing rounds.\n          perform(mix, 5);\n      };\n  } // </editor-fold>\n)();\n\n/**\n * Algorithm name GOST 28147-ECB<br><br>\n *\n * encryptECB (K, D) is D, encrypted with key k using GOST 28147/GOST R 34.13 in\n * \"prostaya zamena\" (Electronic Codebook, ECB) mode.\n * @memberOf GostCipher\n * @method encrypt\n * @instance\n * @param k {CryptoOperationData} 8x32 bit key\n * @param d {CryptoOperationData} 8 bits message\n * @return {CryptoOperationData} result\n */\nfunction encryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var p = this.pad(byteArray(d)),\n      n = this.blockSize,\n      b = p.byteLength / n,\n      key = this.keySchedule(k);\n\n    for (var i = 0; i < b; i++)\n        this.process(key, p, n * i);\n\n    return p.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-ECB<br><br>\n *\n * decryptECB (K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13 in\n * \"prostaya zamena\"  (Electronic Codebook, ECB) mode.\n *\n * @memberOf GostCipher\n * @method decrypt\n * @instance\n * @param k {CryptoOperationData} 8x32 bits key\n * @param d {CryptoOperationData} 8 bits message\n * @return {CryptoOperationData} result\n */\nfunction decryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var p = cloneArray(d),\n      n = this.blockSize,\n      b = p.byteLength / n,\n      key = this.keySchedule(k, 1);\n\n    for (var i = 0; i < b; i++)\n        this.process(key, p, n * i, 1);\n\n    return this.unpad(p).buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CFB<br><br>\n *\n * encryptCFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie s obratnoj svyaziyu\" (Cipher Feedback, CFB) mode, and IV is\n * used as the initialization vector.\n *\n * @memberOf GostCipher\n * @method encrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction encryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      c = cloneArray(d),\n      m = s.length,\n      t = new Uint8Array(m),\n      b = this.shiftBits >> 3,\n      cb = c.length, r = cb % b, q = (cb - r) / b,\n      key = this.keySchedule(k);\n\n    for (var i = 0; i < q; i++) {\n\n        for (var j = 0; j < m; j++)\n            t[j] = s[j];\n\n        this.process(key, s);\n\n        for (var j = 0; j < b; j++)\n            c[i * b + j] ^= s[j];\n\n        for (var j = 0; j < m - b; j++)\n            s[j] = t[b + j];\n\n        for (var j = 0; j < b; j++)\n            s[m - b + j] = c[i * b + j];\n\n        k = this.keyMeshing(k, s, i, key);\n    }\n\n    if (r > 0) {\n        this.process(key, s);\n\n        for (var i = 0; i < r; i++)\n            c[q * b + i] ^= s[i];\n    }\n    return c.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CFB<br><br>\n *\n * decryptCFB (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (Cipher Feedback, CFB) mode, and IV is\n * used as the initialization vector.\n *\n * @memberOf GostCipher\n * @method decrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction decryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      c = cloneArray(d),\n      m = s.length,\n      t = new Uint8Array(m),\n      b = this.shiftBits >> 3,\n      cb = c.length, r = cb % b, q = (cb - r) / b,\n      key = this.keySchedule(k);\n\n    for (var i = 0; i < q; i++) {\n\n        for (var j = 0; j < m; j++)\n            t[j] = s[j];\n\n        this.process(key, s);\n\n        for (var j = 0; j < b; j++) {\n            t[j] = c[i * b + j];\n            c[i * b + j] ^= s[j];\n        }\n\n        for (var j = 0; j < m - b; j++)\n            s[j] = t[b + j];\n\n        for (var j = 0; j < b; j++)\n            s[m - b + j] = t[j];\n\n        k = this.keyMeshing(k, s, i, key);\n    }\n\n    if (r > 0) {\n        this.process(key, s);\n\n        for (var i = 0; i < r; i++)\n            c[q * b + i] ^= s[i];\n    }\n    return c.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-OFB<br><br>\n *\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\n * used as the initialization vector.\n *\n * @memberOf GostCipher\n * @method encrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n * @return {CryptoOperationData} result\n */\n/**\n * Algorithm name GOST 28147-OFB<br><br>\n *\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\n * used as the initialization vector.\n *\n * @memberOf GostCipher\n * @method decrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction processOFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      c = cloneArray(d),\n      m = s.length,\n      t = new Uint8Array(m),\n      b = this.shiftBits >> 3,\n      p = new Uint8Array(b),\n      cb = c.length, r = cb % b, q = (cb - r) / b,\n      key = this.keySchedule(k);\n\n    for (var i = 0; i < q; i++) {\n\n        for (var j = 0; j < m; j++)\n            t[j] = s[j];\n\n        this.process(key, s);\n\n        for (var j = 0; j < b; j++)\n            p[j] = s[j];\n\n        for (var j = 0; j < b; j++)\n            c[i * b + j] ^= s[j];\n\n        for (var j = 0; j < m - b; j++)\n            s[j] = t[b + j];\n\n        for (var j = 0; j < b; j++)\n            s[m - b + j] = p[j];\n\n        k = this.keyMeshing(k, s, i, key);\n    }\n\n    if (r > 0) {\n        this.process(key, s);\n\n        for (var i = 0; i < r; i++)\n            c[q * b + i] ^= s[i];\n    }\n    return c.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CTR<br><br>\n *\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\n * initialization vector.\n * @memberOf GostCipher\n * @method encrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n * @return {CryptoOperationData} result\n */\n/**\n * Algorithm name GOST 28147-CTR<br><br>\n *\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\n * initialization vector.\n * @memberOf GostCipher\n * @method decrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction processCTR89(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      c = cloneArray(d),\n      b = this.blockSize,\n      t = new Int8Array(b),\n      cb = c.length, r = cb % b, q = (cb - r) / b,\n      key = this.keySchedule(k),\n      syn = new Int32Array(s.buffer);\n\n    this.process(key, s);\n\n    for (var i = 0; i < q; i++) {\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\n\n        for (var j = 0; j < b; j++)\n            t[j] = s[j];\n\n        this.process(key, syn);\n\n        for (var j = 0; j < b; j++)\n            c[i * b + j] ^= s[j];\n\n        for (var j = 0; j < b; j++)\n            s[j] = t[j];\n\n        k = this.keyMeshing(k, s, i, key);\n    }\n    if (r > 0) {\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\n\n        this.process(key, syn);\n\n        for (var i = 0; i < r; i++)\n            c[q * b + i] ^= s[i];\n    }\n    return c.buffer;\n} // </editor-fold>\n\nfunction processCTR15(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var c = cloneArray(d),\n      n = this.blockSize,\n      b = this.shiftBits >> 3,\n      cb = c.length, r = cb % b, q = (cb - r) / b,\n      s = new Uint8Array(n),\n      t = new Int32Array(n),\n      key = this.keySchedule(k);\n\n    s.set(iv || this.iv);\n    for (var i = 0; i < q; i++) {\n\n        for (var j = 0; j < n; j++)\n            t[j] = s[j];\n\n        this.process(key, s);\n\n        for (var j = 0; j < b; j++)\n            c[b * i + j] ^= s[j];\n\n        for (var j = 0; j < n; j++)\n            s[j] = t[j];\n\n        for (var j = n - 1; i >= 0; --i) {\n            if (s[j] > 0xfe) {\n                s[j] -= 0xfe;\n            } else {\n                s[j]++;\n                break;\n            }\n        }\n    }\n\n    if (r > 0) {\n        this.process(key, s);\n        for (var j = 0; j < r; j++)\n            c[b * q + j] ^= s[j];\n    }\n\n    return c.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CBC<br><br>\n *\n * encryptCBC (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\n * vector.\n *\n * @memberOf GostCipher\n * @method encrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction encryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      n = this.blockSize,\n      m = s.length,\n      c = this.pad(byteArray(d)),\n      key = this.keySchedule(k);\n\n    for (var i = 0, b = c.length / n; i < b; i++) {\n\n        for (var j = 0; j < n; j++)\n            s[j] ^= c[i * n + j];\n\n        this.process(key, s);\n\n        for (var j = 0; j < n; j++)\n            c[i * n + j] = s[j];\n\n        if (m !== n) {\n            for (var j = 0; j < m - n; j++)\n                s[j] = s[n + j];\n\n            for (var j = 0; j < n; j++)\n                s[j + m - n] = c[i * n + j];\n        }\n\n        k = this.keyMeshing(k, s, i, key);\n    }\n\n    return c.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CBC<br><br>\n *\n * decryptCBC (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\n * vector.\n *\n * @memberOf GostCipher\n * @method decrypt\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction decryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var s = new Uint8Array(iv || this.iv),\n      n = this.blockSize,\n      m = s.length,\n      c = cloneArray(d),\n      next = new Uint8Array(n),\n      key = this.keySchedule(k, 1);\n\n    for (var i = 0, b = c.length / n; i < b; i++) {\n\n        for (var j = 0; j < n; j++)\n            next[j] = c[i * n + j];\n\n        this.process(key, c, i * n, 1);\n\n        for (var j = 0; j < n; j++)\n            c[i * n + j] ^= s[j];\n\n        if (m !== n) {\n            for (var j = 0; j < m - n; j++)\n                s[j] = s[n + j];\n        }\n\n        for (var j = 0; j < n; j++)\n            s[j + m - n] = next[j];\n\n        k = this.keyMeshing(k, s, i, key, 1);\n    }\n\n    return this.unpad(c).buffer;\n} // </editor-fold>\n\n/**\n * The generateKey method returns a new generated key.\n *\n * @memberOf GostCipher\n * @method generateKey\n * @instance\n * @return {CryptoOperationData} result\n */\n\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\n{\n    // Simple generate 256 bit random seed\n    var k = new Uint8Array(this.keySize);\n    randomSeed(k);\n    return k.buffer;\n} // </editor-fold>\n\n\n/**\n * makeIMIT (K, D) is the 32-bit result of the GOST 28147/GOST R 34.13 in\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\n * as initialization vector.  Note that the standard specifies its use\n * in this mode only with an initialization vector of zero.\n *\n * @memberOf GostCipher\n * @method processMAC\n * @private\n * @instance\n * @param {Int32Array} key 8x32 bits key\n * @param {Int32Array} s 8x8 sum array\n * @param {Uint8Array} d 8 bits array with data\n * @return {Uint8Array} result\n */\nfunction processMAC89(key, s, d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var c = zeroPad.call(this, byteArray(d)),\n      n = this.blockSize,\n      q = c.length / n,\n      sBox = this.sBox,\n      sum = new Int32Array(s.buffer);\n\n    for (var i = 0; i < q; i++) {\n\n        for (var j = 0; j < n; j++)\n            s[j] ^= c[i * n + j];\n\n        for (var j = 0; j < 16; j++) // 1-16 steps\n            round(sBox, sum, key[j]);\n    }\n} // </editor-fold>\n\nfunction processKeyMAC15(s) // <editor-fold defaultstate=\"collapsed\">\n{\n    var t = 0, n = s.length;\n    for (var i = n - 1; i >= 0; --i) {\n        var t1 = s[i] >>> 7;\n        s[i] = (s[i] << 1) & 0xff | t;\n        t = t1;\n    }\n    if (t !== 0) {\n        if (n === 16)\n            s[15] ^= 0x87;\n        else\n            s[7] ^= 0x1b;\n    }\n} // </editor-fold>\n\nfunction processMAC15(key, s, d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize,\n      sBox = this.sBox, c = byteArray(d),\n      r = new Uint8Array(n);\n    // R\n    this.process(key, r);\n    // K1\n    processKeyMAC15(r);\n    if (d.byteLength % n !== 0) {\n        c = bitPad.call(this, byteArray(d));\n        // K2\n        processKeyMAC15(r);\n    }\n\n    for (var i = 0, q = c.length / n; i < q; i++) {\n\n        for (var j = 0; j < n; j++)\n            s[j] ^= c[i * n + j];\n\n        if (i === q - 1) {// Last block\n            for (var j = 0; j < n; j++)\n                s[j] ^= r[j];\n        }\n\n        this.process(key, s);\n    }\n} // </editor-fold>\n\n/**\n * signMAC (K, D, IV) is the 32-bit result of the GOST 28147/GOST R 34.13 in\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\n * as initialization vector.  Note that the standard specifies its use\n * in this mode only with an initialization vector of zero.\n *\n * @memberOf GostCipher\n * @method sign\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv initial vector\n * @return {CryptoOperationData} result\n */\nfunction signMAC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var key = this.keySchedule(k),\n      s = new Uint8Array(iv || this.iv),\n      m = Math.ceil(this.macLength >> 3) || this.blockSize >> 1;\n\n    this.processMAC(key, s, d);\n\n    var mac = new Uint8Array(m); // mac size\n    mac.set(new Uint8Array(s.buffer, 0, m));\n    return mac.buffer;\n} // </editor-fold>\n\n/**\n * verifyMAC (K, M, D, IV) the 32-bit result verification of the GOST 28147/GOST R 34.13 in\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\n * as initialization vector.  Note that the standard specifies its use\n * in this mode only with an initialization vector of zero.\n *\n * @memberOf GostCipher\n * @method verify\n * @instance\n * @param {CryptoOperationData} k 8x32 bits key\n * @param {CryptoOperationData} m 8 bits array with signature\n * @param {CryptoOperationData} d 8 bits array with data\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\n * @return {boolen} MAC verified = true\n */\nfunction verifyMAC(k, m, d, iv) // <editor-fold defaultstate=\"collapsed\">\n{\n    var mac = new Uint8Array(signMAC.call(this, k, d, iv)),\n      test = byteArray(m);\n    if (mac.length !== test.length)\n        return false;\n    for (var i = 0, n = mac.length; i < n; i++)\n        if (mac[i] !== test[i])\n            return false;\n    return true;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-KW<br><br>\n *\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147/GOST R 34.13 KEK.\n * Ref. rfc4357 6.1 GOST 28147-89 Key Wrap\n * Note: This algorithm MUST NOT be used with a KEK produced by VKO GOST\n * R 34.10-94, because such a KEK is constant for every sender-recipient\n * pair.  Encrypting many different content encryption keys on the same\n * constant KEK may reveal that KEK.\n *\n * @memberOf GostCipher\n * @method wrapKey\n * @instance\n * @param {CryptoOperationData} kek Key encryption key\n * @param {CryptoOperationData} cek Content encryption key\n * @returns {CryptoOperationData} Encrypted cek\n */\nfunction wrapKeyGOST(kek, cek) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n    // 1) For a unique symmetric KEK, generate 8 octets at random and call\n    // the result UKM.  For a KEK, produced by VKO GOST R 34.10-2001, use\n    // the UKM that was used for key derivation.\n    if (!this.ukm)\n        throw new DataError('UKM must be defined');\n    var ukm = new Uint8Array(this.ukm);\n    // 2) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK).\n    // Call the result CEK_MAC.\n    var mac = signMAC.call(this, kek, cek, ukm);\n    // 3) Encrypt the CEK in ECB mode using the KEK.  Call the ciphertext CEK_ENC.\n    var enc = encryptECB.call(this, kek, cek);\n    // 4) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n    var r = new Uint8Array(len);\n    r.set(new Uint8Array(enc), 0);\n    r.set(new Uint8Array(mac), k);\n    return r.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-KW<br><br>\n *\n *  This algorithm decrypts GOST 28147-89 CEK with a GOST 28147 KEK.\n *  Ref. rfc4357 6.2 GOST 28147-89 Key Unwrap\n *\n * @memberOf GostCipher\n * @method unwrapKey\n * @instance\n * @param {type} kek Key encryption key\n * @param {type} data Content encryption key\n * @return {CryptoOperationData} result\n */\nfunction unwrapKeyGOST(kek, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\n    var d = buffer(data);\n    if (d.byteLength !== len)\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC, and CEK_MAC.\n    // UKM is the most significant (first) 8 octets. CEK_ENC is next 32 octets,\n    // and CEK_MAC is the least significant (last) 4 octets.\n    if (!this.ukm)\n        throw new DataError('UKM must be defined');\n    var ukm = new Uint8Array(this.ukm),\n      enc = new Uint8Array(d, 0, k),\n      mac = new Uint8Array(d, k, n >> 1);\n    // 3) Decrypt CEK_ENC in ECB mode using the KEK.  Call the output CEK.\n    var cek = decryptECB.call(this, kek, enc);\n    // 4) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK),\n    // compare the result with CEK_MAC.  If they are not equal, then error.\n    var check = verifyMAC.call(this, kek, mac, cek, ukm);\n    if (!check)\n        throw new DataError('Error verify MAC of wrapping key');\n    return cek;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CPKW<br><br>\n *\n * Given a random 64-bit UKM and a GOST 28147 key K, this algorithm\n * creates a new GOST 28147-89 key K(UKM).\n * Ref. rfc4357 6.3 CryptoPro KEK Diversification Algorithm\n *\n * @memberOf GostCipher\n * @method diversify\n * @instance\n * @private\n * @param {CryptoOperationData} kek Key encryption key\n * @param {CryptoOperationData} ukm Random generated value\n * @returns {CryptoOperationData} Diversified kek\n */\nfunction diversifyKEK(kek, ukm) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize;\n\n    // 1) Let K[0] = K;\n    var k = intArray(kek);\n    // 2) UKM is split into components a[i,j]:\n    //    UKM = a[0]|..|a[7] (a[i] - byte, a[i,0]..a[i,7] - it’s bits)\n    var a = [];\n    for (var i = 0; i < n; i++) {\n        a[i] = [];\n        for (var j = 0; j < 8; j++) {\n            a[i][j] = (ukm[i] >>> j) & 0x1;\n        }\n    }\n    // 3) Let i be 0.\n    // 4) K[1]..K[8] are calculated by repeating the following algorithm\n    //    eight times:\n    for (var i = 0; i < n; i++) {\n        //     A) K[i] is split into components k[i,j]:\n        //        K[i] = k[i,0]|k[i,1]|..|k[i,7] (k[i,j] - 32-bit integer)\n        //     B) Vector S[i] is calculated:\n        //        S[i] = ((a[i,0]*k[i,0] + ... + a[i,7]*k[i,7]) mod 2^32) |\n        //         (((~a[i,0])*k[i,0] + ... + (~a[i,7])*k[i,7]) mod 2^32);\n        var s = new Int32Array(2);\n        for (var j = 0; j < 8; j++) {\n            if (a[i][j])\n                s[0] = (s[0] + k[j]) & 0xffffffff;\n            else\n                s[1] = (s[1] + k[j]) & 0xffffffff;\n        }\n        //     C) K[i+1] = encryptCFB (S[i], K[i], K[i])\n        var iv = new Uint8Array(s.buffer);\n        k = new Int32Array(encryptCFB.call(this, k, k, iv));\n        //     D) i = i + 1\n    }\n    // 5) Let K(UKM) be K[8].\n    return k;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CPKW<br><br>\n *\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\n * It can be used with any KEK (e.g., produced by VKO GOST R 34.10-94 or\n * VKO GOST R 34.10-2001) because a unique UKM is used to diversify the KEK.\n * Ref. rfc4357 6.3  CryptoPro Key Wrap\n *\n * @memberOf GostCipher\n * @method wrapKey\n * @instance\n * @param {CryptoOperationData} kek Key encryption key\n * @param {CryptoOperationData} cek Content encryption key\n * @returns {CryptoOperationData} Encrypted cek\n */\nfunction wrapKeyCP(kek, cek) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n    // 1) For a unique symmetric KEK or a KEK produced by VKO GOST R\n    // 34.10-94, generate 8 octets at random.  Call the result UKM.  For\n    // a KEK, produced by VKO GOST R 34.10-2001, use the UKM that was\n    // used for key derivation.\n    if (!this.ukm)\n        throw new DataError('UKM must be defined');\n    var ukm = new Uint8Array(this.ukm);\n    // 2) Diversify KEK, using the CryptoPro KEK Diversification Algorithm,\n    // described in Section 6.5.  Call the result KEK(UKM).\n    var dek = diversifyKEK.call(this, kek, ukm);\n    // 3) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\n    // CEK).  Call the result CEK_MAC.\n    var mac = signMAC.call(this, dek, cek, ukm);\n    // 4) Encrypt CEK in ECB mode using KEK(UKM).  Call the ciphertext\n    // CEK_ENC.\n    var enc = encryptECB.call(this, dek, cek);\n    // 5) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\n    var r = new Uint8Array(len);\n    r.set(new Uint8Array(enc), 0);\n    r.set(new Uint8Array(mac), k);\n    return r.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CPKW<br><br>\n *\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\n * Ref. rfc4357 6.4 CryptoPro Key Unwrap\n *\n * @memberOf GostCipher\n * @method unwrapKey\n * @instance\n * @param {CryptoOperationData} kek Key encryption key\n * @param {CryptoOperationData} data Encrypted content encryption keu\n * @return {CryptoOperationData} result Decrypted content encryption keu\n */\nfunction unwrapKeyCP(kek, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\n    var d = buffer(data);\n    if (d.byteLength !== len)\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,\n    // and CEK_MAC.  UKM is the most significant (first) 8 octets.\n    // CEK_ENC is next 32 octets, and CEK_MAC is the least significant\n    // (last) 4 octets.\n    if (!this.ukm)\n        throw new DataError('UKM must be defined');\n    var ukm = new Uint8Array(this.ukm),\n      enc = new Uint8Array(d, 0, k),\n      mac = new Uint8Array(d, k, n >> 1);\n    // 3) Diversify KEK using the CryptoPro KEK Diversification Algorithm,\n    // described in section 6.5.  Call the result KEK(UKM).\n    var dek = diversifyKEK.call(this, kek, ukm);\n    // 4) Decrypt CEK_ENC in ECB mode using KEK(UKM).  Call the output CEK.\n    var cek = decryptECB.call(this, dek, enc);\n    // 5) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\n    // CEK), compare the result with CEK_MAC.  If they are not equal,\n    // then it is an error.\n    var check = verifyMAC.call(this, dek, mac, cek, ukm);\n    if (!check)\n        throw new DataError('Error verify MAC of wrapping key');\n    return cek;\n} // </editor-fold>\n\n/**\n * SignalCom master key packing algorithm\n *\n * kek stored in 3 files - kek.opq, mk.db3, masks.db3\n * kek.opq - always 36 bytes length = 32 bytes encrypted kek + 4 bytes mac of decrypted kek\n * mk.db3 - 6 bytes header (1 byte magic code 0x22 + 1 byte count of masks + 4 bytes mac of\n * xor summarizing masks value) + attached masks\n * masks.db3 - detached masks.\n * Total length  of attached + detached masks = 32 bits * count of masks\n * Default value of count 8 = (7 attached + 1 detached). But really no reason for such\n * separation - all masks xor summarizing - order is not matter.\n * Content of file rand.opq can used as ukm. Don't forget change file content after using.\n *\n * For usb-token files has names:\n * a001 - mk.db3, b001 - masks.db3, c001 - kek.opq, d001 - rand.opq\n * For windows registry\n * 00000001 - mk.db3, 00000002 - masks.db3, 00000003 - key.opq, 00000004 - rand.opq,\n * 00000006 - keys\\00000001.key, 0000000A - certificate\n *\n * @memberOf GostCipher\n * @method packKey\n * @instance\n * @private\n * @param {CryptoOperationData} unpacked - clear main key 32 bytes\n * @param {CryptoOperationData} ukm - random vector for packing - 32 bytes * (count of masks - 1)\n * @returns {CryptoOperationData} packed master key - concatination of mk.db3 + masks.db3\n */\nfunction packKeySC(unpacked, ukm) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = this.blockSize >> 1, k = this.keySize;\n    var mcount = 8;\n    var key = new Uint8Array(buffer(unpacked));\n    if (key.byteLength !== k)\n        throw new DataError('Wrong cleartext size ' + key.byteLength + ' bytes');\n    // Check or generate UKM\n    ukm = ukm || this.ukm;\n    if (ukm) {\n        ukm = new Uint8Array(buffer(ukm));\n        if (ukm.byteLength > 0 && ukm.byteLength % k === 0)\n            mcount = ukm.byteLength / k + 1;\n        else\n            throw new DataError('Wrong rand size ' + ukm.byteLength + ' bytes');\n    } else\n        randomSeed(ukm = new Uint8Array((mcount - 1) * k));\n    // Output array\n    var d = new Uint8Array(mcount * k + m + 2), b = d.buffer;\n    // Calculate MAC\n    var zero32 = new Uint8Array(k);\n    var mac = signMAC.call(this, key, zero32);\n    d[0] = 0x22; // Magic code\n    d[1] = mcount; // Count of masks\n    d.set(new Uint8Array(mac), 2);\n    d.set(ukm, k + m + 2);\n    for (var i = 1; i < mcount; i++) {\n        var mask = new Uint8Array(b, 2 + m + k * i);\n        for (var j = 0; j < k; j++)\n            key[j] ^= mask[j];\n    }\n    d.set(key, m + 2);\n    return d.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-SCKW<br><br>\n *\n * SignalCom master key unpacking algorithm\n *\n * @memberOf GostCipher\n * @method unpackKey\n * @instance\n * @private\n * @param {CryptoOperationData} packed - concatination of mk.db3 + masks.db3\n * @returns {CryptoOperationData} unpacked master key\n */\nfunction unpackKeySC(packed) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = this.blockSize >> 1, k = this.keySize;\n    var b = buffer(packed);\n    // Unpack master key\n    var magic = new Uint8Array(b, 0, 1)[0];\n    if (magic !== 0x22)\n        throw new DataError('Invalid magic number');\n    var mcount = new Uint8Array(b, 1, 1)[0];\n    var mac = new Uint8Array(b, 2, m); // MAC for summarized mask\n    // Compute packKey xor summing for all masks\n    var key = new Uint8Array(k);\n    for (var i = 0; i < mcount; i++) {\n        var mask = new Uint8Array(b, 2 + m + k * i, k);\n        for (var j = 0; j < k; j++)\n            key[j] ^= mask[j];\n    }\n    // Test MAC for packKey with default sBox on zero 32 bytes array\n    var zero32 = new Uint8Array(k);\n    var test = verifyMAC.call(this, key, mac, zero32);\n    if (!test) {\n        // Try to use different sBoxes\n        var names = ['E-A', 'E-B', 'E-C', 'E-D', 'E-SC'];\n        for (var i = 0, n = names.length; i < n; i++) {\n            this.sBox = sBoxes[names[i]];\n            test = verifyMAC.call(this, key, mac, zero32);\n            if (test)\n                break;\n        }\n    }\n    if (!test)\n        throw new DataError('Invalid main key MAC');\n    return key.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-SCKW<br><br>\n *\n * SignalCom Key Wrapping algorithm\n *\n * @memberOf GostCipher\n * @method wrapKey\n * @instance\n * @param {CryptoOperationData} kek - clear kek or concatination of mk.db3 + masks.db3\n * @param {CryptoOperationData} cek - key for wrapping\n * @returns {CryptoOperationData} wrapped key - file kek.opq\n */\nfunction wrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = this.blockSize >> 1, n = this.keySize;\n    var k = buffer(kek);\n    var c = buffer(cek);\n    if (k.byteLength !== n)\n        k = unpackKeySC.call(this, k);\n    var enc = encryptECB.call(this, k, c);\n    var mac = signMAC.call(this, k, c);\n    var d = new Uint8Array(m + n);\n    d.set(new Uint8Array(enc), 0);\n    d.set(new Uint8Array(mac), n);\n    return d.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-SCKW<br><br>\n *\n * SignalCom Key UnWrapping algorithm\n *\n * @memberOf GostCipher\n * @method unwrapKey\n * @instance\n * @param {CryptoOperationData} kek - concatination of files mk.db3 + masks.db3 or clear kek\n * @param {CryptoOperationData} cek - wrapping key - file kek.opq\n * @return {CryptoOperationData} result\n */\nfunction unwrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = this.blockSize >> 1, n = this.keySize;\n    var k = buffer(kek);\n    var c = buffer(cek);\n    if (k.byteLength !== n)\n        k = unpackKeySC.call(this, k);\n    var enc = new Uint8Array(c, 0, n); // Encrypted kek\n    var mac = new Uint8Array(c, n, m); // MAC for clear kek\n    var d = decryptECB.call(this, k, enc);\n    if (!verifyMAC.call(this, k, mac, d))\n        throw new DataError('Invalid key MAC');\n    return d;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-SCKW<br><br>\n *\n * SignalCom master key generation for wrapping\n *\n * @memberOf GostCipher\n * @method generateKey\n * @instance\n * @return {CryptoOperationData} result\n */\nfunction generateWrappingKeySC() // <editor-fold defaultstate=\"collapsed\">\n{\n    return packKeySC.call(this, generateKey.call(this));\n} // </editor-fold>\n\nfunction maskKey(mask, key, inverse, keySize) // <editor-fold defaultstate=\"collapsed\">\n{\n    var k = keySize / 4,\n      m32 = new Int32Array(buffer(mask)),\n      k32 = new Int32Array(buffer(key)),\n      r32 = new Int32Array(k);\n    if (inverse)\n        for (var i = 0; i < k; i++)\n            r32[i] = (k32[i] + m32[i]) & 0xffffffff;\n    else\n        for (var i = 0; i < k; i++)\n            r32[i] = (k32[i] - m32[i]) & 0xffffffff;\n    return r32.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-MASK<br><br>\n *\n * This algorithm wrap key mask\n *\n * @memberOf GostCipher\n * @method wrapKey\n * @instance\n * @param {CryptoOperationData} mask The mask\n * @param {CryptoOperationData} key The key\n * @returns {CryptoOperationData} The masked key\n */\nfunction wrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\n{\n    return maskKey(mask, key, this.procreator === 'VN', this.keySize);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CPKW<br><br>\n *\n * This algorithm unwrap key mask\n *\n * @memberOf GostCipher\n * @method unwrapKey\n * @instance\n * @param {CryptoOperationData} mask The mask\n * @param {CryptoOperationData} key The masked key\n * @return {CryptoOperationData} result The key\n */\nfunction unwrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\n{\n    return maskKey(mask, key, this.procreator !== 'VN', this.keySize);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-CPKM<br><br>\n *\n * Key meshing in according to rfc4357 2.3.2. CryptoPro Key Meshing\n *\n * @memberOf GostCipher\n * @method keyMeshing\n * @instance\n * @private\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\n * @param {Uint8Array} s 8x8 bit sync (iv)\n * @param {Integer} i block index\n * @param {Int32Array} key 8x32 bit key schedule\n * @param {boolean} e true - decrypt\n * @returns CryptoOperationData next 8x8 bit key\n */\nfunction keyMeshingCP(k, s, i, key, e) // <editor-fold defaultstate=\"collapsed\">\n{\n    if ((i + 1) * this.blockSize % 1024 === 0) { // every 1024 octets\n        // K[i+1] = decryptECB (K[i], C);\n        k = decryptECB.call(this, k, C);\n        // IV0[i+1] = encryptECB (K[i+1],IVn[i])\n        s.set(new Uint8Array(encryptECB.call(this, k, s)));\n        // restore key schedule\n        key.set(this.keySchedule(k, e));\n    }\n    return k;\n} // </editor-fold>\n\n/**\n *  Null Key Meshing in according to rfc4357 2.3.1\n *\n * @memberOf GostCipher\n * @method keyMeshing\n * @instance\n * @private\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\n */\nfunction noKeyMeshing(k) // <editor-fold defaultstate=\"collapsed\">\n{\n    return k;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-NoPadding<br><br>\n *\n * No padding.\n *\n * @memberOf GostCipher\n * @method padding\n * @instance\n * @private\n * @param {Uint8Array} d array with source data\n * @returns {Uint8Array} result\n */\nfunction noPad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    return new Uint8Array(d);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-PKCS5Padding<br><br>\n *\n *  PKCS#5 padding: 8-x remaining bytes are filled with the value of\n *  8-x.  If there’s no incomplete block, one extra block filled with\n *  value 8 is added\n *\n * @memberOf GostCipher\n * @method padding\n * @instance\n * @private\n * @param {Uint8Array} d array with source data\n * @returns {Uint8Array} result\n */\nfunction pkcs5Pad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = d.byteLength,\n      nb = this.blockSize,\n      q = nb - n % nb,\n      m = Math.ceil((n + 1) / nb) * nb,\n      r = new Uint8Array(m);\n    r.set(d);\n    for (var i = n; i < m; i++)\n        r[i] = q;\n    return r;\n} // </editor-fold>\n\nfunction pkcs5Unpad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = d.byteLength,\n      nb = this.blockSize,\n      q = d[m - 1],\n      n = m - q;\n    if (q > nb)\n        throw DataError('Invalid padding');\n    var r = new Uint8Array(n);\n    if (n > 0)\n        r.set(new Uint8Array(d.buffer, 0, n));\n    return r;\n} // </editor-fold>\n\n\n/**\n * Algorithm name GOST 28147-ZeroPadding<br><br>\n *\n * Zero padding: 8-x remaining bytes are filled with zero\n *\n * @memberOf GostCipher\n * @method padding\n * @instance\n * @private\n * @param {Uint8Array} d array with source data\n * @returns {Uint8Array} result\n */\nfunction zeroPad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = d.byteLength,\n      nb = this.blockSize,\n      m = Math.ceil(n / nb) * nb,\n      r = new Uint8Array(m);\n    r.set(d);\n    for (var i = n; i < m; i++)\n        r[i] = 0;\n    return r;\n} // </editor-fold>\n\n\n/**\n * Algorithm name GOST 28147-BitPadding<br><br>\n *\n * Bit padding: P* = P || 1 || 000...0 If there’s no incomplete block,\n * one extra block filled with 1 || 000...0\n *\n * @memberOf GostCipher\n * @method padding\n * @instance\n * @private\n * @param {Uint8Array} d array with source data\n * @returns {Uint8Array} result\n */\nfunction bitPad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = d.byteLength,\n      nb = this.blockSize,\n      m = Math.ceil((n + 1) / nb) * nb,\n      r = new Uint8Array(m);\n    r.set(d);\n    r[n] = 1;\n    for (var i = n + 1; i < m; i++)\n        r[i] = 0;\n    return r;\n} // </editor-fold>\n\nfunction bitUnpad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var m = d.byteLength,\n      n = m;\n    while (n > 1 && d[n - 1] === 0)\n        n--;\n    if (d[n - 1] !== 1)\n        throw DataError('Invalid padding');\n    n--;\n    var r = new Uint8Array(n);\n    if (n > 0)\n        r.set(new Uint8Array(d.buffer, 0, n));\n    return r;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST 28147-RandomPadding<br><br>\n *\n * Random padding: 8-x remaining bytes of the last block are set to\n * random.\n *\n * @memberOf GostCipher\n * @method padding\n * @instance\n * @private\n * @param {Uint8Array} d array with source data\n * @returns {Uint8Array} result\n */\nfunction randomPad(d) // <editor-fold defaultstate=\"collapsed\">\n{\n    var n = d.byteLength,\n      nb = this.blockSize,\n      q = nb - n % nb,\n      m = Math.ceil(n / nb) * nb,\n      r = new Uint8Array(m), e = new Uint8Array(r.buffer, n, q);\n    r.set(d);\n    randomSeed(e);\n    return r;\n} // </editor-fold>\n\n/**\n * GOST 28147-89 Encryption Algorithm<br><br>\n *\n * References {@link http://tools.ietf.org/html/rfc5830}<br><br>\n *\n * When keys and initialization vectors are converted to/from byte arrays,\n * little-endian byte order is assumed.<br><br>\n *\n * Normalized algorithm identifier common parameters:\n *\n *  <ul>\n *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\n *      <li><b>version</b> Algorithm version, number\n *          <ul>\n *              <li><b>1989</b> Current version of standard</li>\n *              <li><b>2015</b> New draft version of standard</li>\n *          </ul>\n *      </li>\n *      <li><b>length</b> Block length\n *          <ul>\n *              <li><b>64</b> 64 bits length (default)</li>\n *              <li><b>128</b> 128 bits length (only for version 2015)</li>\n *          </ul>\n *      </li>\n *      <li><b>mode</b> Algorithm mode, string\n *          <ul>\n *              <li><b>ES</b> Encryption mode (default)</li>\n *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\n *              <li><b>KW</b> Key wrapping mode</li>\n *          </ul>\n *      </li>\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\n *  </ul>\n *\n * Supported algorithms, modes and parameters:\n *\n *  <ul>\n *      <li>Encript/Decrypt mode (ES)\n *          <ul>\n *              <li><b>block</b> Block mode, string. Default ECB</li>\n *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\n *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n *          </ul>\n *      </li>\n *      <li>Sign/Verify mode (MAC)\n *          <ul>\n *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n *          </ul>\n *      </li>\n *      <li>Wrap/Unwrap key mode (KW)\n *          <ul>\n *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\n *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\n *          </ul>\n *      </li>\n *  </ul>\n *\n * Supported paramters values:\n *\n *  <ul>\n *      <li>Block modes (parameter 'block')\n *          <ul>\n *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\n *              <li><b>OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\n *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\n *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n *          </ul>\n *      </li>\n *      <li>Key meshing modes (parameter 'keyMeshing')\n *          <ul>\n *              <li><b>NO</b> No key wrapping (default)</li>\n *              <li><b>CP</b> CryptoPor Key key meshing</li>\n *          </ul>\n *      </li>\n *      <li>Padding modes (parameter 'padding')\n *          <ul>\n *              <li><b>NO</b> No padding only for CFB, OFB and CTR modes</li>\n *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\n *              <li><b>ZERO</b> Zero bits padding mode</li>\n *              <li><b>RANDOM</b> Random bits padding mode</li>\n *              <li><b>BIT</b> One bit padding mode</li>\n *          </ul>\n *      </li>\n *      <li>Wrapping key modes (parameter 'keyWrapping')\n *          <ul>\n *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\n *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\n *              <li><b>SC</b> SignalCom Key wrapping mode</li>\n *          </ul>\n *      </li>\n *  </ul>\n *\n * @class GostCipher\n * @param {AlgorithmIndentifier} algorithm WebCryptoAPI algorithm identifier\n */\nexport function GostCipher(algorithm) // <editor-fold defaultstate=\"collapsed\">\n{\n    // Check little endian support\n    if (!littleEndian)\n        throw new NotSupportedError('Big endian platform not supported');\n    algorithm = algorithm || {};\n    this.keySize = 32;\n    this.blockLength = algorithm.length || 64;\n    this.blockSize = this.blockLength >> 3;\n\n    this.name = (algorithm.name || (algorithm.version === 1 ? 'RC2' :\n      algorithm.version === 1989 ? 'GOST 28147' : 'GOST R 34.12')) +\n      (algorithm.version > 4 ? '-' + ((algorithm.version || 1989) % 100) : '') + '-' +\n      (this.blockLength === 64 ? '' : this.blockLength + '-') +\n      ((algorithm.mode === 'MAC') ? 'MAC-' + (algorithm.macLength || this.blockLength >> 1) :\n        (algorithm.mode === 'KW' || algorithm.keyWrapping) ?\n          ((algorithm.keyWrapping || 'NO') !== 'NO' ? algorithm.keyWrapping : '') + 'KW' :\n          (algorithm.block || 'ECB') + ((algorithm.block === 'CFB' || algorithm.block === 'OFB' ||\n          (algorithm.block === 'CTR' && algorithm.version === 2015)) &&\n          algorithm.shiftBits && algorithm.shiftBits !== this.blockLength ? '-' + algorithm.shiftBits : '') +\n          (algorithm.padding ? '-' + (algorithm.padding || (algorithm.block === 'CTR' ||\n          algorithm.block === 'CFB' || algorithm.block === 'OFB' ? 'NO' : 'ZERO')) + 'PADDING' : '') +\n          ((algorithm.keyMeshing || 'NO') !== 'NO' ? '-CPKEYMESHING' : '')) +\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n    // Algorithm procreator\n    this.procreator = algorithm.procreator;\n\n    switch (algorithm.version || 1989) {\n        case 1:\n            this.process = processRC2;\n            this.keySchedule = keyScheduleRC2;\n            this.blockLength = 64;\n            this.effectiveLength = algorithm.length || 32;\n            this.keySize = 8 * Math.ceil(this.effectiveLength / 8); // Max 128\n            this.blockSize = this.blockLength >> 3;\n            break;\n        case 2015:\n            this.version = 2015;\n            if (this.blockLength === 64) {\n                this.process = process15;\n                this.keySchedule = keySchedule15;\n            } else if (this.blockLength === 128) {\n                this.process = process128;\n                this.keySchedule = keySchedule128;\n            } else\n                throw new DataError('Invalid block length');\n            this.processMAC = processMAC15;\n            break;\n        case 1989:\n            this.version = 1989;\n            this.process = process89;\n            this.processMAC = processMAC89;\n            this.keySchedule = keySchedule89;\n            if (this.blockLength !== 64)\n                throw new DataError('Invalid block length');\n            break;\n        default:\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\n    }\n\n    switch (algorithm.mode || (algorithm.keyWrapping && 'KW') || 'ES') {\n\n        case 'ES':\n            switch (algorithm.block || 'ECB') {\n                case 'ECB':\n                    this.encrypt = encryptECB;\n                    this.decrypt = decryptECB;\n                    break;\n                case 'CTR':\n                    if (this.version === 1989) {\n                        this.encrypt = processCTR89;\n                        this.decrypt = processCTR89;\n                    } else {\n                        this.encrypt = processCTR15;\n                        this.decrypt = processCTR15;\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\n                    }\n                    break;\n                case 'CBC':\n                    this.encrypt = encryptCBC;\n                    this.decrypt = decryptCBC;\n                    break;\n                case 'CFB':\n                    this.encrypt = encryptCFB;\n                    this.decrypt = decryptCFB;\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\n                    break;\n                case 'OFB':\n                    this.encrypt = processOFB;\n                    this.decrypt = processOFB;\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\n                    break;\n                default:\n                    throw new NotSupportedError('Block mode ' + algorithm.block + ' not supported');\n            }\n            switch (algorithm.keyMeshing) {\n                case 'CP':\n                    this.keyMeshing = keyMeshingCP;\n                    break;\n                default:\n                    this.keyMeshing = noKeyMeshing;\n            }\n            if (this.encrypt === encryptECB || this.encrypt === encryptCBC) {\n                switch (algorithm.padding) {\n                    case 'PKCS5P':\n                        this.pad = pkcs5Pad;\n                        this.unpad = pkcs5Unpad;\n                        break;\n                    case 'RANDOM':\n                        this.pad = randomPad;\n                        this.unpad = noPad;\n                        break;\n                    case 'BIT':\n                        this.pad = bitPad;\n                        this.unpad = bitUnpad;\n                        break;\n                    default:\n                        this.pad = zeroPad;\n                        this.unpad = noPad;\n                }\n            } else {\n                this.pad = noPad;\n                this.unpad = noPad;\n            }\n            this.generateKey = generateKey;\n            break;\n        case 'MAC':\n            this.sign = signMAC;\n            this.verify = verifyMAC;\n            this.generateKey = generateKey;\n            this.macLength = algorithm.macLength || (this.blockLength >> 1);\n            this.pad = noPad;\n            this.unpad = noPad;\n            this.keyMeshing = noKeyMeshing;\n            break;\n        case 'KW':\n            this.pad = noPad;\n            this.unpad = noPad;\n            this.keyMeshing = noKeyMeshing;\n            switch (algorithm.keyWrapping) {\n                case 'CP':\n                    this.wrapKey = wrapKeyCP;\n                    this.unwrapKey = unwrapKeyCP;\n                    this.generateKey = generateKey;\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\n                    break;\n                case 'SC':\n                    this.wrapKey = wrapKeySC;\n                    this.unwrapKey = unwrapKeySC;\n                    this.generateKey = generateWrappingKeySC;\n                    break;\n                default:\n                    this.wrapKey = wrapKeyGOST;\n                    this.unwrapKey = unwrapKeyGOST;\n                    this.generateKey = generateKey;\n            }\n            break;\n        case 'MASK':\n            this.wrapKey = wrapKeyMask;\n            this.unwrapKey = unwrapKeyMask;\n            this.generateKey = generateKey;\n            break;\n        default:\n            throw new NotSupportedError('Mode ' + algorithm.mode + ' not supported');\n    }\n\n    // Define sBox parameter\n    var sBox = algorithm.sBox, sBoxName;\n    if (!sBox)\n        sBox = this.version === 2015 ? sBoxes['E-Z'] : this.procreator === 'SC' ? sBoxes['E-SC'] : sBoxes['E-A'];\n    else if (typeof sBox === 'string') {\n        sBoxName = sBox.toUpperCase();\n        sBox = sBoxes[sBoxName];\n        if (!sBox)\n            throw new SyntaxError('Unknown sBox name: ' + algorithm.sBox);\n    } else if (!sBox.length || sBox.length !== sBoxes['E-Z'].length)\n        throw new SyntaxError('Length of sBox must be ' + sBoxes['E-Z'].length);\n    this.sBox = sBox;\n    // Initial vector\n    if (algorithm.iv) {\n        this.iv = new Uint8Array(algorithm.iv);\n        if (this.iv.byteLength !== this.blockSize && this.version === 1989)\n            throw new SyntaxError('Length of iv must be ' + this.blockLength + ' bits');\n        else if (this.iv.byteLength !== this.blockSize >> 1 && this.encrypt === processCTR15)\n            throw new SyntaxError('Length of iv must be ' + this.blockLength >> 1 + ' bits');\n        else if (this.iv.byteLength % this.blockSize !== 0 && this.encrypt !== processCTR15)\n            throw new SyntaxError('Length of iv must be a multiple of ' + this.blockLength + ' bits');\n    } else\n        this.iv = this.blockLength === 128 ? defaultIV128 : defaultIV;\n    // User key material\n    if (algorithm.ukm) {\n        this.ukm = new Uint8Array(algorithm.ukm);\n        if (this.ukm.byteLength * 8 !== this.blockLength)\n            throw new SyntaxError('Length of ukm must be ' + this.blockLength + ' bits');\n    }\n} // </editor-fold>\n","/**\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { GostCipher } from './gostCipher';\nimport { GostDigest } from './gostDigest';\nimport { GostSign } from './gostSign';\nimport { NotSupportedError } from '../utils/errors';\n\n/*\n * Engine definition base on normalized algorithm identifier\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Define engine\nfunction defineEngine(method, algorithm) {\n    if (!algorithm)\n        throw new (SyntaxError || Error)('Algorithm not defined');\n\n    if (!algorithm.name)\n        throw new (SyntaxError || Error)('Algorithm name not defined');\n\n    var name = algorithm.name, mode = algorithm.mode;\n    if ((name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2') && (method === 'generateKey' ||\n      (mode === 'MAC' && (method === 'sign' || method === 'verify')) ||\n      ((mode === 'KW' || mode === 'MASK') && (method === 'wrapKey' || method === 'unwrapKey')) ||\n      ((!mode || mode === 'ES') && (method === 'encrypt' || method === 'decrypt')))) {\n        return 'GostCipher';\n\n    } else if ((name === 'GOST R 34.11' || name === 'SHA') && (method === 'digest' ||\n      (mode === 'HMAC' && (method === 'sign' || method === 'verify' || method === 'generateKey')) ||\n      ((mode === 'KDF' || mode === 'PBKDF2' || mode === 'PFXKDF' || mode === 'CPKDF') &&\n        (method === 'deriveKey' || method === 'deriveBits' || method === 'generateKey')))) {\n        return 'GostDigest';\n\n    } else if (name === 'GOST R 34.10' && (method === 'generateKey' ||\n      ((!mode || mode === 'SIGN') && (method === 'sign' || method === 'verify')) ||\n      (mode === 'MASK' && (method === 'wrapKey' || method === 'unwrapKey')) ||\n      (mode === 'DH' && (method === 'deriveKey' || method === 'deriveBits')))) {\n        return 'GostSign';\n    } else\n        throw new NotSupportedError('Algorithm ' + name + '-' + mode + ' is not valid for ' + method);\n} // </editor-fold>\n\n/**\n * Object enables usage GOST cryptographic algorithms in the main JS thread.\n *\n * Object provide interface to GOST low-level cryptogric classes:\n *  <ul>\n *      <li>GostCipher - implementation of GOST 28147, GOST R 34.12, GOST R 34.13 Encryption algorithms. Reference {@link http://tools.ietf.org/html/rfc5830}</li>\n *      <li>GostDigest - implementation of GOST R 34.11 Hash Function algorithms. References {@link http://tools.ietf.org/html/rfc5831} and {@link http://tools.ietf.org/html/rfc6986}</li>\n *      <li>GostSign - implementation of GOST R 34.10 Digital Signature algorithms. References {@link http://tools.ietf.org/html/rfc5832} and {@link http://tools.ietf.org/html/rfc7091}</li>\n *  </ul>\n * @namespace gostEngine\n */\nconst gostEngine = {\n    /**\n     * gostEngine.execute(algorithm, method, args) Entry point to execution\n     * all low-level GOST cryptographic methods\n     *\n     *  <ul>\n     *      <li>Determine the appropriate engine for a given execution method</li>\n     *      <li>Create cipher object for determineted engine</li>\n     *      <li>Execute method of cipher with given args</li>\n     *  </ul>\n     *\n     * @memberOf gostEngine\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n     * @param {string} method Crypto method for execution\n     * @param {Array} args Method arguments (keys, data, additional parameters)\n     * @returns {(CryptoOperationData|Key|KeyPair|boolean)} Result of method execution\n     */\n    execute: function (algorithm, method, args) {\n        // Define engine for GOST algorithms\n        var engine = defineEngine(method, algorithm);\n        // Create cipher\n        var cipher = this['get' + engine](algorithm);\n        // Execute method\n        return cipher[method].apply(cipher, args);\n    },\n    /**\n     * gostEngine.getGostCipher(algorithm) returns GOST 28147 / GOST R 34.12 cipher instance<br><br>\n     *\n     * GOST 28147-89 / GOST R 34.12-15 Encryption Algorithm<br><br>\n     * When keys and initialization vectors are converted to/from byte arrays,\n     * little-endian byte order is assumed.<br><br>\n     *\n     * Normalized algorithm identifier common parameters:\n     *\n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\n     *      <li><b>version</b> Algorithm version, number\n     *          <ul>\n     *              <li><b>1989</b> Current version of standard</li>\n     *              <li><b>2015</b> New draft version of standard</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Block length\n     *          <ul>\n     *              <li><b>64</b> 64 bits length (default)</li>\n     *              <li><b>128</b> 128 bits length (only for version 2015)</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode, string\n     *          <ul>\n     *              <li><b>ES</b> Encryption mode (default)</li>\n     *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\n     *              <li><b>KW</b> Key wrapping mode</li>\n     *              <li><b>MASK</b> Key mask mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\n     *  </ul>\n     *\n     * Supported algorithms, modes and parameters:\n     *\n     *  <ul>\n     *      <li>Encript/Decrypt mode (ES)\n     *          <ul>\n     *              <li><b>block</b> Block mode, string. Default ECB</li>\n     *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\n     *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n     *          </ul>\n     *      </li>\n     *      <li>Sign/Verify mode (MAC)\n     *          <ul>\n     *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\n     *          </ul>\n     *      </li>\n     *      <li>Wrap/Unwrap key mode (KW)\n     *          <ul>\n     *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\n     *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\n     *          </ul>\n     *      </li>\n     *      <li>Wrap/Unwrap key mode (MASK)</li>\n     *  </ul>\n     *\n     * Supported paramters values:\n     *\n     *  <ul>\n     *      <li>Block modes (parameter 'block')\n     *          <ul>\n     *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\n     *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu\" (64-bit CFB) mode</li>\n     *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\n     *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\n     *          </ul>\n     *      </li>\n     *      <li>Key meshing modes (parameter 'keyMeshing')\n     *          <ul>\n     *              <li><b>NO</b> No key wrapping (default)</li>\n     *              <li><b>CP</b> CryptoPor Key key meshing</li>\n     *          </ul>\n     *      </li>\n     *      <li>Padding modes (parameter 'padding')\n     *          <ul>\n     *              <li><b>NO</b> No padding only for CFB and CTR modes</li>\n     *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\n     *              <li><b>ZERO</b> Zero bits padding mode</li>\n     *              <li><b>RANDOM</b> Random bits padding mode</li>\n     *          </ul>\n     *      </li>\n     *      <li>Wrapping key modes (parameter 'keyWrapping')\n     *          <ul>\n     *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\n     *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\n     *              <li><b>SC</b> SignalCom Key wrapping mode</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     *\n     * @memberOf gostEngine\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n     * @returns {GostCipher} Instance of GostCipher\n     */\n    getGostCipher: function (algorithm) {\n        return new GostCipher(algorithm);\n    },\n    /**\n     * gostEngine.getGostDigest(algorithm) returns GOST R 34.11 cipher instance<br><br>\n     *\n     * Normalized algorithm identifier common parameters:\n     *\n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\n     *      <li><b>version</b> Algorithm version\n     *          <ul>\n     *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\n     *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Digest length\n     *          <ul>\n     *              <li><b>256</b> 256 bits digest</li>\n     *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode\n     *          <ul>\n     *              <li><b>HASH</b> simple digest mode (default)</li>\n     *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\n     *              <li><b>KDF</b> Derive bits for KEK deversification</li>\n     *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\n     *              <li><b>PFXKDF</b> PFX key dirivation algorithms PFXKDF</li>\n     *              <li><b>CPKDF</b> CryptoPro Password based key dirivation algorithms</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\n     *  </ul>\n     *\n     * Supported algorithms, modes and parameters:\n     *\n     *  <ul>\n     *      <li>Digest HASH mode (default)</li>\n     *      <li>Sign/Verify HMAC modes parameters depends on version and length\n     *          <ul>\n     *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\n     *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\n     *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey KDF mode\n     *          <ul>\n     *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\n     *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey PBKDF2 mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey PFXKDF mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\n     *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\n     *          </ul>\n     *      </li>\n     *      <li>DeriveBits/DeriveKey CPKDF mode\n     *          <ul>\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     *\n     * @memberOf gostEngine\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n     * @returns {GostDigest} Instance of GostDigest\n     */\n    getGostDigest: function (algorithm) {\n        return new GostDigest(algorithm);\n    },\n    /**\n     * gostEngine.getGostSign(algorithm) returns GOST R 34.10 cipher instance<br><br>\n     *\n     * Normalized algorithm identifier common parameters:\n     *\n     *  <ul>\n     *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\n     *      <li><b>version</b> Algorithm version\n     *          <ul>\n     *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\n     *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\n     *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\n     *          <ul>\n     *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\n     *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>mode</b> Algorithm mode\n     *          <ul>\n     *              <li><b>SIGN</b> Digital signature mode (default)</li>\n     *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\n     *              <li><b>MASK</b> Key mask mode</li>\n     *          </ul>\n     *      </li>\n     *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\n     *  </ul>\n     *\n     * Supported algorithms, modes and parameters:\n     *\n     *  <ul>\n     *      <li>Sign/Verify mode (SIGN)</li>\n     *      <li>Wrap/Unwrap mode (MASK)</li>\n     *      <li>DeriveKey/DeriveBits mode (DH)\n     *          <ul>\n     *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\n     *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\n     *          </ul>\n     *      </li>\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 1994\n     *          <ul>\n     *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n     *          </ul>\n     *          Additional parameters, if namedParam not specified\n     *          <ul>\n     *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\n     *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\n     *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\n     *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\n     *          </ul>\n     *      </li>\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 2001 or 2012\n     *          <ul>\n     *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n     *          </ul>\n     *          Additional EC parameters, if namedCurve not specified\n     *          <ul>\n     *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\n     *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\n     *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\n     *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\n     *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\n     *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\n     *          </ul>\n     *      </li>\n     *  </ul>\n     *\n     * @memberOf gostEngine\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\n     * @returns {GostSign} Instance of GostSign\n     */\n    getGostSign: function (algorithm) {\n        return new GostSign(algorithm);\n    }\n};\n\nexport { gostEngine };\n","var bn = require('bn.js');\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;","module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};","var createHash = require('create-hash');\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var md5 = require('create-hash/md5')\nvar rmd160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar Buffer = require('safe-buffer').Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","export function getRoot() {\n    return isInNode() ? global : self;\n}\n\nexport function getCryptoModule() {\n    const root = getRoot();\n    if (getRoot().hasOwnProperty('crypto')) {\n        return root.crypto;\n    } else if (root.hasOwnProperty('msCrypto')) {\n        return root.msCrypto;\n    } else if (isInNode()) {\n        return require('crypto');\n    }\n\n    throw new Error('Your environment does not have сrypto module');\n}\n\nexport function isInNode() {\n    return typeof exports === 'object' && typeof module !== 'undefined';\n}\n\nexport function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nexport function isInWebWorker() {\n    return typeof importScripts !== 'undefined';\n}\n","/**\n * @file Implementation Web Crypto random generatore for GOST algorithms\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { isBrowser, getCryptoModule } from './utils/environment';\n\n// Initialize mouse and time counters for random generator\nconst randomRing = {\n    seed: new Uint8Array(1024),\n    getIndex: 0,\n    setIndex: 0,\n    set: function (x) {\n        if (this.setIndex >= 1024)\n            this.setIndex = 0;\n        this.seed[this.setIndex++] = x;\n    },\n    get: function () {\n        if (this.getIndex >= 1024)\n            this.getIndex = 0;\n        return this.seed[this.getIndex++];\n    }\n};\n\nif (isBrowser()) {\n    try {\n        // Mouse move event to fill random array\n        document.addEventListener('mousemove', function (e) {\n            randomRing.set((new Date().getTime() & 255) ^\n              ((e.clientX || e.pageX) & 255) ^\n              ((e.clientY || e.pageY) & 255));\n        }, false);\n    } catch (e) {\n    }\n\n    try {\n        // Keypress event to fill random array\n        document.addEventListener('keydown', function (e) {\n            randomRing.set((new Date().getTime() & 255) ^\n              (e.keyCode & 255));\n        }, false);\n    } catch (e) {\n    }\n} // </editor-fold>\n\nclass TypeMismatchError extends Error {\n}\n\nclass QuotaExceededError extends Error {\n}\n\n/**\n * The gostCrypto provide general purpose cryptographic functionality for\n * GOST standards including a cryptographically strong pseudo-random number\n * generator seeded with truly random values.\n *\n * @Class GostRandom\n *\n */\nexport function GostRandom() {\n}\n\n/**\n * The getRandomValues method generates cryptographically random values. <br><br>\n *\n * Random generator based on JavaScript Web Crypto random genereator\n * (if it is possible) or  Math.random mixed with time and parameters of\n * mouse and keyboard events\n *\n * @memberOf GostRandom\n * @param {(ArrayBuffer|ArrayBufferView)} array Destination buffer for random data\n */\n\nconst rootCryptoModule = getCryptoModule();\n\nGostRandom.prototype.getRandomValues = function (array) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (!array.byteLength)\n        throw new TypeMismatchError('Array is not of an integer type (Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, or Uint32Array)');\n\n    if (array.byteLength > 65536)\n        throw new QuotaExceededError('Byte length of array can\\'t be greate then 65536');\n\n    var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (rootCryptoModule && rootCryptoModule.getRandomValues) {\n        // Native window cryptographic interface\n        rootCryptoModule.getRandomValues(u8);\n    } else {\n        // Standard Javascript method\n        for (var i = 0, n = u8.length; i < n; i++)\n            u8[i] = Math.floor(256 * Math.random()) & 255;\n    }\n\n    // Mix bio randomizator\n    for (var i = 0, n = u8.length; i < n; i++)\n        u8[i] = u8[i] ^ randomRing.get();\n    return array;\n}; // </editor-fold>\n","/**\n * @file Implementation Web Crypto interfaces for GOST algorithms\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { GostRandom } from '../gostRandom';\nimport { gostCodingInstance } from './gostCoding';\nimport { gostSecurityInstance } from './gostSecurity';\nimport { gostASN1Instance } from './gostASN1';\nimport { gostSubtleInstance } from './gostSubtle';\nimport { gostCertInstance } from './gostCert';\nimport { gostCMSInstance } from './gostCMS';\nimport { gostKeysInstance } from './gostKeys';\n\n/**\n * The gostCrypto provide general purpose cryptographic functionality for\n * GOST standards including a cryptographically strong pseudo-random number\n * generator seeded with truly random values.\n *\n * @namespace gostCrypto\n */\nexport const gostCrypto = {\n    /**\n     * Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\n     *\n     * @memberOf gostCrypto\n     * @type GostCoding\n     */\n    coding: gostCodingInstance,\n\n    /**\n     * GOST and common ASN.1 Object and Algorithm Identifiers\n     *\n     * @memberOf gostCrypto\n     * @type GostSecurity\n     */\n    security: gostSecurityInstance,\n\n    /**\n     * PKCS ASN.1 message syntax and converters\n     *\n     * @memberOf gostCrypto\n     * @type GostASN1\n     */\n    asn1: gostASN1Instance,\n\n    /**\n     * The subtle attribute provides an instance of the SubtleCrypto\n     * interface which provides low-level cryptographic primitives and\n     * algorithms.\n     *\n     * @memberOf gostCrypto\n     * @type SubtleCrypto\n     */\n    subtle: gostSubtleInstance,\n\n    /**\n     * Provides facilities for handling certificates, CRLs, etc.\n     *\n     * @memberOf gostCrypto\n     * @type GostCert\n     */\n    cert: gostCertInstance,\n\n    /**\n     * Implements the Cryptographic Message Syntax as specified in RFC-2630.\n     *\n     * @memberOf gostCrypto\n     * @type GostCMS\n     */\n    cms: gostCMSInstance,\n\n    /**\n     * Implements the Key and Certificate Store methods\n     *\n     * @memberOf gostCrypto\n     * @type GostKeys\n     */\n    keys: gostKeysInstance\n};\n\n/**\n * The getRandomValues method generates cryptographically random values.\n *\n * First try to use Web Crypto random genereator. Next make random\n * bytes based on standart Math.random mixed with time and mouse pointer\n *\n * @memberOf gostCrypto\n * @param {(CryptoOperationData)} array Destination buffer for random data\n */\ngostCrypto.getRandomValues = function (array) // <editor-fold defaultstate=\"collapsed\">\n{\n    try {\n        const gostRandom = new GostRandom();\n        return gostRandom.getRandomValues(array);\n    } catch (e) {\n        throw new Error('Error occurred during random values generation');\n    }\n}; // </editor-fold>\n// </editor-fold>\n","/**\n * @file Key and Certificate Store methods\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { gostSecurityInstance } from \"./gostSecurity\";\nimport { gostCodingInstance } from \"./gostCoding\";\nimport { gostASN1Instance } from \"./gostASN1\";\nimport { gostSubtleInstance } from \"./gostSubtle\";\nimport { gostCertInstance } from \"./gostCert\";\nimport { gostCMSInstance } from \"./gostCMS\";\n\n/*\n * Common tools and methods\n */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CryptoOperationData = ArrayBuffer;\n\nvar coding = gostCodingInstance;\nvar providers = gostSecurityInstance.providers;\nvar asn1 = gostASN1Instance;\nvar subtle = gostSubtleInstance;\nvar cert = gostCertInstance;\nvar cms = gostCMSInstance;\n\n// Expand javascript object\nfunction expand() {\n    var r = {};\n    for (var i = 0, n = arguments.length; i < n; i++) {\n        var item = arguments[i];\n        if (typeof item === 'object')\n            for (var name in item)\n                if (item.hasOwnProperty(name))\n                    r[name] = item[name];\n    }\n    return r;\n}\n\nfunction defineProperty(object, name, descriptor, enumerable) {\n    if (typeof descriptor !== 'object')\n        descriptor = { value: descriptor };\n    if (enumerable !== undefined)\n        descriptor.enumerable = enumerable;\n    Object.defineProperty(object, name, descriptor);\n}\n\nfunction defineProperties(object, properties, enumerable) {\n    for (var name in properties)\n        defineProperty(object, name, properties[name], enumerable);\n}\n\n// Extend javascript class\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\n    // If constructor not defined\n    if (typeof Class !== 'function') {\n        propertiesClass = propertiesObject;\n        propertiesObject = Class;\n        Class = function () {\n            Super.apply(this, arguments);\n        };\n    }\n    // Create prototype properties\n    Class.prototype = Object.create(Super.prototype, {\n        constructor: {\n            value: Class\n        },\n        superclass: {\n            value: Super.prototype\n        }\n    });\n    if (propertiesObject)\n        defineProperties(Class.prototype, propertiesObject, true);\n    // Inherites super class properties\n    if (Super !== Object)\n        for (var name in Super)\n            Class[name] = Super[name];\n    Class.super = Super;\n    if (propertiesClass)\n        defineProperties(Class, propertiesClass, true);\n    return Class;\n}\n\n// Get random values\nfunction getSeed(length) {\n    var seed = new Uint8Array(length);\n    gostCrypto.getRandomValues(seed);\n    return seed.buffer;\n}\n\n// Self resolver\nfunction call(callback) {\n    try {\n        callback();\n    } catch (e) {\n    }\n}\n\n\n// Get buffer\nfunction buffer(d) {\n    if (d instanceof CryptoOperationData)\n        return d;\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n    else\n        throw new DataError('CryptoOperationData required');\n}\n\n// Today date + n days with time\nfunction now(n) {\n    var date = new Date();\n    if (n)\n        date.setDate(date.getDate() + n);\n    return date;\n}\n\n// Today date + n days\nfunction today(n) {\n    var date = now(n);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\n\n// Check the buffers to equal\nfunction equalBuffers(r1, r2) {\n    var s1 = new Uint8Array(r1),\n      s2 = new Uint8Array(r2);\n    if (s1.length !== s2.length)\n        return false;\n    for (var i = 0, n = s1.length; i < n; i++)\n        if (s1[i] !== s2[i])\n            return false;\n    return true;\n}\n\n// Generate new alias\nfunction generateUUID() {\n    var r = new Uint8Array(getSeed(16)), s = '';\n    for (var i = 0; i < 16; i++)\n        s += ('00' + r[i].toString(16)).slice(-2);\n    return s.substr(0, 8) + '-' + s.substr(8, 4) + '-4' + s.substr(13, 3) +\n      '-9' + s.substr(17, 3) + '-' + s.substr(20, 12);\n}\n\n// Return get32 from buffer\nfunction get32(buffer, offset) {\n    var r = new Uint8Array(buffer, offset, 4);\n    return (r[3] << 24) | (r[2] << 16) | (r[1] << 8) | r[0];\n}\n\nfunction set32(buffer, offset, int) {\n    var r = new Uint8Array(buffer, offset, 4);\n    r[3] = int >>> 24;\n    r[2] = int >>> 16 & 0xff;\n    r[1] = int >>> 8 & 0xff;\n    r[0] = int & 0xff;\n    return r;\n}\n\n// Salt size\nfunction saltSize(algorithm) {\n    switch (algorithm.id) {\n        case 'pbeWithSHAAnd40BitRC2-CBC':\n        case 'pbeWithSHAAnd128BitRC2-CBC':\n            return 8;\n        case 'pbeUnknownGost':\n            return 16;\n        case 'sha1':\n            return 20;\n        default:\n            return 32;\n    }\n}\n\n// Password to bytes\nfunction passwordData(derivation, password) {\n    if (!password)\n        return new CryptoOperationData(0);\n    if (derivation.name.indexOf('CPKDF') >= 0) {\n        // CryptoPro store password\n        var r = [];\n        for (var i = 0; i < password.length; i++) {\n            var c = password.charCodeAt(i);\n            r.push(c & 0xff);\n            r.push(c >>> 8 & 0xff);\n            r.push(0);\n            r.push(0);\n        }\n        return new Uint8Array(r).buffer;\n    } else if (derivation.name.indexOf('PFXKDF') >= 0)\n    // PKCS#12 unicode password\n        return coding.Chars.decode(password + '\\0', 'unicode');\n    else\n    // PKCS#5 password mode\n        return coding.Chars.decode(password, 'utf8');\n}\n\n// </editor-fold>\n\n/**\n * Key and Certificate Store methods\n *\n * @class GostKeys\n */\nexport function GostKeys() {\n}\n\n/**\n * Key templates\n * <ul>\n *      <li>providerName - provider name for key encryption, default 'CP-01'</li>\n *      <li>days - validity of the key in days, default 7305</li>\n * </ul>\n *\n * @memberOf GostKeys\n * @instance\n */\nvar options = {// <editor-fold defaultstate=\"collapsed\">\n    providerName: 'CP-01',\n    days: 7305 // </editor-fold>\n};\n\nGostKeys.prototype.options = options;\n\n/**\n * A class for private keys in PKCS #8 format\n *\n * @class GostKeys.PKCS8\n * @extends GostASN1.PrivateKeyInfo\n * @param {(FormatedData|GostASN1.PrivateKeyInfo)} keyInfo\n */\nfunction PKCS8(keyInfo) {\n    asn1.PrivateKeyInfo.call(this, keyInfo);\n}\n\nextend(asn1.PrivateKeyInfo, PKCS8, {\n    /**\n     * Get the private key\n     *\n     * @memberOf GostKeys.PKCS8\n     * @instance\n     * @returns {Promise} Promise to return the {@link Key}\n     */\n    getPrivateKey: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        var keyUsages = (this.privateKeyAlgorithm.id === 'rsaEncryption') ? ['sign'] :\n          ['sign', 'deriveKey', 'deriveBits'];\n        return subtle.importKey('pkcs8', this.encode(), this.privateKeyAlgorithm, 'true', keyUsages);\n    }, // </editor-fold>\n    /**\n     * Set the private key\n     *\n     * @memberOf GostKeys.PKCS8\n     * @instance\n     * @param {Key} privateKey The Private Key\n     * @returns {Promise} Promise to return the self object after set the key\n     */\n    setPrivateKey: function (privateKey) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return subtle.exportKey('pkcs8', privateKey).then(function (keyInfo) {\n            asn1.PrivateKeyInfo.call(self, keyInfo);\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Generate private key and return certification request\n     *\n     * @memberOf GostKeys.PKCS8\n     * @instance\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm identifier\n     * @returns {Promise} Promise to return the {@link GostCert.Request} after key generation\n     */\n    generate: function (req, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            if (!(req instanceof cert.Request))\n                req = new cert.Request(req);\n            // Generate request\n            return req.generate(keyAlgorithm);\n        }).then(function (key) {\n            asn1.PrivateKeyInfo.call(self, key);\n            ;\n            return req;\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class for private keys in PKCS #8 format\n *\n * @memberOf GostKeys\n * @type GostKeys.PKCS8\n */\nGostKeys.prototype.PKCS8 = PKCS8;\n\n/**\n * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\n *\n * @class GostKeys.PKCS8Encrypted\n * @extends GostASN1.EncryptedPrivateKeyInfo\n * @param {(FormatedData|GostASN1.EncryptedPrivateKeyInfo)} encryptedKey\n */\nfunction PKCS8Encrypted(encryptedKey) {\n    asn1.EncryptedPrivateKeyInfo.call(this, encryptedKey);\n}\n\nextend(asn1.EncryptedPrivateKeyInfo, PKCS8Encrypted, {\n    /**\n     * Get the private key info\n     *\n     * @memberOf GostKeys.PKCS8Encrypted\n     * @instance\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @returns {Promise} Promise to return decrypted {@link GostKeys.PKCS8}\n     */\n    getKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, engine;\n        return new Promise(call).then(function () {\n            engine = new cms.EncryptedDataContentInfo({\n                contentType: 'encryptedData',\n                version: 0,\n                encryptedContentInfo: {\n                    contentType: 'data',\n                    contentEncryptionAlgorithm: self.encryptionAlgorithm,\n                    encryptedContent: self.encryptedData\n                }\n            });\n            return engine.getEnclosed(keyPassword);\n        }).then(function (contentInfo) {\n            // Create key object\n            return PKCS8.decode(contentInfo.content);\n        });\n    }, // </editor-fold>\n    /**\n     * Get the private key\n     *\n     * @memberOf GostKeys.PKCS8Encrypted\n     * @instance\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @returns {Promise} Promise to return decrypted {@link Key}\n     */\n    getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return this.getKey(keyPassword).then(function (keyInfo) {\n            return keyInfo.getPrivateKey();\n        });\n    }, // </editor-fold>\n    /**\n     * Sets and encrypt the private key info\n     *\n     * @memberOf GostKeys.PKCS8Encrypted\n     * @instance\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for encryption\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n     * @returns {Promise} Promise to return self object after set key\n     */\n    setKey: function (keyInfo, keyPassword, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, engine;\n        return new Promise(call).then(function () {\n            keyInfo = new PKCS8(keyInfo);\n            engine = new cms.EncryptedDataContentInfo();\n            return engine.encloseContent(keyInfo.encode(), keyPassword, encryptionAlgorithm || options.providerName);\n        }).then(function () {\n            self.encryptionAlgorithm = engine.encryptedContentInfo.contentEncryptionAlgorithm;\n            self.encryptedData = engine.encryptedContentInfo.encryptedContent;\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Set the private key\n     *\n     * @memberOf GostKeys.PKCS8Encrypted\n     * @instance\n     * @param {Key} privateKey The private key\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n     * @returns {Promise} Promise to return self object after set key\n     */\n    setPrivateKey: function (privateKey, keyPassword, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new PKCS8().setPrivateKey(privateKey).then(function (keyInfo) {\n            return self.setKey(keyInfo, keyPassword, encryptionAlgorithm);\n        });\n    }, // </editor-fold>\n    /**\n     * Generate private key and return certification request\n     *\n     * @memberOf GostKeys.PKCS8Encrypted\n     * @instance\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\n     * @returns {Promise} Promise to return {@link GostCert.Request}\n     */\n    generate: function (req, keyPassword, keyAlgorithm, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            if (!(req instanceof cert.Request))\n                req = new cert.Request(req);\n            // Generate request\n            return req.generate(keyAlgorithm);\n        }).then(function (key) {\n            return self.setKey(key, keyPassword, encryptionAlgorithm);\n        }).then(function () {\n            return req;\n        });\n    }  // </editor-fold>\n});\n\n/**\n * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\n *\n * @memberOf GostKeys\n * @type GostKeys.PKCS8Encrypted\n */\nGostKeys.prototype.PKCS8Encrypted = PKCS8Encrypted;\n\n/**\n * A class for password-encrypted private keys in SignalCom container<br><br>\n *\n * The container file list:\n * <ul>\n *      <li>mk.db3 - master key data</li>\n *      <li>masks.db3 - encrypted or decrypted masks</li>\n *      <li>kek.opq - wrapped key encryption key</li>\n *      <li>rand.opq - wrapped random data</li>\n * </ul>\n *\n * @class GostKeys.SignalComKeyContainer\n * @param {SignalComKeyContainer} container\n */\nfunction SignalComKeyContainer(container) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (container) {\n        var self = this;\n        ['mk.db3', 'masks.db3', 'kek.opq', 'rand.opq'].forEach(function (name) {\n            self[name] = container[name];\n        });\n    }\n} // </editor-fold>\n\nextend(Object, SignalComKeyContainer, {\n    /**\n     * Get password-based encryption key\n     *\n     * @memberOf GostKeys.SignalComKeyContainer\n     * @instance\n     * @param {string} keyPassword\n     * @returns {Promise} Promise to return {@link Key}\n     */\n    getEncryptionKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, wrapping = providers['SC-01'].wrapping,\n          encryption = providers['SC-01'].encryption,\n          derivation = providers['SC-01'].derivation,\n          masks = self['masks.db3'], mk = self['mk.db3'], kek = self['kek.opq'];\n        // Decrypt key\n        return new Promise(call).then(function () {\n            if ((!masks || !mk || !kek))\n                throw new Error('Not enougth key container files');\n            // Check for encrypted key\n            if (masks.byteLength > 32) {\n                if (keyPassword) {\n                    // Extract password based encryption mask\n                    return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\n                      derivation, false, ['deriveKey', 'deriveBits']).then(function (integrityKey) {\n                        return subtle.deriveKey(expand(derivation,\n                          { salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]) }),\n                          integrityKey, encryption, false, ['decrypt']);\n                    }).then(function (encryptionKey) {\n                        var encrypted = new cms.EncryptedDataContentInfo(masks);\n                        return encrypted.getEnclosed(encryptionKey);\n                    }).then(function (digested) {\n                        return digested.verify();\n                    }).then(function (data) {\n                        return data.content;\n                    });\n                } else\n                    throw new Error('Key password is required');\n            } else if (keyPassword)\n                throw new Error('Key password is not required');\n            return masks;\n        }).then(function (decrypedMasks) {\n            // Combine masks\n            masks = decrypedMasks;\n            var mkm = new Uint8Array(mk.byteLength + masks.byteLength);\n            mkm.set(new Uint8Array(mk), 0);\n            mkm.set(new Uint8Array(masks), mk.byteLength);\n            // Import master key\n            return subtle.importKey('raw', mkm.buffer, wrapping, false, ['unwrapKey']);\n        }).then(function (unwrappingKey) {\n            // Unwrap kek\n            return subtle.unwrapKey('raw', kek, unwrappingKey, wrapping, encryption,\n              false, ['wrapKey', 'unwrapKey']);\n        });\n    }, // </editor-fold>\n    /**\n     * Generate encryption key and container files\n     *\n     * @memberOf GostKeys.SignalComKeyContainer\n     * @instance\n     * @param {string} keyPassword\n     * @returns {Promise} Promise to return {@link Key}\n     */\n    generateContainer: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, wrapping = providers['SC-01'].wrapping,\n          encryption = providers['SC-01'].encryption,\n          derivation = providers['SC-01'].derivation,\n          digest = providers['SC-01'].digest,\n          encryptionKey, wrappingKey;\n        return new Promise(call).then(function () {\n            // Generate wrapping key\n            return subtle.generateKey(wrapping, true, ['wrapKey']);\n        }).then(function (key) {\n            wrappingKey = key;\n            // Split masks\n            var len = wrappingKey.buffer.byteLength;\n            self['mk.db3'] = new Uint8Array(new Uint8Array(wrappingKey.buffer, 0, len - 32)).buffer;\n            var masks = new Uint8Array(new Uint8Array(wrappingKey.buffer, len - 32, 32)).buffer;\n            if (keyPassword) {\n                // Encrypt masks\n                var encrypted = new cms.EncryptedDataContentInfo(),\n                  digested = new cms.DigestedDataContentInfo();\n                // Digest data\n                return digested.encloseContent(masks, digest).then(function () {\n                    digested = {// Double wrapping - SignalCom mistake\n                        contentType: 'digestedData',\n                        content: digested.encode()\n                    };\n                    return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\n                      derivation, false, ['deriveKey', 'deriveBits']);\n                }).then(function (integrityKey) {\n                    return subtle.deriveKey(expand(derivation,\n                      { salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]) }),\n                      integrityKey, encryption, false, ['encrypt']);\n                }).then(function (encryptionKey) {\n                    // Encrypt data with password\n                    return encrypted.encloseContent(digested, encryptionKey, encryption);\n                }).then(function () {\n                    return encrypted.encode();\n                });\n            }\n            return masks;\n        }).then(function (masks) {\n            self['masks.db3'] = masks;\n            // Generate encryption key\n            return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\n        }).then(function (key) {\n            encryptionKey = key;\n            // Wrap encryption key\n            return subtle.wrapKey('raw', key, wrappingKey, wrapping);\n        }).then(function (data) {\n            self['kek.opq'] = data;\n            // Generate random seed\n            return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\n        }).then(function (key) {\n            // Wrap random seed\n            return subtle.wrapKey('raw', key, wrappingKey, wrapping);\n        }).then(function (data) {\n            self['rand.opq'] = data;\n            return encryptionKey;\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class for password-encrypted private keys in SignalCom container\n *\n * @memberOf GostKeys\n * @type GostKeys.SignalComKeyContainer\n */\nGostKeys.prototype.SignalComKeyContainer = SignalComKeyContainer;\n\n/**\n * A class for password-encrypted SignalCom private keys\n *\n * @class GostKeys.SignalComPrivateKeyInfo\n * @extends GostASN1.GostWrappedPrivateKey\n * @extends GostKeys.SignalComKeyContainer\n * @param {GostASN1.PrivateKeyInfo} keyInfo\n * @param {GostKeys.SignalComKeyContainer} container\n */\nfunction SignalComPrivateKeyInfo(keyInfo, container) // <editor-fold defaultstate=\"collapsed\">\n{\n    asn1.GostWrappedPrivateKey.call(this, keyInfo);\n    SignalComKeyContainer.call(this, container);\n} // </editor-fold>\n\nextend(asn1.GostWrappedPrivateKey, SignalComPrivateKeyInfo, {\n    /**\n     * Get the private key info\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @param {string} keyPassword The password for decryption\n     * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n     */\n    getKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return this.getPrivateKey(keyPassword).then(function (privateKey) {\n            return new PKCS8().setPrivateKey(privateKey);\n        });\n    }, // </editor-fold>\n    /**\n     * Get the private key\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @instance\n     * @param {string} keyPassword The password for decryption\n     * @returns {Promise} Promise to return the {@link Key}\n     */\n    getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, wrapping = providers['SC-01'].wrapping,\n          publicKeyData;\n        // Decrypt key\n        return new Promise(call).then(function () {\n            // Get password key\n            return self.getEncryptionKey(keyPassword, true);\n        }).then(function (encryptionKey) {\n            // Unwrap private key\n            return subtle.unwrapKey('raw', self.privateKeyWrapped, encryptionKey, wrapping,\n              self.privateKeyAlgorithm, true, ['sign', 'deriveKey', 'deriveBits']);\n        }).then(function (privateKey) {\n            publicKeyData = self.attributes && self.attributes['id-sc-gostR3410-2001-publicKey'];\n            // Generate key pair\n            if (publicKeyData)\n                return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }),\n                  privateKey.extractable, privateKey.usages);\n            else\n                return { privateKey: privateKey };\n        }).then(function (keyPair) {\n            // Compare public key\n            if (publicKeyData && !equalBuffers(keyPair.publicKey.buffer, publicKeyData))\n                throw new Error('Check public key failed');\n            return keyPair.privateKey;\n        });\n    }, // </editor-fold>\n    /**\n     * Sets and encrypt the private key info\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @instance\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\n     * @param {string} keyPassword The password for encryption\n     * @returns {Promise} Promise to return self object after set the key\n     */\n    setKey: function (keyInfo, keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n            return self.setPrivateKey(privateKey, keyPassword);\n        });\n    }, // </editor-fold>\n    /**\n     * Set the private key\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @instance\n     * @param {Key} privateKey The private key\n     * @param {string} keyPassword The secret key encryption\n     * @returns {Promise} Promise to return self object after set the key\n     */\n    setPrivateKey: function (privateKey, keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, wrapping = providers['SC-01'].wrapping, wrappedData;\n        return new Promise(call).then(function () {\n            // Get or generate encryption key\n            return self.getEncryptionKey(keyPassword)['catch'](function () {\n                return self.generateContainer(keyPassword);\n            });\n        }).then(function (encryptionKey) {\n            // Encrypt key buffer\n            return subtle.wrapKey('raw', privateKey, encryptionKey, wrapping);\n        }).then(function (data) {\n            wrappedData = data;\n            // Generate public key\n            return subtle.generateKey(expand(privateKey.algorithm,\n              { ukm: privateKey.buffer }), true, ['sign', 'verify']);\n        }).then(function (keyPair) {\n            self.object = {\n                version: 0,\n                privateKeyAlgorithm: privateKey.algorithm,\n                privateKeyWrapped: wrappedData,\n                attributes: {\n                    'id-sc-gostR3410-2001-publicKey': keyPair.publicKey.buffer\n                }\n            };\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Change key password\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @instance\n     * @param {string} oldKeyPassword Old key password\n     * @param {string} newKeyPassword New key password\n     * @returns {Promise} Promise to return self object after change password\n     */\n    changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n            return self.setPrivateKey(privateKey, newKeyPassword);\n        });\n    }, // </editor-fold>\n    /**\n     * Generate private key, certificate and return certification request\n     *\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\n     * @instance\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n     * @returns {Promise} Promise to return {@link GostCert.Request}\n     */\n    generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, keyInfo;\n        return new Promise(call).then(function () {\n            if (!(req instanceof cert.Request))\n                req = new cert.Request(req);\n            // Generate request\n            return req.generate(keyAlgorithm);\n        }).then(function (key) {\n            keyInfo = key;\n            return self.setKey(keyInfo, keyPassword);\n        }).then(function () {\n            return req;\n        });\n    } // </editor-fold>\n});\ndefineProperties(SignalComPrivateKeyInfo.prototype, SignalComKeyContainer.prototype);\n\n/**\n * A class for password-encrypted SignalCom private keys\n *\n * @memberOf GostKeys\n * @type GostKeys.SignalComPrivateKeyInfo\n */\nGostKeys.prototype.SignalComPrivateKeyInfo = SignalComPrivateKeyInfo;\n\n/**\n * A class for password-encrypted private keys in CryptoPro container\n *\n * The container file list:\n * <ul>\n *      <li>header - container header @link GostASN1.GostKeyContainer</li>\n *      <li>name - container name @link GostASN1.GostKeyContainerName</li>\n *      <li>primary - private keys data @link GostASN1.GostPrivateKeys</li>\n *      <li>masks - private key masks @link GostASN1.GostPrivateMasks</li>\n *      <li>primary2 - reserve of private keys data @link GostASN1.GostPrivateKeys</li>\n *      <li>masks2 - reserve of private key masks @link GostASN1.GostPrivateMasks</li>\n * </ul>\n *\n * @class GostKeys.CryptoProKeyContainer\n * @param {Object} container\n */\nfunction CryptoProKeyContainer(container) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (container) {\n        this.header = asn1.GostKeyContainer.decode(container.header);\n        this.name = asn1.GostKeyContainerName.decode(container.name);\n        this.primary = asn1.GostPrivateKeys.decode(container.primary);\n        this.masks = asn1.GostPrivateMasks.decode(container.masks);\n        if (container.primary2 && container.masks2) {\n            this.primary2 = asn1.GostPrivateKeys.decode(container.primary2);\n            this.masks2 = asn1.GostPrivateMasks.decode(container.masks2);\n        }\n    }\n} // </editor-fold>\n\nextend(Object, CryptoProKeyContainer, (function () {\n\n    // <editor-fold defaultstate=\"collapsed\">\n    // True if 512 bit\n    function isKeySize512(algorithm) {\n        return algorithm.name.indexOf('-512') >= 0 || algorithm.length === 512;\n    }\n\n    // Test version 2012\n    function isVersion2012(algorithm) {\n        return !((algorithm.name.indexOf('-94') >= 0 || algorithm.name.indexOf('-2001') >= 0 ||\n          algorithm.version === 1994 || algorithm.version === 2001));\n    }\n\n    // Derive password key\n    function derivePasswordKey(algorithm, password, salt) {\n        var hash = isVersion2012(algorithm) ? 'GOST R 34.11-256' : 'GOST R 34.11-94/' + (algorithm.sBox || 'D-A'),\n          derivation = { name: 'CPKDF', hash: hash, salt: salt, iterations: password ? 2000 : 2 };\n\n        // Import password\n        return subtle.importKey('raw', passwordData(derivation, password),\n          derivation, false, ['deriveKey', 'deriveBits']).then(function (baseKey) {\n\n            // Derive key\n            return subtle.deriveKey(derivation, baseKey, 'GOST 28147',\n              false, ['sign', 'verify', 'encrypt', 'decrypt']);\n        });\n    }\n\n    // Compute password MAC\n    function computePasswordMAC(algorithm, password, salt) {\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams);\n\n        // Derive password\n        return derivePasswordKey(algorithm, password, salt).then(function (macKey) {\n\n            // Mac for 16 zero bytes\n            return subtle.sign(mac, macKey,\n              new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\n        });\n    }\n\n    //        var lastBuffer;\n    // Compute container MAC\n    function computeContainerMAC(algorithm, content) {\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams),\n          keyData = new Uint8Array([// 32 zero bytes\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\n            //                var buffer = new Uint8Array(content.encode());\n            //                console.log(coding.Hex.encode(buffer));\n            //                if (lastBuffer && lastBuffer.length === buffer.length) {\n            //                    for (var i = 0; i < buffer.length; i++)\n            //                        if (lastBuffer[i] !== buffer[i])\n            //                            console.log('diff at ' + i);\n            //                } else\n            //                    console.log('diff length');\n            //                lastBuffer = buffer;\n            // Mac for content\n            return subtle.sign(mac, macKey, content.encode());\n        });\n    }\n\n    // Compute mask MAC\n    function computeMaskMAC(algorithm, mask, status) {\n        // Import mask as key for MAC\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams),\n          keyData = mask.byteLength === 64 ?\n            new Uint8Array(new Uint8Array(mask, 32, 32)).buffer : mask;\n        return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\n\n            // Verify MAC for maskStatus\n            return subtle.sign(mac, macKey, status);\n        });\n    }\n\n    // Generate mask\n    function generateMasks(algorithm) {\n        var wrapAlgorithm = expand(algorithm, { mode: 'MASK' }),\n          mask, status = getSeed(12);\n        wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n        return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']).then(function (key) {\n            return subtle.exportKey('raw', key);\n        }).then(function (data) {\n            mask = data;\n            return computeMaskMAC(algorithm, mask, status);\n        }).then(function (hmac) {\n            return new asn1.GostPrivateMasks({\n                mask: mask,\n                randomStatus: status,\n                hmacRandom: hmac\n            });\n        });\n    }\n\n    // Compute FP\n    function computeFP(privateKey) {\n        // Generate key pair with predefined ukm for check public key\n        return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }), true, ['sign', 'verify']).then(function (keyPair) {\n            return new Uint8Array(new Uint8Array(keyPair.publicKey.buffer, 0, 8)).buffer;\n        });\n    }\n\n    // Unwrap private key\n    function unwrapKey(algorithm, encryptionKey, key, mask, fp) {\n        var encryption = { name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox },\n          unwrapAlgorithm = expand(algorithm, { mode: 'MASK' }), privateKey;\n        unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\n        var wrappedKey;\n\n        // Encrypt ukm data for private key\n        return subtle.decrypt(encryption, encryptionKey, key).then(function (data) {\n            wrappedKey = data;\n            // Import mask key\n            return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']);\n        }).then(function (unwrappingKey) {\n\n            // Unwrap private key\n            return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\n              unwrapAlgorithm, algorithm, 'true', ['sign']);\n        }).then(function (key) {\n            privateKey = key;\n            return computeFP(privateKey);\n        }).then(function (computedFP) {\n            // Check public key buffer\n            if (!equalBuffers(computedFP, fp))\n                throw new Error('Incorrect fp');\n\n            return privateKey;\n        });\n\n    }\n\n    // Wrap private key\n    function wrapKey(algorithm, encryptionKey, privateKey, mask) {\n        var encryption = { name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox },\n          wrapAlgorithm = expand(algorithm, { mode: 'MASK' });\n        wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n\n        // Import mask key\n        return subtle.importKey('raw', mask, wrapAlgorithm, false,\n          ['sign', 'wrapKey']).then(function (wrappingKey) {\n            // Wrap private key\n            return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\n        }).then(function (wrappedKey) {\n            // Encrypt key\n            return subtle.encrypt(encryption, encryptionKey, wrappedKey);\n        });\n    }\n\n    // Decrypt private key\n    function decryptKey(content, primary, masks, keyPassword, secondary) {\n        var algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\n        return new Promise(call).then(function () {\n            // Check format\n            if (primary.hmacKey)\n                throw new Error('Old key format');\n\n            if (masks.randomStatus.byteLength < 12)\n                throw new Error(\"Invalid random status length\");\n\n            // Import mask as key for MAC\n            return computeMaskMAC(algorithm, masks.mask, masks.randomStatus);\n        }).then(function (hmac) {\n            if (!equalBuffers(hmac, masks.hmacRandom))\n                throw new Error(\"Imita for mask is invalid\");\n\n            // Derive key\n            return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12));\n        }).then(function (encryptionKey) {\n            // Unwrap keys\n            return secondary && primary.secondaryKey ?\n              unwrapKey(content.secondaryPrivateKeyParameters.privateKeyAlgorithm,\n                encryptionKey, primary.secondaryKey, masks.mask, content.secondaryFP) :\n              unwrapKey(algorithm, encryptionKey, primary.primaryKey, masks.mask, content.primaryFP);\n        });\n    }\n\n    // Encrypt private key\n    function encryptKey(algorithm, primary, masks, keyPassword, secondary, privateKey) {\n        // Derive key\n        return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12)).then(function (encryptionKey) {\n            // Wrap keys\n            return wrapKey(algorithm, encryptionKey, privateKey, masks.mask);\n        }).then(function (encryptedKey) {\n            if (!primary)\n                primary = new asn1.GostPrivateKeys();\n            if (secondary) {\n                primary.secondaryKey = encryptedKey;\n            } else {\n                primary.primaryKey = encryptedKey;\n            }\n            return primary;\n        });\n    }\n\n    // </editor-fold>\n\n    return {\n        /**\n         * Get the private key info\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} keyPassword The password for decryption\n         * @param {boolean} secondary True if required secondary key\n         * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n         */\n        getKey: function (keyPassword, secondary) // <editor-fold defaultstate=\"collapsed\">\n        {\n            return this.getPrivateKey(keyPassword, secondary).then(function (privateKey) {\n                return new PKCS8().setPrivateKey(privateKey);\n            });\n        }, // </editor-fold>\n        /**\n         * Get the private key\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} keyPassword Rhe password for decryption\n         * @param {boolean} secondary True if required secondary key\n         * @returns {Promise} Promise to return the {@link Key}\n         */\n        getPrivateKey: function (keyPassword, secondary) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content = self.header.keyContainerContent;\n            // Decrypt key\n            return decryptKey(content, self.primary, self.masks, keyPassword, secondary)['catch'](function (e) {\n                if (self.primary2 && self.masks2)\n                    return decryptKey(content, self.primary2, self.masks2, keyPassword, secondary);\n                else\n                    throw e;\n            });\n        }, // </editor-fold>\n        /**\n         * Get the certificate from the key container\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {boolean} secondary True for set secondary certificate\n         * @returns {Promise} Promise to return {@link GostCert.X509}\n         */\n        getCertificate: function (secondary) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content = self.header.keyContainerContent;\n            return new Promise(call).then(function () {\n                if (secondary)\n                    return new cert.X509(content.secondaryCertificate);\n                else\n                    return new cert.X509(content.primaryCertificate);\n            });\n        }, // </editor-fold>\n        /**\n         * Get the container name\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @returns {string} Container name\n         */\n        getContainerName: function () // <editor-fold defaultstate=\"collapsed\">\n        {\n            return this.name.containerName;\n        }, // </editor-fold>\n        /**\n         * Sets and encrypt the private key info\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\n         * @param {string} keyPassword The assword for encryption\n         * @param {boolean} secondary True for set secondary key\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return self object after set key\n         */\n        setKey: function (keyInfo, keyPassword, secondary, days) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this;\n            return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n                return self.setPrivateKey(privateKey, keyPassword, secondary, days);\n            });\n        }, // </editor-fold>\n        /**\n         * Set the private key\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {Key} privateKey The private key\n         * @param {string} keyPassword The secret key encryption\n         * @param {boolean} secondary True for set secondary key\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return self object after set key\n         */\n        setPrivateKey: function (privateKey, keyPassword, secondary, days) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content, algorithm;\n            return new Promise(call).then(function () {\n                self.header = self.header || new asn1.GostKeyContainer({\n                    keyContainerContent: {\n                        containerAlgoritmIdentifier: {\n                            algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\n                        },\n                        attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\n                        extensions: {\n                            keyValidity: {\n                                notAfter: now(days || options.days)\n                            }\n                        }\n                    }\n                });\n                content = self.header.keyContainerContent;\n                // Set private key\n                var keyParameters = secondary ? content.secondaryPrivateKeyParameters :\n                  content.primaryPrivateKeyParameters;\n                if (!keyParameters) {\n                    algorithm = expand(privateKey.algorithm, {\n                        sBox: \"D-A\",\n                        encParams: {\n                            block: \"CFB\",\n                            sBox: \"E-A\",\n                            keyMeshing: \"CP\"\n                        }\n                    });\n                    keyParameters = {\n                        attributes: [\"pkaExportable\", \"pkaExchange\", \"pkaDhAllowed\"],\n                        privateKeyAlgorithm: algorithm\n                    };\n                    if (secondary) {\n                        if (!content.primaryPrivateKeyParameters)\n                            throw new Error('Primary key must be defined first');\n                        content.secondaryPrivateKeyParameters = keyParameters;\n                    } else {\n                        content.primaryPrivateKeyParameters = keyParameters;\n                        var absent = content.attributes.indexOf('kccaPrimaryKeyAbsent');\n                        if (absent >= 0)\n                            content.attributes.splice(absent, 1);\n                    }\n                } else\n                    algorithm = keyParameters.privateKeyAlgorithm;\n                // Generate masks\n                var promises = [];\n                [0, 1].forEach(function (i) {\n                    var name = 'masks' + (i > 0 ? '2' : '');\n                    if (!self[name])\n                        promises.push(generateMasks(algorithm).then(function (masks) {\n                            self[name] = masks;\n                        }));\n                });\n                return Promise.all(promises);\n            }).then(function () {\n                // Encrypt key\n                var promises = [];\n                [0, 1].forEach(function (i) {\n                    var name = 'primary' + (i > 0 ? '2' : ''),\n                      maskname = 'masks' + (i > 0 ? '2' : '');\n                    promises.push(encryptKey(algorithm, self[name], self[maskname], keyPassword, secondary, privateKey).then(function (primary) {\n                        self[name] = primary;\n                    }));\n                });\n                return Promise.all(promises);\n            }).then(function () {\n                // Compute FP for a private key\n                return computeFP(privateKey).then(function (FP) {\n                    if (secondary)\n                        content.secondaryFP = FP;\n                    else\n                        content.primaryFP = FP;\n                });\n            }).then(function () {\n                // Compute password MAC\n                var softPassword = content.attributes.indexOf('kccaSoftPassword');\n                if (keyPassword) {\n                    if (softPassword < 0)\n                        content.attributes.push('kccaSoftPassword');\n                    return computePasswordMAC(algorithm, keyPassword, content.primaryFP);\n                } else {\n                    if (softPassword >= 0)\n                        content.attributes.splice(softPassword, 1);\n                }\n            }).then(function (hmac) {\n                if (hmac)\n                    content.hmacPassword = hmac;\n                // Calculate container MAC\n                return computeContainerMAC(algorithm, content);\n            }).then(function (hmac) {\n                self.header.hmacKeyContainerContent = hmac;\n                return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Set the certificate to the key container\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {(FormatedData|GostCert.X509)} certificate The certificate\n         * @param {boolean} secondary True for set secondary certificate\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return self object after set certificate\n         */\n        setCertificate: function (certificate, secondary, days) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content, algorithm;\n            return new Promise(call).then(function () {\n                self.header = self.header || new asn1.GostKeyContainer({\n                    keyContainerContent: {\n                        containerAlgoritmIdentifier: {\n                            algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\n                        },\n                        attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\n                        extensions: {\n                            keyValidity: {\n                                notAfter: now(days || options.days)\n                            }\n                        }\n                    }\n                });\n                content = self.header.keyContainerContent;\n                certificate = new cert.X509(certificate);\n                algorithm = (content.primaryPrivateKeyParameters &&\n                  content.primaryPrivateKeyParameters.privateKeyAlgorithm) ||\n                  expand(certificate.subjectPublicKeyInfo.algorithm, {\n                      sBox: \"D-A\",\n                      encParams: {\n                          block: \"CFB\",\n                          sBox: \"E-A\",\n                          keyMeshing: \"CP\"\n                      }\n                  });\n                return certificate.getPublicKey();\n            }).then(function (publicKey) {\n                if (secondary) {\n                    if (content.secondaryFP && !equalBuffers(content.secondaryFP,\n                      new Uint8Array(publicKey.buffer, 0, content.secondaryFP.byteLength)))\n                        throw new Error('The public key of the certificate does not match the private key');\n                    content.secondaryCertificate = certificate;\n                } else {\n                    if (content.primaryFP && !equalBuffers(content.primaryFP,\n                      new Uint8Array(publicKey.buffer, 0, content.primaryFP.byteLength)))\n                        throw new Error('The public key of the certificate does not match the private key');\n                    content.primaryCertificate = certificate;\n                }\n                // Calculate container MAC\n                return computeContainerMAC(algorithm, content);\n            }).then(function (hmac) {\n                self.header.hmacKeyContainerContent = hmac;\n                return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Set the container name\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} name Container name\n         */\n        setContainerName: function (name) // <editor-fold defaultstate=\"collapsed\">\n        {\n            this.name = new asn1.GostKeyContainerName({ containerName: name });\n        }, // </editor-fold>\n        /**\n         * Verify key container with password\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} keyPassword the secret key or password for decryption\n         * @returns {Promise} Promise to return self object after verify\n         */\n        verify: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content, algorithm;\n            return new Promise(call).then(function () {\n                content = self.header.keyContainerContent;\n                algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\n                // Verify container MAC\n                return computeContainerMAC(algorithm, content);\n            }).then(function (hmac) {\n                if (!equalBuffers(hmac, self.header.hmacKeyContainerContent))\n                    throw new Error(\"Container is not valid.\");\n                // Verify key password MAC\n                var needPassword = content.attributes.indexOf('kccaSoftPassword') >= 0;\n                if (!keyPassword && needPassword)\n                    throw new Error(\"Password is required\");\n                if (keyPassword && !needPassword)\n                    throw new Error(\"Password is not reqiured.\");\n                if (keyPassword)\n                // Derive password\n                    return computePasswordMAC(algorithm, keyPassword, content.primaryFP).then(function (hmac) {\n                        if (!equalBuffers(hmac, content.hmacPassword))\n                            throw new Error(\"Password is not valid.\");\n                        return self;\n                    });\n                return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Change key password\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} oldKeyPassword Old key password\n         * @param {string} newKeyPassword New key password\n         * @returns {Promise} Promise to return self object after change password\n         */\n        changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, content;\n            return new Promise(call).then(function () {\n                content = self.header.keyContainerContent;\n                if (!content.primaryPrivateKeyParameters)\n                    throw new Error('Private key not yet defined');\n                return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n                    return self.setPrivateKey(privateKey, newKeyPassword);\n                });\n            }).then(function () {\n                if (content.secondaryPrivateKeyParameters)\n                    return self.getPrivateKey(oldKeyPassword, true).then(function (privateKey) {\n                        return self.setPrivateKey(privateKey, newKeyPassword, true);\n                    });\n                return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Generate private key, certificate and return certification request\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n         * @returns {Promise} Promise to return {@link GostCert.Request}\n         */\n        generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, certificate, keyInfo;\n            return new Promise(call).then(function () {\n                if (!(req instanceof cert.Request))\n                    req = new cert.Request(req);\n                // Generate request\n                return req.generate(keyAlgorithm);\n            }).then(function (key) {\n                keyInfo = key;\n                return self.setKey(keyInfo, keyPassword);\n            }).then(function () {\n                // Create the new certificate\n                certificate = new cert.X509(req);\n                return certificate.sign(keyInfo);\n            }).then(function () {\n                return self.setCertificate(certificate);\n            }).then(function () {\n                return req;\n            });\n        }, // </editor-fold>\n        /**\n         * Encode key container\n         *\n         * @memberOf GostKeys.CryptoProKeyContainer\n         * @instance\n         * @param {string} format Encode format 'DER', 'CER', 'PEM'\n         * @returns {Object} container Object contains encoded files\n         */\n        encode: function (format) // <editor-fold defaultstate=\"collapsed\">\n        {\n            return {\n                header: this.header.encode(format),\n                name: this.name.encode(format),\n                masks: this.masks.encode(format),\n                primary: this.primary.encode(format),\n                masks2: this.masks2.encode(format),\n                primary2: this.primary2.encode(format)\n            };\n        } // </editor-fold>\n    };\n})());\n\n/**\n * A class for password-encrypted private keys in CryptoPro container\n *\n * @memberOf GostKeys\n * @type GostKeys.SignalComPrivateKeyInfo\n */\nGostKeys.prototype.CryptoProKeyContainer = CryptoProKeyContainer;\n\n/**\n * A class for password-encrypted private keys in ViPNet container entry\n *\n * @class GostKeys.ViPNetContainerEntry\n * @extends GostASN1.ViPNetInfo\n * @param {(FormatedData|GostKeys.ViPNetContainerEntry)} entry\n */\nfunction ViPNetContainerEntry(entry) // <editor-fold defaultstate=\"collapsed\">\n{\n    asn1.ViPNetInfo.call(this, entry || {\n        version: 3,\n        keyInfo: {\n            keyClass: 1,\n            keyType: 43556,\n            flags: 1\n        },\n        defenceKeyInfo: {\n            keyClass: 1024,\n            keyType: 24622,\n            keyUID: getSeed(32),\n            flags: -2147483648\n        }\n    });\n} // </editor-fold>\n\nextend(asn1.ViPNetInfo, ViPNetContainerEntry, (function () {\n\n    function getKeyPassword(keyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        if (keyPassword === undefined)\n            keyPassword = '';\n        // Generate key data\n        var passwordData = coding.Chars.decode(keyPassword, 'win1251'), keyData;\n        return subtle.digest('GOST R 34.11-94', passwordData).then(function (data) {\n            keyData = data;\n            // Generate mask data\n            var secodeData = new Uint8Array(passwordData.byteLength + keyData.byteLength);\n            secodeData.set(new Uint8Array(passwordData), 0);\n            secodeData.set(new Uint8Array(keyData), passwordData.byteLength);\n            return subtle.digest('GOST R 34.11-94', secodeData);\n        }).then(function (data) {\n            // Remove mask\n            return subtle.importKey('raw', data, 'GOST 28147', false, ['unwrapKey']);\n        }).then(function (unwrappingKey) {\n            // Unwrap secret key\n            return subtle.unwrapKey('raw', keyData, unwrappingKey,\n              'GOST 28147-MASK/VN', 'GOST 28147-89',\n              'false', ['encrypt', 'decrypt', 'sign', 'verify']);\n        });\n    } // </editor-fold>\n\n    return {\n        /**\n         * Get the private key\n         *\n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {string} keyPassword The password of secrect key for decryption\n         * @returns {Promise} Promise to return the {@link Key}\n         */\n        getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, keyPart, encryptedKey;\n            // Decrypt key\n            return new Promise(call).then(function () {\n                return !keyPassword || typeof keyPassword === 'string' ?\n                  getKeyPassword(keyPassword) : keyPassword;\n            }).then(function (key) {\n                keyPassword = key;\n                // Verify password\n                keyPart = self.keyPart;\n                encryptedKey = new Uint8Array(keyPart, 0, keyPart.byteLength - 4 - 8);\n                var macKey = new Uint8Array(keyPart, encryptedKey.byteLength, 4),\n                  encodedKeyInfo = self.keyInfo.encode(),\n                  data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\n                data.set(new Uint8Array(encryptedKey), 0);\n                data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\n                return subtle.verify({ name: 'GOST 28147-89-MAC' }, keyPassword, macKey, data);\n            }).then(function (result) {\n                if (!result)\n                    throw new Error('Invalid key password');\n                var iv = new Uint8Array(keyPart, keyPart.byteLength - 8, 8);\n                // Decrypt key data\n                return subtle.decrypt({ name: 'GOST 28147-89-CFB', iv: iv }, keyPassword, encryptedKey);\n            }).then(function (keyData) {\n                var l2 = keyData.byteLength / 2;\n                if (self.keyInfo.keyClass & 0x3 === 0) {\n                    // Secret key. Remove mask and import\n                    return subtle.importKey('raw', new Int32Array(keyData, l2, l2), 'GOST 28147', false,\n                      ['unwrapKey']).then(function (unwrappingKey) {\n                        // Unwrap secret key\n                        return subtle.unwrapKey('raw', new Int32Array(keyData, 0, l2), unwrappingKey,\n                          'GOST 28147-MASK/VN', 'GOST 28147-89',\n                          'false', ['encrypt', 'decrypt', 'sign', 'verify']);\n                    });\n                } else {\n                    // Private key\n                    var algorithm = self.keyInfo.algorithm ||\n                      (self.certificate && self.certificate.subjectPublicKeyInfo.algorithm);\n                    if (!algorithm)\n                        throw new Error('Algorithm is not specified');\n                    var unwrapAlgorithm = expand(algorithm, { mode: 'MASK', procreator: 'VN' });\n                    unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\n                    var wrapped = new Uint8Array(keyData, 0, l2),\n                      mask = new Uint8Array(keyData, l2, l2);\n                    // Import mask key\n                    return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']).then(function (unwrappingKey) {\n                        // Unwrap private key\n                        return subtle.unwrapKey('raw', wrapped, unwrappingKey, unwrapAlgorithm, algorithm, 'true', ['sign', 'deriveBits', 'deriveKey']);\n                    }).then(function (privateKey) {\n                        // Generate key pair\n                        if (self.publicKey)\n                            return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }),\n                              privateKey.extractable, privateKey.usages);\n                        else\n                            return { privateKey: privateKey };\n                    }).then(function (keyPair) {\n                        // Compare public key\n                        if (self.publicKey && !equalBuffers(keyPair.publicKey.buffer, self.publicKey))\n                            throw new Error('Check public key failed');\n                        return keyPair.privateKey;\n                    });\n                }\n            });\n        }, // </editor-fold>\n        /**\n         * Set the private key\n         *\n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {Key} privateKey The private key\n         * @param {string} keyPassword The secret key encryption\n         * @param {number} days Validity days. Default 7305 days (20 years)\n         * @returns {Promise} Promise to return the self object after set the key\n         */\n        setPrivateKey: function (privateKey, keyPassword, days) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, wrapAlgorithm, wrappingKey, keyData, keyPart;\n            // Decrypt key\n            return new Promise(call).then(function () {\n                return !keyPassword || typeof keyPassword === 'string' ?\n                  getKeyPassword(keyPassword) : keyPassword;\n            }).then(function (key) {\n                keyPassword = key;\n                var algorithm = privateKey.algorithm;\n                self.keyInfo.algorithm = algorithm;\n                self.keyInfo.serialNumber = getSeed(16);\n                self.keyInfo.keyUID = getSeed(8);\n                self.keyInfo.validity = {\n                    notBefore: today(),\n                    notAfter: today(days || options.days)\n                };\n                if (privateKey.type === 'private') {\n                    // Generate mask\n                    wrapAlgorithm = expand(algorithm, { mode: 'MASK', procreator: 'VN' });\n                    wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\n                    self.keyInfo.keyClass = 1;\n                    self.keyInfo.keyType = 43556;\n                    // Generate public key\n                    return subtle.generateKey(expand(algorithm, { ukm: privateKey.buffer }), true,\n                      ['sign', 'verify']).then(function (keyPair) {\n                        self.publicKey = keyPair.publicKey.buffer;\n                        // Check certificate\n                        if (self.certificate) {\n                            var spki = self.certificate.subjectPublicKeyInfo;\n                            return subtle.importKey('spki', spki.encode(), spki.algorithm, true, ['verify']);\n                        }\n                    }).then(function (publicKey) {\n                        if (publicKey && !equalBuffers(publicKey.buffer, self.publicKey))\n                            delete self.certificate; // Remove not valid certificate\n                    });\n                } else if (privateKey.type === 'secret') {\n                    wrapAlgorithm = 'GOST 28147/MASK/VN';\n                    delete self.certificate;\n                    delete self.publicKey;\n                    self.keyInfo.keyClass = 64;\n                    self.keyInfo.keyType = 24622;\n                } else\n                    throw new Error('Invalid key type');\n            }).then(function () {\n                // Generate mask\n                return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']);\n            }).then(function (key) {\n                wrappingKey = key;\n                // Wrap private key with mask\n                return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\n            }).then(function (data) {\n                keyData = new Uint8Array(data.byteLength * 2);\n                keyData.set(new Uint8Array(data));\n                return subtle.exportKey('raw', wrappingKey);\n            }).then(function (data) {\n                keyData.set(new Uint8Array(data), data.byteLength);\n                keyPart = new Uint8Array(keyData.byteLength + 12);\n                // Encrypt key\n                var encyption = { name: 'GOST 28147-CFB', iv: getSeed(8) };\n                keyPart.set(new Uint8Array(encyption.iv), keyPart.byteLength - 8);\n                return subtle.encrypt(encyption, keyPassword, keyData);\n            }).then(function (encryptedKey) {\n                keyPart.set(new Uint8Array(encryptedKey));\n                // Calculate MAC\n                var encodedKeyInfo = self.keyInfo.encode(),\n                  data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\n                data.set(new Uint8Array(encryptedKey), 0);\n                data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\n                return subtle.sign({ name: 'GOST 28147-89-MAC' }, keyPassword, data);\n            }).then(function (macKey) {\n                keyPart.set(new Uint8Array(macKey), keyPart.byteLength - 12);\n                self.keyPart = keyPart.buffer;\n                return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Encode container entry\n         *\n         * @memberOf GostKeys.ViPNetContainerEntry\n         * @instance\n         * @param {string} format The encoded data format\n         * @returns {CryptoOperationData}\n         */\n        encode: function (format) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var header = asn1.ViPNetInfo.method('encode').call(this),\n              result = new Uint8Array(8 + header.byteLength + this.keyPart.byteLength);\n            set32(result.buffer, 0, 4 + header.byteLength + this.keyPart.byteLength);\n            result.set(new Uint8Array(header), 4);\n            set32(result.buffer, 4 + header.byteLength, this.keyPart.byteLength);\n            result.set(new Uint8Array(this.keyPart), 8 + header.byteLength);\n            if (format === 'PEM')\n                return coding.Base64.encode(result.buffer);\n            return result.buffer;\n        } // </editor-fold>\n    };\n})(), {\n    /**\n     * Decode container entry\n     *\n     * @memberOf GostKeys.ViPNetContainerEntry\n     * @param {FormatedData} entry\n     * @returns {GostKeys.ViPNetContainer}\n     */\n    decode: function (entry) // <editor-fold defaultstate=\"collapsed\">\n    {\n        if (typeof entry === 'string')\n            entry = coding.Base64.decode(entry);\n        entry = buffer(entry);\n        // Entry size\n        var entrySize = get32(entry, 0);\n        if (entry.byteLength !== entrySize + 4)\n            throw new Error('Invalid container entry size');\n        // Decode header info\n        var source = coding.BER.decode(new Uint8Array(entry, 4, entrySize));\n        var result = asn1.ViPNetInfo.decode.call(this, source);\n        // Decode key info\n        var headerSize = source.header.byteLength + source.content.byteLength,\n          keyPartSize = get32(entry, 4 + headerSize);\n        if (entry.byteLength !== headerSize + keyPartSize + 8)\n            throw new Error('Invalid container key part size');\n        result.keyPart = new Uint8Array(new Uint8Array(entry, headerSize + 8, keyPartSize)).buffer;\n        // Key Info buffer - can be used in case error of format encoding\n        // var keyInfoSource = source.object[1];\n        // result.encodedKeyInfo = new Uint8Array(new Uint8Array(keyInfoSource.header.buffer,\n        //    keyInfoSource.header.byteOffset, keyInfoSource.header.byteLength + keyInfoSource.content.byteLength)).buffer;\n        return result;\n    } // </editor-fold>\n});\n\n/**\n * A class for password-encrypted private keys in CryptoPro container\n *\n * @memberOf GostKeys\n * @type GostKeys.SignalComPrivateKeyInfo\n */\nGostKeys.prototype.ViPNetContainerEntry = ViPNetContainerEntry;\n\n/**\n * A class for password-encrypted private keys in ViPNet container\n *\n * @class GostKeys.ViPNetContainer\n * @param {(FormatedData|GostKeys.ViPNetContainer)} container\n */\nfunction ViPNetContainer(container) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (container && (container instanceof CryptoOperationData ||\n      container.buffer instanceof CryptoOperationData ||\n      typeof container === 'string'))\n        this.decode(container);\n    else {\n        container = container || {};\n        this.fileType = container.fileType || 'ITCS';\n        this.fileVersion = container.fileVersion || 0x10;\n        if (container.applicationHeader)\n            this.applicationHeader = container.applicationHeader;\n        this.entries = container.entries || [];\n    }\n} // </editor-fold>\n\n\nextend(Object, ViPNetContainer, {\n    /**\n     * Get the certificate from the container\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {number} index Index of the entriy. Default 0\n     * @returns {Promise} Promise to return {@link GostCert.X509}\n     */\n    getCertificate: function (index) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            var entry = self.entries[index || 0];\n            if (!entry)\n                throw new Error('Entry not defined');\n            if (entry.certificate)\n                return new cert.X509(entry.certificate);\n        });\n    }, // </editor-fold>\n    /**\n     * Get the private key info\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {string} keyPassword The password for decryption\n     * @param {number} index Index of the entriy. Default 0\n     * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\n     */\n    getKey: function (keyPassword, index) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return this.getPrivateKey(keyPassword, index).then(function (privateKey) {\n            return new PKCS8().setPrivateKey(privateKey);\n        });\n    }, // </editor-fold>\n    /**\n     * Get the private key\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {string} keyPassword The password of secrect key for decryption\n     * @param {number} index Index of the entriy. Default 0\n     * @returns {Promise} Promise to return the {@link Key}\n     */\n    getPrivateKey: function (keyPassword, index) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            var entry = self.entries[index || 0];\n            if (!entry)\n                throw new Error('Entry not defined');\n            return entry.getPrivateKey(keyPassword);\n        });\n    }, // </editor-fold>\n    /**\n     * Set the certificate to the container\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {(FormatedData|GostCert.X509)} certificate The certificate\n     * @param {number} index Index of the entriy. Default 0\n     * @returns {Promise} Promise to return self object after set certificate\n     */\n    setCertificate: function (certificate, index) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, entry, certificate;\n        return new Promise(call).then(function () {\n            entry = self.entries[index || 0] ||\n              (self.entries[index || 0] = new ViPNetContainerEntry());\n            certificate = new cert.X509(certificate);\n            if (entry.publicKey)\n                return certificate.getPublicKey();\n        }).then(function (publicKey) {\n            if (publicKey && !equalBuffers(entry.publicKey, publicKey.buffer))\n                throw new Error('Invalid certificate for private key');\n            entry.certificate = certificate;\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Set the key to the container\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The key\n     * @param {string} keyPassword The password for decryption\n     * @param {number} index Index of the entriy. Default 0\n     * @param {number} days Validity days. Default 7305 days (20 years)\n     * @returns {Promise} Promise to return self object after set the key\n     */\n    setKey: function (keyInfo, keyPassword, index, days) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\n            return self.setPrivateKey(privateKey, keyPassword, index, days);\n        });\n    }, // </editor-fold>\n    /**\n     * Set the private key\n     *\n     * @memberOf GostKeys.ViPNetContainerEntry\n     * @instance\n     * @param {Key} privateKey The private key\n     * @param {string} keyPassword The secret key encryption\n     * @param {number} index Index of the entriy. Default 0\n     * @param {number} days Validity days. Default 7305 days (20 years)\n     * @returns {Promise} Promise to return the self object after set the key\n     */\n    setPrivateKey: function (privateKey, keyPassword, index, days) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            var entry = self.entries[index || 0] ||\n              (self.entries[index || 0] = new ViPNetContainerEntry());\n            return entry.setPrivateKey(privateKey, keyPassword, days);\n        }).then(function () {\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Change key password\n     *\n     * @memberOf GostKeys.ViPNetContainerEntry\n     * @instance\n     * @param {string} oldKeyPassword Old key password\n     * @param {string} newKeyPassword New key password\n     * @returns {Promise} Promise to return self object after change password\n     */\n    changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\n                return self.setPrivateKey(privateKey, newKeyPassword);\n            });\n        });\n    }, // </editor-fold>\n    /**\n     * Generate private key, certificate and return certification request\n     *\n     * @memberOf GostKeys.ViPNetContainerEntry\n     * @instance\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\n     * @returns {Promise} Promise to return {@link GostCert.Request}\n     */\n    generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, certificate, keyInfo;\n        return new Promise(call).then(function () {\n            if (!(req instanceof cert.Request))\n                req = new cert.Request(req);\n            // Generate request\n            return req.generate(keyAlgorithm);\n        }).then(function (key) {\n            keyInfo = key;\n            return self.setKey(keyInfo, keyPassword);\n        }).then(function () {\n            // Create the new certificate\n            certificate = new cert.X509(req);\n            return certificate.sign(keyInfo);\n        }).then(function () {\n            return self.setCertificate(certificate);\n        }).then(function () {\n            return req;\n        });\n    }, // </editor-fold>\n    /**\n     * Encode objet to container\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {string} format The encoded data format\n     * @returns {CryptoOperationData}\n     */\n    encode: function (format) // <editor-fold defaultstate=\"collapsed\">\n    {\n        // Encode entries\n        var entries = [], entriesSize = 0;\n        this.entries.forEach(function (entry) {\n            var encoded = entry.encode();\n            entriesSize += encoded.byteLength;\n            entries.push(encoded);\n        });\n        var headerSize = this.applicationHeader ? this.applicationHeader.byteLength : 0,\n          result = new Uint8Array(12 + headerSize + entriesSize);\n        result.set(new Uint8Array(coding.Chars.decode(this.fileType, 'ascii')));\n        set32(result.buffer, 4, this.fileVersion);\n        set32(result.buffer, 8, headerSize);\n        if (headerSize > 0)\n            result.set(new Uint8Array(this.applicationHeader), 12);\n        var offset = 12 + headerSize;\n        entries.forEach(function (entry) {\n            result.set(new Uint8Array(entry), offset);\n            offset += entry.byteLength;\n        });\n        if (format === 'PEM')\n            return coding.Base64.encode(result.buffer);\n        return result.buffer;\n    }, // </editor-fold>\n    /**\n     * Decode container to the object\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {FormatedData} container\n     * @returns {GostKeys.ViPNetContainer}\n     */\n    decode: function (container) // <editor-fold defaultstate=\"collapsed\">\n    {\n        container = this.constructor.decode(container);\n        this.fileType = container.fileType;\n        this.fileVersion = container.fileVersion;\n        if (container.applicationHeader)\n            this.applicationHeader = container.applicationHeader;\n        this.entries = container.entries;\n    } // </editor-fold>\n}, {\n    /**\n     * Encode object\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {GostKeys.ViPNetContainer} object\n     * @param {string} format The encoded data format\n     * @returns {CryptoOperationData}\n     */\n    encode: function (object, format) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return new this(object).encode(format);\n    }, // </editor-fold>\n    /**\n     * Decode container\n     *\n     * @memberOf GostKeys.ViPNetContainer\n     * @instance\n     * @param {FormatedData} container\n     * @returns {GostKeys.ViPNetContainer}\n     */\n    decode: function (container) // <editor-fold defaultstate=\"collapsed\">\n    {\n        if (typeof container === 'string')\n            container = coding.Base64.decode(container);\n        container = buffer(container);\n        // File type\n        var fileType = coding.Chars.encode(new Uint8Array(container, 0, 4), 'ascii');\n        if (fileType !== 'ITCS' && fileType !== 'PKEY' && fileType !== '_CCK' && fileType !== '_LCK')\n            throw new Error('Unsupported ViPNet container type');\n        // File version\n        var fileVersion = get32(container, 4),\n          i = fileVersion >>> 16, j = fileVersion & 0xffff;\n        if ((i !== 0 && i !== 1) || j > 0xff)\n            throw new Error('Unsupported ViPNet container version');\n        // File header\n        var headerSize = get32(container, 8), applicationHeader;\n        if (headerSize > 0)\n            applicationHeader = buffer(new Uint8Array(container, 12, headerSize));\n        // Read entries\n        var offset = 12 + headerSize, entries = [];\n        while (offset < container.byteLength) {\n            // Entry size\n            var entrySize = get32(container, offset);\n            // Decode entry\n            entries.push(ViPNetContainerEntry.decode(\n              new Uint8Array(container, offset, entrySize + 4)));\n            offset = offset + entrySize + 4;\n        }\n        return new ViPNetContainer({\n            fileType: fileType,\n            fileVersion: fileVersion,\n            applicationHeader: applicationHeader,\n            entries: entries\n        });\n    } // </editor-fold>\n});\n\n/**\n * A class for password-encrypted private keys in CryptoPro container\n *\n * @memberOf GostKeys\n * @type GostKeys.SignalComPrivateKeyInfo\n */\nGostKeys.prototype.ViPNetContainer = ViPNetContainer;\n\n/**\n * An implementation of PKCS #12 password encryption/integrity modes. Both input and output are implemented.<br><br>\n *\n * A PFX object may contain multiple authenticated safes (represented as GostASN1.SafeContents objects).\n * Each authenticated safe may have its own encryption method, and contains a number of bags\n * (represented as instances of GostASN1.SafeBag). <br>\n * Note: the methods and constructors that input a PFX object do not automatically check the validity of the MAC.\n * You need to explicitly call verify() to make this check.\n *\n * @class GostKeys.PKCS12\n * @extends GostASN1.PFX\n * @param {(FormatedData|GostASN1.PFX)} store\n */\nfunction PKCS12(store) // <editor-fold defaultstate=\"collapsed\">\n{\n    asn1.PFX.call(this, store || {\n        version: 3,\n        authSafe: {\n            contentType: 'data'\n        }\n    });\n} // </editor-fold>\n\nextend(asn1.PFX, PKCS12, (function () {\n\n    // <editor-fold defaultstate=\"collapsed\">\n    function calcHMAC(derivation, password, content) {\n        var hmac = { name: 'HMAC', hash: derivation.hash };\n        // Import password for key generation\n        return subtle.importKey('raw', passwordData(derivation, password),\n          derivation, false, ['deriveKey']).then(function (passwordKey) {\n            // Generate key from password.\n            return subtle.deriveKey(derivation, passwordKey, hmac, false, ['sign']);\n        }).then(function (integrityKey) {\n            // Sign MAC\n            return subtle.sign(hmac, integrityKey, content);\n        });\n    }\n\n    function verifyHMAC(derivation, password, digest, content) {\n        return calcHMAC(derivation, password, content).then(function (test) {\n            if (!equalBuffers(digest, test))\n                throw new Error('Invalid password, MAC is not verified');\n        });\n    }\n\n    // </editor-fold>\n    return {\n        /**\n         * Sign the enclosed content with given digest algorithm\n         *\n         * @memberOf GostKeys.PKCS12\n         * @instance\n         * @param {string} password The password\n         * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\n         * @returns {Promise} Promise to return self object after enclose content\n         */\n        sign: function (password, digestAlgorithm) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this;\n            return new Promise(call).then(function () {\n                // Calculate mac for password integrity\n                if (password) {\n                    // Define digeset algorithm\n                    var hash, derivation, digestProvider;\n                    if (digestAlgorithm)\n                        digestProvider = providers[digestAlgorithm];\n                    else\n                        digestAlgorithm = providers[options.providerName].digest;\n                    if (digestProvider) {\n                        hash = digestProvider.digest;\n                        derivation = digestProvider.derivation;\n                    } else {\n                        hash = digestAlgorithm;\n                        derivation = { name: 'PFXKDF', hash: hash, iterations: 2000 };\n                    }\n                    // Add salt\n                    derivation = expand(derivation, { salt: getSeed(saltSize(hash)), diversifier: 3 });\n                    // Sign HMAC\n                    var content = self.authSafe.content;\n                    return calcHMAC(derivation, password, content).then(function (digest) {\n                        self.macData = {\n                            mac: {\n                                digestAlgorithm: hash,\n                                digest: digest\n                            },\n                            macSalt: derivation.salt,\n                            iterations: derivation.iterations\n                        };\n                        return self;\n                    });\n                } else\n                    return self;\n            });\n        }, // </editor-fold>\n        /**\n         * Verifies the MAC.\n         *\n         * @memberOf GostKeys.PKCS12\n         * @instance\n         * @param password The password for mac verification\n         * @returns {Promise} Promise to return self object after verification\n         */\n        verify: function (password) // <editor-fold defaultstate=\"collapsed\">\n        {\n            var self = this, authSafe = self.authSafe, derivation;\n            return new Promise(call).then(function () {\n                // Indirectly verification\n                if (authSafe.contentType === 'data') {\n                    // Check MAC\n                    if (self.macData) {\n                        if (!password)\n                            throw new Error('Password must be defined for the MAC verification');\n                        derivation = {\n                            name: 'PFXKDF',\n                            hash: self.macData.mac.digestAlgorithm,\n                            salt: self.macData.macSalt,\n                            iterations: self.macData.iterations,\n                            diversifier: 3\n                        };\n                        var content = self.authSafe.content, digest = self.macData.mac.digest;\n                        // Verify HMAC with PFXKDF (PKCS#12)\n                        return verifyHMAC(derivation, password, digest, content)['catch'](function () {\n                            // Verify HMAC with PBKDF2 (TC 26, PKCS#5)\n                            derivation.name = 'PBKDF2';\n                            return verifyHMAC(derivation, password, digest, content);\n                        });\n                    } // No check with MAC\n                } else\n                    throw new Error('Unsupported format');\n            }).then(function () {\n                return self;\n            });\n        } // </editor-fold>\n    };\n})());\n\n/**\n * An implementation of PKCS #12 password encryption/integrity modes.\n *\n * @memberOf GostKeys\n * @type GostKeys.PKCS12\n */\nGostKeys.prototype.PKCS12 = PKCS12;\n\n/**\n * This type of entry holds a cryptographic PrivateKey, which is optionally stored\n * in a protected format to prevent unauthorized access. It is also accompanied by\n * a certificate chain for the corresponding public key.\n *\n * @class GostKeys.KeyEntry\n * @property {(GostKeys.PKCS8|GostKeys.PKCS8Encrypted)} key The Private Key\n * @property {GostCert.X509[]} certs The X.509 Certificates chain\n * @property {GostCert.CRL[]} crls The X.509 CRLs for certificate chain\n */\n\n/**\n * This class represents a storage facility for cryptographic keys and certificates.\n *\n * @class GostKeys.KeyStore\n * @param {Object} entries Object contains aliased {@link KeyEntry} objects\n */\nfunction KeyStore(entries) // <editor-fold defaultstate=\"collapsed\">\n{\n    this.entries = {};\n    if (entries)\n        for (var name in entries)\n            this.setEntry(name, entries[name]);\n} // </editor-fold>\n\nextend(Object, KeyStore, {\n    /**\n     * Lists all the alias names of this keystore.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @returns {string[]}\n     */\n    aliases: function () // <editor-fold defaultstate=\"collapsed\">\n    {\n        var result = [];\n        for (var name in this.entries)\n            result.push(name);\n        return result;\n    }, // </editor-fold>\n    /**\n     * Checks if the given alias exists in this keystore.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {string} alias The alias name\n     * @returns {boolean} True if the alias exists, false otherwise\n     */\n    containsAlias: function (alias) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return !!this.entries[alias];\n    }, // </editor-fold>\n    /**\n     * Deletes the entry identified by the given alias from this keystore.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {string} alias The alias name\n     */\n    deleteEntry: function (alias) // <editor-fold defaultstate=\"collapsed\">\n    {\n        delete this.entries[alias];\n    }, // </editor-fold>\n    /**\n     * Saves a keystore Entry under the specified alias.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {string} alias The alias name\n     * @param {GostKeys.KeyEntry} entry The entry\n     */\n    setEntry: function (alias, entry)  // <editor-fold defaultstate=\"collapsed\">\n    {\n        var r = {};\n        // Keys\n        if (entry.key) {\n            try {\n                r.key = new PKCS8(entry.key, true); // Private key\n            } catch (e) {\n                try {\n                    r.key = new PKCS8Encrypted(entry.key, true); // Encrypted private key\n                } catch (e1) {\n                    if (entry.key instanceof CryptoOperationData)\n                        r.key = entry.key; // Secret key\n                    else\n                        throw new Error('Unknown Key format');\n                }\n            }\n        }\n        // Certs\n        if (entry.certs) {\n            var certs = entry.certs instanceof Array ? entry.certs : [entry.certs];\n            for (var i = 0; i < certs.length; i++) {\n                try {\n                    certs[i] = new cert.X509(certs[i]);\n                } catch (e) {\n                }\n            }\n            r.certs = certs;\n        }\n        // CRLs\n        if (entry.crls) {\n            var crls = entry.crls instanceof Array ? entry.crls : [entry.crls];\n            for (var i = 0; i < crls.length; i++) {\n                try {\n                    crls[i] = new cert.CRL(crls[i]);\n                } catch (e) {\n                }\n            }\n            r.crls = crls;\n        }\n        this.entries[alias] = r;\n    }, // </editor-fold>\n    /**\n     * Gets a keystore Entry for the specified alias\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {string} alias The alias name\n     * @returns {GostKeys.KeyEntry} The entry\n     */\n    getEntry: function (alias) // <editor-fold defaultstate=\"collapsed\">\n    {\n        return this.entries[alias];\n    }, // </editor-fold>\n    /**\n     * Loads this KeyStore from the given input stream.<br><br>\n     * A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device),\n     * or to check the integrity of the keystore data. If a password is not given for integrity checking,\n     * then integrity checking is not performed.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {(FormatedData|GostKeys.PKSC12)} store The input stream from which the keystore is loaded\n     * @param {string} password The password used to check the integrity of the keystore, the password used to unlock the keystore\n     * @returns {Promise} Promise to return self object after store loaded\n     */\n    load: function (store, password) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this;\n        return new Promise(call).then(function () {\n            // Verify store file\n            store = new PKCS12(store);\n            return store.verify(password);\n        }).then(function () {\n            if (store.authSafe.contentType !== 'data')\n                throw new Error('Unsupported PFX format');\n            var authSafe = asn1.AuthenticatedSafe.decode(store.authSafe.content).object,\n              promises = [];\n            // Decrypt encrypted content\n            authSafe.forEach(function (info) {\n                if (info.contentType === 'data')\n                    promises.push(new cms.DataContentInfo(info));\n                else if (info.contentType === 'encryptedData')\n                    promises.push(new cms.EncryptedDataContentInfo(info).getEnclosed(password));\n                else\n                    throw new Error('Unsupported PFX format');\n            });\n            return Promise.all(promises);\n        }).then(function (contents) {\n            // Read bags\n            var entries = {};\n            contents.forEach(function (info) {\n                var bags = asn1.SafeContents.decode(info.content).object;\n                bags.forEach(function (bag) {\n                    var keyId = coding.Hex.encode((bag.bagAttributes && bag.bagAttributes.localKeyId)\n                      || getSeed(4), true), entry = entries[keyId] || (entries[keyId] = {});\n                    switch (bag.bagId) {\n                        case 'keyBag':\n                            entry.key = new PKCS8(bag.bagValue);\n                            break;\n                        case 'pkcs8ShroudedKeyBag':\n                            entry.key = new PKCS8Encrypted(bag.bagValue);\n                            break;\n                        case 'secretBag':\n                            if (bag.bagValue.secretTypeId === 'secret')\n                                entry.key = bag.bagValue.secretValue;\n                            break;\n                        case 'certBag':\n                            var certs = entry.certs || (entry.certs = []);\n                            if (bag.bagValue.certId === 'x509Certificate')\n                                certs.push(new cert.X509(bag.bagValue.certValue));\n                            break;\n                        case 'crlBag':\n                            var crls = entry.crls || (entry.crls = []);\n                            if (bag.bagValue.crlId === 'x509CRL')\n                                crls.push(new cert.CRL(bag.bagValue.crlValue));\n                            break;\n                    }\n                    if (bag.bagAttributes && bag.bagAttributes.friendlyName)\n                        entry.friendlyName = bag.bagAttributes.friendlyName;\n                });\n            });\n            // Decrypt keys\n            var promises = [];\n            for (var name in entries)\n                promises.push((function (entry) {\n                    // Try to decrypt private key\n                    if (entry.key instanceof PKCS8Encrypted)\n                        return entry.key.getKey(password).then(function (key) {\n                            // Return entry with decrypted key\n                            entry.key = key;\n                            return entry;\n                        })['catch'](function () {\n                            // Return entry with encrypted key\n                            return entry;\n                        });\n                    else\n                        return entry;\n                })(entries[name]));\n            return Promise.all(promises);\n        }).then(function (entries) {\n            // Set alias names\n            entries.forEach(function (entry) {\n                var friendlyName = entry.friendlyName;\n                if (friendlyName) {\n                    delete entry.friendlyName;\n                    self.entries[friendlyName] = entry;\n                } else\n                    self.entries[generateUUID()] = entry;\n            });\n            return self;\n        });\n    }, // </editor-fold>\n    /**\n     * Stores this keystore to the given output stream, and protects its integrity with the given password.\n     *\n     * @memberOf GostKeys.KeyStore\n     * @instance\n     * @param {string} password The password to generate the keystore integrity check\n     * @param {string} digestAlgortihm The digest algorithm or provider name for integrity check\n     * @param {string} encryptionAlgortihm The encryption algorithm or provider name for encrypt certificates\n     * @returns {Promise} Promise to return {@link GostKeyst.PKCS12}\n     */\n    store: function (password, digestAlgortihm, encryptionAlgortihm) // <editor-fold defaultstate=\"collapsed\">\n    {\n        var self = this, keys = [], contents = [], authSafe = [];\n        return new Promise(call).then(function () {\n            // Define encryption algorithm\n            if (encryptionAlgortihm)\n                encryptionAlgortihm = providers[encryptionAlgortihm] ?\n                  providers[encryptionAlgortihm].pbes : encryptionAlgortihm;\n            else if (digestAlgortihm)\n                encryptionAlgortihm = providers[digestAlgortihm] ?\n                  providers[digestAlgortihm].pbes : providers[options.providerName].pbes;\n            else\n                encryptionAlgortihm = providers[options.providerName].pbes;\n            // Prepare keys and certs\n            var index = 1;\n            for (var name in self.entries) {\n                var keyId = new Uint32Array([index]), entry = self.entries[name];\n                if (entry.key) {\n                    (function (key, attributes) {\n                        if (key instanceof CryptoOperationData)\n                            contents.push({\n                                bagId: 'secretBag',\n                                bagValue: {\n                                    secretTypeId: 'secret',\n                                    secretValue: key,\n                                    bagAttributes: attributes\n                                }\n                            });\n                        else if (key instanceof PKCS8) {\n                            if (encryptionAlgortihm && password)\n                                keys.push(new PKCS8Encrypted().setKey(key, password, encryptionAlgortihm).then(function (encryptedKey) {\n                                    return {\n                                        bagId: 'pkcs8ShroudedKeyBag',\n                                        bagValue: encryptedKey,\n                                        bagAttributes: attributes\n                                    };\n                                }));\n                            else\n                                keys.push({\n                                    bagId: 'keyBag',\n                                    bagValue: key,\n                                    bagAttributes: attributes\n                                });\n                        } else if (key instanceof PKCS8Encrypted)\n                            keys.push({\n                                bagId: 'pkcs8ShroudedKeyBag',\n                                bagValue: key,\n                                bagAttributes: attributes\n                            });\n                    })(entry.key, {\n                        localKeyId: keyId,\n                        friendlyName: name\n                    });\n                }\n                if (entry.certs) {\n                    entry.certs.forEach(function (certificate) {\n                        var attributes = { localKeyId: keyId };\n                        if (certificate instanceof cert.X509)\n                            contents.push({\n                                bagId: 'certBag',\n                                bagValue: {\n                                    certId: 'x509Certificate',\n                                    certValue: certificate\n                                },\n                                bagAttributes: attributes\n                            });\n                    });\n                }\n                if (entry.crls) {\n                    entry.crls.forEach(function (crl) {\n                        var attributes = { localKeyId: keyId };\n                        if (crl instanceof cert.CRL)\n                            contents.push({\n                                bagId: 'crlBag',\n                                bagValue: {\n                                    crlId: 'x509CRL',\n                                    crlValue: crl\n                                },\n                                bagAttributes: attributes\n                            });\n                    });\n                }\n            }\n            // Encrypt keys\n            if (keys.length > 0)\n                return Promise.all(keys);\n        }).then(function (bags) {\n            if (bags) {\n                var keyContents = asn1.SafeContents.encode(bags);\n                authSafe.push(new cms.DataContentInfo({\n                    contentType: 'data',\n                    content: keyContents\n                }));\n            }\n\n            // Encrypt certificates and crls\n            if (contents.length > 0) {\n                contents = asn1.SafeContents.encode(contents);\n                if (encryptionAlgortihm && password)\n                    return new cms.EncryptedDataContentInfo().encloseContent(\n                      contents, password, encryptionAlgortihm);\n                else\n                    return new cms.DataContentInfo().encloseContent(contents);\n            }\n        }).then(function (contents) {\n            authSafe.push(contents);\n            // Set enclosed data\n            authSafe = new asn1.AuthenticatedSafe(authSafe);\n            var store = new PKCS12();\n            store.authSafe = {\n                contentType: 'data',\n                content: authSafe.encode()\n            };\n            // Return new PKCS12 with enclosed authenificated content\n            return store.sign(password, digestAlgortihm);\n        });\n    } // </editor-fold>\n});\n\n/**\n * This class represents a storage facility for cryptographic keys and certificates.\n *\n * @memberOf GostKeys\n * @type GostKeys.KeyStore\n */\nGostKeys.prototype.KeyStore = KeyStore;\n\nexport const gostKeysInstance = new GostKeys();\n","/**\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\n * @version 1.76\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\n */\n\nimport { GostDigest } from './gostDigest';\nimport { DataError, NotSupportedError } from '../utils/errors';\nimport { getSeed } from '../utils/seeds';\n\n/*\n * Predefined curves and params collection\n *\n * http://tools.ietf.org/html/rfc5832\n * http://tools.ietf.org/html/rfc7091\n * http://tools.ietf.org/html/rfc4357\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\nvar CryptoOperationData = ArrayBuffer;\n\n// Predefined named curve collection\nvar ECGostParams = {\n    'S-256-TEST': {\n        a: 7,\n        b: '0x5FBFF498AA938CE739B8E022FBAFEF40563F6E6A3472FC2A514C0CE9DAE23B7E',\n        p: '0x8000000000000000000000000000000000000000000000000000000000000431',\n        q: '0x8000000000000000000000000000000150FE8A1892976154C59CFC193ACCF5B3',\n        x: 2,\n        y: '0x8E2A8A0E65147D4BD6316030E16D19C85C97F0A9CA267122B96ABBCEA7E8FC8'\n    },\n    'S-256-A': {\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94',\n        b: 166,\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97',\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893',\n        x: 1,\n        y: '0x8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14'\n    },\n    'S-256-B': {\n        a: '0x8000000000000000000000000000000000000000000000000000000000000C96',\n        b: '0x3E1AF419A269A5F866A7D3C25C3DF80AE979259373FF2B182F49D4CE7E1BBC8B',\n        p: '0x8000000000000000000000000000000000000000000000000000000000000C99',\n        q: '0x800000000000000000000000000000015F700CFFF1A624E5E497161BCC8A198F',\n        x: 1,\n        y: '0x3FA8124359F96680B83D1C3EB2C070E5C545C9858D03ECFB744BF8D717717EFC'\n    },\n    'S-256-C': {\n        a: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D7598',\n        b: 32858,\n        p: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D759B',\n        q: '0x9B9F605F5A858107AB1EC85E6B41C8AA582CA3511EDDFB74F02F3A6598980BB9',\n        x: 0,\n        y: '0x41ECE55743711A8C3CBF3783CD08C0EE4D4DC440D4641A8F366E550DFDB3BB67'\n    },\n    'P-256': {\n        p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\n        a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\n        b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\n        x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\n        y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\n        q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\n    },\n    'T-512-TEST': {\n        a: 7,\n        b: '0x1CFF0806A31116DA29D8CFA54E57EB748BC5F377E49400FDD788B649ECA1AC4361834013B2AD7322480A89CA58E0CF74BC9E540C2ADD6897FAD0A3084F302ADC',\n        p: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DF1D852741AF4704A0458047E80E4546D35B8336FAC224DD81664BBF528BE6373',\n        q: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DA82F2D7ECB1DBAC719905C5EECC423F1D86E25EDBE23C595D644AAF187E6E6DF',\n        x: '0x24D19CC64572EE30F396BF6EBBFD7A6C5213B3B3D7057CC825F91093A68CD762FD60611262CD838DC6B60AA7EEE804E28BC849977FAC33B4B530F1B120248A9A',\n        y: '0x2BB312A43BD2CE6E0D020613C857ACDDCFBF061E91E5F2C3F32447C259F39B2C83AB156D77F1496BF7EB3351E1EE4E43DC1A18B91B24640B6DBB92CB1ADD371E'\n    },\n    'T-512-A': {\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC7',\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC4',\n        b: '0xE8C2505DEDFC86DDC1BD0B2B6667F1DA34B82574761CB0E879BD081CFD0B6265EE3CB090F30D27614CB4574010DA90DD862EF9D4EBEE4761503190785A71C760',\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27E69532F48D89116FF22B8D4E0560609B4B38ABFAD2B85DCACDB1411F10B275',\n        x: 3,\n        y: '0x7503CFE87A836AE3A61B8816E25450E6CE5E1C93ACF1ABC1778064FDCBEFA921DF1626BE4FD036E93D75E6A50E3A41E98028FE5FC235F5B889A589CB5215F2A4'\n    },\n    'T-512-B': {\n        p: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006F',\n        a: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006C',\n        b: '0x687D1B459DC841457E3E06CF6F5E2517B97C7D614AF138BCBF85DC806C4B289F3E965D2DB1416D217F8B276FAD1AB69C50F78BEE1FA3106EFB8CCBC7C5140116',\n        q: '0x800000000000000000000000000000000000000000000000000000000000000149A1EC142565A545ACFDB77BD9D40CFA8B996712101BEA0EC6346C54374F25BD',\n        x: 2,\n        y: '0x1A8F7EDA389B094C2C071E3647A8940F3C123B697578C213BE6DD9E6C8EC7335DCB228FD1EDF4A39152CBCAAF8C0398828041055F94CEEEC7E21340780FE41BD'\n    }\n};\nECGostParams['X-256-A'] = ECGostParams['S-256-A'];\nECGostParams['X-256-B'] = ECGostParams['S-256-C'];\nECGostParams['T-256-TEST'] = ECGostParams['S-256-TEST'];\nECGostParams['T-256-A'] = ECGostParams['S-256-A'];\nECGostParams['T-256-B'] = ECGostParams['S-256-B'];\nECGostParams['T-256-C'] = ECGostParams['S-256-C'];\n\n\nvar GostParams = {\n    'S-TEST': {\n        modulusLength: 512, // bit length of p (512 or 1024 bits)\n        p: '0xEE8172AE8996608FB69359B89EB82A69854510E2977A4D63BC97322CE5DC3386EA0A12B343E9190F23177539845839786BB0C345D165976EF2195EC9B1C379E3',\n        q: '0x98915E7EC8265EDFCDA31E88F24809DDB064BDC7285DD50D7289F0AC6F49DD2D',\n        a: '0x9e96031500c8774a869582d4afde2127afad2538b4b6270a6f7c8837b50d50f206755984a49e509304d648be2ab5aab18ebe2cd46ac3d8495b142aa6ce23e21c'\n    },\n    'S-A': {\n        modulusLength: 1024,\n        p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\n        q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\n        a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\n    },\n    'S-B': {\n        modulusLength: 1024,\n        p: '0xC6971FC57524B30C9018C5E621DE15499736854F56A6F8AEE65A7A404632B1BCF0349FFCAFCB0A103177971FC1612ADCDB8C8CC938C70225C8FD12AFF01B1D064E0AD6FDE6AB9159166CB9F2FC171D92F0CC7B6A6B2CD7FA342ACBE2C9315A42D576B1ECCE77A963157F3D0BD96A8EB0B0F3502AD238101B05116334F1E5B7AB',\n        q: '0xB09D634C10899CD7D4C3A7657403E05810B07C61A688BAB2C37F475E308B0607',\n        a: '0x3D26B467D94A3FFC9D71BF8DB8934084137264F3C2E9EB16DCA214B8BC7C872485336744934FD2EF5943F9ED0B745B90AA3EC8D70CDC91682478B664A2E1F8FB56CEF2972FEE7EDB084AF746419B854FAD02CC3E3646FF2E1A18DD4BEB3C44F7F2745588029649674546CC9187C207FB8F2CECE8E2293F68395C4704AF04BAB5'\n    },\n    'S-C': {\n        modulusLength: 1024,\n        p: '0x9D88E6D7FE3313BD2E745C7CDD2AB9EE4AF3C8899E847DE74A33783EA68BC30588BA1F738C6AAF8AB350531F1854C3837CC3C860FFD7E2E106C3F63B3D8A4C034CE73942A6C3D585B599CF695ED7A3C4A93B2B947B7157BB1A1C043AB41EC8566C6145E938A611906DE0D32E562494569D7E999A0DDA5C879BDD91FE124DF1E9',\n        q: '0xFADD197ABD19A1B4653EECF7ECA4D6A22B1F7F893B641F901641FBB555354FAF',\n        a: '0x7447ED7156310599070B12609947A5C8C8A8625CF1CF252B407B331F93D639DDD1BA392656DECA992DD035354329A1E95A6E32D6F47882D960B8F10ACAFF796D13CD9611F853DAB6D2623483E46788708493937A1A29442598AEC2E0742022563440FE9C18740ECE6765AC05FAF024A64B026E7E408840819E962E7E5F401AE3'\n    },\n    'S-D': {\n        modulusLength: 1024,\n        p: '0x80F102D32B0FD167D069C27A307ADAD2C466091904DBAA55D5B8CC7026F2F7A1919B890CB652C40E054E1E9306735B43D7B279EDDF9102001CD9E1A831FE8A163EED89AB07CF2ABE8242AC9DEDDDBF98D62CDDD1EA4F5F15D3A42A6677BDD293B24260C0F27C0F1D15948614D567B66FA902BAA11A69AE3BCEADBB83E399C9B5',\n        q: '0xF0F544C418AAC234F683F033511B65C21651A6078BDA2D69BB9F732867502149',\n        a: '0x6BCC0B4FADB3889C1E06ADD23CC09B8AB6ECDEDF73F04632595EE4250005D6AF5F5ADE44CB1E26E6263C672347CFA26F9E9393681E6B759733784CDE5DBD9A14A39369DFD99FA85CC0D10241C4010343F34A91393A706CF12677CBFA1F578D6B6CFBE8A1242CFCC94B3B653A476E145E3862C18CC3FED8257CFEF74CDB205BF1'\n    },\n    'X-A': {\n        modulusLength: 1024,\n        p: '0xCA3B3F2EEE9FD46317D49595A9E7518E6C63D8F4EB4D22D10D28AF0B8839F079F8289E603B03530784B9BB5A1E76859E4850C670C7B71C0DF84CA3E0D6C177FE9F78A9D8433230A883CD82A2B2B5C7A3306980278570CDB79BF01074A69C9623348824B0C53791D53C6A78CAB69E1CFB28368611A397F50F541E16DB348DBE5F',\n        q: '0xCAE4D85F80C147704B0CA48E85FB00A9057AA4ACC44668E17F1996D7152690D9',\n        a: '0xBE27D652F2F1E339DA734211B85B06AE4DE236AA8FBEEB3F1ADCC52CD43853777E834A6A518138678A8ADBD3A55C70A7EAB1BA7A0719548677AAF4E609FFB47F6B9D7E45B0D06D83D7ADC53310ABD85783E7317F7EC73268B6A9C08D260B85D8485696CA39C17B17F044D1E050489036ABD381C5E6BF82BA352A1AFF136601AF'\n    },\n    'X-B': {\n        modulusLength: 1024,\n        p: '0x9286DBDA91ECCFC3060AA5598318E2A639F5BA90A4CA656157B2673FB191CD0589EE05F4CEF1BD13508408271458C30851CE7A4EF534742BFB11F4743C8F787B11193BA304C0E6BCA25701BF88AF1CB9B8FD4711D89F88E32B37D95316541BF1E5DBB4989B3DF13659B88C0F97A3C1087B9F2D5317D557DCD4AFC6D0A754E279',\n        q: '0xC966E9B3B8B7CDD82FF0F83AF87036C38F42238EC50A876CD390E43D67B6013F',\n        a: '0x7E9C3096676F51E3B2F9884CF0AC2156779496F410E049CED7E53D8B7B5B366B1A6008E5196605A55E89C3190DABF80B9F1163C979FCD18328DAE5E9048811B370107BB7715F82091BB9DE0E33EE2FED6255474F8769FCE5EAFAEEF1CB5A32E0D5C6C2F0FC0B3447072947F5B4C387666993A333FC06568E534AD56D2338D729'\n    },\n    'X-C': {\n        modulusLength: 1024,\n        p: '0xB194036ACE14139D36D64295AE6C50FC4B7D65D8B340711366CA93F383653908EE637BE428051D86612670AD7B402C09B820FA77D9DA29C8111A8496DA6C261A53ED252E4D8A69A20376E6ADDB3BDCD331749A491A184B8FDA6D84C31CF05F9119B5ED35246EA4562D85928BA1136A8D0E5A7E5C764BA8902029A1336C631A1D',\n        q: '0x96120477DF0F3896628E6F4A88D83C93204C210FF262BCCB7DAE450355125259',\n        a: '0x3F1817052BAA7598FE3E4F4FC5C5F616E122CFF9EBD89EF81DC7CE8BF56CC64B43586C80F1C4F56DD5718FDD76300BE336784259CA25AADE5A483F64C02A20CF4A10F9C189C433DEFE31D263E6C9764660A731ECCAECB74C8279303731E8CF69205BC73E5A70BDF93E5BB681DAB4EEB9C733CAAB2F673C475E0ECA921D29782E'\n    }\n}; // </editor-fold>\n\n/*\n * BigInteger arithmetic tools\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Bits per one element\nvar DB = 28, DM = (1 << DB) - 1, DV = 1 << DB,\n  FV = Math.pow(2, 52), F1 = 52 - DB, F2 = 2 * DB - 52;\n\nfunction am(y, i, x, w, j, c, n) {\n    var xl = x & 0x3fff, xh = x >> 14;\n    while (--n >= 0) {\n        var l = y[i] & 0x3fff;\n        var h = y[i++] >> 14;\n        var m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\n\nfunction nbi(words) {\n    var r = new Array(Math.ceil(words));\n    r.s = 0;\n    r.t = 0;\n    return r;\n}\n\nfunction copyTo(x, r) {\n    for (var i = x.t - 1; i >= 0; --i)\n        r[i] = x[i];\n    r.t = x.t;\n    r.s = x.s;\n    return r;\n}\n\nfunction copy(x) {\n    return copyTo(x, nbi(x.t));\n}\n\nfunction setInt(x, i) {\n    x.t = 1;\n    x.s = (i < 0) ? -1 : 0;\n    if (i > 0)\n        x[0] = i;\n    else if (i < -1)\n        x[0] = i + DV;\n    else\n        x.t = 0;\n    return x;\n}\n\nfunction nbv(i) {\n    var r = nbi(1);\n    setInt(r, i);\n    return r;\n}\n\nvar ZERO = nbv(0), ONE = nbv(1), THREE = nbv(3);\n\nfunction clamp(x) {\n    var c = x.s & DM;\n    while (x.t > 0 && x[x.t - 1] === c)\n        --x.t;\n    return x;\n}\n\nfunction subTo(x, a, r) {\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\n    while (i < m) {\n        c += x[i] - a[i];\n        r[i++] = c & DM;\n        c >>= DB;\n    }\n    if (a.t < x.t) {\n        c -= a.s;\n        while (i < x.t) {\n            c += x[i];\n            r[i++] = c & DM;\n            c >>= DB;\n        }\n        c += x.s;\n    }\n    else {\n        c += x.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & DM;\n            c >>= DB;\n        }\n        c -= a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c < -1)\n        r[i++] = DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    return clamp(r);\n}\n\nfunction sub(x, y) {\n    return subTo(x, y, nbi(x.t));\n}\n\nfunction addTo(x, a, r) {\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\n    while (i < m) {\n        c += x[i] + a[i];\n        r[i++] = c & DM;\n        c >>= DB;\n    }\n    if (a.t < x.t) {\n        c += a.s;\n        while (i < x.t) {\n            c += x[i];\n            r[i++] = c & DM;\n            c >>= DB;\n        }\n        c += x.s;\n    }\n    else {\n        c += x.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & DM;\n            c = c >> DB;\n        }\n        c += a.s;\n    }\n    r.s = (c < 0) ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = DV + c;\n    r.t = i;\n    return clamp(r);\n}\n\nfunction add(x, y) {\n    return addTo(x, y, nbi(x.t));\n}\n\nfunction negTo(x, r) {\n    return subTo(ZERO, x, r);\n}\n\nfunction neg(x) {\n    return negTo(x, nbi(x.t));\n}\n\nfunction absTo(x, r) {\n    return (x.s < 0) ? negTo(r) : copyTo(r);\n}\n\nfunction abs(x) {\n    return (x.s < 0) ? neg(x) : x;\n}\n\nfunction compare(x, a) {\n    var r = x.s - a.s;\n    if (r !== 0)\n        return r;\n    var i = x.t;\n    r = i - a.t;\n    if (r !== 0)\n        return (x.s < 0) ? -r : r;\n    while (--i >= 0)\n        if ((r = x[i] - a[i]) !== 0)\n            return r;\n    return 0;\n}\n\nfunction equals(x, y) {\n    return (compare(x, y) === 0);\n}\n\nfunction min(x, y) {\n    return (compare(x, y) < 0) ? x : y;\n}\n\nfunction max(x, y) {\n    return (compare(x, y) > 0) ? x : y;\n}\n\nfunction nbits(x) {\n    var r = 1, t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n\nfunction dshlTo(x, n, r) {\n    var i;\n    for (i = x.t - 1; i >= 0; --i)\n        r[i + n] = x[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = x.t + n;\n    r.s = x.s;\n    return r;\n}\n\nfunction dshrTo(x, n, r) {\n    for (var i = n; i < x.t; ++i)\n        r[i - n] = x[i];\n    r.t = Math.max(x.t - n, 0);\n    r.s = x.s;\n    return r;\n}\n\nfunction shlTo(x, n, r) {\n    var bs = n % DB;\n    var cbs = DB - bs;\n    var bm = (1 << cbs) - 1;\n    var ds = Math.floor(n / DB), c = (x.s << bs) & DM, i;\n    for (i = x.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (x[i] >> cbs) | c;\n        c = (x[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = x.t + ds + 1;\n    r.s = x.s;\n    return clamp(r);\n}\n\nfunction shrTo(x, n, r) {\n    r.s = x.s;\n    var ds = Math.floor(n / DB);\n    if (ds >= x.t) {\n        r.t = 0;\n        return;\n    }\n    var bs = n % DB;\n    var cbs = DB - bs;\n    var bm = (1 << bs) - 1;\n    r[0] = x[ds] >> bs;\n    for (var i = ds + 1; i < x.t; ++i) {\n        r[i - ds - 1] |= (x[i] & bm) << cbs;\n        r[i - ds] = x[i] >> bs;\n    }\n    if (bs > 0)\n        r[x.t - ds - 1] |= (x.s & bm) << cbs;\n    r.t = x.t - ds;\n    return clamp(r);\n}\n\nfunction shl(x, n) {\n    var r = nbi(x.t);\n    if (n < 0)\n        shrTo(x, -n, r);\n    else\n        shlTo(x, n, r);\n    return r;\n}\n\nfunction shr(x, n) {\n    var r = nbi(x.t);\n    if (n < 0)\n        shlTo(x, -n, r);\n    else\n        shrTo(x, n, r);\n    return r;\n}\n\nfunction bitLength(x) {\n    if (x.t <= 0)\n        return 0;\n    return DB * (x.t - 1) + nbits(x[x.t - 1] ^ (x.s & DM));\n}\n\nfunction mulTo(b, a, r) {\n    var x = abs(b), y = abs(a);\n    var i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = am(x, 0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    if (b.s !== a.s)\n        subTo(ZERO, r, r);\n    return clamp(r);\n}\n\nfunction mul(x, y) {\n    return mulTo(x, y, nbi(x.t + y.t));\n}\n\nfunction sqrTo(a, r) {\n    var x = abs(a);\n    var i = r.t = 2 * x.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        var c = am(x, i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += am(x, i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += am(x, i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    return clamp(r);\n}\n\nfunction sqr(a) {\n    return sqrTo(a, nbi(a.t * 2));\n}\n\nfunction divRemTo(n, m, q, r) {\n    var pm = abs(m);\n    if (pm.t <= 0)\n        throw new OperationError('Division by zero');\n    var pt = abs(n);\n    if (pt.t < pm.t) {\n        if (q)\n            setInt(q, 0);\n        if (r)\n            copyTo(n, r);\n        return q;\n    }\n    if (!r)\n        r = nbi(m.t);\n    var y = nbi(m.t), ts = n.s, ms = m.s;\n    var nsh = DB - nbits(pm[pm.t - 1]);\n    if (nsh > 0) {\n        shlTo(pm, nsh, y);\n        shlTo(pt, nsh, r);\n    }\n    else {\n        copyTo(pm, y);\n        copyTo(pt, r);\n    }\n    var ys = y.t;\n    var y0 = y[ys - 1];\n    if (y0 === 0)\n        return q;\n    var yt = y0 * (1 << F1) + ((ys > 1) ? y[ys - 2] >> F2 : 0);\n    var d1 = FV / yt, d2 = (1 << F1) / yt, e = 1 << F2;\n    var i = r.t, j = i - ys, t = !q ? nbi(Math.max(n.t - m.t, 1)) : q;\n    dshlTo(y, j, t);\n    if (compare(r, t) >= 0) {\n        r[r.t++] = 1;\n        subTo(r, t, r);\n    }\n    dshlTo(ONE, ys, t);\n    subTo(t, y, y);\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        var qd = (r[--i] === y0) ? DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += am(y, 0, qd, r, j, 0, ys)) < qd) {\n            dshlTo(y, j, t);\n            subTo(r, t, r);\n            while (r[i] < --qd)\n                subTo(r, t, r);\n        }\n    }\n    if (q) {\n        dshrTo(r, ys, q);\n        if (ts !== ms)\n            subTo(ZERO, q, q);\n    }\n    r.t = ys;\n    clamp(r);\n    if (nsh > 0)\n        shrTo(r, nsh, r);\n    if (ts < 0)\n        subTo(ZERO, r, r);\n    return q;\n}\n\nfunction modTo(b, a, r) {\n    divRemTo(abs(b), a, null, r);\n    if (b.s < 0 && compare(r, ZERO) > 0)\n        subTo(a, r, r);\n    return r;\n}\n\nfunction mod(b, a) {\n    return modTo(b, a, nbi(a.t));\n}\n\nfunction div(b, a) {\n    return divRemTo(b, a, nbi(Math.max(b.t - a.t, 1)), null);\n}\n\nfunction isEven(x) {\n\n    return ((x.t > 0) ? (x[0] & 1) : x.s) === 0;\n}\n\nfunction isZero(x) {\n    return equals(x, ZERO);\n}\n\nfunction sig(x) {\n    if (x.s < 0)\n        return -1;\n    else if (x.t <= 0 || (x.t === 1 && x[0] <= 0))\n        return 0;\n    else\n        return 1;\n}\n\nfunction invMod(x, m) {\n    var ac = isEven(m);\n    if ((isEven(x) && ac) || sig(m) === 0)\n        return ZERO;\n    var u = copy(m), v = copy(x);\n    var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n    while (sig(u) !== 0) {\n        while (isEven(u)) {\n            shrTo(u, 1, u);\n            if (ac) {\n                if (!isEven(a) || !isEven(b)) {\n                    addTo(a, x, a);\n                    subTo(b, m, b);\n                }\n                shrTo(a, 1, a);\n            }\n            else if (!isEven(b))\n                subTo(b, m, b);\n            shrTo(b, 1, b);\n        }\n        while (isEven(v)) {\n            shrTo(v, 1, v);\n            if (ac) {\n                if (!isEven(c) || !isEven(d)) {\n                    addTo(c, x, c);\n                    subTo(d, m, d);\n                }\n                shrTo(c, 1, c);\n            }\n            else if (!isEven(d))\n                subTo(d, m, d);\n            shrTo(d, 1, d);\n        }\n        if (compare(u, v) >= 0) {\n            subTo(u, v, u);\n            if (ac)\n                subTo(a, c, a);\n            subTo(b, d, b);\n        }\n        else {\n            subTo(v, u, v);\n            if (ac)\n                subTo(c, a, c);\n            subTo(d, b, d);\n        }\n    }\n    if (compare(v, ONE) !== 0)\n        return ZERO;\n    if (compare(d, m) >= 0)\n        return subtract(d, m);\n    if (sig(d) < 0)\n        addTo(d, m, d);\n    else\n        return d;\n    if (sig(d) < 0)\n        return add(d, m);\n    else\n        return d;\n}\n\nfunction testBit(x, n) {\n    var j = Math.floor(n / DB);\n    if (j >= x.t)\n        return (x.s !== 0);\n    return ((x[j] & (1 << (n % DB))) !== 0);\n}\n\nfunction nothing(x) {\n    return x;\n}\n\nfunction extend(c, o) {\n    for (var i in o)\n        c.prototype[i] = o[i];\n} // </editor-fold>\n\n/*\n * Classic, Barret, Mongomery reductions, optimized ExpMod algorithms\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn2.js\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// Classic reduction\nvar Classic = function (m) {\n    this.m = m;\n};\n\nextend(Classic, {\n    convert: function (x) {\n        if (x.s < 0 || compare(x, this.m) >= 0)\n            return mod(x, this.m);\n        else\n            return x;\n    },\n    revert: nothing,\n    reduce: function (x) {\n        modTo(x, this.m, x);\n    },\n    sqrTo: function (x, r) {\n        sqrTo(x, r);\n        this.reduce(r);\n    },\n    mulTo: function (x, y, r) {\n        mulTo(x, y, r);\n        this.reduce(r);\n    }\n});\n\nfunction invDig(a) {\n    if (a.t < 1)\n        return 0;\n    var x = a[0];\n    if ((x & 1) === 0)\n        return 0;\n    var y = x & 3;\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    y = (y * (2 - x * y % DV)) % DV;\n    return (y > 0) ? DV - y : -y;\n}\n\n// Montgomery reduction\nvar Montgomery = function (m) {\n    this.m = m;\n    this.mp = invDig(m);\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n};\n\nextend(Montgomery, {\n    // xR mod m\n    convert: function (x) {\n        var r = nbi(x.t);\n        dshlTo(abs(x), this.m.t, r);\n        divRemTo(r, this.m, null, r);\n        if (x.s < 0 && compare(r, ZERO) > 0)\n            subTo(this.m, r, r);\n        return r;\n    },\n    // x/R mod m\n    revert: function (x) {\n        var r = nbi(x.t);\n        copyTo(x, r);\n        this.reduce(r);\n        return r;\n    },\n    // x = x/R mod m (HAC 14.32)\n    reduce: function (x) {\n        while (x.t <= this.mt2)\n            x[x.t++] = 0;\n        for (var i = 0; i < this.m.t; ++i) {\n            var j = x[i] & 0x7fff;\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & DM;\n            j = i + this.m.t;\n            x[j] += am(this.m, 0, u0, x, i, 0, this.m.t);\n            while (x[j] >= DV) {\n                x[j] -= DV;\n                x[++j]++;\n            }\n        }\n        clamp(x);\n        dshrTo(x, this.m.t, x);\n        if (compare(x, this.m) >= 0)\n            subTo(x, this.m, x);\n    },\n    // r = \"x^2/R mod m\"; x != r\n    sqrTo: function (x, r) {\n        sqrTo(x, r);\n        this.reduce(r);\n    },\n    // r = \"xy/R mod m\"; x,y != r\n    mulTo: function (x, y, r) {\n        mulTo(x, y, r);\n        this.reduce(r);\n    }\n});\n\nfunction dAddOffset(x, n, w) {\n    if (n === 0)\n        return;\n    while (x.t <= w)\n        x[x.t++] = 0;\n    x[w] += n;\n    while (x[w] >= DV) {\n        x[w] -= DV;\n        if (++w >= x.t)\n            x[x.t++] = 0;\n        ++x[w];\n    }\n}\n\nfunction mulLowerTo(x, a, n, r) {\n    var i = Math.min(x.t + a.t, n);\n    r.s = 0; // assumes a,x >= 0\n    r.t = i;\n    while (i > 0)\n        r[--i] = 0;\n    var j;\n    for (j = r.t - x.t; i < j; ++i)\n        r[i + x.t] = am(x, 0, a[i], r, i, 0, x.t);\n    for (j = Math.min(a.t, n); i < j; ++i)\n        am(x, 0, a[i], r, i, 0, n - i);\n    return clamp(r);\n}\n\nfunction mulUpperTo(x, a, n, r) {\n    --n;\n    var i = r.t = x.t + a.t - n;\n    r.s = 0; // assumes a,x >= 0\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = Math.max(n - x.t, 0); i < a.t; ++i)\n        r[x.t + i - n] = am(x, n - i, a[i], r, 0, 0, x.t + i - n);\n    clamp(r);\n    return dshrTo(r, 1, r);\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n    // setup Barrett\n    this.r2 = nbi(2 * m.t);\n    this.q3 = nbi(2 * m.t);\n    dshlTo(ONE, 2 * m.t, this.r2);\n    this.mu = div(this.r2, m);\n    this.m = m;\n}\n\nextend(Barrett, {\n    convert: function (x) {\n        if (x.s < 0 || x.t > 2 * this.m.t)\n            return mod(x, this.m);\n        else if (compare(x, this.m) < 0)\n            return x;\n        else {\n            var r = nbi(x.t);\n            copyTo(x, r);\n            this.reduce(r);\n            return r;\n        }\n    },\n    revert: function (x) {\n        return x;\n    },\n    // x = x mod m (HAC 14.42)\n    reduce: function (x) {\n        dshrTo(x, this.m.t - 1, this.r2);\n        if (x.t > this.m.t + 1) {\n            x.t = this.m.t + 1;\n            clamp(x);\n        }\n        mulUpperTo(this.mu, this.r2, this.m.t + 1, this.q3);\n        mulLowerTo(this.m, this.q3, this.m.t + 1, this.r2);\n        while (compare(x, this.r2) < 0)\n            dAddOffset(x, 1, this.m.t + 1);\n        subTo(x, this.r2, x);\n        while (compare(x, this.m) >= 0)\n            subTo(x, this.m, x);\n    },\n    // r = x^2 mod m; x != r\n    sqrTo: function (x, r) {\n        sqrTo(x, r);\n        this.reduce(r);\n    },\n    // r = x*y mod m; x,y != r\n    mulTo: function (x, y, r) {\n        mulTo(x, y, r);\n        this.reduce(r);\n    }\n\n});\n\n// x^e % m (HAC 14.85)\nfunction expMod(x, e, m) {\n    var i = bitLength(e), k, r = nbv(1), z;\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    if (i < 8)\n        z = new Classic(m);\n    else if (isEven(m))\n        z = new Barrett(m);\n    else\n        z = new Montgomery(m);\n\n    // precomputation\n    var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\n    g[1] = z.convert(x);\n    if (k > 1) {\n        var g2 = nbi(m.t * 2);\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi(m.t * 2);\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n\n    var j = e.t - 1, w, is1 = true, r2 = nbi(m.t * 2), t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (DB + i - k1);\n        }\n\n        n = k;\n        while ((w & 1) == 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += DB;\n            --j;\n        }\n        if (is1) {\t// ret == 1, don't bother squaring or multiplying it\n            copyTo(g[w], r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) == 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = DB - 1;\n                --j;\n            }\n        }\n    }\n    return z.revert(r);\n} // </editor-fold>\n\n/*\n * EC Field Elements, Points, Curves\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/ec.js\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\n// EC Field Elemets\nfunction newFE(a, x) {\n    a.r.reduce(x);\n    x.q = a.q;\n    x.r = a.r;\n    return x;\n}\n\nfunction copyFE(a, x) {\n    x.q = a.q;\n    x.r = a.r;\n    return x;\n}\n\nfunction negFE(a) {\n    return copyFE(a, sub(a.q, a));\n}\n\nfunction addFE(a, b) {\n    var r = add(a, b);\n    if (compare(r, a.q) > 0)\n        subTo(r, a.q, r);\n    return copyFE(a, r);\n}\n\nfunction subFE(a, b) {\n    var r = sub(a, b);\n    if (r.s < 0)\n        addTo(a.q, r, r);\n    return copyFE(a, r);\n}\n\nfunction mulFE(a, b) {\n    return newFE(a, mul(a, b));\n}\n\nfunction sqrFE(a) {\n    return newFE(a, sqr(a));\n}\n\nfunction shlFE(a, i) {\n    return newFE(a, shl(a, i));\n}\n\nfunction invFE(a) {\n    return copyFE(a, invMod(a, a.q));\n}\n\n// EC Points\nfunction newEC(curve, x, y, z) {\n    return {\n        curve: curve,\n        x: x,\n        y: y,\n        z: z || newFE(curve, ONE)\n    };\n}\n\nfunction getX(point) {\n    if (!point.zinv)\n        point.zinv = invFE(point.z);\n    return mulFE(point.x, point.zinv);\n}\n\nfunction getY(point) {\n    if (!point.zinv)\n        point.zinv = invFE(point.z);\n    return mulFE(point.y, point.zinv);\n}\n\nfunction isInfinity(a) {\n    if ((!a.x) && (!a.y))\n        return true;\n    return isZero(a.z) && !isZero(a.y);\n}\n\nfunction getInfinity(a) {\n    return a.curve.infinity;\n}\n\nfunction equalsEC(a, b) {\n    if (a === b)\n        return true;\n    if (isInfinity(a))\n        return isInfinity(b);\n    if (isInfinity(b))\n        return isInfinity(a);\n    var u, v;\n    // u = Y2 * Z1 - Y1 * Z2\n    u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\n    if (!isZero(u))\n        return false;\n    // v = X2 * Z1 - X1 * Z2\n    v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\n    return isZero(v);\n}\n\nfunction negEC(a) {\n    return newEC(a.curve, a.x, negFE(a.y), a.z);\n}\n\nfunction addEC(a, b) {\n    if (isInfinity(a))\n        return b;\n    if (isInfinity(b))\n        return a;\n\n    // u = Y2 * Z1 - Y1 * Z2\n    var u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\n    // v = X2 * Z1 - X1 * Z2\n    var v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\n\n    if (isZero(v)) {\n        if (isZero(u)) {\n            return twiceEC(a); // a == b, so double\n        }\n        return getInfinity(a); // a = -b, so infinity\n    }\n\n    var x1 = a.x;\n    var y1 = a.y;\n\n    var v2 = sqrFE(v);\n    var v3 = mulFE(v2, v);\n    var x1v2 = mulFE(x1, v2);\n    var zu2 = mulFE(sqrFE(u), a.z);\n\n    // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n    var x3 = mulFE(subFE(mulFE(subFE(zu2, shlFE(x1v2, 1)), b.z), v3), v);\n    // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n    var y3 = addFE(mulFE(subFE(subFE(mulFE(mulFE(x1v2, THREE), u), mulFE(y1, v3)), mulFE(zu2, u)), b.z), mulFE(u, v3));\n    // z3 = v^3 * z1 * z2\n    var z3 = mulFE(mulFE(v3, a.z), b.z);\n\n    return newEC(a.curve, x3, y3, z3);\n}\n\nfunction twiceEC(b) {\n    if (isInfinity(b))\n        return b;\n    if (sig(b.y) === 0)\n        return getInfinity(b);\n\n    var x1 = b.x;\n    var y1 = b.y;\n\n    var y1z1 = mulFE(y1, b.z);\n    var y1sqz1 = mulFE(y1z1, y1);\n    var a = b.curve.a;\n\n    // w = 3 * x1^2 + a * z1^2\n    var w = mulFE(sqrFE(x1), THREE);\n    if (!isZero(a)) {\n        w = addFE(w, mulFE(sqrFE(b.z), a));\n    }\n\n    // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n    var x3 = mulFE(shlFE(subFE(sqrFE(w), mulFE(shlFE(x1, 3), y1sqz1)), 1), y1z1);\n    // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n    var y3 = subFE(mulFE(shlFE(subFE(mulFE(mulFE(w, THREE), x1), shlFE(y1sqz1, 1)), 2), y1sqz1), mulFE(sqrFE(w), w));\n    // z3 = 8 * (y1 * z1)^3\n    var z3 = shlFE(mulFE(sqrFE(y1z1), y1z1), 3);\n\n    return newEC(b.curve, x3, y3, z3);\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\nfunction mulEC(a, k) {\n    if (isInfinity(a))\n        return a;\n    if (sig(k) === 0)\n        return getInfinity(a);\n\n    var e = k;\n    var h = mul(e, THREE);\n\n    var neg = negEC(a);\n    var R = a;\n\n    var i;\n    for (i = bitLength(h) - 2; i > 0; --i) {\n        R = twiceEC(R);\n\n        var hBit = testBit(h, i);\n        var eBit = testBit(e, i);\n\n        if (hBit !== eBit) {\n            R = addEC(R, hBit ? a : neg);\n        }\n    }\n\n    return R;\n}\n\nfunction mul2AndAddEC(a, k) {\n    var nbits = bitLength(k);\n    var R = a,\n      Q = getInfinity(a);\n\n    for (var i = 0; i < nbits - 1; i++) {\n        if (testBit(k, i) === 1)\n            Q = addEC(Q, R);\n\n        R = twiceEC(R);\n    }\n\n    if (testBit(k, nbits - 1) === 1)\n        Q = addEC(Q, R);\n\n    return Q;\n}\n\n// Compute a*j + x*k (simultaneous multiplication)\nfunction mulTwoEC(a, j, x, k) {\n    var i;\n    if (bitLength(j) > bitLength(k))\n        i = bitLength(j) - 1;\n    else\n        i = bitLength(k) - 1;\n\n    var R = getInfinity(a);\n    var both = addEC(a, x);\n    while (i >= 0) {\n        R = twiceEC(R);\n        if (testBit(j, i)) {\n            if (testBit(k, i)) {\n                R = addEC(R, both);\n            }\n            else {\n                R = addEC(R, a);\n            }\n        }\n        else {\n            if (testBit(k, i)) {\n                R = addEC(R, x);\n            }\n        }\n        --i;\n    }\n\n    return R;\n}\n\n// EC Curve\nfunction newCurve(q, a, b) {\n    var curve = {};\n    curve.q = q;\n    curve.r = new Barrett(q);\n    curve.a = newFE(curve, a);\n    curve.b = newFE(curve, b);\n    curve.infinity = newEC(curve);\n    return curve;\n} // </editor-fold>\n\n/*\n * Converion tools (hex, binary)\n *\n */ // <editor-fold defaultstate=\"collapsed\">\n\nfunction atobi(d) {\n    var k = 8;\n    var a = new Uint8Array(d);\n    var r = nbi(a.length * 8 / DB);\n    r.t = 0;\n    r.s = 0;\n    var sh = 0;\n    for (var i = 0, n = a.length; i < n; i++) {\n        var x = a[i];\n        if (sh === 0)\n            r[r.t++] = x;\n        else if (sh + k > DB) {\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n            r[r.t++] = (x >> (DB - sh));\n        }\n        else\n            r[r.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= DB)\n            sh -= DB;\n    }\n    return clamp(r);\n}\n\nfunction bitoa(s, bitLength) {\n    var k = 8;\n    var km = (1 << k) - 1, d, m = false, r = [], i = s.t;\n    var p = DB - (i * DB) % k;\n    if (i-- > 0) {\n        if (p < DB && (d = s[i] >> p) > 0) {\n            m = true;\n            r.push(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (s[i] & ((1 << p) - 1)) << (k - p);\n                d |= s[--i] >> (p += DB - k);\n            }\n            else {\n                d = (s[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r.push(d);\n        }\n    }\n    var r8 = new Uint8Array(bitLength ? bitLength / 8 : r.length);\n    if (m)\n        r8.set(r.reverse());\n    return r8.buffer;\n}\n\n\nfunction htobi(s) {\n    if (typeof s === 'number' || s instanceof Number)\n        return nbv(s);\n    s = s.replace(/[^\\-A-Fa-f0-9]/g, '');\n    if (!s)\n        s = '0';\n    var k = 4;\n    var r = nbi(s.length / 7);\n    var i = s.length, mi = false, sh = 0;\n    while (--i >= 0) {\n        var c = s.charAt(i);\n        if (c === '-') {\n            mi = true;\n            continue;\n        }\n        var x = parseInt(s.charAt(i), 16);\n        mi = false;\n        if (sh === 0)\n            r[r.t++] = x;\n        else if (sh + k > DB) {\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n            r[r.t++] = (x >> (DB - sh));\n        }\n        else\n            r[r.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= DB)\n            sh -= DB;\n    }\n    if (mi)\n        subTo(ZERO, r, r);\n    return clamp(r);\n}\n\nfunction bitoh(x) {\n    if (x.s < 0)\n        return \"-\" + bitoh(negTo(x, nbi(x.t)));\n    var k = 4;\n    var km = (1 << k) - 1, d, m = false, r = \"\", i = x.t;\n    var p = DB - (i * DB) % k;\n    if (i-- > 0) {\n        if (p < DB && (d = x[i] >> p) > 0) {\n            m = true;\n            r = d.toString(16);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (x[i] & ((1 << p) - 1)) << (k - p);\n                d |= x[--i] >> (p += DB - k);\n            }\n            else {\n                d = (x[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += d.toString(16);\n        }\n    }\n    return \"0x\" + (m ? r : \"0\");\n}\n\n// biginteger to big-endian integer bytearray\nfunction bitoi(s) {\n    var i = s.t, r = [];\n    r[0] = s.s;\n    var p = DB - (i * DB) % 8, d, k = 0;\n    if (i-- > 0) {\n        if (p < DB && (d = s[i] >> p) !== (s.s & DM) >> p)\n            r[k++] = d | (s.s << (DB - p));\n        while (i >= 0) {\n            if (p < 8) {\n                d = (s[i] & ((1 << p) - 1)) << (8 - p);\n                d |= s[--i] >> (p += DB - 8);\n            }\n            else {\n                d = (s[i] >> (p -= 8)) & 0xff;\n                if (p <= 0) {\n                    p += DB;\n                    --i;\n                }\n            }\n            if ((d & 0x80) !== 0)\n                d |= -256;\n            if (k === 0 && (s.s & 0x80) !== (d & 0x80))\n                ++k;\n            if (k > 0 || d !== s.s)\n                r[k++] = d;\n        }\n    }\n    return new Uint8Array(r).buffer;\n}\n\n// big-endian integer bytearray to biginteger\nfunction itobi(d) {\n    var k = 8, s = new Uint8Array(d),\n      r = nbi(s.length / 7);\n    r.t = 0;\n    r.s = 0;\n    var i = s.length, sh = 0;\n    while (--i >= 0) {\n        var x = s[i] & 0xff;\n        if (sh === 0)\n            r[r.t++] = x;\n        else if (sh + k > DB) {\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\n            r[r.t++] = (x >> (DB - sh));\n        }\n        else\n            r[r.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= DB)\n            sh -= DB;\n    }\n    if ((s[0] & 0x80) !== 0) {\n        r.s = -1;\n        if (sh > 0)\n            r[r.t - 1] |= ((1 << (DB - sh)) - 1) << sh;\n    }\n    return clamp(r);\n}\n\n\n// Swap bytes in buffer\nfunction swap(s) {\n    var src = new Uint8Array(s),\n      dst = new Uint8Array(src.length);\n    for (var i = 0, n = src.length; i < n; i++)\n        dst[n - i - 1] = src[i];\n    return dst.buffer;\n}\n\n// Calculate hash of data\nfunction hash(d) {\n    if (this.hash)\n        d = this.hash.digest(d);\n    // Swap hash for SignalCom\n    if (this.procreator === 'SC' ||\n      (this.procreator === 'VN' && this.hash.version === 2012))\n        d = swap(d);\n    return d;\n}\n\n// Check buffer\nfunction buffer(d) {\n    if (d instanceof CryptoOperationData)\n        return d;\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\n    else\n        throw new DataError('CryptoOperationData or CryptoOperationDataView required');\n}\n\n// Check double buffer\nfunction to2(d) {\n    var b = buffer(d);\n    if (b.byteLength % 2 > 0)\n        throw new DataError('Buffer length must be even');\n    var n = b.byteLength / 2;\n    return [atobi(new Uint8Array(b, 0, n)), atobi(new Uint8Array(b, n, n))];\n}\n\nfunction from2(x, y, bitLength) {\n    var a = bitoa(x, bitLength),\n      b = bitoa(y, bitLength),\n      d = new Uint8Array(a.byteLength + b.byteLength);\n    d.set(new Uint8Array(a));\n    d.set(new Uint8Array(b), a.byteLength);\n    return d.buffer;\n}\n\n// </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * The sign method returns sign data generated with the supplied privateKey.<br>\n *\n * @memberOf GostSign\n * @method sign\n * @instance\n * @param {(CryptoOperationData|TypedArray)} privateKey Private key\n * @param {(CryptoOperationData|TypedArray)} data Data\n * @returns {CryptoOperationData} Signature\n */\nfunction sign(privateKey, data) // <editor-fold defaultstate=\"collapsed\">\n{\n\n    // Stage 1\n    var b = buffer(data);\n    var alpha = atobi(hash.call(this, b));\n\n    var q = this.q;\n    var x = mod(atobi(buffer(privateKey)), q);\n\n    // Stage 2\n    var e = mod(alpha, q);\n    if (isZero(e))\n        e = ONE;\n\n    var s = ZERO;\n    while (isZero(s)) {\n        var r = ZERO;\n        while (isZero(r)) {\n\n            // Stage 3\n            var k = mod(atobi(this.ukm ||\n              getSeed(this.bitLength)), q); // pseudo random 0 < k < q\n            // Stage 4\n            if (this.curve) {\n                // Gost R 34.10-2001 || Gost R 34.10-2012\n                var P = this.P;\n                var C = mulEC(P, k);\n                r = mod(getX(C), q);\n            } else {\n                // Gost R 34.10-94\n                var p = this.p, a = this.a;\n                r = mod(expMod(a, k, p), q);\n            }\n        }\n        // Stage 5\n        s = mod(add(mul(r, x), mul(k, e)), q);\n    }\n    // Stage 6\n    // console.log('s', bitoh(s));\n    // console.log('r', bitoh(r));\n    var zetta;\n    // Integer structure for SignalCom algorithm\n    if (this.procreator === 'SC') {\n        zetta = {\n            r: bitoh(r),\n            s: bitoh(s)\n        };\n    } else {\n        zetta = from2(r, s, this.bitLength);\n        // Swap bytes for CryptoPro algorithm\n        if (this.procreator === 'CP' || this.procreator === 'VN')\n            zetta = swap(zetta);\n    }\n    return zetta;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * The verify method returns signature verification for the supplied publicKey.<br>\n *\n * @memberOf GostSign\n * @method sign\n * @instance\n * @param {(CryptoOperationData|TypedArray)} publicKey Public key\n * @param {(CryptoOperationData|TypedArray)} signature Signature\n * @param {(CryptoOperationData|TypedArray)} data Data\n * @returns {boolean} Signature verified = true\n */\nfunction verify(publicKey, signature, data) // <editor-fold defaultstate=\"collapsed\">\n{\n\n    // Stage 1\n    var q = this.q;\n    var r, s;\n    // Ready int for SignalCom algorithm\n    if (this.procreator === 'SC') {\n        r = htobi(signature.r);\n        s = htobi(signature.s);\n    } else {\n        if (this.procreator === 'CP' || this.procreator === 'VN')\n            signature = swap(signature);\n        var zetta = to2(signature);\n        // Swap bytes for CryptoPro algorithm\n        s = zetta[1]; //  first 32 octets contain the big-endian representation of s\n        r = zetta[0]; //  and second 32 octets contain the big-endian representation of r\n    }\n    if (compare(r, q) >= 0 || compare(s, q) >= 0)\n        return false;\n    // Stage 2\n    var b = buffer(data);\n    var alpha = atobi(hash.call(this, b));\n    // Stage 3\n    var e = mod(alpha, q);\n    if (isZero(e) === 0)\n        e = ONE;\n    // Stage 4\n    var v = invMod(e, q);\n    // Stage 5\n    var z1 = mod(mul(s, v), q);\n    var z2 = sub(q, mod(mul(r, v), q));\n    // Stage 6\n    if (this.curve) {\n        // Gost R 34.10-2001 || Gost R 34.10-2012\n        var k2 = to2(publicKey),\n          curve = this.curve,\n          P = this.P,\n          x = newFE(curve, k2[0]), // first 32 octets contain the little-endian representation of x\n          y = newFE(curve, k2[1]), // and second 32 octets contain the little-endian representation of y.\n          Q = new newEC(curve, x, y); // This corresponds to the binary representation of (<y>256||<x>256)\n        var C = mulTwoEC(P, z1, Q, z2);\n        var R = mod(getX(C), q);\n    } else {\n        // Gost R 34.10-94\n        var p = this.p, a = this.a;\n        var y = atobi(publicKey);\n        var R = mod(mod(mul(expMod(a, z1, p), expMod(y, z2, p)), p), q);\n    }\n    // Stage 7\n    return (compare(R, r) === 0);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * The generateKey method returns a new generated key pair using the specified\n * AlgorithmIdentifier.\n *\n * @memberOf GostSign\n * @method generateKey\n * @instance\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\n */\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\n{\n    var curve = this.curve;\n    if (curve) {\n\n        var Q = curve.infinity;\n        while (isInfinity(Q)) {\n\n            // Generate random private key\n            var d = ZERO;\n            if (this.ukm) {\n                d = atobi(this.ukm);\n            } else {\n                while (isZero(d))\n                    d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\n            }\n\n            // Calculate public key\n            Q = mulEC(this.P, d);\n            var x = getX(Q), y = getY(Q);\n            // console.log('d', bitoh(d));\n            // console.log('x', bitoh(x));\n            // console.log('y', bitoh(y));\n        }\n\n        // Return result\n        return {\n            privateKey: bitoa(d, this.bitLength),\n            publicKey: from2(x, y, this.bitLength) // This corresponds to the binary representation of (<y>256||<x>256)\n        };\n\n    } else\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10 mode MASK<br><br>\n *\n * The generateMaskKey method returns a new generated key mask using for wrapping.\n *\n * @memberOf GostSign\n * @method generateMaskKey\n * @instance\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\n */\nfunction generateMaskKey() // <editor-fold defaultstate=\"collapsed\">\n{\n    var curve = this.curve;\n    if (curve) {\n        // Generate random private key\n        var d = ZERO;\n        while (isZero(d))\n            d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\n\n        // Return result\n        return bitoa(d, this.bitLength);\n    } else\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * Unwrap private key from private key and ukm (mask)\n *\n * @memberOf GostSign\n * @method unwrap\n * @instance\n * @param {(CryptoOperationData|TypedArray)} baseKey Unwrapping key\n * @param {(CryptoOperationData|TypedArray)} data Wrapped key\n * @returns {Object} CryptoOperationData unwrapped privateKey\n */\nfunction unwrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    var curve = this.curve;\n    if (curve) {\n        var q = this.q;\n        var x = mod(atobi(buffer(data)), q);\n        var y = mod(atobi(buffer(baseKey)), q);\n        var z = this.procreator === 'VN' ? mod(mul(x, y), q) : mod(mul(x, invMod(y, q)), q);\n        return bitoa(z);\n    } else\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * Wrap private key with private key and ukm (mask)\n *\n * @memberOf GostSign\n * @method unwrap\n * @instance\n * @param {(CryptoOperationData|TypedArray)} baseKey Wrapping key\n * @param {(CryptoOperationData|TypedArray)} data Key\n * @returns {Object} CryptoOperationData unwrapped privateKey\n */\nfunction wrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\n{\n    var curve = this.curve;\n    if (curve) {\n        var q = this.q;\n        var x = mod(atobi(buffer(data)), q);\n        var y = mod(atobi(buffer(baseKey)), q);\n        var z = this.procreator === 'VN' ? mod(mul(x, invMod(y, q)), q) : mod(mul(x, y), q);\n        return bitoa(z);\n    } else\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * @memberOf GostSign\n * @method derive\n * @instance\n * @private\n * @param {CryptoOperationData} baseKey Key for deriviation\n * @returns {CryptoOperationData}\n */\nfunction derive(baseKey) // <editor-fold defaultstate=\"collapsed\">\n{\n\n    var k, ukm = atobi(this.ukm);\n    var q = this.q;\n    var x = mod(atobi(buffer(baseKey)), q);\n\n    if (this.curve) {\n        // 1) Let K(x,y,UKM) = ((UKM*x)(mod q)) . (y.P) (512 bit), where\n        // x - sender’s private key (256 bit)\n        // x.P - sender’s public key (512 bit)\n        // y - recipient’s private key (256 bit)\n        // y.P - recipient’s public key (512 bit)\n        // UKM - non-zero integer, produced as in step 2 p. 6.1 [GOSTR341001]\n        // P - base point on the elliptic curve (two 256-bit coordinates)\n        // UKM*x - x multiplied by UKM as integers\n        // x.P - a multiple point\n        var K = mulEC(this.peer_Q, mod(mul(ukm, x), q));\n        k = from2(getX(K), getY(K), // This corresponds to the binary representation of (<y>256||<x>256)\n          this.bitLength);\n    } else {\n        // 1) Let K(x,y) = a^(x*y) (mod p), where\n        // x - sender’s private key, a^x - sender’s public key\n        // y - recipient’s private key, a^y - recipient’s public key\n        // a, p - parameters\n        var p = this.p, a = this.a;\n        k = bitoa(expMod(this.peer_y, x, p));\n    }\n    // 2) Calculate a 256-bit hash of K(x,y,UKM):\n    // KEK(x,y,UKM) = gostSign (K(x,y,UKM)\n    return hash.call(this, k);\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * The deriveBits method returns length bits on baseKey.\n *\n * @memberOf GostSign\n * @method deriveBits\n * @instance\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\n * @param {number} length output bit-length\n * @returns {CryptoOperationData} result\n */\nfunction deriveBits(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\n{\n    if (length < 8 || length > this.bitLength || length % 8 > 0)\n        throw new DataError('Length must be no more than ' + this.bitLength + ' bits and multiple of 8');\n    var n = length / 8,\n      b = derive.call(this, baseKey),\n      r = new Uint8Array(n);\n\n    r.set(new Uint8Array(b, 0, n));\n    return r.buffer;\n} // </editor-fold>\n\n/**\n * Algorithm name GOST R 34.10<br><br>\n *\n * The deriveKey method returns 256 bit Key encryption key on baseKey.\n *\n * This algorithm creates a key encryption key (KEK) using 64 bit UKM,\n * the sender’s private key, and the recipient’s public key (or the\n * reverse of the latter pair\n *\n * @memberOf GostSign\n * @method deriveKey\n * @instance\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\n * @returns {CryptoOperationData} result\n */\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\n{\n    var b = derive.call(this, baseKey),\n      r = new Uint8Array(32);\n\n    r.set(new Uint8Array(b, 0, 32));\n    return r.buffer;\n} // </editor-fold>\n\n\n/**\n * Gost R 34.10 universal object<br><br>\n *\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\n *\n * Normalized algorithm identifier common parameters:\n *\n *  <ul>\n *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\n *      <li><b>version</b> Algorithm version\n *          <ul>\n *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\n *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\n *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\n *          </ul>\n *      </li>\n *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\n *          <ul>\n *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\n *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\n *          </ul>\n *      </li>\n *      <li><b>mode</b> Algorithm mode\n *          <ul>\n *              <li><b>SIGN</b> Digital signature mode (default)</li>\n *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\n *          </ul>\n *      </li>\n *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\n *  </ul>\n *\n * Supported algorithms, modes and parameters:\n *\n *  <ul>\n *      <li>Sign/Verify mode (SIGN)</li>\n *      <li>DeriveKey/DeriveBits mode (DH)\n *          <ul>\n *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\n *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\n *          </ul>\n *      </li>\n *      <li>GenerateKey mode (SIGN and DH) version = 1994\n *          <ul>\n *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n *          </ul>\n *          Additional parameters, if namedParam not specified\n *          <ul>\n *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\n *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\n *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\n *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\n *          </ul>\n *      </li>\n *      <li>GenerateKey mode (SIGN and DH) version = 2001 or 2012\n *          <ul>\n *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\n *          </ul>\n *          Additional EC parameters, if namedCurve not specified\n *          <ul>\n *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\n *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\n *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\n *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\n *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\n *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\n *          </ul>\n *      </li>\n *  </ul>\n *\n * @class GostSign\n * @param {AlgorithmIndentifier} algorithm\n */\nexport function GostSign(algorithm) // <editor-fold defaultstate=\"collapsed\">\n{\n    algorithm = algorithm || {};\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' +\n      ((algorithm.version || 2012) % 100) + '-' + (algorithm.length || 256) +\n      (((algorithm.mode || 'SIGN') !== 'SIGN') ? '-' + algorithm.mode : '') +\n      (typeof algorithm.namedParam === 'string' ? '/' + algorithm.namedParam : '') +\n      (typeof algorithm.namedCurve === 'string' ? '/' + algorithm.namedCurve : '') +\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\n\n    var version = algorithm.version || 2012;\n\n    // Functions\n    switch (algorithm.mode || 'SIGN') {\n        case 'SIGN':\n            this.sign = sign;\n            this.verify = verify;\n            this.generateKey = generateKey;\n            break;\n        case 'DH':\n            this.deriveBits = deriveBits;\n            this.deriveKey = deriveKey;\n            this.generateKey = generateKey;\n            break;\n        case 'MASK':\n            this.wrapKey = wrapKey;\n            this.unwrapKey = unwrapKey;\n            this.generateKey = generateMaskKey;\n            break;\n    }\n\n    // Define parameters\n    if (version === 1994) {\n        // Named or parameters algorithm\n        var param = algorithm.param;\n        if (!param)\n            param = GostParams[this.namedParam = (algorithm.namedParam || 'S-A').toUpperCase()];\n        this.modulusLength = algorithm.modulusLength || param.modulusLength || 1024;\n        this.p = htobi(param.p);\n        this.q = htobi(param.q);\n        this.a = htobi(param.a);\n        // Public key for derive\n        if (algorithm['public'])\n            this.peer_y = atobi(algorithm['public']);\n    } else {\n        // Named or parameters algorithm\n        var param = algorithm.curve;\n        if (!param)\n            param = ECGostParams[this.namedCurve = (algorithm.namedCurve || 'S-256-A').toUpperCase()];\n        var curve = this.curve = newCurve(htobi(param.p), htobi(param.a), htobi(param.b));\n        this.P = newEC(curve,\n          newFE(curve, htobi(param.x)),\n          newFE(curve, htobi(param.y)));\n        this.q = htobi(param.q);\n        // Public key for derive\n        if (algorithm['public']) {\n            var k2 = to2(algorithm['public']);\n            this.peer_Q = new newEC(this.curve, // This corresponds to the binary representation of (<y>256||<x>256)\n              newFE(this.curve, k2[0]), // first 32 octets contain the little-endian representation of x\n              newFE(this.curve, k2[1])); // and second 32 octets contain the little-endian representation of y.\n        }\n    }\n\n    // Check bit length\n    var hashLen, keyLen;\n    if (this.curve) {\n        keyLen = algorithm.length || bitLength(this.q);\n        if (keyLen > 508 && keyLen <= 512)\n            keyLen = 512;\n        else if (keyLen > 254 && keyLen <= 256)\n            keyLen = 256;\n        else\n            throw new NotSupportedError('Support keys only 256 or 512 bits length');\n        hashLen = keyLen;\n    } else {\n        keyLen = algorithm.modulusLength || bitLength(this.p);\n        if (keyLen > 1016 && keyLen <= 1024)\n            keyLen = 1024;\n        else if (keyLen > 508 && keyLen <= 512)\n            keyLen = 512;\n        else\n            throw new NotSupportedError('Support keys only 512 or 1024 bits length');\n        hashLen = 256;\n    }\n    this.bitLength = hashLen;\n    this.keyLength = keyLen;\n\n    // Algorithm proceator for result conversion\n    this.procreator = algorithm.procreator;\n\n    // Hash function definition\n    var hash = algorithm.hash;\n    if (hash) {\n        if (typeof hash === 'string' || hash instanceof String)\n            hash = { name: hash };\n        if (algorithm.version === 1994 || algorithm.version === 2001) {\n            hash.version = 1994;\n            hash.length = 256;\n            hash.sBox = algorithm.sBox || hash.sBox;\n        } else {\n            hash.version = 2012;\n            hash.length = hashLen;\n        }\n        hash.procreator = hash.procreator || algorithm.procreator;\n\n        this.hash = new GostDigest(hash);\n    }\n\n    // Pregenerated seed for key exchange algorithms\n    if (algorithm.ukm) // Now don't check size\n        this.ukm = algorithm.ukm;\n\n} // </editor-fold>\n\n\n","// Expand javascript object\nexport function expand() {\n    var r = {};\n    for (var i = 0, n = arguments.length; i < n; i++) {\n        var item = arguments[i];\n        if (typeof item === 'object')\n            for (var name in item)\n                r[name] = item[name];\n    }\n    return r;\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","var parseKeys = require('parse-asn1');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar crt = require('browserify-rsa');\nvar createHash = require('create-hash');\nvar withPublic = require('./withPublic');\nmodule.exports = function privateDecrypt(private_key, enc, reverse) {\n  var padding;\n  if (private_key.padding) {\n    padding = private_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  \n  var key = parseKeys(private_key);\n  var k = key.modulus.byteLength();\n  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n  var msg;\n  if (reverse) {\n    msg = withPublic(new bn(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n  var zBuffer = new Buffer(k - msg.length);\n  zBuffer.fill(0);\n  msg = Buffer.concat([zBuffer, msg], k);\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg){\n  var n = key.modulus;\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb =  msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n  var i = hLen;\n  while (db[i] === 0) {\n    i++;\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse){\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n  var ps = msg.slice(2, i - 1);\n  var p2 = msg.slice(i - 1, i);\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){\n    status++;\n  }\n  if (ps.length < 8) {\n    status++;\n  }\n  if (status) {\n    throw new Error('decryption error');\n  }\n  return  msg.slice(i);\n}\nfunction compare(a, b){\n  a = new Buffer(a);\n  b = new Buffer(b);\n  var dif = 0;\n  var len = a.length;\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n  var i = -1;\n  while (++i < len) {\n    dif += (a[i] ^ b[i]);\n  }\n  return dif;\n}","var parseKeys = require('parse-asn1');\nvar randomBytes = require('randombytes');\nvar createHash = require('create-hash');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar withPublic = require('./withPublic');\nvar crt = require('browserify-rsa');\n\nvar constants = {\n  RSA_PKCS1_OAEP_PADDING: 4,\n  RSA_PKCS1_PADDIN: 1,\n  RSA_NO_PADDING: 3\n};\n\nmodule.exports = function publicEncrypt(public_key, msg, reverse) {\n  var padding;\n  if (public_key.padding) {\n    padding = public_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  var key = parseKeys(public_key);\n  var paddedMsg;\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new bn(msg);\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg){\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n  var ps = new Buffer(k - mLen - hLen2 - 2);\n  ps.fill(0);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));\n}\nfunction pkcs1(key, msg, reverse){\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n  var ps;\n  if (reverse) {\n    ps = new Buffer(k - mLen - 3);\n    ps.fill(0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));\n}\nfunction nonZero(len, crypto) {\n  var out = new Buffer(len);\n  var i = 0;\n  var cache = randomBytes(len*2);\n  var cur = 0;\n  var num;\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len*2);\n      cur = 0;\n    }\n    num = cache[cur++];\n    if (num) {\n      out[i++] = num;\n    }\n  }\n  return out;\n}","exports.publicEncrypt = require('./publicEncrypt');\nexports.privateDecrypt = require('./privateDecrypt');\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = new Buffer(match[2], 'hex')\n    var cipherText = new Buffer(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","var indexOf = require('indexof');\n\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    forEach(Object_keys(ctx), function (key) {\n        context[key] = ctx[key];\n    });\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = require('../curve');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n  return false;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [ 0 ].concat(r)\n  if (s[0] & 0x80) s = [ 0 ].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([ zeros, x ])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([ zeros, out ])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = new Buffer(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([ t, kv.v ])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","var createHash = require('create-hash')\nvar stream = require('stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","module.exports = require('./browser/algorithms.json')\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","module.exports = require('./readable').PassThrough\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./lib/_stream_writable.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","import { gostCrypto as CryptoGost } from './crypto/gostCrypto';\nimport { gostEngine as GostEngine } from './engine/gostEngineSync';\n\nexport { CryptoGost, GostEngine }\n"],"sourceRoot":""}