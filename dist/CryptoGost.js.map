{"version":3,"sources":["webpack://crypto-gost-js/webpack/universalModuleDefinition","webpack://crypto-gost-js/webpack/bootstrap","webpack://crypto-gost-js/./src/utils/errors.js","webpack://crypto-gost-js/./src/utils/seeds.js","webpack://crypto-gost-js/./src/crypto/gostCoding.js","webpack://crypto-gost-js/./src/engine/gostDigest.js","webpack://crypto-gost-js/./src/engine/gostCipher.js","webpack://crypto-gost-js/./src/crypto/gostASN1.js","webpack://crypto-gost-js/./src/crypto/gostSecurity.js","webpack://crypto-gost-js/./src/utils/environment.js","webpack://crypto-gost-js/./src/gostRandom.js","webpack://crypto-gost-js/./src/engine/gostSign.js","webpack://crypto-gost-js/./src/engine/gostEngineSync.js","webpack://crypto-gost-js/./src/crypto/gostSubtle.js","webpack://crypto-gost-js/external \"crypto\"","webpack://crypto-gost-js/./src/crypto/gostCert.js","webpack://crypto-gost-js/./src/crypto/gostCMS.js","webpack://crypto-gost-js/./src/crypto/gostCrypto.js","webpack://crypto-gost-js/./src/crypto/gostKeys.js","webpack://crypto-gost-js/./src/utils/helpers.js","webpack://crypto-gost-js/./src/index.js"],"names":["NotSupportedError","Error","DataError","OperationError","getSeed","randomSeed","length","gostRandom","GostRandom","d","Uint8Array","Math","ceil","getRandomValues","e","GostCoding","CryptoOperationData","ArrayBuffer","buffer","byteOffset","byteLength","Base64","decode","s","replace","n","k","r","m3","m4","u24","j","i","c","charCodeAt","encode","data","slen","String","fromCharCode","substr","prototype","Chars","_win1251_","_win1251back_","from","to","charset","toLowerCase","push","first","second","join","Hex","endean","indexOf","parseInt","toString","slice","Int16","neg","charAt","substring","test","t","v","BER","encodeBER","source","format","onlyContent","object","undefined","tagClass","tagNumber","Array","Date","tagConstructed","content","a","set","bytelen","ba","offset","sort","b","min","unusedBits","match","r1","result","original","date","setMinutes","getMinutes","getTimezoneOffset","ms","getMilliseconds","getYear","getFullYear","getMonth","getDate","getHours","getSeconds","size","Unit8Array","ha","ha1","len","l2","ha2","header","block","decodeBER","pos","start","sub","buf","end","subarray","unusedBit","skip","reverse","bits","m","shortYear","exec","dt","tz","toUpperCase","PEM","name","deep","index","re1","valid","re2","RegExp","re3","out","gostCodingInstance","GostDigest","arraycopy","sOfs","dOfs","swap","src","dst","b64decode","digest2012","buffer0","Int32Array","buffer512","C","h","Ax","sigma","N","get8","x","add512","y","CF","w0","w1","get512","copy512","new512","xor512","XLPS","z0","z1","Ki","g","stage2","stage3","b0","m0","bitLength","q","call","digest","procreator","digest94","H","M","Sum","P","K","A","fw","wS","Uint16Array","wS15","encrypt","key","sOff","dOff","cipher","process","S","U","V","W","tmpA","summing","carry","sum","C2","L","n8","floor","digestSHA1","state","Uint32Array","common","w","f","f1","f2","f3","f4","cycle","fn","swap32","dlen","ofs","o","signHMAC","l","k0","s0","s1","verifyHMAC","signature","hmac","sign","generateKey","deriveBitsPFXKDF","baseKey","u","iterations","ID","diversifier","D","S0","salt","P0","p","plen","I","B","cf","R","deriveBitsKDF","rlen","label","context","blen","deriveBitsPBKDF1","hLen","dkLen","T","DK","deriveBitsPBKDF2","Z","rLen","deriveBitsCP","deriveKey","deriveBits","keySize","algorithm","version","mode","sBox","GostCipher","verify","littleEndian","DataView","setInt16","Int16Array","defaultIV","sBoxes","signed","unsigned","byteArray","cloneArray","intArray","defaultIV128","multTable","gmul","counter","kB","funcR","funcReverseR","tmp","kPi","kReversePi","funcS","funcReverseS","funcX","funcL","funcReverseL","funcLSX","funcReverseLSX","funcF","inputKey","inputKeySecond","iterationConst","funcC","number","keySchedule128","keys","j0","j1","process128","round","cm","om","process89","process15","keySchedule89","sch","keySchedule15","keyScheduleRC2","PITABLE","T1","effectiveLength","T8","TM","pow","processRC2","rol","ror","mix","mash","perform","method","count","encryptECB","pad","blockSize","keySchedule","decryptECB","unpad","encryptCFB","iv","shiftBits","cb","keyMeshing","decryptCFB","processOFB","processCTR89","Int8Array","syn","processCTR15","encryptCBC","decryptCBC","next","processMAC89","zeroPad","processKeyMAC15","t1","processMAC15","bitPad","signMAC","macLength","processMAC","mac","verifyMAC","wrapKeyGOST","kek","cek","ukm","enc","unwrapKeyGOST","check","diversifyKEK","wrapKeyCP","dek","unwrapKeyCP","packKeySC","unpacked","mcount","zero32","mask","unpackKeySC","packed","magic","names","wrapKeySC","unwrapKeySC","generateWrappingKeySC","maskKey","inverse","m32","k32","r32","wrapKeyMask","unwrapKeyMask","keyMeshingCP","noKeyMeshing","noPad","pkcs5Pad","nb","pkcs5Unpad","bitUnpad","randomPad","blockLength","keyWrapping","padding","decrypt","wrapKey","unwrapKey","sBoxName","SyntaxError","GostASN1","algorithms","gostSecurityInstance","identifiers","attributes","parameters","swapBytes","isBinary","value","lpad","width","npw2","SInt","endian","assert","defineProperty","descriptor","enumerable","Object","defineProperties","properties","getOwnPropertyDescriptor","uniformTitle","extend","Super","Class","propertiesObject","propertiesClass","apply","arguments","create","constructor","superclass","super","ASN1Object","_set","propName","property","_get","get","_call","methodName","args","hasProperty","hasOwnProperty","proto","PRIMITIVE","ANY","BOOLEAN","IA5String","NumericString","PrintableString","TeletexString","UTF8String","UTCTime","GeneralizedTime","UniversalString","BMPString","NULL","PRIMITIVE_CODE","CODE","structure","id","INTEGER","ENUMERATED","OCTET_STRING","WRAPPING","WrappedClass","BIT_STRING","MASK","numbits","max","COMBINE","combine","owner","valueName","configurable","SEQUENCE","writable","items","ItemClass","getItemClass","item","encoded","ATTRIBUTE","typeName","ownerDafaultType","uniformName","BaseClass","DEFINE","typeSet","defaultType","type","typeId","OBJECT_IDENTIFIER","IMPLICIT","EXPLICIT","CTX","ContentClass","ARRAY_OF","ItemClassDef","typeAndValue","read","createItem","reset","getItemValue","setItemValue","isItemType","isNaN","ArrayClass","values","SEQUENCE_OF","SET_OF","ENCLOSURE","modifier","SET_OF_SINGLE","CHOICE","define","ENCAPSULATES","DEFAULT","optional","OPTIONAL","DEFAULT_NULL","DirectoryString","teletexString","printableString","universalString","utf8String","bmpString","numericString","Time","utcTime","generalTime","AttributeType","AttributeValue","AttributeTypeAndValue","RelativeDistinguishedName","serialName","countryName","dnQualifier","emailAddress","domainComponent","SNILS","OGRN","INN","RDNSequence","Name","rdnSequence","Validity","notBefore","notAfter","Version","Attribute","Attributes","AttributeSequence","FieldElement","Curve","seed","ECPoint","FieldID","fieldType","ECParameters","fieldID","curve","base","order","cofactor","GostR3410Parameters","publicKeyParamSet","digestParamSet","encryptionParamSet","GostR3411Parameters","ECDHParameters","namedParameters","ecParameters","implicitly","Algorithm","paramType","AlgorithmIdentifier","DefaultAlgorithm","algorithmSet","ECDHKeyAlgorithm","params","namedCurve","GostKeyAlgorithm","paramName","encParams","AlgorithmWithNoParam","AlgorithmWithNullParam","Gost341194DigestAlgorithm","hash","parameter","KeyAlgorithmIdentifier","ecdsa","noSignature","rsaEncryption","SignatureAlgorithmIdentifier","sha1withRSAEncryption","sha256withRSAEncryption","sha384withRSAEncryption","sha512withRSAEncryption","DigestAlgorithmIdentifier","sha1","sha256","sha384","sha512","Gost2814789Key","Gost2814789MAC","Gost2814789ParamSet","Gost2814789IV","Gost2814789Parameters","Gost2814789KeyWrapParameters","Gost2814789Algorithm","SCGostAlgorithm","GostKeyWrapAlgorithm","KeyWrapAlgorithmIdentifier","GostKeyAgreementAlgorithm","wrapping","BaseEncryptionAlgorithmIdentifier","MessageAuthenticationCodeAlgorithm","PBKDF2params","specified","otherSource","iterationCount","keyLength","prf","PBKDF2Algorithm","KeyDerivationAlgorithmIdentifier","PBEParameter","PBES1Algorithm","derivation","PBES2params","keyDerivationFunc","encryptionScheme","PBES2Algorithm","encryption","PasswordEncryptionAlgorithmIndentifier","KeyEncryptionAlgorithmIdentifier","PBMAC1params","messageAuthScheme","PasswordMACAlgorithm","PasswordMACAlgorithmIdentifier","ContentEncryptionAlgorithmIdentifier","KeyData","DHPublicKey","ECDHPublicKey","GostR3410PublicKey","SubjectPublicKeyInfo","subjectPublicKey","GostSubjectPublicKeyInfo","PKTypes","extractable","usages","PrivateKey","DHPrivateKey","GostR3410KeyValueMask","GostR3410KeyValueInfo","keyValueMask","keyValyePublicKey","GostR3410PrivateKey","privateKey","keyValueInfo","enclosed","GostWrappedPrivateKey","privateKeyAlgorithm","privateKeyWrapped","keyData","keyMac","PrivateKeyInfo","PrivateKeyAlgorithmIdentifier","PublicKey","OneAsymmetricKey","publicKey","AsymmetricKeyPackage","GostPrivateKeyInfo","KeyEncryptedData","EncryptedPrivateKeyInfo","encryptionAlgorithm","encryptedData","UniqueIdentifier","CertificateSerialNumber","BasicConstraints","cA","pathLenConstraint","KeyUsage","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","KeyPurposeId","ExtKeyUsageSyntax","KeyIdentifier","OtherName","EDIPartyName","nameAssigner","partyName","ORAddress","GeneralName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID","GeneralNames","AuthorityKeyIdentifier","keyIdentifier","authorityCertIssuer","authorityCertSerialNumber","PrivateKeyUsagePeriod","CertPolicyId","PolicyQualifierId","PolicyQualifierInfo","policyQualifierId","qualifier","PolicyInformation","policyIdentifier","policyQualifiers","PolicyMapping","issuerDomainPolicy","subjectDomainPolicy","BaseDistance","GeneralSubtree","minimum","maximum","GeneralSubtrees","NameConstraints","permittedSubtrees","excludedSubtrees","SkipCerts","PolicyConstraints","requireExplicitPolicy","inhibitPolicyMapping","ReasonFlags","unused","keyCompromise","cACompromise","affiliationChanged","superseded","cessationOfOperation","certificateHold","privilegeWithdrawn","aACompromise","DistributionPointName","fullName","nameRelativeToCRLIssuer","DistributionPoint","distributionPoint","reasons","cRLIssuer","CRLDistributionPoints","FreshestCRL","AccessDescription","accessMethod","accessLocation","Extension","defaultCritical","extnID","critical","extnValue","defineValue","self","IssuerSignTool","signTool","cATool","signToolCert","cAToolCert","Extensions","CertExtensions","authorityKeyIdentifier","subjectKeyIdentifier","keyUsage","privateKeyUsagePeriod","certificatePolicies","policyMappings","subjectAltName","issuerAltName","subjectDirectoryAttributes","basicConstraints","nameConstraints","policyConstraints","extKeyUsage","cRLDistributionPoints","inhibitAnyPolicy","freshestCRL","authorityInfoAccess","subjectInfoAccess","subjectSignTool","issuerSignTool","ECDHSignature","GostR3410Signature","GostSignature","TBSCertificate","serialNumber","issuer","validity","subject","subjectPublicKeyInfo","issuerUniqueID","subjectUniqueID","extensions","Certificate","tbsCertificate","signatureAlgorithm","signatureValue","ExtensionRequest","CRIAttributes","challengePassword","extensionRequest","msCertExtensions","extendedCertificateAttributes","CertificationRequestInfo","CertificationRequest","requestInfo","CRLNumber","CRLReason","unspecified","removeFromCRL","IssuingDistributionPoint","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","CLRExtensions","cRLNumber","deltaCRLIndicator","issuingDistributionPoint","CLREntryExtensions","cRLReason","instructionCode","invalidityDate","certificateIssuer","TBSCertList","thisUpdate","nextUpdate","revokedCertificates","userCertificate","revocationDate","crlEntryExtensions","crlExtensions","CertificateList","tbsCertList","AttCertVersion","ObjectDigestInfo","digestedObjectType","publicKeyCert","otherObjectTypes","otherObjectTypeID","digestAlgorithm","objectDigest","IssuerSerial","serial","issuerUID","V2Form","issuerName","baseCertificateID","objectDigestInfo","TargetCert","targetCertificate","targetName","certDigestInfo","Target","targetGroup","targetCert","Targets","AttCertExtensions","auditIdentity","targetInformation","noRevAvail","Holder","entityName","AttCertIssuer","v1Form","v2Form","AttCertValidityPeriod","notBeforeTime","notAfterTime","SvceAuthInfo","service","ident","authInfo","RoleSyntax","roleAuthority","roleName","ClassList","unmarked","unclassified","restricted","confidential","secret","topSecret","SecurityCategory","Clearance","policyId","classList","securityCategories","IetfAttrSyntax","policyAuthority","octets","oid","string","getIdentifier","AttributeCertificateInfo","holder","attrCertValidityPeriod","authenticationInfo","accessIdentity","chargingIdentity","group","role","clearance","AttributeCertificate","acinfo","EncryptedKey","EncryptedContent","SubjectKeyIdentifier","UserKeyingMaterial","ECCCMSSharedInfo","keyInfo","entityUInfo","suppPubInfo","Gost2814789EncryptedKey","encryptedKey","macKey","GostR3410TransportParameters","ephemeralPublicKey","GostR3410KeyTransport","sessionEncryptedKey","transportParameters","SCGostKeyTransport","addedukm","GostEncryptedKey","GostKeyContainerContentAttributes","kccaSoftPassword","kccaReservePrimary","kccaPrimaryKeyAbsent","kccaFKCShared","GostPrivateKeyAttributes","pkaExportable","pkaUserProtect","pkaExchange","pkaEphemeral","pkaNonCachable","pkaDhAllowed","GostPrivateKeyParameters","CertificateLink","path","PasswordPolicy","GostKeyContainerContent","containerAlgoritmIdentifier","containerName","primaryPrivateKeyParameters","hmacPassword","secondaryEncryptedPrivateKey","secondaryPrivateKeyParameters","primaryCertificate","secondaryCertificate","encryptionContainerName","primaryCertificateLink","secondaryCertificateLink","primaryFP","secondaryFP","passwordPolicy","containerSecurityLevel","keyValidity","secondaryEncryptionContainerName","GostKeyContainer","keyContainerContent","hmacKeyContainerContent","GostKeyContainerName","extElem1","GostPrivateKeys","primaryKey","secondaryKey","hmacKey","GostPrivateMasks","randomStatus","hmacRandom","ViPNetKeyInfo","keyClass","keyType","addSerialNumber","certSerialNumber","subjectUID","recipientUID","keyUID","flags","ViPNetInfo","defenceKeyInfo","certificate","CMSVersion","ContentType","SigningTime","Digest","MessageAuthenticationCode","BodyPartID","BodyPartPath","CMCUnsignedData","bodyPartPath","identifier","SignedAttributes","contentType","signingTime","messageDigest","UnsignedAttributes","countersignature","Countersignature","unsignedData","AuthAttributes","UnauthAttributes","UnprotectedAttributes","IssuerAndSerialNumber","SignerIdentifier","issuerAndSerialNumber","SignerInfo","sid","signedAttrs","unsignedAttrs","SignerInfos","DigestAlgorithmIdentifiers","AttributeCertificateV2","ExtendedCertificateInfo","ExtendedCertificate","extendedCertificateInfo","OtherCertificateFormat","otherCertFormat","otherCert","AttributeCertificateInfoV1","subjectName","attCertValidityPeriod","AttributeCertificateV1","acInfo","EncapsulatedContentInfo","eContentType","eContent","CertificateChoices","extendedCertificate","v1AttrCert","v2AttrCert","other","OtherRevocationInfoFormat","otherRevInfoFormat","otherRevInfo","RevocationInfoChoice","crl","CertificateSet","RevocationInfoChoices","SignedData","digestAlgorithms","encapContentInfo","certificates","crls","signerInfos","RecipientIdentifier","KeyTransRecipientInfo","rid","keyEncryptionAlgorithm","OtherKeyAttribute","keyAttrId","keyAttr","RecipientKeyIdentifier","KeyAgreeRecipientIdentifier","rKeyId","RecipientEncryptedKey","RecipientEncryptedKeys","OriginatorPublicKey","MQVuserKeyingMaterial","OriginatorIdentifierOrKey","originatorKey","KeyAgreeRecipientInfo","originator","recipientEncryptedKeys","KEKIdentifier","KEKRecipientInfo","kekid","PasswordRecipientInfo","friendlyName","OtherRecipientInfo","oriType","oriValue","RecipientInfo","ktri","kari","kekri","pwri","ori","OriginatorInfo","certs","RecipientInfos","EncryptedContentInfo","contentEncryptionAlgorithm","encryptedContent","EnvelopedData","originatorInfo","recipientInfos","encryptedContentInfo","unprotectedAttrs","DigestedData","EncryptedData","AuthenticatedData","macAlgorithm","authAttrs","unauthAttrs","AuthEnvelopedData","authEncryptedContentInfo","EncryptedKeyPackage","encrypted","enveloped","authEnveloped","ContentInfo","signedData","envelopedData","digestedData","authData","encryptedKeyPkg","aKeyPackage","DigestInfo","PKCS12Attributes","keyProviderNameAttr","localKeyId","certKeyIdentifierPropId","SafeBagType","CertType","CRLType","SecretType","KeyBag","PKCS8ShroudedKeyBag","CertBag","certId","certValue","x509Certificate","sdsiCertificate","CRLBag","crlId","crlValue","x509CRL","SecretBag","secretTypeId","secretValue","SafeBag","bagId","bagValue","bagAttributes","keyBag","pkcs8ShroudedKeyBag","certBag","crlBag","secretBag","safeContentsBag","SafeContents","AuthenticatedSafe","MacData","macSalt","PFX","authSafe","macData","RegToken","Authenticator","CertId","OldCertId","ProtocolEncrKey","EncryptedValue","intendedAlg","symmAlg","encSymmKey","keyAlg","valueHint","encValue","KeyGenParameters","encryptedValue","PKIArchiveOptions","encryptedPrivKey","keyGenParameters","archiveRemGenPrivKey","SinglePubInfo","pubMethod","dontCare","x500","web","ldap","pubLocation","PKIPublicationInfo","action","dontPublish","pleasePublish","pubInfos","SubsequentMessage","encrCert","challengeResp","POPOPrivKey","thisMessage","subsequentMessage","dhMAC","agreeMAC","PKMACValue","PBMParameter","owf","algId","POPOSigningKeyInput","sender","publicKeyMAC","POPOSigningKey","poposkInput","algorithmIdentifier","ProofOfPossession","raVerified","Controls","regToken","authenticator","pkiPublicationInfo","pkiArchiveOptions","oldCertID","protocolEncrKey","OptionalValidity","CertTemplate","signingAlg","CertRequest","certReqId","certTemplate","controls","UTF8Pairs","CertReq","EncKeyWithID","generalName","CertReqMsg","certReq","popo","regInfo","utf8Pairs","encKeyWithID","CertReqMessages","PendInfo","pendToken","pendTime","CMCStatus","success","failed","pending","noSupport","confirmRequired","popRequired","partial","CMCFailInfo","badAlg","badMessageCheck","badRequest","badTime","badCertId","unsupportedExt","mustArchiveKeys","badIdentity","popFailed","noKeyReuse","internalCAError","tryLater","authDataFail","CMCStatusInfo","cMCStatus","bodyList","statusString","otherInfo","failInfo","pendInfo","AddExtensions","pkiDataReference","certReferences","LraPopWitness","pkiDataBodyid","bodyIds","GetCert","GetCRL","cRLName","time","RevokeRequest","reason","passphrase","comment","DecryptedPOP","bodyPartID","thePOPAlgID","thePOP","CMCCertId","BodyPartReference","CMCStatusInfoV2","extendedFailInfo","failInfoOID","failInfoValue","PublishTrustAnchors","seqNumber","hashAlgorithm","anchorHashes","AuthPublish","BodyPartList","CMCPublicationInfo","hashAlg","certHashes","pubInfo","ModCertTemplate","ControlsProcessed","IdentifyProofV2","proofAlgID","macAlgId","witness","PopLinkWitnessV2","keyGenAlgorithm","TaggedCertificationRequest","certificationRequest","TaggedContentInfo","contentInfo","OtherMsg","otherMsgType","otherMsgValue","TaggedRequest","tcr","crm","orm","requestMessageType","requestMessageValue","EncryptedPOP","request","cms","witnessAlgID","TaggedAttribute","attrType","attrValues","statusInfo","identification","identityProof","dataReturn","transactionId","senderNonce","recipientNonce","addExtensions","encryptedPOP","decryptedPOP","lraPOPWitness","getCert","getCRL","revokeRequest","responseInfo","queryPending","popLinkRandom","popLinkWitness","confirmCertAcceptance","statusInfoV2","trustedAnchors","authPublish","batchRequests","batchResponses","publishCert","modCertTemplate","controlProcessed","popLinkWitnessV2","identityProofV2","PKIData","controlSequence","reqSequence","cmsSequence","otherMsgSequence","PKIResponse","gostASN1Instance","GostSecurity","expand","ecDH","dhKeyAgreement","PBKDF2","PBES2","PBMAC1","hmacWithSHA1","hmacWithSHA256","hmacWithSHA384","hmacWithSHA512","namedParam","secp256r1","secp384r","secp521r","providers","title","agreement","modulusLength","param","pbes","publicExponent","forEach","provider","pbmac","getRoot","getCryptoModule","isInNode","isBrowser","isInWebWorker","global","root","crypto","msCrypto","require","exports","module","window","importScripts","randomRing","getIndex","setIndex","document","addEventListener","getTime","clientX","pageX","clientY","pageY","keyCode","TypeMismatchError","QuotaExceededError","rootCryptoModule","array","u8","random","GostSign","ECGostParams","GostParams","DB","DM","DV","FV","F1","F2","am","xl","xh","nbi","words","copyTo","copy","setInt","nbv","ZERO","ONE","THREE","clamp","subTo","addTo","add","negTo","absTo","abs","compare","equals","nbits","dshlTo","dshrTo","shlTo","bs","cbs","bm","ds","shrTo","shl","shr","mulTo","mul","sqrTo","sqr","divRemTo","pm","pt","ts","nsh","ys","y0","yt","d1","d2","qd","modTo","mod","div","isEven","isZero","sig","invMod","ac","subtract","testBit","nothing","Classic","convert","revert","reduce","invDig","Montgomery","mp","mpl","mph","um","mt2","u0","dAddOffset","mulLowerTo","mulUpperTo","Barrett","r2","q3","mu","expMod","z","k1","km","g2","is1","newFE","copyFE","negFE","addFE","subFE","mulFE","sqrFE","shlFE","invFE","newEC","getX","point","zinv","getY","isInfinity","getInfinity","infinity","equalsEC","negEC","addEC","twiceEC","x1","y1","v2","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","mulEC","hBit","eBit","mul2AndAddEC","Q","mulTwoEC","both","newCurve","atobi","sh","bitoa","r8","htobi","Number","mi","bitoh","bitoi","itobi","to2","from2","alpha","zetta","z2","k2","generateMaskKey","derive","peer_Q","peer_y","hashLen","keyLen","defineEngine","gostEngine","execute","engine","getGostCipher","getGostDigest","getGostSign","SubtleCrypto","InvalidStateError","InvalidAccessError","rootCrypto","normalize","modes","split","concat","na","contex","checkNative","subtle","checkKey","gostCipher","gostDigest","gostSign","md","extractKey","convertKey","keyUsages","convertKeyPair","publicAlgorithm","privateAlgorithm","publicBuffer","privateBuffer","publicUsages","filter","privateUsages","Promise","resolve","reject","error","callback","then","obj","derivedKeyType","importKey","dataLen","chain","pop","exportKey","raw","wrappingKey","wrapAlgorithm","wrappedKey","unwrappingKey","unwrapAlgorithm","unwrappedKeyAlgorithm","gostSubtleInstance","GostCert","coding","asn1","F","today","setHours","setDate","genSerialNumber","gostCrypto","equalNumbers","hex","s2","equalNames","name1","name2","equalBuffers","matchCertificate","cert","selector","skid","authoritySelector","akid","selectCertificates","matchCRL","selectCRLs","keyProvider","options","providerName","commonName","caKeyUsage","caExtKeyUsage","userKeyUsage","userExtKeyUsage","days","X509","issuerPrivateKey","issuerCertificate","spki","getProvider","exts","ae","checkUsage","pathLen","generate","keyAlgorithm","keyPair","pkcs8","getPublicKey","issuerCRL","verifySignature","isRevoked","operation","CRL","rc","Request","req","CertStore","getCertificates","getCRLs","load","store","info","CertPath","certStore","build","current","certPath","verifiers","foundCRLs","founds","all","results","CertificateTrustPolicy","getValidCertificate","TrustedCAPolicy","trustedCACerts","requireCRL","requireCA","gostCertInstance","GostCMS","addUnique","comparator","found","setContentData","getContentData","encap","checkContentInfo","e1","createContentInfo","DataContentInfo","DigestedDataContentInfo","SignedDataContentInfo","EncryptedDataContentInfo","EnvelopedDataContentInfo","matchCert","saltSize","passwordData","password","encryptionProvider","autoAddCert","useKeyIdentifier","defaultSet","isDetached","writeDetached","createDetached","encloseContent","setEnclosed","getEnclosed","digestProvider","dataToVerify","addSignature","signerKey","signerCert","signerInfo","dataToSign","signerCertChain","algorithm1","algorithm2","cert1","cert2","isDegenerate","trustPolicy","map","catch","dataDigest","contentEncryptionKey","integrityKey","encryptionKey","decryptionKey","decryptedContent","addRecipient","recipientCert","senderKey","senderCert","senderCertChain","recipientInfo","recipientKey","originatorCert","transportKey","gostCMSInstance","security","gostKeysInstance","GostKeys","now","generateUUID","get32","set32","int","PKCS8","getPrivateKey","setPrivateKey","PKCS8Encrypted","getKey","keyPassword","setKey","SignalComKeyContainer","container","getEncryptionKey","masks","mk","digested","decrypedMasks","mkm","generateContainer","SignalComPrivateKeyInfo","publicKeyData","wrappedData","changePassword","oldKeyPassword","newKeyPassword","CryptoProKeyContainer","primary","primary2","masks2","isKeySize512","isVersion2012","derivePasswordKey","computePasswordMAC","computeContainerMAC","computeMaskMAC","status","generateMasks","computeFP","fp","computedFP","decryptKey","secondary","encryptKey","getCertificate","getContainerName","keyParameters","absent","splice","promises","maskname","FP","softPassword","setCertificate","setContainerName","needPassword","ViPNetContainerEntry","entry","getKeyPassword","secodeData","keyPart","encodedKeyInfo","wrapped","encyption","entrySize","headerSize","keyPartSize","ViPNetContainer","fileType","fileVersion","applicationHeader","entries","entriesSize","PKCS12","calcHMAC","passwordKey","KeyStore","setEntry","aliases","containsAlias","alias","deleteEntry","getEntry","contents","bags","bag","keyId","digestAlgortihm","encryptionAlgortihm","keyContents","CryptoGost","GostEngine"],"mappings":"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","file":"CryptoGost.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crypto-gost-js\"] = factory();\n\telse\n\t\troot[\"crypto-gost-js\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","export class NotSupportedError extends Error {\r\n}\r\n\r\nexport class DataError extends Error {\r\n}\r\n\r\nexport class OperationError extends Error {\r\n}\r\n","import { GostRandom } from '../gostRandom';\r\n\r\n// Get random values\r\nexport function getSeed(length) {\r\n    const gostRandom = new GostRandom();\r\n    try {\r\n        const d = new Uint8Array(Math.ceil(length / 8));\r\n        gostRandom.getRandomValues(d);\r\n        return d;\r\n    } catch (e) {\r\n        throw new Error('Error occurred during random values generation');\r\n    }\r\n}\r\n\r\n// Set random values into Uint8Arry\r\n// Random generator\r\nexport function randomSeed(e) {\r\n    try {\r\n        const gostRandom = new GostRandom();\r\n        return gostRandom.getRandomValues(e);\r\n    } catch (e) {\r\n        throw new Error('Error occurred during random values generation');\r\n    }\r\n}\r\n","/**\r\n * @file Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { DataError } from '../utils/errors';\r\n\r\n/**\r\n * The Coding interface provides string converting methods: Base64, Hex,\r\n * Int16, Chars, BER and PEM\r\n * @class GostCoding\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData required');\r\n} // </editor-fold>\r\n\r\nexport function GostCoding() {\r\n}\r\n\r\n/**\r\n * BASE64 conversion\r\n *\r\n * @class GostCoding.Base64\r\n */\r\nvar Base64 = {// <editor-fold defaultstate=\"collapsed\">\r\n    /**\r\n     * Base64.decode convert BASE64 string s to CryptoOperationData\r\n     *\r\n     * @memberOf GostCoding.Base64\r\n     * @param {String} s BASE64 encoded string value\r\n     * @returns {CryptoOperationData} Binary decoded data\r\n     */\r\n    decode: function (s) {\r\n        s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\r\n        var n = s.length,\r\n          k = n * 3 + 1 >> 2, r = new Uint8Array(k);\r\n\r\n        for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\r\n            m4 = i & 3;\r\n            var c = s.charCodeAt(i);\r\n\r\n            c = c > 64 && c < 91 ?\r\n              c - 65 : c > 96 && c < 123 ?\r\n                c - 71 : c > 47 && c < 58 ?\r\n                  c + 4 : c === 43 ?\r\n                    62 : c === 47 ?\r\n                      63 : 0;\r\n\r\n            u24 |= c << 18 - 6 * m4;\r\n            if (m4 === 3 || n - i === 1) {\r\n                for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\r\n                    r[j] = u24 >>> (16 >>> m3 & 24) & 255;\r\n                }\r\n                u24 = 0;\r\n\r\n            }\r\n        }\r\n        return r.buffer;\r\n    },\r\n    /**\r\n     * Base64.encode(data) convert CryptoOperationData data to BASE64 string\r\n     *\r\n     * @memberOf GostCoding.Base64\r\n     * @param {CryptoOperationData} data Bynary data for encoding\r\n     * @returns {String} BASE64 encoded data\r\n     */\r\n    encode: function (data) {\r\n        var slen = 8, d = new Uint8Array(buffer(data));\r\n        var m3 = 2, s = '';\r\n        for (var n = d.length, u24 = 0, i = 0; i < n; i++) {\r\n            m3 = i % 3;\r\n            if (i > 0 && (i * 4 / 3) % (12 * slen) === 0)\r\n                s += '\\r\\n';\r\n            u24 |= d[i] << (16 >>> m3 & 24);\r\n            if (m3 === 2 || n - i === 1) {\r\n                for (var j = 18; j >= 0; j -= 6) {\r\n                    var c = u24 >>> j & 63;\r\n                    c = c < 26 ? c + 65 : c < 52 ? c + 71 : c < 62 ? c - 4 :\r\n                      c === 62 ? 43 : c === 63 ? 47 : 65;\r\n                    s += String.fromCharCode(c);\r\n                }\r\n                u24 = 0;\r\n            }\r\n        }\r\n        return s.substr(0, s.length - 2 + m3) + (m3 === 2 ? '' : m3 === 1 ? '=' : '==');\r\n    } // </editor-fold>\r\n};\r\n\r\n/**\r\n * BASE64 conversion\r\n *\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.Base64\r\n */\r\nGostCoding.prototype.Base64 = Base64;\r\n\r\n/**\r\n * Text string conversion <br>\r\n * Methods support charsets: ascii, win1251, utf8, utf16 (ucs2, unicode), utf32 (ucs4)\r\n *\r\n * @class GostCoding.Chars\r\n */\r\nvar Chars = (function () { // <editor-fold defaultstate=\"collapsed\">\r\n\r\n    var _win1251_ = {\r\n        0x402: 0x80,\r\n        0x403: 0x81,\r\n        0x201A: 0x82,\r\n        0x453: 0x83,\r\n        0x201E: 0x84,\r\n        0x2026: 0x85,\r\n        0x2020: 0x86,\r\n        0x2021: 0x87,\r\n        0x20AC: 0x88,\r\n        0x2030: 0x89,\r\n        0x409: 0x8A,\r\n        0x2039: 0x8B,\r\n        0x40A: 0x8C,\r\n        0x40C: 0x8D,\r\n        0x40B: 0x8E,\r\n        0x40f: 0x8f,\r\n        0x452: 0x90,\r\n        0x2018: 0x91,\r\n        0x2019: 0x92,\r\n        0x201C: 0x93,\r\n        0x201D: 0x94,\r\n        0x2022: 0x95,\r\n        0x2013: 0x96,\r\n        0x2014: 0x97,\r\n        0x2122: 0x99,\r\n        0x459: 0x9A,\r\n        0x203A: 0x9B,\r\n        0x45A: 0x9C,\r\n        0x45C: 0x9D,\r\n        0x45B: 0x9E,\r\n        0x45f: 0x9f,\r\n        0xA0: 0xA0,\r\n        0x40E: 0xA1,\r\n        0x45E: 0xA2,\r\n        0x408: 0xA3,\r\n        0xA4: 0xA4,\r\n        0x490: 0xA5,\r\n        0xA6: 0xA6,\r\n        0xA7: 0xA7,\r\n        0x401: 0xA8,\r\n        0xA9: 0xA9,\r\n        0x404: 0xAA,\r\n        0xAB: 0xAB,\r\n        0xAC: 0xAC,\r\n        0xAD: 0xAD,\r\n        0xAE: 0xAE,\r\n        0x407: 0xAf,\r\n        0xB0: 0xB0,\r\n        0xB1: 0xB1,\r\n        0x406: 0xB2,\r\n        0x456: 0xB3,\r\n        0x491: 0xB4,\r\n        0xB5: 0xB5,\r\n        0xB6: 0xB6,\r\n        0xB7: 0xB7,\r\n        0x451: 0xB8,\r\n        0x2116: 0xB9,\r\n        0x454: 0xBA,\r\n        0xBB: 0xBB,\r\n        0x458: 0xBC,\r\n        0x405: 0xBD,\r\n        0x455: 0xBE,\r\n        0x457: 0xBf\r\n    };\r\n    var _win1251back_ = {};\r\n    for (var from in _win1251_) {\r\n        var to = _win1251_[from];\r\n        _win1251back_[to] = from;\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * Chars.decode(s, charset) convert string s with defined charset to CryptoOperationData\r\n         *\r\n         * @memberOf GostCoding.Chars\r\n         * @param {string} s Javascript string\r\n         * @param {string} charset Charset, default 'win1251'\r\n         * @returns {CryptoOperationData} Decoded binary data\r\n         */\r\n        decode: function (s, charset) {\r\n            charset = (charset || 'win1251').toLowerCase().replace('-', '');\r\n            var r = [];\r\n            for (var i = 0, j = s.length; i < j; i++) {\r\n                var c = s.charCodeAt(i);\r\n                if (charset === 'utf8') {\r\n                    if (c < 0x80) {\r\n                        r.push(c);\r\n                    } else if (c < 0x800) {\r\n                        r.push(0xc0 + (c >>> 6));\r\n                        r.push(0x80 + (c & 63));\r\n                    } else if (c < 0x10000) {\r\n                        r.push(0xe0 + (c >>> 12));\r\n                        r.push(0x80 + (c >>> 6 & 63));\r\n                        r.push(0x80 + (c & 63));\r\n                    } else if (c < 0x200000) {\r\n                        r.push(0xf0 + (c >>> 18));\r\n                        r.push(0x80 + (c >>> 12 & 63));\r\n                        r.push(0x80 + (c >>> 6 & 63));\r\n                        r.push(0x80 + (c & 63));\r\n                    } else if (c < 0x4000000) {\r\n                        r.push(0xf8 + (c >>> 24));\r\n                        r.push(0x80 + (c >>> 18 & 63));\r\n                        r.push(0x80 + (c >>> 12 & 63));\r\n                        r.push(0x80 + (c >>> 6 & 63));\r\n                        r.push(0x80 + (c & 63));\r\n                    } else {\r\n                        r.push(0xfc + (c >>> 30));\r\n                        r.push(0x80 + (c >>> 24 & 63));\r\n                        r.push(0x80 + (c >>> 18 & 63));\r\n                        r.push(0x80 + (c >>> 12 & 63));\r\n                        r.push(0x80 + (c >>> 6 & 63));\r\n                        r.push(0x80 + (c & 63));\r\n                    }\r\n                } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\r\n                    if (c < 0xD800 || (c >= 0xE000 && c <= 0x10000)) {\r\n                        r.push(c >>> 8);\r\n                        r.push(c & 0xff);\r\n                    } else if (c >= 0x10000 && c < 0x110000) {\r\n                        c -= 0x10000;\r\n                        var first = ((0xffc00 & c) >> 10) + 0xD800;\r\n                        var second = (0x3ff & c) + 0xDC00;\r\n                        r.push(first >>> 8);\r\n                        r.push(first & 0xff);\r\n                        r.push(second >>> 8);\r\n                        r.push(second & 0xff);\r\n                    }\r\n                } else if (charset === 'utf32' || charset === 'ucs4') {\r\n                    r.push(c >>> 24 & 0xff);\r\n                    r.push(c >>> 16 & 0xff);\r\n                    r.push(c >>> 8 & 0xff);\r\n                    r.push(c & 0xff);\r\n                } else if (charset === 'win1251') {\r\n                    if (c >= 0x80) {\r\n                        if (c >= 0x410 && c < 0x450) // А..Яа..я\r\n                            c -= 0x350;\r\n                        else\r\n                            c = _win1251_[c] || 0;\r\n                    }\r\n                    r.push(c);\r\n                } else\r\n                    r.push(c & 0xff);\r\n            }\r\n            return new Uint8Array(r).buffer;\r\n        },\r\n        /**\r\n         * Chars.encode(data, charset) convert CryptoOperationData data to string with defined charset\r\n         *\r\n         * @memberOf GostCoding.Chars\r\n         * @param {CryptoOperationData} data Binary data\r\n         * @param {string} charset Charset, default win1251\r\n         * @returns {string} Encoded javascript string\r\n         */\r\n        encode: function (data, charset) {\r\n            charset = (charset || 'win1251').toLowerCase().replace('-', '');\r\n            var r = [], d = new Uint8Array(buffer(data));\r\n            for (var i = 0, n = d.length; i < n; i++) {\r\n                var c = d[i];\r\n                if (charset === 'utf8') {\r\n                    c = c >= 0xfc && c < 0xfe && i + 5 < n ? // six bytes\r\n                      (c - 0xfc) * 1073741824 + (d[++i] - 0x80 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\r\n                      : c >> 0xf8 && c < 0xfc && i + 4 < n ? // five bytes\r\n                        (c - 0xf8 << 24) + (d[++i] - 0x80 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\r\n                        : c >> 0xf0 && c < 0xf8 && i + 3 < n ? // four bytes\r\n                          (c - 0xf0 << 18) + (d[++i] - 0x80 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\r\n                          : c >= 0xe0 && c < 0xf0 && i + 2 < n ? // three bytes\r\n                            (c - 0xe0 << 12) + (d[++i] - 0x80 << 6) + d[++i] - 0x80\r\n                            : c >= 0xc0 && c < 0xe0 && i + 1 < n ? // two bytes\r\n                              (c - 0xc0 << 6) + d[++i] - 0x80\r\n                              : c; // one byte\r\n                } else if (charset === 'unicode' || charset === 'ucs2' || charset === 'utf16') {\r\n                    c = (c << 8) + d[++i];\r\n                    if (c >= 0xD800 && c < 0xE000) {\r\n                        var first = (c - 0xD800) << 10;\r\n                        c = d[++i];\r\n                        c = (c << 8) + d[++i];\r\n                        var second = c - 0xDC00;\r\n                        c = first + second + 0x10000;\r\n                    }\r\n                } else if (charset === 'utf32' || charset === 'ucs4') {\r\n                    c = (c << 8) + d[++i];\r\n                    c = (c << 8) + d[++i];\r\n                    c = (c << 8) + d[++i];\r\n                } else if (charset === 'win1251') {\r\n                    if (c >= 0x80) {\r\n                        if (c >= 0xC0 && c < 0x100)\r\n                            c += 0x350; // А..Яа..я\r\n                        else\r\n                            c = _win1251back_[c] || 0;\r\n                    }\r\n                }\r\n                r.push(String.fromCharCode(c));\r\n            }\r\n            return r.join('');\r\n        }\r\n    }; // </editor-fold>\r\n})();\r\n\r\n/**\r\n * Text string conversion\r\n *\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.Chars\r\n */\r\nGostCoding.prototype.Chars = Chars;\r\n\r\n/**\r\n * HEX conversion\r\n *\r\n * @class GostCoding.Hex\r\n */\r\nvar Hex = {// <editor-fold defaultstate=\"collapsed\">\r\n    /**\r\n     * Hex.decode(s, endean) convert HEX string s to CryptoOperationData in endean mode\r\n     *\r\n     * @memberOf GostCoding.Hex\r\n     * @param {string} s Hex encoded string\r\n     * @param {boolean} endean Little or Big Endean, default Little\r\n     * @returns {CryptoOperationData} Decoded binary data\r\n     */\r\n    decode: function (s, endean) {\r\n        s = s.replace(/[^A-fa-f0-9]/g, '');\r\n        var n = Math.ceil(s.length / 2), r = new Uint8Array(n);\r\n        s = (s.length % 2 > 0 ? '0' : '') + s;\r\n        if (endean && ((typeof endean !== 'string') ||\r\n          (endean.toLowerCase().indexOf('little') < 0)))\r\n            for (var i = 0; i < n; i++)\r\n                r[i] = parseInt(s.substr((n - i - 1) * 2, 2), 16);\r\n        else\r\n            for (var i = 0; i < n; i++)\r\n                r[i] = parseInt(s.substr(i * 2, 2), 16);\r\n        return r.buffer;\r\n    },\r\n    /**\r\n     * Hex.encode(data, endean) convert CryptoOperationData data to HEX string in endean mode\r\n     *\r\n     * @memberOf GostCoding.Hex\r\n     * @param {CryptoOperationData} data Binary data\r\n     * @param {boolean} endean Little/Big Endean, default Little\r\n     * @returns {string} Hex decoded string\r\n     */\r\n    encode: function (data, endean) {\r\n        var s = [], d = new Uint8Array(buffer(data)), n = d.length;\r\n        if (endean && ((typeof endean !== 'string') ||\r\n          (endean.toLowerCase().indexOf('little') < 0)))\r\n            for (var i = 0; i < n; i++) {\r\n                var j = n - i - 1;\r\n                s[j] = (j > 0 && j % 32 === 0 ? '\\r\\n' : '') +\r\n                  ('00' + d[i].toString(16)).slice(-2);\r\n            }\r\n        else\r\n            for (var i = 0; i < n; i++)\r\n                s[i] = (i > 0 && i % 32 === 0 ? '\\r\\n' : '') +\r\n                  ('00' + d[i].toString(16)).slice(-2);\r\n        return s.join('');\r\n    } // </editor-fold>\r\n};\r\n\r\n/**\r\n *  HEX conversion\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.Hex\r\n */\r\nGostCoding.prototype.Hex = Hex;\r\n\r\n/**\r\n * String hex-encoded integer conversion\r\n *\r\n * @class GostCoding.Int16\r\n */\r\nvar Int16 = {// <editor-fold defaultstate=\"collapsed\">\r\n    /**\r\n     * Int16.decode(s) convert hex big insteger s to CryptoOperationData\r\n     *\r\n     * @memberOf GostCoding.Int16\r\n     * @param {string} s Int16 string\r\n     * @returns {CryptoOperationData} Decoded binary data\r\n     */\r\n    decode: function (s) {\r\n        s = (s || '').replace(/[^\\-A-fa-f0-9]/g, '');\r\n        if (s.length === 0)\r\n            s = '0';\r\n        // Signature\r\n        var neg = false;\r\n        if (s.charAt(0) === '-') {\r\n            neg = true;\r\n            s = s.substring(1);\r\n        }\r\n        // Align 2 chars\r\n        while (s.charAt(0) === '0' && s.length > 1)\r\n            s = s.substring(1);\r\n        s = (s.length % 2 > 0 ? '0' : '') + s;\r\n        // Padding for singanuture\r\n        // '800000' - 'ffffff' - for positive\r\n        // '800001' - 'ffffff' - for negative\r\n        if ((!neg && !/^[0-7]/.test(s)) ||\r\n          (neg && !/^[0-7]|8[0]+$/.test(s)))\r\n            s = '00' + s;\r\n        // Convert hex\r\n        var n = s.length / 2, r = new Uint8Array(n), t = 0;\r\n        for (var i = n - 1; i >= 0; --i) {\r\n            var c = parseInt(s.substr(i * 2, 2), 16);\r\n            if (neg && (c + t > 0)) {\r\n                c = 256 - c - t;\r\n                t = 1;\r\n            }\r\n            r[i] = c;\r\n        }\r\n        return r.buffer;\r\n    },\r\n    /**\r\n     * Int16.encode(data) convert CryptoOperationData data to big integer hex string\r\n     *\r\n     * @memberOf GostCoding.Int16\r\n     * @param {CryptoOperationData} data Binary data\r\n     * @returns {string} Int16 encoded string\r\n     */\r\n    encode: function (data) {\r\n        var d = new Uint8Array(buffer(data)), n = d.length;\r\n        if (d.length === 0)\r\n            return '0x00';\r\n        var s = [], neg = d[0] > 0x7f, t = 0;\r\n        for (var i = n - 1; i >= 0; --i) {\r\n            var v = d[i];\r\n            if (neg && (v + t > 0)) {\r\n                v = 256 - v - t;\r\n                t = 1;\r\n            }\r\n            s[i] = ('00' + v.toString(16)).slice(-2);\r\n        }\r\n        s = s.join('');\r\n        while (s.charAt(0) === '0')\r\n            s = s.substring(1);\r\n        return (neg ? '-' : '') + '0x' + s;\r\n    } // </editor-fold>\r\n};\r\n\r\n/**\r\n * String hex-encoded integer conversion\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.Int16\r\n */\r\nGostCoding.prototype.Int16 = Int16;\r\n\r\n/**\r\n * BER, DER, CER conversion\r\n *\r\n * @class GostCoding.BER\r\n */\r\nvar BER = (function () { // <editor-fold defaultstate=\"collapsed\">\r\n\r\n    // Predefenition block\r\n    function encodeBER(source, format, onlyContent) {\r\n        // Correct primitive type\r\n        var object = source.object;\r\n        if (object === undefined)\r\n            object = source;\r\n\r\n        // Determinate tagClass\r\n        var tagClass = source.tagClass = source.tagClass || 0; // Universial default\r\n\r\n        // Determinate tagNumber. Use only for Universal class\r\n        if (tagClass === 0) {\r\n            var tagNumber = source.tagNumber;\r\n            if (typeof tagNumber === 'undefined') {\r\n                if (typeof object === 'string') {\r\n                    if (object === '')   // NULL\r\n                        tagNumber = 0x05;\r\n                    else if (/^\\-?0x[0-9a-fA-F]+$/.test(object)) // INTEGER\r\n                        tagNumber = 0x02;\r\n                    else if (/^(\\d+\\.)+\\d+$/.test(object)) // OID\r\n                        tagNumber = 0x06;\r\n                    else if (/^[01]+$/.test(object)) // BIT STRING\r\n                        tagNumber = 0x03;\r\n                    else if (/^(true|false)$/.test(object)) // BOOLEAN\r\n                        tagNumber = 0x01;\r\n                    else if (/^[0-9a-fA-F]+$/.test(object)) // OCTET STRING\r\n                        tagNumber = 0x04;\r\n                    else\r\n                        tagNumber = 0x13; // Printable string (later can be changed to UTF8String)\r\n                } else if (typeof object === 'number') { // INTEGER\r\n                    tagNumber = 0x02;\r\n                } else if (typeof object === 'boolean') { // BOOLEAN\r\n                    tagNumber = 0x01;\r\n                } else if (object instanceof Array) { // SEQUENCE\r\n                    tagNumber = 0x10;\r\n                } else if (object instanceof Date) { // GeneralizedTime\r\n                    tagNumber = 0x18;\r\n                } else if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) {\r\n                    tagNumber = 0x04;\r\n                } else\r\n                    throw new DataError('Unrecognized type for ' + object);\r\n            }\r\n        }\r\n\r\n        // Determinate constructed\r\n        var tagConstructed = source.tagConstructed;\r\n        if (typeof tagConstructed === 'undefined')\r\n            tagConstructed = source.tagConstructed = object instanceof Array;\r\n\r\n        // Create content\r\n        var content;\r\n        if (object instanceof CryptoOperationData || (object && object.buffer instanceof CryptoOperationData)) { // Direct\r\n            content = new Uint8Array(buffer(object));\r\n            if (tagNumber === 0x03) { // BITSTRING\r\n                // Set unused bits\r\n                var a = new Uint8Array(buffer(content));\r\n                content = new Uint8Array(a.length + 1);\r\n                content[0] = 0; // No unused bits\r\n                content.set(a, 1);\r\n            }\r\n        } else if (tagConstructed) { // Sub items coding\r\n            if (object instanceof Array) {\r\n                var bytelen = 0, ba = [], offset = 0;\r\n                for (var i = 0, n = object.length; i < n; i++) {\r\n                    ba[i] = encodeBER(object[i], format);\r\n                    bytelen += ba[i].length;\r\n                }\r\n                if (tagNumber === 0x11)\r\n                    ba.sort(function (a, b) { // Sort order for SET components\r\n                        for (var i = 0, n = Math.min(a.length, b.length); i < n; i++) {\r\n                            var r = a[i] - b[i];\r\n                            if (r !== 0)\r\n                                return r;\r\n                        }\r\n                        return a.length - b.length;\r\n                    });\r\n                if (format === 'CER') { // final for CER 00 00\r\n                    ba[n] = new Uint8Array(2);\r\n                    bytelen += 2;\r\n                }\r\n                content = new Uint8Array(bytelen);\r\n                for (var i = 0, n = ba.length; i < n; i++) {\r\n                    content.set(ba[i], offset);\r\n                    offset = offset + ba[i].length;\r\n                }\r\n            } else\r\n                throw new DataError('Constracted block can\\'t be primitive');\r\n        } else {\r\n            switch (tagNumber) {\r\n              // 0x00: // EOC\r\n                case 0x01: // BOOLEAN\r\n                    content = new Uint8Array(1);\r\n                    content[0] = object ? 0xff : 0;\r\n                    break;\r\n                case 0x02: // INTEGER\r\n                case 0x0a: // ENUMIRATED\r\n                    content = Int16.decode(\r\n                      typeof object === 'number' ? object.toString(16) : object);\r\n                    break;\r\n                case 0x03: // BIT STRING\r\n                    if (typeof object === 'string') {\r\n                        var unusedBits = 7 - (object.length + 7) % 8;\r\n                        var n = Math.ceil(object.length / 8);\r\n                        content = new Uint8Array(n + 1);\r\n                        content[0] = unusedBits;\r\n                        for (var i = 0; i < n; i++) {\r\n                            var c = 0;\r\n                            for (var j = 0; j < 8; j++) {\r\n                                var k = i * 8 + j;\r\n                                c = (c << 1) + (k < object.length ? (object.charAt(k) === '1' ? 1 : 0) : 0);\r\n                            }\r\n                            content[i + 1] = c;\r\n                        }\r\n                    }\r\n                    break;\r\n                case 0x04:\r\n                    content = Hex.decode(\r\n                      typeof object === 'number' ? object.toString(16) : object);\r\n                    break;\r\n              // case 0x05: // NULL\r\n                case 0x06: // OBJECT IDENTIFIER\r\n                    var a = object.match(/\\d+/g), r = [];\r\n                    for (var i = 1; i < a.length; i++) {\r\n                        var n = +a[i], r1 = [];\r\n                        if (i === 1)\r\n                            n = n + a[0] * 40;\r\n                        do {\r\n                            r1.push(n & 0x7F);\r\n                            n = n >>> 7;\r\n                        } while (n);\r\n                        // reverse order\r\n                        for (j = r1.length - 1; j >= 0; --j)\r\n                            r.push(r1[j] + (j === 0 ? 0x00 : 0x80));\r\n                    }\r\n                    content = new Uint8Array(r);\r\n                    break;\r\n              // case 0x07: // ObjectDescriptor\r\n              // case 0x08: // EXTERNAL\r\n              // case 0x09: // REAL\r\n              // case 0x0A: // ENUMERATED\r\n              // case 0x0B: // EMBEDDED PDV\r\n                case 0x0C: // UTF8String\r\n                    content = Chars.decode(object, 'utf8');\r\n                    break;\r\n              // case 0x10: // SEQUENCE\r\n              // case 0x11: // SET\r\n                case 0x12: // NumericString\r\n                case 0x16: // IA5String // ASCII\r\n                case 0x13: // PrintableString // ASCII subset\r\n                case 0x14: // TeletexString // aka T61String\r\n                case 0x15: // VideotexString\r\n                case 0x19: // GraphicString\r\n                case 0x1A: // VisibleString // ASCII subset\r\n                case 0x1B: // GeneralString\r\n                    // Reflect on character encoding\r\n                    for (var i = 0, n = object.length; i < n; i++)\r\n                        if (object.charCodeAt(i) > 255)\r\n                            tagNumber = 0x0C;\r\n                    if (tagNumber === 0x0C)\r\n                        content = Chars.decode(object, 'utf8');\r\n                    else\r\n                        content = Chars.decode(object, 'ascii');\r\n                    break;\r\n                case 0x17: // UTCTime\r\n                case 0x18: // GeneralizedTime\r\n                    var result = object.original;\r\n                    if (!result) {\r\n                        var date = new Date(object);\r\n                        date.setMinutes(date.getMinutes() + date.getTimezoneOffset()); // to UTC\r\n                        var ms = tagNumber === 0x18 ? date.getMilliseconds().toString() : ''; // Milliseconds, remove trailing zeros\r\n                        while (ms.length > 0 && ms.charAt(ms.length - 1) === '0')\r\n                            ms = ms.substring(0, ms.length - 1);\r\n                        if (ms.length > 0)\r\n                            ms = '.' + ms;\r\n                        result = (tagNumber === 0x17 ? date.getYear().toString().slice(-2) : date.getFullYear().toString()) +\r\n                          ('00' + (date.getMonth() + 1)).slice(-2) +\r\n                          ('00' + date.getDate()).slice(-2) +\r\n                          ('00' + date.getHours()).slice(-2) +\r\n                          ('00' + date.getMinutes()).slice(-2) +\r\n                          ('00' + date.getSeconds()).slice(-2) + ms + 'Z';\r\n                    }\r\n                    content = Chars.decode(result, 'ascii');\r\n                    break;\r\n                case 0x1C: // UniversalString\r\n                    content = Chars.decode(object, 'utf32');\r\n                    break;\r\n                case 0x1E: // BMPString\r\n                    content = Chars.decode(object, 'utf16');\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (!content)\r\n            content = new Uint8Array(0);\r\n        if (content instanceof CryptoOperationData)\r\n            content = new Uint8Array(content);\r\n\r\n        if (!tagConstructed && format === 'CER') {\r\n            // Encoding CER-form for string types\r\n            var k;\r\n            switch (tagNumber) {\r\n                case 0x03: // BIT_STRING\r\n                    k = 1; // ingnore unused bit for bit string\r\n                case 0x04: // OCTET_STRING\r\n                case 0x0C: // UTF8String\r\n                case 0x12: // NumericString\r\n                case 0x13: // PrintableString\r\n                case 0x14: // TeletexString\r\n                case 0x15: // VideotexString\r\n                case 0x16: // IA5String\r\n                case 0x19: // GraphicString\r\n                case 0x1A: // VisibleString\r\n                case 0x1B: // GeneralString\r\n                case 0x1C: // UniversalString\r\n                case 0x1E: // BMPString\r\n                    k = k || 0;\r\n                    // Split content on 1000 octet len parts\r\n                    var size = 1000;\r\n                    var bytelen = 0, ba = [], offset = 0;\r\n                    for (var i = k, n = content.length; i < n; i += size - k) {\r\n                        ba[i] = encodeBER({\r\n                            object: new Unit8Array(content.buffer, i, Math.min(size - k, n - i)),\r\n                            tagNumber: tagNumber,\r\n                            tagClass: 0,\r\n                            tagConstructed: false\r\n                        }, format);\r\n                        bytelen += ba[i].length;\r\n                    }\r\n                    ba[n] = new Uint8Array(2); // final for CER 00 00\r\n                    bytelen += 2;\r\n                    content = new Uint8Array(bytelen);\r\n                    for (var i = 0, n = ba.length; i < n; i++) {\r\n                        content.set(ba[i], offset);\r\n                        offset = offset + ba[i].length;\r\n                    }\r\n            }\r\n        }\r\n\r\n        // Restore tagNumber for all classes\r\n        if (tagClass === 0)\r\n            source.tagNumber = tagNumber;\r\n        else\r\n            source.tagNumber = tagNumber = source.tagNumber || 0;\r\n        source.content = content;\r\n\r\n        if (onlyContent)\r\n            return content;\r\n\r\n        // Create header\r\n        // tagNumber\r\n        var ha = [], first = tagClass === 3 ? 0xC0 : tagClass === 2 ? 0x80 :\r\n          tagClass === 1 ? 0x40 : 0x00;\r\n        if (tagConstructed)\r\n            first |= 0x20;\r\n        if (tagNumber < 0x1F) {\r\n            first |= tagNumber & 0x1F;\r\n            ha.push(first);\r\n        } else {\r\n            first |= 0x1F;\r\n            ha.push(first);\r\n            var n = tagNumber, ha1 = [];\r\n            do {\r\n                ha1.push(n & 0x7F);\r\n                n = n >>> 7;\r\n            } while (n)\r\n            // reverse order\r\n            for (var j = ha1.length - 1; j >= 0; --j)\r\n                ha.push(ha1[j] + (j === 0 ? 0x00 : 0x80));\r\n        }\r\n        // Length\r\n        if (tagConstructed && format === 'CER') {\r\n            ha.push(0x80);\r\n        } else {\r\n            var len = content.length;\r\n            if (len > 0x7F) {\r\n                var l2 = len, ha2 = [];\r\n                do {\r\n                    ha2.push(l2 & 0xff);\r\n                    l2 = l2 >>> 8;\r\n                } while (l2);\r\n                ha.push(ha2.length + 0x80); // reverse order\r\n                for (var j = ha2.length - 1; j >= 0; --j)\r\n                    ha.push(ha2[j]);\r\n            } else {\r\n                // simple len\r\n                ha.push(len);\r\n            }\r\n        }\r\n        var header = source.header = new Uint8Array(ha);\r\n\r\n        // Result - complete buffer\r\n        var block = new Uint8Array(header.length + content.length);\r\n        block.set(header, 0);\r\n        block.set(content, header.length);\r\n        return block;\r\n    }\r\n\r\n    function decodeBER(source, offset) {\r\n\r\n        // start pos\r\n        var pos = offset || 0, start = pos;\r\n        var tagNumber, tagClass, tagConstructed,\r\n          content, header, buffer, sub, len;\r\n\r\n        if (source.object) {\r\n            // Ready from source\r\n            tagNumber = source.tagNumber;\r\n            tagClass = source.tagClass;\r\n            tagConstructed = source.tagConstructed;\r\n            content = source.content;\r\n            header = source.header;\r\n            buffer = source.object instanceof CryptoOperationData ?\r\n              new Uint8Array(source.object) : null;\r\n            sub = source.object instanceof Array ? source.object : null;\r\n            len = buffer && buffer.length || null;\r\n        } else {\r\n            // Decode header\r\n            var d = source;\r\n\r\n            // Read tag\r\n            var buf = d[pos++];\r\n            tagNumber = buf & 0x1f;\r\n            tagClass = buf >> 6;\r\n            tagConstructed = (buf & 0x20) !== 0;\r\n            if (tagNumber === 0x1f) { // long tag\r\n                tagNumber = 0;\r\n                do {\r\n                    if (tagNumber > 0x1fffffffffff80)\r\n                        throw new DataError('Convertor not supported tag number more then (2^53 - 1) at position ' + offset);\r\n                    buf = d[pos++];\r\n                    tagNumber = (tagNumber << 7) + (buf & 0x7f);\r\n                } while (buf & 0x80);\r\n            }\r\n\r\n            // Read len\r\n            buf = d[pos++];\r\n            len = buf & 0x7f;\r\n            if (len !== buf) {\r\n                if (len > 6) // no reason to use Int10, as it would be a huge buffer anyways\r\n                    throw new DataError('Length over 48 bits not supported at position ' + offset);\r\n                if (len === 0)\r\n                    len = null; // undefined\r\n                else {\r\n                    buf = 0;\r\n                    for (var i = 0; i < len; ++i)\r\n                        buf = (buf << 8) + d[pos++];\r\n                    len = buf;\r\n                }\r\n            }\r\n\r\n            start = pos;\r\n            sub = null;\r\n\r\n            if (tagConstructed) {\r\n                // must have valid content\r\n                sub = [];\r\n                if (len !== null) {\r\n                    // definite length\r\n                    var end = start + len;\r\n                    while (pos < end) {\r\n                        var s = decodeBER(d, pos);\r\n                        sub.push(s);\r\n                        pos += s.header.length + s.content.length;\r\n                    }\r\n                    if (pos !== end)\r\n                        throw new DataError('Content size is not correct for container starting at offset ' + start);\r\n                } else {\r\n                    // undefined length\r\n                    try {\r\n                        for (; ;) {\r\n                            var s = decodeBER(d, pos);\r\n                            pos += s.header.length + s.content.length;\r\n                            if (s.tagClass === 0x00 && s.tagNumber === 0x00)\r\n                                break;\r\n                            sub.push(s);\r\n                        }\r\n                        len = pos - start;\r\n                    } catch (e) {\r\n                        throw new DataError('Exception ' + e + ' while decoding undefined length content at offset ' + start);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Header and content\r\n            header = new Uint8Array(d.buffer, offset, start - offset);\r\n            content = new Uint8Array(d.buffer, start, len);\r\n            buffer = content;\r\n        }\r\n\r\n        // Constructed types - check for string concationation\r\n        if (sub !== null && tagClass === 0) {\r\n            var k;\r\n            switch (tagNumber) {\r\n                case 0x03: // BIT_STRING\r\n                    k = 1; // ingnore unused bit for bit string\r\n                case 0x04: // OCTET_STRING\r\n                case 0x0C: // UTF8String\r\n                case 0x12: // NumericString\r\n                case 0x13: // PrintableString\r\n                case 0x14: // TeletexString\r\n                case 0x15: // VideotexString\r\n                case 0x16: // IA5String\r\n                case 0x19: // GraphicString\r\n                case 0x1A: // VisibleString\r\n                case 0x1B: // GeneralString\r\n                case 0x1C: // UniversalString\r\n                case 0x1E: // BMPString\r\n                    k = k || 0;\r\n                    // Concatination\r\n                    if (sub.length === 0)\r\n                        throw new DataError('No constructed encoding content of string type at offset ' + start);\r\n                    len = k;\r\n                    for (var i = 0, n = sub.length; i < n; i++) {\r\n                        var s = sub[i];\r\n                        if (s.tagClass !== tagClass || s.tagNumber !== tagNumber || s.tagConstructed)\r\n                            throw new DataError('Invalid constructed encoding of string type at offset ' + start);\r\n                        len += s.content.length - k;\r\n                    }\r\n                    buffer = new Uint8Array(len);\r\n                    for (var i = 0, n = sub.length, j = k; i < n; i++) {\r\n                        var s = sub[i];\r\n                        if (k > 0)\r\n                            buffer.set(s.content.subarray(1), j);\r\n                        else\r\n                            buffer.set(s.content, j);\r\n                        j += s.content.length - k;\r\n                    }\r\n                    tagConstructed = false; // follow not required\r\n                    sub = null;\r\n                    break;\r\n            }\r\n        }\r\n        // Primitive types\r\n        var object = '';\r\n        if (sub === null) {\r\n            if (len === null)\r\n                throw new DataError('Invalid tag with undefined length at offset ' + start);\r\n\r\n            if (tagClass === 0) {\r\n                switch (tagNumber) {\r\n                    case 0x01: // BOOLEAN\r\n                        object = buffer[0] !== 0;\r\n                        break;\r\n                    case 0x02: // INTEGER\r\n                    case 0x0a: // ENUMIRATED\r\n                        if (len > 6) {\r\n                            object = Int16.encode(buffer);\r\n                        } else {\r\n                            var v = buffer[0];\r\n                            if (buffer[0] > 0x7f)\r\n                                v = v - 256;\r\n                            for (var i = 1; i < len; i++)\r\n                                v = v * 256 + buffer[i];\r\n                            object = v;\r\n                        }\r\n                        break;\r\n                    case 0x03: // BIT_STRING\r\n                        if (len > 5) { // Content buffer\r\n                            object = new Uint8Array(buffer.subarray(1)).buffer;\r\n                        } else { // Max bit mask only for 32 bit\r\n                            var unusedBit = buffer[0],\r\n                              skip = unusedBit, s = [];\r\n                            for (var i = len - 1; i >= 1; --i) {\r\n                                var b = buffer[i];\r\n                                for (var j = skip; j < 8; ++j)\r\n                                    s.push((b >> j) & 1 ? '1' : '0');\r\n                                skip = 0;\r\n                            }\r\n                            object = s.reverse().join('');\r\n                        }\r\n                        break;\r\n                    case 0x04: // OCTET_STRING\r\n                        object = new Uint8Array(buffer).buffer;\r\n                        break;\r\n                  //  case 0x05: // NULL\r\n                    case 0x06: // OBJECT_IDENTIFIER\r\n                        var s = '',\r\n                          n = 0,\r\n                          bits = 0;\r\n                        for (var i = 0; i < len; ++i) {\r\n                            var v = buffer[i];\r\n                            n = (n << 7) + (v & 0x7F);\r\n                            bits += 7;\r\n                            if (!(v & 0x80)) { // finished\r\n                                if (s === '') {\r\n                                    var m = n < 80 ? n < 40 ? 0 : 1 : 2;\r\n                                    s = m + \".\" + (n - m * 40);\r\n                                } else\r\n                                    s += \".\" + n.toString();\r\n                                n = 0;\r\n                                bits = 0;\r\n                            }\r\n                        }\r\n                        if (bits > 0)\r\n                            throw new DataError('Incompleted OID at offset ' + start);\r\n                        object = s;\r\n                        break;\r\n                  //case 0x07: // ObjectDescriptor\r\n                  //case 0x08: // EXTERNAL\r\n                  //case 0x09: // REAL\r\n                  //case 0x0A: // ENUMERATED\r\n                  //case 0x0B: // EMBEDDED_PDV\r\n                    case 0x10: // SEQUENCE\r\n                    case 0x11: // SET\r\n                        object = [];\r\n                        break;\r\n                    case 0x0C: // UTF8String\r\n                        object = Chars.encode(buffer, 'utf8');\r\n                        break;\r\n                    case 0x12: // NumericString\r\n                    case 0x13: // PrintableString\r\n                    case 0x14: // TeletexString\r\n                    case 0x15: // VideotexString\r\n                    case 0x16: // IA5String\r\n                    case 0x19: // GraphicString\r\n                    case 0x1A: // VisibleString\r\n                    case 0x1B: // GeneralString\r\n                        object = Chars.encode(buffer, 'ascii');\r\n                        break;\r\n                    case 0x1C: // UniversalString\r\n                        object = Chars.encode(buffer, 'utf32');\r\n                        break;\r\n                    case 0x1E: // BMPString\r\n                        object = Chars.encode(buffer, 'utf16');\r\n                        break;\r\n                    case 0x17: // UTCTime\r\n                    case 0x18: // GeneralizedTime\r\n                        var shortYear = tagNumber === 0x17;\r\n                        var s = Chars.encode(buffer, 'ascii'),\r\n                          m = (shortYear ?\r\n                            /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/ :\r\n                            /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/).exec(s);\r\n                        if (!m)\r\n                            throw new DataError('Unrecognized time format \"' + s + '\" at offset ' + start);\r\n                        if (shortYear) {\r\n                            // Where YY is greater than or equal to 50, the year SHALL be interpreted as 19YY; and\r\n                            // Where YY is less than 50, the year SHALL be interpreted as 20YY\r\n                            m[1] = +m[1];\r\n                            m[1] += (m[1] < 50) ? 2000 : 1900;\r\n                        }\r\n                        var dt = new Date(m[1], +m[2] - 1, +m[3], +(m[4] || '0'), +(m[5] || '0'), +(m[6] || '0'), +(m[7] || '0')),\r\n                          tz = dt.getTimezoneOffset();\r\n                        if (m[8] || tagNumber === 0x17) {\r\n                            if (m[8].toUpperCase() !== 'Z' && m[9]) {\r\n                                tz = tz + parseInt(m[9]);\r\n                            }\r\n                            dt.setMinutes(dt.getMinutes() - tz);\r\n                        }\r\n                        dt.original = s;\r\n                        object = dt;\r\n                        break;\r\n                }\r\n            } else // OCTET_STRING\r\n                object = new Uint8Array(buffer).buffer;\r\n        } else\r\n            object = sub;\r\n\r\n        // result\r\n        return {\r\n            tagConstructed: tagConstructed,\r\n            tagClass: tagClass,\r\n            tagNumber: tagNumber,\r\n            header: header,\r\n            content: content,\r\n            object: object\r\n        };\r\n    }\r\n\r\n    return {\r\n        /**\r\n         * BER.decode(object, format) convert javascript object to ASN.1 format CryptoOperationData<br><br>\r\n         * If object has members tagNumber, tagClass and tagConstructed\r\n         * it is clear define encoding rules. Else method use defaul rules:\r\n         * <ul>\r\n         *   <li>Empty string or null - NULL</li>\r\n         *   <li>String starts with '0x' and has 0-9 and a-f characters - INTEGER</li>\r\n         *   <li>String like d.d.d.d (d - set of digits) - OBJECT IDENTIFIER</li>\r\n         *   <li>String with characters 0 and 1 - BIT STRING</li>\r\n         *   <li>Strings 'true' or 'false' - BOOLEAN</li>\r\n         *   <li>String has only 0-9 and a-f characters - OCTET STRING</li>\r\n         *   <li>String has only characters with code 0-255 - PrintableString</li>\r\n         *   <li>Other strings - UTF8String</li>\r\n         *   <li>Number - INTEGER</li>\r\n         *   <li>Date - GeneralizedTime</li>\r\n         *   <li>Boolean - SEQUENCE</li>\r\n         *   <li>CryptoOperationData - OCTET STRING</li>\r\n         * </ul>\r\n         * SEQUENCE or SET arrays recursively encoded for each item.<br>\r\n         * OCTET STRING and BIT STRING can presents as array with one item.\r\n         * It means encapsulates encoding for child element.<br>\r\n         *\r\n         * If CONTEXT or APPLICATION classes item presents as array with one\r\n         * item we use EXPLICIT encoding for element, else IMPLICIT encoding.<br>\r\n         *\r\n         * @memberOf GostCoding.BER\r\n         * @param {Object} object Object to encoding\r\n         * @param {string} format Encoding rule: 'DER' or 'CER', default 'DER'\r\n         * @param {boolean} onlyContent Encode content only, without header\r\n         * @returns {CryptoOperationData} BER encoded data\r\n         */\r\n        encode: function (object, format, onlyContent) {\r\n            return encodeBER(object, format, onlyContent).buffer;\r\n        },\r\n        /**\r\n         * BER.encode(data) convert ASN.1 format CryptoOperationData data to javascript object<br><br>\r\n         *\r\n         * Conversion rules to javascript object:\r\n         *  <ul>\r\n         *      <li>BOOLEAN - Boolean object</li>\r\n         *      <li>INTEGER, ENUMIRATED - Integer object if len <= 6 (48 bits) else Int16 encoded string</li>\r\n         *      <li>BIT STRING - Integer object if len <= 5 (w/o unsedBit octet - 32 bits) else String like '10111100' or  Array with one item in case of incapsulates encoding</li>\r\n         *      <li>OCTET STRING - Hex encoded string or Array with one item in case of incapsulates encoding</li>\r\n         *      <li>OBJECT IDENTIFIER - String with object identifier</li>\r\n         *      <li>SEQUENCE, SET - Array of encoded items</li>\r\n         *      <li>UTF8String, NumericString, PrintableString, TeletexString, VideotexString,\r\n         *          IA5String, GraphicString, VisibleString, GeneralString, UniversalString,\r\n         *          BMPString - encoded String</li>\r\n         *      <li>UTCTime, GeneralizedTime - Date</li>\r\n         *  </ul>\r\n         * @memberOf GostCoding.BER\r\n         * @param {(CryptoOperationData|GostCoding.BER)} data Binary data to decode\r\n         * @returns {Object} Javascript object with result of decoding\r\n         */\r\n        decode: function (data) {\r\n            return decodeBER(data.object ? data : new Uint8Array(buffer(data)), 0);\r\n        }\r\n    }; // </editor-fold>\r\n})();\r\n\r\n/**\r\n * BER, DER, CER conversion\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.BER\r\n */\r\nGostCoding.prototype.BER = BER;\r\n\r\n/**\r\n * PEM conversion\r\n * @class GostCoding.PEM\r\n */\r\nvar PEM = {// <editor-fold defaultstate=\"collapsed\">\r\n    /**\r\n     * PEM.encode(data, name) encode CryptoOperationData to PEM format with name label\r\n     *\r\n     * @memberOf GostCoding.PEM\r\n     * @param {(Object|CryptoOperationData)} data Java script object or BER-encoded binary data\r\n     * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\r\n     * @returns {string} Encoded object\r\n     */\r\n    encode: function (data, name) {\r\n        return (name ? '-----BEGIN ' + name.toUpperCase() + '-----\\r\\n' : '') +\r\n          Base64.encode(data instanceof CryptoOperationData ? data : BER.encode(data)) +\r\n          (name ? '\\r\\n-----END ' + name.toUpperCase() + '-----' : '');\r\n    },\r\n    /**\r\n     * PEM.decode(s, name, deep) decode PEM format s labeled name to CryptoOperationData or javascript object in according to deep parameter\r\n     *\r\n     * @memberOf GostCoding.PEM\r\n     * @param {string} s PEM encoded string\r\n     * @param {string} name Name of PEM object: 'certificate', 'private key' etc.\r\n     * @param {boolean} deep If true method do BER-decoding, else only BASE64 decoding\r\n     * @param {integer} index Index of decoded value\r\n     * @returns {(Object|CryptoOperationData)} Decoded javascript object if deep=true, else CryptoOperationData for father BER decoding\r\n     */\r\n    decode: function (s, name, deep, index) {\r\n        // Try clear base64\r\n        var re1 = /([A-Za-z0-9\\+\\/\\s\\=]+)/g,\r\n          valid = re1.exec(s);\r\n        if (valid[1].length !== s.length)\r\n            valid = false;\r\n        if (!valid && name) {\r\n            // Try with the name\r\n            var re2 = new RegExp(\r\n              '-----\\\\s?BEGIN ' + name.toUpperCase() +\r\n              '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\r\n              name.toUpperCase() + '-----', 'g');\r\n            valid = re2.exec(s);\r\n        }\r\n        if (!valid) {\r\n            // Try with some name\r\n            var re3 = new RegExp(\r\n              '-----\\\\s?BEGIN [A-Z0-9\\\\s]+' +\r\n              '-----([A-Za-z0-9\\\\+\\\\/\\\\s\\\\=]+)-----\\\\s?END ' +\r\n              '[A-Z0-9\\\\s]+-----', 'g');\r\n            valid = re3.exec(s);\r\n        }\r\n        var r = valid && valid[1 + (index || 0)];\r\n        if (!r)\r\n            throw new DataError('Not valid PEM format');\r\n        var out = Base64.decode(r);\r\n        if (deep)\r\n            out = BER.decode(out);\r\n        return out;\r\n    } // </editor-fold>\r\n};\r\n\r\n/**\r\n * PEM conversion\r\n * @memberOf GostCoding\r\n * @insnance\r\n * @type GostCoding.PEM\r\n */\r\nGostCoding.prototype.PEM = PEM;\r\n\r\nexport const gostCodingInstance = new GostCoding();\r\n","/**\r\n * @file GOST R 34.11-94 / GOST R 34.11-12 implementation\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { getSeed } from '../utils/seeds';\r\nimport { GostCipher } from './gostCipher';\r\nimport { NotSupportedError, DataError } from '../utils/errors';\r\n\r\n/*\r\n * GOST R 34.11\r\n * Common methods\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Copy len values from s[sOfs] to d[dOfs]\r\nfunction arraycopy(s, sOfs, d, dOfs, len) {\r\n    for (var i = 0; i < len; i++)\r\n        d[dOfs + i] = s[sOfs + i];\r\n}\r\n\r\n// Swap bytes in buffer\r\nfunction swap(s) {\r\n    var src = new Uint8Array(s),\r\n      dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\n// Convert BASE64 string to Uint8Array\r\n// for decompression of constants and precalc values\r\nfunction b64decode(s) {\r\n    // s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\r\n    var n = s.length,\r\n      k = n * 3 + 1 >> 2, r = new Uint8Array(k);\r\n\r\n    for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\r\n        m4 = i & 3;\r\n        var c = s.charCodeAt(i);\r\n\r\n        c = c > 64 && c < 91 ?\r\n          c - 65 : c > 96 && c < 123 ?\r\n            c - 71 : c > 47 && c < 58 ?\r\n              c + 4 : c === 43 ?\r\n                62 : c === 47 ?\r\n                  63 : 0;\r\n\r\n        u24 |= c << 18 - 6 * m4;\r\n        if (m4 === 3 || n - i === 1) {\r\n            for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\r\n                r[j] = u24 >>> (16 >>> m3 & 24) & 255;\r\n            }\r\n            u24 = 0;\r\n\r\n        }\r\n    }\r\n    return r.buffer;\r\n}\r\n\r\n// Check buffer\r\nfunction buffer(d) {\r\n    if (d instanceof ArrayBuffer)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof ArrayBuffer)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('ArrayBuffer or ArrayBufferView required');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11 or GOST R 34.11-12<br><br>\r\n *\r\n * http://tools.ietf.org/html/rfc6986\r\n *\r\n * The digest method returns digest data in according to GOST R 4311-2012.<br>\r\n * Size of digest also defines in algorithm name.\r\n *  <ul>\r\n *      <li>GOST R 34.11-256-12 - 256 bits digest</li>\r\n *      <li>GOST R 34.11-512-12 - 512 bits digest</li>\r\n *  </ul>\r\n *\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digest2012 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      // Constants\r\n      var buffer0 = new Int32Array(16); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      var buffer512 = new Int32Array(16); // [512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n      buffer512[0] = 512;\r\n\r\n      // Constant C\r\n      var C = (function (s) {\r\n          var h = new Int32Array(b64decode(s)),\r\n            r = new Array(12);\r\n          for (var i = 0; i < 12; i++)\r\n              r[i] = new Int32Array(h.buffer, i * 64, 16);\r\n          return r;\r\n      })(\r\n        'B0Wm8lllgN0jTXTMNnR2BRXTYKQIKkKiAWlnkpHgfEv8xIV1jbhOcRbQRS5DdmovH3xlwIEvy+vp2soe2lsIsbebsSFwBHnmVs3L1xui3VXKpwrbwmG1XFiZ1hJrF7WaMQG1Fg9e1WGYKyMKcur+89e1cA9GneNPGi+dqYq1o2+yCroK9ZYemTHbeoZD9LbCCdtiYDc6ycGxnjWQ5A/i03t7KbEUderyix+cUl9e8QY1hD1qKPw5Cscvzius3HT1LtHjhLy+DCLxN+iToepTNL4DUpMzE7fYddYD7YIs16k/NV5orRxynX08XDN+hY5I3eRxXaDhSPnSZhXos98f71f+bHz9WBdg9WPqqX6iVnoWGicjtwD/36P1OiVHF82/vf8PgNc1njVKEIYWHxwVf2MjqWwMQT+amUdHraxr6ktufWRGekBo+jVPkDZyxXG/tsa+wmYf8gq0t5oct6b6z8aO8Jq0mn8YbKRCUfnEZi3AOTB6O8Okb9nTOh2urk+uk9QUOk1WhojzSjyiTEUXNQQFSiiDaUcGNyyCLcWrkgnJk3oZMz5H08mHv+bHxp45VAkkv/6GrFHsxaruFg7H9B7nAr/UDX+k' +\r\n        '2ahRWTXCrDYvxKXRK43RaZAGm5LLK4n0msTbTTtEtIke3jaccfi3TkFBbgwCqucDp8mTTUJbH5vbWiODUURhcmAqH8uS3DgOVJwHppqKK3uxzrLbC0QKgIQJDeC3Vdk8JEKJJRs6fTreXxbs2JpMlJsiMRZUWo837ZxFmPvHtHTDtjsV0fqYNvRSdjswbB56SzNprwJn558DYTMbiuH/H9t4iv8c50GJ8/PkskjlKjhSbwWApt6+qxst84HNpMprXdhvwEpZot6Ybkd9Hc2678q5SOrvcR2KeWaEFCGAASBhB6vru2v62JT+WmPNxgIw+4nI79CezXsg1xvxSpK8SJkbstnVF/T6UijhiKqkHeeGzJEYne+AXZufITDUEiD4dx3fvDI8pM16sUkEsIAT0roxFvFn5443');\r\n\r\n      // Precalc Ax\r\n      var Ax = (function (s) {\r\n          return new Int32Array(b64decode(s));\r\n      })(\r\n        '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'); //==\r\n\r\n      // Variables\r\n      var sigma, N, h;\r\n\r\n      // 64bit tools\r\n      function get8(x, i) {\r\n          return (x[i >> 2] >> ((i & 3) << 3)) & 0xff;\r\n      }\r\n\r\n      // 512bit tools\r\n      function add512(x, y) {\r\n          var CF = 0, w0, w1;\r\n          for (var i = 0; i < 16; i++) {\r\n              w0 = (x[i] & 0xffff) + (y[i] & 0xffff) + (CF || 0);\r\n              w1 = (x[i] >>> 16) + (y[i] >>> 16) + (w0 >>> 16);\r\n              x[i] = (w0 & 0xffff) | (w1 << 16);\r\n              CF = (w1 >>> 16);\r\n          }\r\n      }\r\n\r\n      function get512(d) {\r\n          return new Int32Array(d.buffer, d.byteOffset, 16);\r\n      }\r\n\r\n\r\n      function copy512(r, d) {\r\n          for (var i = 0; i < 16; i++)\r\n              r[i] = d[i];\r\n      }\r\n\r\n      function new512() {\r\n          return new Int32Array(16);\r\n      }\r\n\r\n      // Core private algorithms\r\n      function xor512(x, y) {\r\n          for (var i = 0; i < 16; i++)\r\n              x[i] = x[i] ^ y[i];\r\n      }\r\n\r\n\r\n      var r = new512();\r\n\r\n      function XLPS(x, y) {\r\n          copy512(r, x);\r\n          xor512(r, y);\r\n          for (var i = 0; i < 8; i++) {\r\n              var z0, z1, k = get8(r, i) << 1;\r\n              z0 = Ax[k];\r\n              z1 = Ax[k + 1];\r\n              for (var j = 1; j < 8; j++) {\r\n                  k = (j << 9) + (get8(r, (j << 3) + i) << 1);\r\n                  z0 = z0 ^ Ax[k];\r\n                  z1 = z1 ^ Ax[k + 1];\r\n              }\r\n              x[i << 1] = z0;\r\n              x[(i << 1) + 1] = z1;\r\n          }\r\n      }\r\n\r\n      var data = new512(), Ki = new512();\r\n\r\n      function g(h, N, m) {\r\n          var i;\r\n\r\n          copy512(data, h);\r\n          XLPS(data, N);\r\n\r\n          /* Starting E() */\r\n          copy512(Ki, data);\r\n          XLPS(data, m);\r\n\r\n          for (i = 0; i < 11; i++) {\r\n              XLPS(Ki, C[i]);\r\n              XLPS(data, Ki);\r\n          }\r\n\r\n          XLPS(Ki, C[11]);\r\n          xor512(data, Ki);\r\n          /* E() done */\r\n\r\n          xor512(h, data);\r\n          xor512(h, m);\r\n      }\r\n\r\n      // Stages\r\n      function stage2(d) {\r\n          var m = get512(d);\r\n          g(h, N, m);\r\n\r\n          add512(N, buffer512);\r\n          add512(sigma, m);\r\n      }\r\n\r\n      function stage3(d) {\r\n          var n = d.length;\r\n          if (n > 63)\r\n              return;\r\n\r\n          var b0 = new Int32Array(16);\r\n          b0[0] = n << 3;\r\n\r\n          var b = new Uint8Array(64);\r\n          for (var i = 0; i < n; i++)\r\n              b[i] = d[i];\r\n          b[n] = 0x01;\r\n\r\n          var m = get512(b), m0 = get512(b0);\r\n          g(h, N, m);\r\n\r\n          add512(N, m0);\r\n          add512(sigma, m);\r\n\r\n          g(h, buffer0, N);\r\n          g(h, buffer0, sigma);\r\n      }\r\n\r\n      return function (data) {\r\n\r\n          // Cleanup\r\n          sigma = new512();\r\n          N = new512();\r\n\r\n          // Initial vector\r\n          h = new512();\r\n          for (var i = 0; i < 16; i++)\r\n              if (this.bitLength === 256)\r\n                  h[i] = 0x01010101;\r\n\r\n          // Make data\r\n          var d = new Uint8Array(buffer(data));\r\n\r\n          var n = d.length;\r\n          var r = n % 64, q = (n - r) / 64;\r\n\r\n          for (var i = 0; i < q; i++)\r\n              stage2.call(this, new Uint8Array(d.buffer, i * 64, 64));\r\n\r\n          stage3.call(this, new Uint8Array(d.buffer, q * 64, r));\r\n\r\n          var digest;\r\n          if (this.bitLength === 256) {\r\n              digest = new Int32Array(8);\r\n              for (var i = 0; i < 8; i++)\r\n                  digest[i] = h[8 + i];\r\n          } else {\r\n              digest = new Int32Array(16);\r\n              for (var i = 0; i < 16; i++)\r\n                  digest[i] = h[i];\r\n          }\r\n          // Swap hash for SignalCom\r\n          if (this.procreator === 'SC' || this.procreator === 'VN')\r\n              return swap(digest.buffer);\r\n          else\r\n              return digest.buffer;\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-94<br><br>\r\n *\r\n * http://tools.ietf.org/html/rfc5831\r\n *\r\n * The digest method returns digest data in according to GOST R 34.11-94.\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digest94 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      var C, H, M, Sum;\r\n\r\n      // (i + 1 + 4(k - 1)) = 8i + k      i = 0-3, k = 1-8\r\n      function P(d) {\r\n          var K = new Uint8Array(32);\r\n\r\n          for (var k = 0; k < 8; k++) {\r\n              K[4 * k] = d[k];\r\n              K[1 + 4 * k] = d[8 + k];\r\n              K[2 + 4 * k] = d[16 + k];\r\n              K[3 + 4 * k] = d[24 + k];\r\n          }\r\n\r\n          return K;\r\n      }\r\n\r\n      //A (x) = (x0 ^ x1) || x3 || x2 || x1\r\n      function A(d) {\r\n          var a = new Uint8Array(8);\r\n\r\n          for (var j = 0; j < 8; j++) {\r\n              a[j] = (d[j] ^ d[j + 8]);\r\n          }\r\n\r\n          arraycopy(d, 8, d, 0, 24);\r\n          arraycopy(a, 0, d, 24, 8);\r\n\r\n          return d;\r\n      }\r\n\r\n      // (in:) n16||..||n1 ==> (out:) n1^n2^n3^n4^n13^n16||n16||..||n2\r\n      function fw(d) {\r\n          var wS = new Uint16Array(d.buffer, 0, 16);\r\n          var wS15 = wS[0] ^ wS[1] ^ wS[2] ^ wS[3] ^ wS[12] ^ wS[15];\r\n          arraycopy(wS, 1, wS, 0, 15);\r\n          wS[15] = wS15;\r\n      }\r\n\r\n      //Encrypt function, ECB mode\r\n      function encrypt(key, s, sOff, d, dOff) {\r\n          var t = new Uint8Array(8);\r\n          arraycopy(d, dOff, t, 0, 8);\r\n          var r = new Uint8Array(this.cipher.encrypt(key, t));\r\n          arraycopy(r, 0, s, sOff, 8);\r\n      }\r\n\r\n      // block processing\r\n      function process(d, dOff) {\r\n          var S = new Uint8Array(32), U = new Uint8Array(32),\r\n            V = new Uint8Array(32), W = new Uint8Array(32);\r\n\r\n          arraycopy(d, dOff, M, 0, 32);\r\n\r\n          //key step 1\r\n\r\n          // H = h3 || h2 || h1 || h0\r\n          // S = s3 || s2 || s1 || s0\r\n          arraycopy(H, 0, U, 0, 32);\r\n          arraycopy(M, 0, V, 0, 32);\r\n          for (var j = 0; j < 32; j++) {\r\n              W[j] = (U[j] ^ V[j]);\r\n          }\r\n          // Encrypt GOST 28147-ECB\r\n          encrypt.call(this, P(W), S, 0, H, 0); // s0 = EK0 [h0]\r\n\r\n          //keys step 2,3,4\r\n          for (var i = 1; i < 4; i++) {\r\n              var tmpA = A(U);\r\n              for (var j = 0; j < 32; j++) {\r\n                  U[j] = (tmpA[j] ^ C[i][j]);\r\n              }\r\n              V = A(A(V));\r\n              for (var j = 0; j < 32; j++) {\r\n                  W[j] = (U[j] ^ V[j]);\r\n              }\r\n              // Encrypt GOST 28147-ECB\r\n              encrypt.call(this, P(W), S, i * 8, H, i * 8); // si = EKi [hi]\r\n          }\r\n\r\n          // x(M, H) = y61(H^y(M^y12(S)))\r\n          for (var n = 0; n < 12; n++) {\r\n              fw(S);\r\n          }\r\n          for (var n = 0; n < 32; n++) {\r\n              S[n] = (S[n] ^ M[n]);\r\n          }\r\n\r\n          fw(S);\r\n\r\n          for (var n = 0; n < 32; n++) {\r\n              S[n] = (H[n] ^ S[n]);\r\n          }\r\n          for (var n = 0; n < 61; n++) {\r\n              fw(S);\r\n          }\r\n          arraycopy(S, 0, H, 0, H.length);\r\n      }\r\n\r\n\r\n      //  256 bitsblock modul -> (Sum + a mod (2^256))\r\n      function summing(d) {\r\n          var carry = 0;\r\n          for (var i = 0; i < Sum.length; i++) {\r\n              var sum = (Sum[i] & 0xff) + (d[i] & 0xff) + carry;\r\n\r\n              Sum[i] = sum;\r\n\r\n              carry = sum >>> 8;\r\n          }\r\n      }\r\n\r\n      // reset the chaining variables to the IV values.\r\n      var C2 = new Uint8Array([\r\n          0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,\r\n          0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,\r\n          0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF,\r\n          0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF\r\n      ]);\r\n\r\n      return function (data) {\r\n\r\n          // Reset buffers\r\n          H = new Uint8Array(32);\r\n          M = new Uint8Array(32);\r\n          Sum = new Uint8Array(32);\r\n\r\n          // Reset IV value\r\n          C = new Array(4);\r\n          for (var i = 0; i < 4; i++)\r\n              C[i] = new Uint8Array(32);\r\n          arraycopy(C2, 0, C[2], 0, C2.length);\r\n\r\n          // Make data\r\n          var d = new Uint8Array(buffer(data));\r\n\r\n          var n = d.length;\r\n          var r = n % 32, q = (n - r) / 32;\r\n\r\n          // Proccess full blocks\r\n          for (var i = 0; i < q; i++) {\r\n              var b = new Uint8Array(d.buffer, i * 32, 32);\r\n\r\n              summing.call(this, b); // calc sum M\r\n              process.call(this, b, 0);\r\n          }\r\n\r\n          // load d the remadder with padding zero;\r\n          if (r > 0) {\r\n              var b = new Uint8Array(d.buffer, q * 32),\r\n                c = new Uint8Array(32);\r\n              arraycopy(b, 0, c, 0, r);\r\n              summing.call(this, c); // calc sum M\r\n              process.call(this, c, 0);\r\n\r\n          }\r\n\r\n          // get length into L (byteCount * 8 = bitCount) in little endian.\r\n          var L = new Uint8Array(32), n8 = n * 8, k = 0;\r\n          while (n8 > 0) {\r\n              L[k++] = n8 & 0xff;\r\n              n8 = Math.floor(n8 / 256);\r\n          }\r\n          process.call(this, L, 0);\r\n          process.call(this, Sum, 0);\r\n\r\n          var h = H.buffer;\r\n\r\n          // Swap hash for SignalCom\r\n          if (this.procreator === 'SC')\r\n              h = swap(h);\r\n\r\n          return h;\r\n      };\r\n\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name SHA-1<br><br>\r\n *\r\n * https://tools.ietf.org/html/rfc3174\r\n *\r\n * The digest method returns digest data in according to SHA-1.<br>\r\n *\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digestSHA1 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n\r\n      // Create a buffer for each 80 word block.\r\n      var state, block = new Uint32Array(80);\r\n\r\n      function common(a, e, w, k, f) {\r\n          return (f + e + w + k + ((a << 5) | (a >>> 27))) >>> 0;\r\n      }\r\n\r\n      function f1(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x5A827999, d ^ (b & (c ^ d)));\r\n      }\r\n\r\n      function f2(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x6ED9EBA1, b ^ c ^ d);\r\n      }\r\n\r\n      function f3(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x8F1BBCDC, (b & c) | (d & (b | c)));\r\n      }\r\n\r\n      function f4(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0xCA62C1D6, b ^ c ^ d);\r\n      }\r\n\r\n      function cycle(state, block) {\r\n          var a = state[0],\r\n            b = state[1],\r\n            c = state[2],\r\n            d = state[3],\r\n            e = state[4];\r\n\r\n          // Partially unroll loops so we don't have to shift variables.\r\n          var fn = f1;\r\n          for (var i = 0; i < 80; i += 5) {\r\n              if (i === 20) {\r\n                  fn = f2;\r\n              }\r\n              else if (i === 40) {\r\n                  fn = f3;\r\n              }\r\n              else if (i === 60) {\r\n                  fn = f4;\r\n              }\r\n              e = fn(a, b, c, d, e, block[i]);\r\n              b = ((b << 30) | (b >>> 2)) >>> 0;\r\n              d = fn(e, a, b, c, d, block[i + 1]);\r\n              a = ((a << 30) | (a >>> 2)) >>> 0;\r\n              c = fn(d, e, a, b, c, block[i + 2]);\r\n              e = ((e << 30) | (e >>> 2)) >>> 0;\r\n              b = fn(c, d, e, a, b, block[i + 3]);\r\n              d = ((d << 30) | (d >>> 2)) >>> 0;\r\n              a = fn(b, c, d, e, a, block[i + 4]);\r\n              c = ((c << 30) | (c >>> 2)) >>> 0;\r\n          }\r\n          state[0] += a;\r\n          state[1] += b;\r\n          state[2] += c;\r\n          state[3] += d;\r\n          state[4] += e;\r\n      }\r\n\r\n      // Swap bytes for 32bits word\r\n      function swap32(b) {\r\n          return ((b & 0xff) << 24)\r\n            | ((b & 0xff00) << 8)\r\n            | ((b >> 8) & 0xff00)\r\n            | ((b >> 24) & 0xff);\r\n      }\r\n\r\n      // input is a Uint8Array bitstream of the data\r\n      return function (data) {\r\n          var d = new Uint8Array(buffer(data)), dlen = d.length;\r\n\r\n          // Pad the input string length.\r\n          var len = dlen + 9;\r\n          if (len % 64) {\r\n              len += 64 - (len % 64);\r\n          }\r\n\r\n          state = new Uint32Array(5);\r\n          state[0] = 0x67452301;\r\n          state[1] = 0xefcdab89;\r\n          state[2] = 0x98badcfe;\r\n          state[3] = 0x10325476;\r\n          state[4] = 0xc3d2e1f0;\r\n\r\n          for (var ofs = 0; ofs < len; ofs += 64) {\r\n\r\n              // Copy input to block and write padding as needed\r\n              for (var i = 0; i < 64; i++) {\r\n                  var b = 0,\r\n                    o = ofs + i;\r\n                  if (o < dlen) {\r\n                      b = d[o];\r\n                  }\r\n                  else if (o === dlen) {\r\n                      b = 0x80;\r\n                  }\r\n                  else {\r\n                      // Write original bit length as a 64bit big-endian integer to the end.\r\n                      var x = len - o - 1;\r\n                      if (x >= 0 && x < 4) {\r\n                          b = (dlen << 3 >>> (x * 8)) & 0xff;\r\n                      }\r\n                  }\r\n\r\n                  // Interpret the input bytes as big-endian per the spec\r\n                  if (i % 4 === 0) {\r\n                      block[i >> 2] = b << 24;\r\n                  }\r\n                  else {\r\n                      block[i >> 2] |= b << ((3 - (i % 4)) * 8);\r\n                  }\r\n              }\r\n\r\n              // Extend the block\r\n              for (var i = 16; i < 80; i++) {\r\n                  var w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\r\n                  block[i] = (w << 1) | (w >>> 31);\r\n              }\r\n\r\n              cycle(state, block);\r\n\r\n          }\r\n\r\n          // Swap the bytes around since they are big endian internally\r\n          for (var i = 0; i < 5; i++)\r\n              state[i] = swap32(state[i]);\r\n          return state.buffer;\r\n      };\r\n\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-HMAC<br><br>\r\n *\r\n * HMAC with the specified hash function.\r\n * @memberOf GostDigest\r\n * @method sign\r\n * @instance\r\n * @param {ArrayBuffer} key The key for HMAC.\r\n * @param {Hash} data Data\r\n */\r\nfunction signHMAC(key, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // GOST R 34.11-94 - B=32b, L=32b\r\n    // GOST R 34.11-256 - B=64b, L=32b\r\n    // GOST R 34.11-512 - B=64b, L=64b\r\n    var b = (this.digest === digest94) ? 32 : 64,\r\n      l = this.bitLength / 8,\r\n      k = buffer(key),\r\n      d = buffer(data), k0;\r\n    if (k.byteLength === b)\r\n        k0 = new Uint8Array(k);\r\n    else {\r\n        var k0 = new Uint8Array(b);\r\n        if (k.byteLength > b) {\r\n            k0.set(new Uint8Array(this.digest(k)));\r\n        } else {\r\n            k0.set(new Uint8Array(k));\r\n        }\r\n    }\r\n    var s0 = new Uint8Array(b + d.byteLength),\r\n      s1 = new Uint8Array(b + l);\r\n    for (var i = 0; i < b; i++) {\r\n        s0[i] = k0[i] ^ 0x36;\r\n        s1[i] = k0[i] ^ 0x5C;\r\n    }\r\n    s0.set(new Uint8Array(d), b);\r\n    s1.set(new Uint8Array(this.digest(s0)), b);\r\n    return this.digest(s1);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-HMAC<br><br>\r\n *\r\n * Verify HMAC based on GOST R 34.11 hash\r\n *\r\n * @memberOf GostDigest\r\n * @method verify\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} key Key which used for HMAC generation\r\n * @param {(ArrayBuffer|TypedArray)} signature generated HMAC\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {boolean} HMAC verified = true\r\n */\r\nfunction verifyHMAC(key, signature, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var hmac = new Uint8Array(this.sign(key, data)),\r\n      test = new Uint8Array(signature);\r\n    if (hmac.length !== test.length)\r\n        return false;\r\n    for (var i = 0, n = hmac.length; i < n; i++)\r\n        if (hmac[i] !== test[i])\r\n            return false;\r\n    return true;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF<br><br>\r\n *\r\n * Simple generate key 256/512 bit random seed for derivation algorithms\r\n *\r\n * @memberOf GostDigest\r\n * @method generateKey\r\n * @instance\r\n * @returns {ArrayBuffer} Generated key\r\n */\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return getSeed(this.bitLength).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PFXKDF<br><br>\r\n *\r\n * Derive bits from password (PKCS12 mode)\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPFXKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length % 8 > 0)\r\n        throw new DataError('Length must multiple of 8');\r\n    var u = this.bitLength / 8, v = (this.digest === digest94) ? 32 : 64,\r\n      n = length / 8, r = this.iterations;\r\n    //   1.  Construct a string, D (the \"diversifier\"), by concatenating v/8\r\n    //       copies of ID.\r\n    var ID = this.diversifier, D = new Uint8Array(v);\r\n    for (var i = 0; i < v; i++)\r\n        D[i] = ID;\r\n    //   2.  Concatenate copies of the salt together to create a string S of\r\n    //       length v(ceiling(s/v)) bits (the final copy of the salt may be\r\n    //       truncated to create S).  Note that if the salt is the empty\r\n    //       string, then so is S.\r\n    var S0 = new Uint8Array(buffer(this.salt)), s = S0.length,\r\n      slen = v * Math.ceil(s / v), S = new Uint8Array(slen);\r\n    for (var i = 0; i < slen; i++)\r\n        S[i] = S0[i % s];\r\n    //   3.  Concatenate copies of the password together to create a string P\r\n    //       of length v(ceiling(p/v)) bits (the final copy of the password\r\n    //       may be truncated to create P).  Note that if the password is the\r\n    //       empty string, then so is P.\r\n    var P0 = new Uint8Array(buffer(baseKey)), p = P0.length,\r\n      plen = v * Math.ceil(p / v), P = new Uint8Array(plen);\r\n    for (var i = 0; i < plen; i++)\r\n        P[i] = P0[i % p];\r\n    //   4.  Set I=S||P to be the concatenation of S and P.\r\n    var I = new Uint8Array(slen + plen);\r\n    arraycopy(S, 0, I, 0, slen);\r\n    arraycopy(P, 0, I, slen, plen);\r\n    //   5.  Set c=ceiling(n/u).\r\n    var c = Math.ceil(n / u);\r\n    //   6.  For i=1, 2, ..., c, do the following:\r\n    var A = new Uint8Array(c * u);\r\n    for (var i = 0; i < c; i++) {\r\n        //  A.  Set A2=H^r(D||I). (i.e., the r-th hash of D||1,\r\n        //      H(H(H(... H(D||I))))\r\n        var H = new Uint8Array(v + slen + plen);\r\n        arraycopy(D, 0, H, 0, v);\r\n        arraycopy(I, 0, H, v, slen + plen);\r\n        for (var j = 0; j < r; j++)\r\n            H = new Uint8Array(this.digest(H));\r\n        arraycopy(H, 0, A, i * u, u);\r\n        //  B.  Concatenate copies of Ai to create a string B of length v\r\n        //      bits (the final copy of Ai may be truncated to create B).\r\n        var B = new Uint8Array(v);\r\n        for (var j = 0; j < v; j++)\r\n            B[j] = H[j % u];\r\n        //  C.  Treating I as a concatenation I_0, I_1, ..., I_(k-1) of v-bit\r\n        //      blocks, where k=ceiling(s/v)+ceiling(p/v), modify I by\r\n        //      setting I_j=(I_j+B+1) mod 2^v for each j.\r\n        var k = (slen + plen) / v;\r\n        for (j = 0; j < k; j++) {\r\n            var cf = 1, w;\r\n            for (var l = v - 1; l >= 0; --l) {\r\n                w = I[v * j + l] + B[l] + cf;\r\n                cf = w >>> 8;\r\n                I[v * j + l] = w & 0xff;\r\n            }\r\n        }\r\n    }\r\n    //   7.  Concatenate A_1, A_2, ..., A_c together to form a pseudorandom\r\n    //       bit string, A.\r\n    //   8.  Use the first n bits of A as the output of this entire process.\r\n    var R = new Uint8Array(n);\r\n    arraycopy(A, 0, R, 0, n);\r\n    return R.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF<br><br>\r\n *\r\n * Derive bits for KEK deversification in 34.10-2012 algorithm\r\n * KDF(KEK, UKM, label) = HMAC256 (KEK,  0x01|label|0x00|UKM|0x01|0x00)\r\n * Default label = 0x26|0xBD|0xB8|0x78\r\n *\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} baseKey base key for deriviation\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length % 8 > 0)\r\n        throw new DataError('Length must be multiple of 8');\r\n    var rlen = length / 8, label, context = new Uint8Array(buffer(this.context)),\r\n      blen = this.bitLength / 8, n = Math.ceil(rlen / blen);\r\n    if (this.label)\r\n        label = new Uint8Array(buffer(this.label));\r\n    else\r\n        label = new Uint8Array([0x26, 0xBD, 0xB8, 0x78]);\r\n    var result = new Uint8Array(rlen);\r\n    for (var i = 0; i < n; i++) {\r\n        var data = new Uint8Array(label.length + context.length + 4);\r\n        data[0] = i + 1;\r\n        data.set(label, 1);\r\n        data[label.length + 1] = 0x00;\r\n        data.set(context, label.length + 2);\r\n        data[data.length - 2] = length >>> 8;\r\n        data[data.length - 1] = length & 0xff;\r\n        result.set(new Uint8Array(signHMAC.call(this, baseKey, data), 0,\r\n          i < n - 1 ? blen : rlen - i * blen), i * blen);\r\n    }\r\n    return result.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PBKDF1<br><br>\r\n *\r\n * Derive bits from password\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPBKDF1(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length < this.bitLength / 2 || length % 8 > 0)\r\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\r\n    var hLen = this.bitLength / 8, dkLen = length / 8,\r\n      c = this.iterations,\r\n      P = new Uint8Array(buffer(baseKey)),\r\n      S = new Uint8Array(buffer(this.salt)),\r\n      slen = S.length, plen = P.length,\r\n      T = new Uint8Array(plen + slen),\r\n      DK = new Uint8Array(dkLen);\r\n    if (dkLen > hLen)\r\n        throw new DataError('Invalid parameters: Length value');\r\n    arraycopy(P, 0, T, 0, plen);\r\n    arraycopy(S, 0, T, plen, slen);\r\n    for (var i = 0; i < c; i++)\r\n        T = new Uint8Array(this.digest(T));\r\n    arraycopy(T, 0, DK, 0, dkLen);\r\n    return DK.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PBKDF2<br><br>\r\n *\r\n * Derive bits from password\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPBKDF2(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var diversifier = this.diversifier || 1; // For PKCS12 MAC required 3*length\r\n    length = length * diversifier;\r\n    if (length < this.bitLength / 2 || length % 8 > 0)\r\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\r\n    var hLen = this.bitLength / 8, dkLen = length / 8,\r\n      c = this.iterations,\r\n      P = new Uint8Array(buffer(baseKey)),\r\n      S = new Uint8Array(buffer(this.salt));\r\n    var slen = S.byteLength,\r\n      data = new Uint8Array(slen + 4);\r\n    arraycopy(S, 0, data, 0, slen);\r\n\r\n    if (dkLen > (0xffffffff - 1) * 32)\r\n        throw new DataError('Invalid parameters: Length value');\r\n    var n = Math.ceil(dkLen / hLen),\r\n      DK = new Uint8Array(dkLen);\r\n    for (var i = 1; i <= n; i++) {\r\n        data[slen] = i >>> 24 & 0xff;\r\n        data[slen + 1] = i >>> 16 & 0xff;\r\n        data[slen + 2] = i >>> 8 & 0xff;\r\n        data[slen + 3] = i & 0xff;\r\n\r\n        var U = new Uint8Array(signHMAC.call(this, P, data)), Z = U;\r\n        for (var j = 1; j < c; j++) {\r\n            U = new Uint8Array(signHMAC.call(this, P, U));\r\n            for (var k = 0; k < hLen; k++)\r\n                Z[k] = U[k] ^ Z[k];\r\n        }\r\n        var ofs = (i - 1) * hLen;\r\n        arraycopy(Z, 0, DK, ofs, Math.min(hLen, dkLen - ofs));\r\n    }\r\n    if (diversifier > 1) {\r\n        var rLen = dkLen / diversifier, R = new Uint8Array(rLen);\r\n        arraycopy(DK, dkLen - rLen, R, 0, rLen);\r\n        return R.buffer;\r\n    } else\r\n        return DK.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-CPKDF<br><br>\r\n *\r\n * Derive bits from password. CryptoPro algorithm\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsCP(baseKey, length) {\r\n    if (length > this.bitLength || length % 8 > 0)\r\n        throw new DataError('Length can\\'t be more than ' + this.bitLength + ' bits and multiple of 8');\r\n    // GOST R 34.11-94 - B=32b, L=32b\r\n    // GOST R 34.11-256 - B=64b, L=32b\r\n    // GOST R 34.11-512 - B=64b, L=64b\r\n    var b = (this.digest === digest94) ? 32 : 64,\r\n      l = this.bitLength / 8,\r\n      p = baseKey && baseKey.byteLength > 0 ? new Uint8Array(buffer(baseKey)) : false,\r\n      plen = p ? p.length : 0,\r\n      iterations = this.iterations,\r\n      salt = new Uint8Array(buffer(this.salt)),\r\n      slen = salt.length,\r\n      d = new Uint8Array(slen + plen);\r\n    arraycopy(salt, 0, d, 0, slen);\r\n    if (p)\r\n        arraycopy(p, 0, d, slen, plen);\r\n\r\n    var h = new Uint8Array(this.digest(d)),\r\n      k = new Uint8Array(b),\r\n      s0 = new Uint8Array(b),\r\n      s1 = new Uint8Array(b);\r\n    var c = 'DENEFH028.760246785.IUEFHWUIO.EF';\r\n    for (var i = 0; i < c.length; i++)\r\n        k[i] = c.charCodeAt(i);\r\n\r\n    d = new Uint8Array(2 * (b + l));\r\n    for (var j = 0; j < iterations; j++) {\r\n        for (var i = 0; i < b; i++) {\r\n            s0[i] = k[i] ^ 0x36;\r\n            s1[i] = k[i] ^ 0x5C;\r\n            k[i] = 0;\r\n        }\r\n        arraycopy(s0, 0, d, 0, b);\r\n        arraycopy(h, 0, d, b, l);\r\n        arraycopy(s1, 0, d, b + l, b);\r\n        arraycopy(h, 0, d, b + l + b, l);\r\n        arraycopy(new Uint8Array(this.digest(d)), 0, k, 0, l);\r\n    }\r\n    for (var i = 0; i < l; i++) {\r\n        s0[i] = k[i] ^ 0x36;\r\n        s1[i] = k[i] ^ 0x5C;\r\n        k[i] = 0;\r\n    }\r\n    d = new Uint8Array(2 * l + slen + plen);\r\n    arraycopy(s0, 0, d, 0, l);\r\n    arraycopy(salt, 0, d, l, slen);\r\n    arraycopy(s1, 0, d, l + slen, l);\r\n    if (p)\r\n        arraycopy(p, 0, d, l + slen + l, plen);\r\n    h = this.digest(this.digest(d));\r\n    if (length === this.bitLength)\r\n        return h;\r\n    else {\r\n        var rlen = length / 8, r = new Uint8Array(rlen);\r\n        arraycopy(h, 0, r, 0, rlen);\r\n        return r.buffer;\r\n    }\r\n}\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF or GOST R 34.11-PBKDF2 or other<br><br>\r\n *\r\n * Derive key from derive bits subset\r\n *\r\n * @memberOf GostDigest\r\n * @method deriveKey\r\n * @instance\r\n * @param {ArrayBuffer} baseKey\r\n * @returns {ArrayBuffer}\r\n */\r\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return this.deriveBits(baseKey, this.keySize * 8);\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST R 34.11 Algorithm<br><br>\r\n *\r\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\r\n *      <li><b>version</b> Algorithm version\r\n *          <ul>\r\n *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\r\n *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Digest length\r\n *          <ul>\r\n *              <li><b>256</b> 256 bits digest</li>\r\n *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode\r\n *          <ul>\r\n *              <li><b>HASH</b> simple digest mode (default)</li>\r\n *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\r\n *              <li><b>KDF</b> Derive bits for KEK deversification</li>\r\n *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\r\n *              <li><b>PFXKDF</b> Password based PFX key dirivation algorithms</li>\r\n *              <li><b>CPKDF</b> CpyptoPro Password based key dirivation algorithms</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Digest HASH mode (default)</li>\r\n *      <li>Sign/Verify HMAC modes parameters depends on version and length\r\n *          <ul>\r\n *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\r\n *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\r\n *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey KDF mode\r\n *          <ul>\r\n *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\r\n *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey PBKDF2 mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, ID=3 - integrity key for MACing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey PFXKDF mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\r\n *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey CPKDF mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostDigest\r\n * @param {AlgorithmIdentifier} algorithm WebCryptoAPI algorithm identifier\r\n */\r\nexport function GostDigest(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    algorithm = algorithm || {};\r\n\r\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' + ((algorithm.version || 2012) % 100) +\r\n      ((algorithm.version || 2012) > 1 ? '-' + (algorithm.length || 256) : '') +\r\n      (((algorithm.mode || 'HASH') !== 'HASH') ? '-' + algorithm.mode : '') +\r\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    // Algorithm procreator\r\n    this.procreator = algorithm.procreator;\r\n\r\n    // Bit length\r\n    this.bitLength = algorithm.length || 256;\r\n\r\n    switch (algorithm.version || 2012) {\r\n        case 1: // SHA-1\r\n            this.digest = digestSHA1;\r\n            this.bitLength = 160;\r\n            break;\r\n        case 1994:\r\n            this.digest = digest94;\r\n            // Define chiper algorithm\r\n            this.sBox = (algorithm.sBox || (algorithm.procreator === 'SC' ? 'D-SC' : 'D-A')).toUpperCase();\r\n\r\n            this.cipher = new GostCipher({\r\n                name: 'GOST 28147',\r\n                block: 'ECB',\r\n                sBox: this.sBox,\r\n                procreator: this.procreator\r\n            });\r\n\r\n            break;\r\n        case 2012:\r\n            this.digest = digest2012;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\r\n    }\r\n\r\n    // Key size\r\n    this.keySize = algorithm.keySize || (algorithm.version <= 2 ? this.bitLength / 8 : 32);\r\n\r\n    switch (algorithm.mode || 'HASH') {\r\n        case 'HASH':\r\n            break;\r\n        case 'HMAC':\r\n            this.sign = signHMAC;\r\n            this.verify = verifyHMAC;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'KDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsKDF;\r\n            this.label = algorithm.label;\r\n            this.context = algorithm.context;\r\n            break;\r\n        case 'PBKDF2':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsPBKDF2;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            this.diversifier = algorithm.diversifier || 1;\r\n            break;\r\n        case 'PFXKDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsPFXKDF;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            this.diversifier = algorithm.diversifier || 1;\r\n            break;\r\n        case 'CPKDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsCP;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm mode ' + algorithm.mode + ' not supported');\r\n    }\r\n} // </editor-fold>\r\n","/**\r\n * @file GOST 28147-89/GOST R 34.12-2015/GOST R 32.13-2015 Encryption Algorithm\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { NotSupportedError, DataError } from '../utils/errors';\r\nimport { randomSeed } from '../utils/seeds';\r\n\r\n/*\r\n * Initial parameters and common algortithms of GOST 28147-89\r\n *\r\n * http://tools.ietf.org/html/rfc5830\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n/*\r\n * Check supported\r\n * This implementation support only Little Endian arhitecture\r\n */\r\n\r\nvar littleEndian = (function () {\r\n    var buffer = new CryptoOperationData(2);\r\n    new DataView(buffer).setInt16(0, 256, true);\r\n    return new Int16Array(buffer)[0] === 256;\r\n})();\r\n\r\n// Default initial vector\r\nvar defaultIV = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n// Predefined sBox collection\r\nvar sBoxes = {\r\n    'E-TEST': [\r\n        0x4, 0x2, 0xF, 0x5, 0x9, 0x1, 0x0, 0x8, 0xE, 0x3, 0xB, 0xC, 0xD, 0x7, 0xA, 0x6,\r\n        0xC, 0x9, 0xF, 0xE, 0x8, 0x1, 0x3, 0xA, 0x2, 0x7, 0x4, 0xD, 0x6, 0x0, 0xB, 0x5,\r\n        0xD, 0x8, 0xE, 0xC, 0x7, 0x3, 0x9, 0xA, 0x1, 0x5, 0x2, 0x4, 0x6, 0xF, 0x0, 0xB,\r\n        0xE, 0x9, 0xB, 0x2, 0x5, 0xF, 0x7, 0x1, 0x0, 0xD, 0xC, 0x6, 0xA, 0x4, 0x3, 0x8,\r\n        0x3, 0xE, 0x5, 0x9, 0x6, 0x8, 0x0, 0xD, 0xA, 0xB, 0x7, 0xC, 0x2, 0x1, 0xF, 0x4,\r\n        0x8, 0xF, 0x6, 0xB, 0x1, 0x9, 0xC, 0x5, 0xD, 0x3, 0x7, 0xA, 0x0, 0xE, 0x2, 0x4,\r\n        0x9, 0xB, 0xC, 0x0, 0x3, 0x6, 0x7, 0x5, 0x4, 0x8, 0xE, 0xF, 0x1, 0xA, 0x2, 0xD,\r\n        0xC, 0x6, 0x5, 0x2, 0xB, 0x0, 0x9, 0xD, 0x3, 0xE, 0x7, 0xA, 0xF, 0x4, 0x1, 0x8\r\n    ],\r\n    'E-A': [\r\n        0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5,\r\n        0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1,\r\n        0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9,\r\n        0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6,\r\n        0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6,\r\n        0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6,\r\n        0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE,\r\n        0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4\r\n    ],\r\n    'E-B': [\r\n        0x8, 0x4, 0xB, 0x1, 0x3, 0x5, 0x0, 0x9, 0x2, 0xE, 0xA, 0xC, 0xD, 0x6, 0x7, 0xF,\r\n        0x0, 0x1, 0x2, 0xA, 0x4, 0xD, 0x5, 0xC, 0x9, 0x7, 0x3, 0xF, 0xB, 0x8, 0x6, 0xE,\r\n        0xE, 0xC, 0x0, 0xA, 0x9, 0x2, 0xD, 0xB, 0x7, 0x5, 0x8, 0xF, 0x3, 0x6, 0x1, 0x4,\r\n        0x7, 0x5, 0x0, 0xD, 0xB, 0x6, 0x1, 0x2, 0x3, 0xA, 0xC, 0xF, 0x4, 0xE, 0x9, 0x8,\r\n        0x2, 0x7, 0xC, 0xF, 0x9, 0x5, 0xA, 0xB, 0x1, 0x4, 0x0, 0xD, 0x6, 0x8, 0xE, 0x3,\r\n        0x8, 0x3, 0x2, 0x6, 0x4, 0xD, 0xE, 0xB, 0xC, 0x1, 0x7, 0xF, 0xA, 0x0, 0x9, 0x5,\r\n        0x5, 0x2, 0xA, 0xB, 0x9, 0x1, 0xC, 0x3, 0x7, 0x4, 0xD, 0x0, 0x6, 0xF, 0x8, 0xE,\r\n        0x0, 0x4, 0xB, 0xE, 0x8, 0x3, 0x7, 0x1, 0xA, 0x2, 0x9, 0x6, 0xF, 0xD, 0x5, 0xC\r\n    ],\r\n    'E-C': [\r\n        0x1, 0xB, 0xC, 0x2, 0x9, 0xD, 0x0, 0xF, 0x4, 0x5, 0x8, 0xE, 0xA, 0x7, 0x6, 0x3,\r\n        0x0, 0x1, 0x7, 0xD, 0xB, 0x4, 0x5, 0x2, 0x8, 0xE, 0xF, 0xC, 0x9, 0xA, 0x6, 0x3,\r\n        0x8, 0x2, 0x5, 0x0, 0x4, 0x9, 0xF, 0xA, 0x3, 0x7, 0xC, 0xD, 0x6, 0xE, 0x1, 0xB,\r\n        0x3, 0x6, 0x0, 0x1, 0x5, 0xD, 0xA, 0x8, 0xB, 0x2, 0x9, 0x7, 0xE, 0xF, 0xC, 0x4,\r\n        0x8, 0xD, 0xB, 0x0, 0x4, 0x5, 0x1, 0x2, 0x9, 0x3, 0xC, 0xE, 0x6, 0xF, 0xA, 0x7,\r\n        0xC, 0x9, 0xB, 0x1, 0x8, 0xE, 0x2, 0x4, 0x7, 0x3, 0x6, 0x5, 0xA, 0x0, 0xF, 0xD,\r\n        0xA, 0x9, 0x6, 0x8, 0xD, 0xE, 0x2, 0x0, 0xF, 0x3, 0x5, 0xB, 0x4, 0x1, 0xC, 0x7,\r\n        0x7, 0x4, 0x0, 0x5, 0xA, 0x2, 0xF, 0xE, 0xC, 0x6, 0x1, 0xB, 0xD, 0x9, 0x3, 0x8\r\n    ],\r\n    'E-D': [\r\n        0xF, 0xC, 0x2, 0xA, 0x6, 0x4, 0x5, 0x0, 0x7, 0x9, 0xE, 0xD, 0x1, 0xB, 0x8, 0x3,\r\n        0xB, 0x6, 0x3, 0x4, 0xC, 0xF, 0xE, 0x2, 0x7, 0xD, 0x8, 0x0, 0x5, 0xA, 0x9, 0x1,\r\n        0x1, 0xC, 0xB, 0x0, 0xF, 0xE, 0x6, 0x5, 0xA, 0xD, 0x4, 0x8, 0x9, 0x3, 0x7, 0x2,\r\n        0x1, 0x5, 0xE, 0xC, 0xA, 0x7, 0x0, 0xD, 0x6, 0x2, 0xB, 0x4, 0x9, 0x3, 0xF, 0x8,\r\n        0x0, 0xC, 0x8, 0x9, 0xD, 0x2, 0xA, 0xB, 0x7, 0x3, 0x6, 0x5, 0x4, 0xE, 0xF, 0x1,\r\n        0x8, 0x0, 0xF, 0x3, 0x2, 0x5, 0xE, 0xB, 0x1, 0xA, 0x4, 0x7, 0xC, 0x9, 0xD, 0x6,\r\n        0x3, 0x0, 0x6, 0xF, 0x1, 0xE, 0x9, 0x2, 0xD, 0x8, 0xC, 0x4, 0xB, 0xA, 0x5, 0x7,\r\n        0x1, 0xA, 0x6, 0x8, 0xF, 0xB, 0x0, 0x4, 0xC, 0x3, 0x5, 0x9, 0x7, 0xD, 0x2, 0xE\r\n    ],\r\n    'E-SC': [\r\n        0x3, 0x6, 0x1, 0x0, 0x5, 0x7, 0xd, 0x9, 0x4, 0xb, 0x8, 0xc, 0xe, 0xf, 0x2, 0xa,\r\n        0x7, 0x1, 0x5, 0x2, 0x8, 0xb, 0x9, 0xc, 0xd, 0x0, 0x3, 0xa, 0xf, 0xe, 0x4, 0x6,\r\n        0xf, 0x1, 0x4, 0x6, 0xc, 0x8, 0x9, 0x2, 0xe, 0x3, 0x7, 0xa, 0xb, 0xd, 0x5, 0x0,\r\n        0x3, 0x4, 0xf, 0xc, 0x5, 0x9, 0xe, 0x0, 0x6, 0x8, 0x7, 0xa, 0x1, 0xb, 0xd, 0x2,\r\n        0x6, 0x9, 0x0, 0x7, 0xb, 0x8, 0x4, 0xc, 0x2, 0xe, 0xa, 0xf, 0x1, 0xd, 0x5, 0x3,\r\n        0x6, 0x1, 0x2, 0xf, 0x0, 0xb, 0x9, 0xc, 0x7, 0xd, 0xa, 0x5, 0x8, 0x4, 0xe, 0x3,\r\n        0x0, 0x2, 0xe, 0xc, 0x9, 0x1, 0x4, 0x7, 0x3, 0xf, 0x6, 0x8, 0xa, 0xd, 0xb, 0x5,\r\n        0x5, 0x2, 0xb, 0x8, 0x4, 0xc, 0x7, 0x1, 0xa, 0x6, 0xe, 0x0, 0x9, 0x3, 0xd, 0xf\r\n    ],\r\n    'E-Z': [// This is default S-box in according to draft of new standard\r\n        0xc, 0x4, 0x6, 0x2, 0xa, 0x5, 0xb, 0x9, 0xe, 0x8, 0xd, 0x7, 0x0, 0x3, 0xf, 0x1,\r\n        0x6, 0x8, 0x2, 0x3, 0x9, 0xa, 0x5, 0xc, 0x1, 0xe, 0x4, 0x7, 0xb, 0xd, 0x0, 0xf,\r\n        0xb, 0x3, 0x5, 0x8, 0x2, 0xf, 0xa, 0xd, 0xe, 0x1, 0x7, 0x4, 0xc, 0x9, 0x6, 0x0,\r\n        0xc, 0x8, 0x2, 0x1, 0xd, 0x4, 0xf, 0x6, 0x7, 0x0, 0xa, 0x5, 0x3, 0xe, 0x9, 0xb,\r\n        0x7, 0xf, 0x5, 0xa, 0x8, 0x1, 0x6, 0xd, 0x0, 0x9, 0x3, 0xe, 0xb, 0x4, 0x2, 0xc,\r\n        0x5, 0xd, 0xf, 0x6, 0x9, 0x2, 0xc, 0xa, 0xb, 0x7, 0x8, 0x1, 0x4, 0x3, 0xe, 0x0,\r\n        0x8, 0xe, 0x2, 0x5, 0x6, 0x9, 0x1, 0xc, 0xf, 0x4, 0xb, 0x0, 0xd, 0xa, 0x3, 0x7,\r\n        0x1, 0x7, 0xe, 0xd, 0x0, 0x5, 0x8, 0x3, 0x4, 0xf, 0xa, 0x6, 0x9, 0xc, 0xb, 0x2\r\n    ],\r\n    //S-box for digest\r\n    'D-TEST': [\r\n        0x4, 0xA, 0x9, 0x2, 0xD, 0x8, 0x0, 0xE, 0x6, 0xB, 0x1, 0xC, 0x7, 0xF, 0x5, 0x3,\r\n        0xE, 0xB, 0x4, 0xC, 0x6, 0xD, 0xF, 0xA, 0x2, 0x3, 0x8, 0x1, 0x0, 0x7, 0x5, 0x9,\r\n        0x5, 0x8, 0x1, 0xD, 0xA, 0x3, 0x4, 0x2, 0xE, 0xF, 0xC, 0x7, 0x6, 0x0, 0x9, 0xB,\r\n        0x7, 0xD, 0xA, 0x1, 0x0, 0x8, 0x9, 0xF, 0xE, 0x4, 0x6, 0xC, 0xB, 0x2, 0x5, 0x3,\r\n        0x6, 0xC, 0x7, 0x1, 0x5, 0xF, 0xD, 0x8, 0x4, 0xA, 0x9, 0xE, 0x0, 0x3, 0xB, 0x2,\r\n        0x4, 0xB, 0xA, 0x0, 0x7, 0x2, 0x1, 0xD, 0x3, 0x6, 0x8, 0x5, 0x9, 0xC, 0xF, 0xE,\r\n        0xD, 0xB, 0x4, 0x1, 0x3, 0xF, 0x5, 0x9, 0x0, 0xA, 0xE, 0x7, 0x6, 0x8, 0x2, 0xC,\r\n        0x1, 0xF, 0xD, 0x0, 0x5, 0x7, 0xA, 0x4, 0x9, 0x2, 0x3, 0xE, 0x6, 0xB, 0x8, 0xC\r\n    ],\r\n    'D-A': [\r\n        0xA, 0x4, 0x5, 0x6, 0x8, 0x1, 0x3, 0x7, 0xD, 0xC, 0xE, 0x0, 0x9, 0x2, 0xB, 0xF,\r\n        0x5, 0xF, 0x4, 0x0, 0x2, 0xD, 0xB, 0x9, 0x1, 0x7, 0x6, 0x3, 0xC, 0xE, 0xA, 0x8,\r\n        0x7, 0xF, 0xC, 0xE, 0x9, 0x4, 0x1, 0x0, 0x3, 0xB, 0x5, 0x2, 0x6, 0xA, 0x8, 0xD,\r\n        0x4, 0xA, 0x7, 0xC, 0x0, 0xF, 0x2, 0x8, 0xE, 0x1, 0x6, 0x5, 0xD, 0xB, 0x9, 0x3,\r\n        0x7, 0x6, 0x4, 0xB, 0x9, 0xC, 0x2, 0xA, 0x1, 0x8, 0x0, 0xE, 0xF, 0xD, 0x3, 0x5,\r\n        0x7, 0x6, 0x2, 0x4, 0xD, 0x9, 0xF, 0x0, 0xA, 0x1, 0x5, 0xB, 0x8, 0xE, 0xC, 0x3,\r\n        0xD, 0xE, 0x4, 0x1, 0x7, 0x0, 0x5, 0xA, 0x3, 0xC, 0x8, 0xF, 0x6, 0x2, 0x9, 0xB,\r\n        0x1, 0x3, 0xA, 0x9, 0x5, 0xB, 0x4, 0xF, 0x8, 0x6, 0x7, 0xE, 0xD, 0x0, 0x2, 0xC\r\n    ],\r\n    'D-SC': [\r\n        0xb, 0xd, 0x7, 0x0, 0x5, 0x4, 0x1, 0xf, 0x9, 0xe, 0x6, 0xa, 0x3, 0xc, 0x8, 0x2,\r\n        0x1, 0x2, 0x7, 0x9, 0xd, 0xb, 0xf, 0x8, 0xe, 0xc, 0x4, 0x0, 0x5, 0x6, 0xa, 0x3,\r\n        0x5, 0x1, 0xd, 0x3, 0xf, 0x6, 0xc, 0x7, 0x9, 0x8, 0xb, 0x2, 0x4, 0xe, 0x0, 0xa,\r\n        0xd, 0x1, 0xb, 0x4, 0x9, 0xc, 0xe, 0x0, 0x7, 0x5, 0x8, 0xf, 0x6, 0x2, 0xa, 0x3,\r\n        0x2, 0xd, 0xa, 0xf, 0x9, 0xb, 0x3, 0x7, 0x8, 0xc, 0x5, 0xe, 0x6, 0x0, 0x1, 0x4,\r\n        0x0, 0x4, 0x6, 0xc, 0x5, 0x3, 0x8, 0xd, 0xa, 0xb, 0xf, 0x2, 0x1, 0x9, 0x7, 0xe,\r\n        0x1, 0x3, 0xc, 0x8, 0xa, 0x6, 0xb, 0x0, 0x2, 0xe, 0x7, 0x9, 0xf, 0x4, 0x5, 0xd,\r\n        0xa, 0xb, 0x6, 0x0, 0x1, 0x3, 0x4, 0x7, 0xe, 0xd, 0x5, 0xf, 0x8, 0x2, 0x9, 0xc\r\n    ]\r\n};\r\n\r\nvar C = new Uint8Array([\r\n    0x69, 0x00, 0x72, 0x22, 0x64, 0xC9, 0x04, 0x23,\r\n    0x8D, 0x3A, 0xDB, 0x96, 0x46, 0xE9, 0x2A, 0xC4,\r\n    0x18, 0xFE, 0xAC, 0x94, 0x00, 0xED, 0x07, 0x12,\r\n    0xC0, 0x86, 0xDC, 0xC2, 0xEF, 0x4C, 0xA9, 0x2B\r\n]);\r\n\r\nfunction signed(x) {\r\n    return x >= 0x80000000 ? x - 0x100000000 : x;\r\n}\r\n\r\nfunction unsigned(x) {\r\n    return x < 0 ? x + 0x100000000 : x;\r\n}\r\n\r\n// Get buffer\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData required');\r\n}\r\n\r\n// Get byte array\r\nfunction byteArray(d) {\r\n    return new Uint8Array(buffer(d));\r\n}\r\n\r\n// Clone byte array\r\nfunction cloneArray(d) {\r\n    return new Uint8Array(byteArray(d));\r\n}\r\n\r\n// Get int32 array\r\nfunction intArray(d) {\r\n    return new Int32Array(buffer(d));\r\n}\r\n\r\n// Swap bytes for version 2015\r\nfunction swap32(b) {\r\n    return ((b & 0xff) << 24)\r\n      | ((b & 0xff00) << 8)\r\n      | ((b >> 8) & 0xff00)\r\n      | ((b >> 24) & 0xff);\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n * Initial parameters and common algortithms of GOST R 34.12-15\r\n * Algorithm \"Kuznechik\" 128bit\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Default initial vector\r\nvar defaultIV128 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n// Mult table for R function\r\nvar multTable = (function () {\r\n\r\n    // Multiply two numbers in the GF(2^8) finite field defined\r\n    // by the polynomial x^8 + x^7 + x^6 + x + 1 = 0 */\r\n    function gmul(a, b) {\r\n        var p = 0, counter, carry;\r\n        for (counter = 0; counter < 8; counter++) {\r\n            if (b & 1)\r\n                p ^= a;\r\n            carry = a & 0x80; // detect if x^8 term is about to be generated\r\n            a = (a << 1) & 0xff;\r\n            if (carry)\r\n                a ^= 0xc3; // replace x^8 with x^7 + x^6 + x + 1\r\n            b >>= 1;\r\n        }\r\n        return p & 0xff;\r\n    }\r\n\r\n    // It is required only this values for R function\r\n    //       0   1   2    3    4    5    6    7\r\n    var x = [1, 16, 32, 133, 148, 192, 194, 251];\r\n    var m = [];\r\n    for (var i = 0; i < 8; i++) {\r\n        m[i] = [];\r\n        for (var j = 0; j < 256; j++)\r\n            m[i][j] = gmul(x[i], j);\r\n    }\r\n    return m;\r\n})();\r\n\r\n// 148, 32, 133, 16, 194, 192, 1, 251, 1, 192, 194, 16, 133, 32, 148, 1\r\nvar kB = [4, 2, 3, 1, 6, 5, 0, 7, 0, 5, 6, 1, 3, 2, 4, 0];\r\n\r\n// R - function\r\nfunction funcR(d) {\r\n    var sum = 0;\r\n    for (var i = 0; i < 16; i++)\r\n        sum ^= multTable[kB[i]][d[i]];\r\n\r\n    for (var i = 16; i > 0; --i)\r\n        d[i] = d[i - 1];\r\n    d[0] = sum;\r\n}\r\n\r\nfunction funcReverseR(d) {\r\n    var tmp = d[0];\r\n    for (var i = 0; i < 15; i++)\r\n        d[i] = d[i + 1];\r\n    d[15] = tmp;\r\n\r\n    var sum = 0;\r\n    for (i = 0; i < 16; i++)\r\n        sum ^= multTable[kB[i]][d[i]];\r\n    d[15] = sum;\r\n}\r\n\r\n// Nonlinear transformation\r\nvar kPi = [\r\n    252, 238, 221, 17, 207, 110, 49, 22, 251, 196, 250, 218, 35, 197, 4, 77,\r\n    233, 119, 240, 219, 147, 46, 153, 186, 23, 54, 241, 187, 20, 205, 95, 193,\r\n    249, 24, 101, 90, 226, 92, 239, 33, 129, 28, 60, 66, 139, 1, 142, 79,\r\n    5, 132, 2, 174, 227, 106, 143, 160, 6, 11, 237, 152, 127, 212, 211, 31,\r\n    235, 52, 44, 81, 234, 200, 72, 171, 242, 42, 104, 162, 253, 58, 206, 204,\r\n    181, 112, 14, 86, 8, 12, 118, 18, 191, 114, 19, 71, 156, 183, 93, 135,\r\n    21, 161, 150, 41, 16, 123, 154, 199, 243, 145, 120, 111, 157, 158, 178, 177,\r\n    50, 117, 25, 61, 255, 53, 138, 126, 109, 84, 198, 128, 195, 189, 13, 87,\r\n    223, 245, 36, 169, 62, 168, 67, 201, 215, 121, 214, 246, 124, 34, 185, 3,\r\n    224, 15, 236, 222, 122, 148, 176, 188, 220, 232, 40, 80, 78, 51, 10, 74,\r\n    167, 151, 96, 115, 30, 0, 98, 68, 26, 184, 56, 130, 100, 159, 38, 65,\r\n    173, 69, 70, 146, 39, 94, 85, 47, 140, 163, 165, 125, 105, 213, 149, 59,\r\n    7, 88, 179, 64, 134, 172, 29, 247, 48, 55, 107, 228, 136, 217, 231, 137,\r\n    225, 27, 131, 73, 76, 63, 248, 254, 141, 83, 170, 144, 202, 216, 133, 97,\r\n    32, 113, 103, 164, 45, 43, 9, 91, 203, 155, 37, 208, 190, 229, 108, 82,\r\n    89, 166, 116, 210, 230, 244, 180, 192, 209, 102, 175, 194, 57, 75, 99, 182\r\n];\r\n\r\nvar kReversePi = (function () {\r\n    var m = [];\r\n    for (var i = 0, n = kPi.length; i < n; i++)\r\n        m[kPi[i]] = i;\r\n    return m;\r\n})();\r\n\r\nfunction funcS(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        d[i] = kPi[d[i]];\r\n}\r\n\r\nfunction funcReverseS(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        d[i] = kReversePi[d[i]];\r\n}\r\n\r\nfunction funcX(a, b) {\r\n    for (var i = 0; i < 16; ++i)\r\n        a[i] ^= b[i];\r\n}\r\n\r\nfunction funcL(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        funcR(d);\r\n}\r\n\r\nfunction funcReverseL(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        funcReverseR(d);\r\n}\r\n\r\nfunction funcLSX(a, b) {\r\n    funcX(a, b);\r\n    funcS(a);\r\n    funcL(a);\r\n}\r\n\r\nfunction funcReverseLSX(a, b) {\r\n    funcX(a, b);\r\n    funcReverseL(a);\r\n    funcReverseS(a);\r\n}\r\n\r\nfunction funcF(inputKey, inputKeySecond, iterationConst) {\r\n    var tmp = new Uint8Array(inputKey);\r\n    funcLSX(inputKey, iterationConst);\r\n    funcX(inputKey, inputKeySecond);\r\n    inputKeySecond.set(tmp);\r\n}\r\n\r\nfunction funcC(number, d) {\r\n    for (var i = 0; i < 15; i++)\r\n        d[i] = 0;\r\n    d[15] = number;\r\n    funcL(d);\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Key schedule for GOST R 34.12-15 128bits\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method keySchedule\r\n * @param {type} k\r\n * @returns {Uint8Array}\r\n */\r\nfunction keySchedule128(k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var keys = new Uint8Array(160), c = new Uint8Array(16);\r\n    keys.set(byteArray(k));\r\n    for (var j = 0; j < 4; j++) {\r\n        var j0 = 32 * j, j1 = 32 * (j + 1);\r\n        keys.set(new Uint8Array(keys.buffer, j0, 32), j1);\r\n        for (var i = 1; i < 9; i++) {\r\n            funcC(j * 8 + i, c);\r\n            funcF(new Uint8Array(keys.buffer, j1, 16),\r\n              new Uint8Array(keys.buffer, j1 + 16, 16), c);\r\n        }\r\n    }\r\n    return keys;\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST R 34.12-15 128 bits encrypt/decrypt process\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {Uint8Array} k Scheduled key\r\n * @param {Uint8Array} d Data\r\n * @param {number} ofs Offsec\r\n * @param {number} e true - decrypt\r\n */\r\nfunction process128(k, d, ofs, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var r = new Uint8Array(d.buffer, ofs, 16);\r\n    if (e) {\r\n        for (var i = 0; i < 9; i++)\r\n            funcReverseLSX(r, new Uint8Array(k.buffer, (9 - i) * 16, 16));\r\n\r\n        funcX(r, new Uint8Array(k.buffer, 0, 16));\r\n    } else {\r\n        for (var i = 0; i < 9; i++)\r\n            funcLSX(r, new Uint8Array(k.buffer, 16 * i, 16));\r\n\r\n        funcX(r, new Uint8Array(k.buffer, 16 * 9, 16));\r\n    }\r\n} // </editor-fold>\r\n\r\n/**\r\n * One GOST encryption round\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {Int8Array} S sBox\r\n * @param {Int32Array} m 2x32 bits cipher block\r\n * @param {Int32Array} k 32 bits key[i]\r\n */\r\nfunction round(S, m, k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var cm = (m[0] + k) & 0xffffffff;\r\n\r\n    var om = S[0 + ((cm >> (0 * 4)) & 0xF)] << (0 * 4);\r\n    om |= S[16 + ((cm >> (1 * 4)) & 0xF)] << (1 * 4);\r\n    om |= S[32 + ((cm >> (2 * 4)) & 0xF)] << (2 * 4);\r\n    om |= S[48 + ((cm >> (3 * 4)) & 0xF)] << (3 * 4);\r\n    om |= S[64 + ((cm >> (4 * 4)) & 0xF)] << (4 * 4);\r\n    om |= S[80 + ((cm >> (5 * 4)) & 0xF)] << (5 * 4);\r\n    om |= S[96 + ((cm >> (6 * 4)) & 0xF)] << (6 * 4);\r\n    om |= S[112 + ((cm >> (7 * 4)) & 0xF)] << (7 * 4);\r\n    cm = om << 11 | om >>> (32 - 11);\r\n\r\n    cm ^= m[1];\r\n    m[1] = m[0];\r\n    m[0] = cm;\r\n\r\n} // </editor-fold>\r\n\r\n/**\r\n * Process encrypt/decrypt block with key K using GOST 28147-89\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Int32Array} 8x32 bits key\r\n * @param d {Int32Array} 8x8 bits cipher block\r\n * @param ofs {number} offset\r\n */\r\nfunction process89(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var s = this.sBox,\r\n      m = new Int32Array(d.buffer, ofs, 2);\r\n\r\n    for (var i = 0; i < 32; i++)\r\n        round(s, m, k[i]);\r\n\r\n    var r = m[0];\r\n    m[0] = m[1];\r\n    m[1] = r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Process encrypt/decrypt block with key K using GOST R 34.12-15 64bit block\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Int32Array} 8x32 bits key\r\n * @param d {Int32Array} 8x8 bits cipher block\r\n * @param ofs {number} offset\r\n */\r\nfunction process15(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var s = this.sBox,\r\n      m = new Int32Array(d.buffer, ofs, 2),\r\n      r = swap32(m[0]);\r\n    m[0] = swap32(m[1]);\r\n    m[1] = r;\r\n\r\n    for (var i = 0; i < 32; i++)\r\n        round(s, m, k[i]);\r\n\r\n    m[0] = swap32(m[0]);\r\n    m[1] = swap32(m[1]);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key keySchedule algorithm for GOST 28147-89 64bit cipher\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Uint8Array} 8 bit key array\r\n * @param e {boolean}  true - decrypt\r\n * @returns {Int32Array} keyScheduled 32-bit key\r\n */\r\nfunction keySchedule89(k, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var sch = new Int32Array(32),\r\n      key = new Int32Array(buffer(k));\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i] = key[i];\r\n\r\n    if (e) {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[7 - i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[7 - i];\r\n    } else {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[i];\r\n    }\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i + 24] = sch[7 - i];\r\n\r\n    return sch;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key keySchedule algorithm for GOST R 34.12-15 64bit cipher\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Uint8Array} 8 bit key array\r\n * @param e {boolean}  true - decrypt\r\n * @returns {Int32Array} keyScheduled 32-bit key\r\n */\r\nfunction keySchedule15(k, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var sch = new Int32Array(32),\r\n      key = new Int32Array(buffer(k));\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i] = swap32(key[i]);\r\n\r\n    if (e) {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[7 - i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[7 - i];\r\n    } else {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[i];\r\n    }\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i + 24] = sch[7 - i];\r\n\r\n    return sch;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key schedule for RC2\r\n *\r\n * https://tools.ietf.org/html/rfc2268\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method keySchedule\r\n * @param {Uint8Array} k\r\n * @returns {Uint16Array}\r\n */\r\nvar keyScheduleRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      // an array of \"random\" bytes based on the digits of PI = 3.14159...\r\n      var PITABLE = new Uint8Array([\r\n          0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\r\n          0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\r\n          0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\r\n          0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\r\n          0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\r\n          0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\r\n          0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\r\n          0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\r\n          0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\r\n          0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\r\n          0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\r\n          0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\r\n          0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\r\n          0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\r\n          0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\r\n          0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\r\n      ]);\r\n\r\n      return function (k) {\r\n          var key = new Uint8Array(buffer(k)),\r\n            T = Math.min(key.length, 128),\r\n            T1 = this.effectiveLength,\r\n            T8 = Math.floor((T1 + 7) / 8),\r\n            TM = 0xff % Math.pow(2, 8 + T1 - 8 * T8);\r\n\r\n          var L = new Uint8Array(128), K = new Uint16Array(L.buffer);\r\n          for (var i = 0; i < T; i++)\r\n              L[i] = key[i];\r\n          for (var i = T; i < 128; i++)\r\n              L[i] = PITABLE[(L[i - 1] + L[i - T]) % 256];\r\n          L[128 - T8] = PITABLE[L[128 - T8] & TM];\r\n          for (var i = 127 - T8; i >= 0; --i)\r\n              L[i] = PITABLE[L[i + 1] ^ L[i + T8]];\r\n          return K;\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * RC2 encrypt/decrypt process\r\n *\r\n * https://tools.ietf.org/html/rfc2268\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {CryptoOperationData} k Scheduled key\r\n * @param {CryptoOperationData} d Data\r\n * @param {number} ofs Offsec\r\n * @param {number} e true - decrypt\r\n */\r\nvar processRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      var K, j, R = new Uint16Array(4),\r\n        s = new Uint16Array([1, 2, 3, 5]), reverse;\r\n\r\n      function rol(R, s) {\r\n          return (R << s | R >>> (16 - s)) & 0xffff;\r\n      }\r\n\r\n      function ror(R, s) {\r\n          return (R >>> s | R << (16 - s)) & 0xffff;\r\n      }\r\n\r\n      function mix(i) {\r\n          if (reverse) {\r\n              R[i] = ror(R[i], s[i]);\r\n              R[i] = R[i] - K[j] - (R[(i + 3) % 4] & R[(i + 2) % 4]) - ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\r\n              j = j - 1;\r\n          } else {\r\n              R[i] = R[i] + K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) + ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\r\n              j = j + 1;\r\n              R[i] = rol(R[i], s[i]);\r\n          }\r\n      }\r\n\r\n      function mash(i) {\r\n          if (reverse) {\r\n              R[i] = R[i] - K[R[(i + 3) % 4] & 63];\r\n          } else {\r\n              R[i] = R[i] + K[R[(i + 3) % 4] & 63];\r\n          }\r\n      }\r\n\r\n      function perform(method, count) {\r\n          count = count || 1;\r\n          for (var j = 0; j < count; j++) {\r\n              if (reverse) {\r\n                  for (var i = 3; i >= 0; --i)\r\n                      method(i);\r\n              } else {\r\n                  for (var i = 0; i < 4; i++)\r\n                      method(i);\r\n              }\r\n          }\r\n      }\r\n\r\n      return function (k, d, ofs, e) {\r\n          reverse = e;\r\n          //  1. Initialize words R[0], ..., R[3] to contain the 64-bit\r\n          //     ciphertext value.\r\n          R = new Uint16Array(d.buffer, ofs || d.byteOffset, 4);\r\n          //  2. Expand the key, so that words K[0], ..., K[63] become\r\n          //     defined.\r\n          K = k;\r\n          //  3. Initialize j to zero (enc) j to 63 (dec).\r\n          j = e ? 63 : 0;\r\n          //  4. Perform five mixing rounds.\r\n          perform(mix, 5);\r\n          //  5. Perform one mashing round.\r\n          perform(mash);\r\n          //  6. Perform six mixing rounds.\r\n          perform(mix, 6);\r\n          //  7. Perform one mashing round.\r\n          perform(mash);\r\n          //  8. Perform five mixing rounds.\r\n          perform(mix, 5);\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST 28147-ECB<br><br>\r\n *\r\n * encryptECB (K, D) is D, encrypted with key k using GOST 28147/GOST R 34.13 in\r\n * \"prostaya zamena\" (Electronic Codebook, ECB) mode.\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param k {CryptoOperationData} 8x32 bit key\r\n * @param d {CryptoOperationData} 8 bits message\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var p = this.pad(byteArray(d)),\r\n      n = this.blockSize,\r\n      b = p.byteLength / n,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < b; i++)\r\n        this.process(key, p, n * i);\r\n\r\n    return p.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-ECB<br><br>\r\n *\r\n * decryptECB (K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13 in\r\n * \"prostaya zamena\"  (Electronic Codebook, ECB) mode.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param k {CryptoOperationData} 8x32 bits key\r\n * @param d {CryptoOperationData} 8 bits message\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var p = cloneArray(d),\r\n      n = this.blockSize,\r\n      b = p.byteLength / n,\r\n      key = this.keySchedule(k, 1);\r\n\r\n    for (var i = 0; i < b; i++)\r\n        this.process(key, p, n * i, 1);\r\n\r\n    return this.unpad(p).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CFB<br><br>\r\n *\r\n * encryptCFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu\" (Cipher Feedback, CFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = c[i * b + j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CFB<br><br>\r\n *\r\n * decryptCFB (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (Cipher Feedback, CFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++) {\r\n            t[j] = c[i * b + j];\r\n            c[i * b + j] ^= s[j];\r\n        }\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = t[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-OFB<br><br>\r\n *\r\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\n/**\r\n * Algorithm name GOST 28147-OFB<br><br>\r\n *\r\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction processOFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      p = new Uint8Array(b),\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            p[j] = s[j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = p[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CTR<br><br>\r\n *\r\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\r\n * initialization vector.\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\n/**\r\n * Algorithm name GOST 28147-CTR<br><br>\r\n *\r\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\r\n * initialization vector.\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction processCTR89(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      b = this.blockSize,\r\n      t = new Int8Array(b),\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k),\r\n      syn = new Int32Array(s.buffer);\r\n\r\n    this.process(key, s);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\r\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\r\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\r\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, syn);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[j] = t[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n    if (r > 0) {\r\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\r\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\r\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\r\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\r\n\r\n        this.process(key, syn);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\nfunction processCTR15(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var c = cloneArray(d),\r\n      n = this.blockSize,\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      s = new Uint8Array(n),\r\n      t = new Int32Array(n),\r\n      key = this.keySchedule(k);\r\n\r\n    s.set(iv || this.iv);\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[b * i + j] ^= s[j];\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] = t[j];\r\n\r\n        for (var j = n - 1; i >= 0; --i) {\r\n            if (s[j] > 0xfe) {\r\n                s[j] -= 0xfe;\r\n            } else {\r\n                s[j]++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n        for (var j = 0; j < r; j++)\r\n            c[b * q + j] ^= s[j];\r\n    }\r\n\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CBC<br><br>\r\n *\r\n * encryptCBC (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\r\n * vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      n = this.blockSize,\r\n      m = s.length,\r\n      c = this.pad(byteArray(d)),\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0, b = c.length / n; i < b; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < n; j++)\r\n            c[i * n + j] = s[j];\r\n\r\n        if (m !== n) {\r\n            for (var j = 0; j < m - n; j++)\r\n                s[j] = s[n + j];\r\n\r\n            for (var j = 0; j < n; j++)\r\n                s[j + m - n] = c[i * n + j];\r\n        }\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CBC<br><br>\r\n *\r\n * decryptCBC (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\r\n * vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      n = this.blockSize,\r\n      m = s.length,\r\n      c = cloneArray(d),\r\n      next = new Uint8Array(n),\r\n      key = this.keySchedule(k, 1);\r\n\r\n    for (var i = 0, b = c.length / n; i < b; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            next[j] = c[i * n + j];\r\n\r\n        this.process(key, c, i * n, 1);\r\n\r\n        for (var j = 0; j < n; j++)\r\n            c[i * n + j] ^= s[j];\r\n\r\n        if (m !== n) {\r\n            for (var j = 0; j < m - n; j++)\r\n                s[j] = s[n + j];\r\n        }\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j + m - n] = next[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key, 1);\r\n    }\r\n\r\n    return this.unpad(c).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * The generateKey method returns a new generated key.\r\n *\r\n * @memberOf GostCipher\r\n * @method generateKey\r\n * @instance\r\n * @return {CryptoOperationData} result\r\n */\r\n\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // Simple generate 256 bit random seed\r\n    var k = new Uint8Array(this.keySize);\r\n    randomSeed(k);\r\n    return k.buffer;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * makeIMIT (K, D) is the 32-bit result of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method processMAC\r\n * @private\r\n * @instance\r\n * @param {Int32Array} key 8x32 bits key\r\n * @param {Int32Array} s 8x8 sum array\r\n * @param {Uint8Array} d 8 bits array with data\r\n * @return {Uint8Array} result\r\n */\r\nfunction processMAC89(key, s, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var c = zeroPad.call(this, byteArray(d)),\r\n      n = this.blockSize,\r\n      q = c.length / n,\r\n      sBox = this.sBox,\r\n      sum = new Int32Array(s.buffer);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        for (var j = 0; j < 16; j++) // 1-16 steps\r\n            round(sBox, sum, key[j]);\r\n    }\r\n} // </editor-fold>\r\n\r\nfunction processKeyMAC15(s) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var t = 0, n = s.length;\r\n    for (var i = n - 1; i >= 0; --i) {\r\n        var t1 = s[i] >>> 7;\r\n        s[i] = (s[i] << 1) & 0xff | t;\r\n        t = t1;\r\n    }\r\n    if (t !== 0) {\r\n        if (n === 16)\r\n            s[15] ^= 0x87;\r\n        else\r\n            s[7] ^= 0x1b;\r\n    }\r\n} // </editor-fold>\r\n\r\nfunction processMAC15(key, s, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize,\r\n      sBox = this.sBox, c = byteArray(d),\r\n      r = new Uint8Array(n);\r\n    // R\r\n    this.process(key, r);\r\n    // K1\r\n    processKeyMAC15(r);\r\n    if (d.byteLength % n !== 0) {\r\n        c = bitPad.call(this, byteArray(d));\r\n        // K2\r\n        processKeyMAC15(r);\r\n    }\r\n\r\n    for (var i = 0, q = c.length / n; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        if (i === q - 1) {// Last block\r\n            for (var j = 0; j < n; j++)\r\n                s[j] ^= r[j];\r\n        }\r\n\r\n        this.process(key, s);\r\n    }\r\n} // </editor-fold>\r\n\r\n/**\r\n * signMAC (K, D, IV) is the 32-bit result of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method sign\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction signMAC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var key = this.keySchedule(k),\r\n      s = new Uint8Array(iv || this.iv),\r\n      m = Math.ceil(this.macLength >> 3) || this.blockSize >> 1;\r\n\r\n    this.processMAC(key, s, d);\r\n\r\n    var mac = new Uint8Array(m); // mac size\r\n    mac.set(new Uint8Array(s.buffer, 0, m));\r\n    return mac.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * verifyMAC (K, M, D, IV) the 32-bit result verification of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method verify\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} m 8 bits array with signature\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {boolen} MAC verified = true\r\n */\r\nfunction verifyMAC(k, m, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var mac = new Uint8Array(signMAC.call(this, k, d, iv)),\r\n      test = byteArray(m);\r\n    if (mac.length !== test.length)\r\n        return false;\r\n    for (var i = 0, n = mac.length; i < n; i++)\r\n        if (mac[i] !== test[i])\r\n            return false;\r\n    return true;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-KW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147/GOST R 34.13 KEK.\r\n * Ref. rfc4357 6.1 GOST 28147-89 Key Wrap\r\n * Note: This algorithm MUST NOT be used with a KEK produced by VKO GOST\r\n * R 34.10-94, because such a KEK is constant for every sender-recipient\r\n * pair.  Encrypting many different content encryption keys on the same\r\n * constant KEK may reveal that KEK.\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} cek Content encryption key\r\n * @returns {CryptoOperationData} Encrypted cek\r\n */\r\nfunction wrapKeyGOST(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) For a unique symmetric KEK, generate 8 octets at random and call\r\n    // the result UKM.  For a KEK, produced by VKO GOST R 34.10-2001, use\r\n    // the UKM that was used for key derivation.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm);\r\n    // 2) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK).\r\n    // Call the result CEK_MAC.\r\n    var mac = signMAC.call(this, kek, cek, ukm);\r\n    // 3) Encrypt the CEK in ECB mode using the KEK.  Call the ciphertext CEK_ENC.\r\n    var enc = encryptECB.call(this, kek, cek);\r\n    // 4) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\r\n    var r = new Uint8Array(len);\r\n    r.set(new Uint8Array(enc), 0);\r\n    r.set(new Uint8Array(mac), k);\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-KW<br><br>\r\n *\r\n *  This algorithm decrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n *  Ref. rfc4357 6.2 GOST 28147-89 Key Unwrap\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {type} kek Key encryption key\r\n * @param {type} data Content encryption key\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction unwrapKeyGOST(kek, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\r\n    var d = buffer(data);\r\n    if (d.byteLength !== len)\r\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\r\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC, and CEK_MAC.\r\n    // UKM is the most significant (first) 8 octets. CEK_ENC is next 32 octets,\r\n    // and CEK_MAC is the least significant (last) 4 octets.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm),\r\n      enc = new Uint8Array(d, 0, k),\r\n      mac = new Uint8Array(d, k, n >> 1);\r\n    // 3) Decrypt CEK_ENC in ECB mode using the KEK.  Call the output CEK.\r\n    var cek = decryptECB.call(this, kek, enc);\r\n    // 4) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK),\r\n    // compare the result with CEK_MAC.  If they are not equal, then error.\r\n    var check = verifyMAC.call(this, kek, mac, cek, ukm);\r\n    if (!check)\r\n        throw new DataError('Error verify MAC of wrapping key');\r\n    return cek;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * Given a random 64-bit UKM and a GOST 28147 key K, this algorithm\r\n * creates a new GOST 28147-89 key K(UKM).\r\n * Ref. rfc4357 6.3 CryptoPro KEK Diversification Algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method diversify\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} ukm Random generated value\r\n * @returns {CryptoOperationData} Diversified kek\r\n */\r\nfunction diversifyKEK(kek, ukm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize;\r\n\r\n    // 1) Let K[0] = K;\r\n    var k = intArray(kek);\r\n    // 2) UKM is split into components a[i,j]:\r\n    //    UKM = a[0]|..|a[7] (a[i] - byte, a[i,0]..a[i,7] - it’s bits)\r\n    var a = [];\r\n    for (var i = 0; i < n; i++) {\r\n        a[i] = [];\r\n        for (var j = 0; j < 8; j++) {\r\n            a[i][j] = (ukm[i] >>> j) & 0x1;\r\n        }\r\n    }\r\n    // 3) Let i be 0.\r\n    // 4) K[1]..K[8] are calculated by repeating the following algorithm\r\n    //    eight times:\r\n    for (var i = 0; i < n; i++) {\r\n        //     A) K[i] is split into components k[i,j]:\r\n        //        K[i] = k[i,0]|k[i,1]|..|k[i,7] (k[i,j] - 32-bit integer)\r\n        //     B) Vector S[i] is calculated:\r\n        //        S[i] = ((a[i,0]*k[i,0] + ... + a[i,7]*k[i,7]) mod 2^32) |\r\n        //         (((~a[i,0])*k[i,0] + ... + (~a[i,7])*k[i,7]) mod 2^32);\r\n        var s = new Int32Array(2);\r\n        for (var j = 0; j < 8; j++) {\r\n            if (a[i][j])\r\n                s[0] = (s[0] + k[j]) & 0xffffffff;\r\n            else\r\n                s[1] = (s[1] + k[j]) & 0xffffffff;\r\n        }\r\n        //     C) K[i+1] = encryptCFB (S[i], K[i], K[i])\r\n        var iv = new Uint8Array(s.buffer);\r\n        k = new Int32Array(encryptCFB.call(this, k, k, iv));\r\n        //     D) i = i + 1\r\n    }\r\n    // 5) Let K(UKM) be K[8].\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n * It can be used with any KEK (e.g., produced by VKO GOST R 34.10-94 or\r\n * VKO GOST R 34.10-2001) because a unique UKM is used to diversify the KEK.\r\n * Ref. rfc4357 6.3  CryptoPro Key Wrap\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} cek Content encryption key\r\n * @returns {CryptoOperationData} Encrypted cek\r\n */\r\nfunction wrapKeyCP(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) For a unique symmetric KEK or a KEK produced by VKO GOST R\r\n    // 34.10-94, generate 8 octets at random.  Call the result UKM.  For\r\n    // a KEK, produced by VKO GOST R 34.10-2001, use the UKM that was\r\n    // used for key derivation.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm);\r\n    // 2) Diversify KEK, using the CryptoPro KEK Diversification Algorithm,\r\n    // described in Section 6.5.  Call the result KEK(UKM).\r\n    var dek = diversifyKEK.call(this, kek, ukm);\r\n    // 3) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\r\n    // CEK).  Call the result CEK_MAC.\r\n    var mac = signMAC.call(this, dek, cek, ukm);\r\n    // 4) Encrypt CEK in ECB mode using KEK(UKM).  Call the ciphertext\r\n    // CEK_ENC.\r\n    var enc = encryptECB.call(this, dek, cek);\r\n    // 5) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\r\n    var r = new Uint8Array(len);\r\n    r.set(new Uint8Array(enc), 0);\r\n    r.set(new Uint8Array(mac), k);\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n * Ref. rfc4357 6.4 CryptoPro Key Unwrap\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} data Encrypted content encryption keu\r\n * @return {CryptoOperationData} result Decrypted content encryption keu\r\n */\r\nfunction unwrapKeyCP(kek, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\r\n    var d = buffer(data);\r\n    if (d.byteLength !== len)\r\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\r\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,\r\n    // and CEK_MAC.  UKM is the most significant (first) 8 octets.\r\n    // CEK_ENC is next 32 octets, and CEK_MAC is the least significant\r\n    // (last) 4 octets.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm),\r\n      enc = new Uint8Array(d, 0, k),\r\n      mac = new Uint8Array(d, k, n >> 1);\r\n    // 3) Diversify KEK using the CryptoPro KEK Diversification Algorithm,\r\n    // described in section 6.5.  Call the result KEK(UKM).\r\n    var dek = diversifyKEK.call(this, kek, ukm);\r\n    // 4) Decrypt CEK_ENC in ECB mode using KEK(UKM).  Call the output CEK.\r\n    var cek = decryptECB.call(this, dek, enc);\r\n    // 5) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\r\n    // CEK), compare the result with CEK_MAC.  If they are not equal,\r\n    // then it is an error.\r\n    var check = verifyMAC.call(this, dek, mac, cek, ukm);\r\n    if (!check)\r\n        throw new DataError('Error verify MAC of wrapping key');\r\n    return cek;\r\n} // </editor-fold>\r\n\r\n/**\r\n * SignalCom master key packing algorithm\r\n *\r\n * kek stored in 3 files - kek.opq, mk.db3, masks.db3\r\n * kek.opq - always 36 bytes length = 32 bytes encrypted kek + 4 bytes mac of decrypted kek\r\n * mk.db3 - 6 bytes header (1 byte magic code 0x22 + 1 byte count of masks + 4 bytes mac of\r\n * xor summarizing masks value) + attached masks\r\n * masks.db3 - detached masks.\r\n * Total length  of attached + detached masks = 32 bits * count of masks\r\n * Default value of count 8 = (7 attached + 1 detached). But really no reason for such\r\n * separation - all masks xor summarizing - order is not matter.\r\n * Content of file rand.opq can used as ukm. Don't forget change file content after using.\r\n *\r\n * For usb-token files has names:\r\n * a001 - mk.db3, b001 - masks.db3, c001 - kek.opq, d001 - rand.opq\r\n * For windows registry\r\n * 00000001 - mk.db3, 00000002 - masks.db3, 00000003 - key.opq, 00000004 - rand.opq,\r\n * 00000006 - keys\\00000001.key, 0000000A - certificate\r\n *\r\n * @memberOf GostCipher\r\n * @method packKey\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} unpacked - clear main key 32 bytes\r\n * @param {CryptoOperationData} ukm - random vector for packing - 32 bytes * (count of masks - 1)\r\n * @returns {CryptoOperationData} packed master key - concatination of mk.db3 + masks.db3\r\n */\r\nfunction packKeySC(unpacked, ukm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, k = this.keySize;\r\n    var mcount = 8;\r\n    var key = new Uint8Array(buffer(unpacked));\r\n    if (key.byteLength !== k)\r\n        throw new DataError('Wrong cleartext size ' + key.byteLength + ' bytes');\r\n    // Check or generate UKM\r\n    ukm = ukm || this.ukm;\r\n    if (ukm) {\r\n        ukm = new Uint8Array(buffer(ukm));\r\n        if (ukm.byteLength > 0 && ukm.byteLength % k === 0)\r\n            mcount = ukm.byteLength / k + 1;\r\n        else\r\n            throw new DataError('Wrong rand size ' + ukm.byteLength + ' bytes');\r\n    } else\r\n        randomSeed(ukm = new Uint8Array((mcount - 1) * k));\r\n    // Output array\r\n    var d = new Uint8Array(mcount * k + m + 2), b = d.buffer;\r\n    // Calculate MAC\r\n    var zero32 = new Uint8Array(k);\r\n    var mac = signMAC.call(this, key, zero32);\r\n    d[0] = 0x22; // Magic code\r\n    d[1] = mcount; // Count of masks\r\n    d.set(new Uint8Array(mac), 2);\r\n    d.set(ukm, k + m + 2);\r\n    for (var i = 1; i < mcount; i++) {\r\n        var mask = new Uint8Array(b, 2 + m + k * i);\r\n        for (var j = 0; j < k; j++)\r\n            key[j] ^= mask[j];\r\n    }\r\n    d.set(key, m + 2);\r\n    return d.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom master key unpacking algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method unpackKey\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} packed - concatination of mk.db3 + masks.db3\r\n * @returns {CryptoOperationData} unpacked master key\r\n */\r\nfunction unpackKeySC(packed) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, k = this.keySize;\r\n    var b = buffer(packed);\r\n    // Unpack master key\r\n    var magic = new Uint8Array(b, 0, 1)[0];\r\n    if (magic !== 0x22)\r\n        throw new DataError('Invalid magic number');\r\n    var mcount = new Uint8Array(b, 1, 1)[0];\r\n    var mac = new Uint8Array(b, 2, m); // MAC for summarized mask\r\n    // Compute packKey xor summing for all masks\r\n    var key = new Uint8Array(k);\r\n    for (var i = 0; i < mcount; i++) {\r\n        var mask = new Uint8Array(b, 2 + m + k * i, k);\r\n        for (var j = 0; j < k; j++)\r\n            key[j] ^= mask[j];\r\n    }\r\n    // Test MAC for packKey with default sBox on zero 32 bytes array\r\n    var zero32 = new Uint8Array(k);\r\n    var test = verifyMAC.call(this, key, mac, zero32);\r\n    if (!test) {\r\n        // Try to use different sBoxes\r\n        var names = ['E-A', 'E-B', 'E-C', 'E-D', 'E-SC'];\r\n        for (var i = 0, n = names.length; i < n; i++) {\r\n            this.sBox = sBoxes[names[i]];\r\n            test = verifyMAC.call(this, key, mac, zero32);\r\n            if (test)\r\n                break;\r\n        }\r\n    }\r\n    if (!test)\r\n        throw new DataError('Invalid main key MAC');\r\n    return key.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom Key Wrapping algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek - clear kek or concatination of mk.db3 + masks.db3\r\n * @param {CryptoOperationData} cek - key for wrapping\r\n * @returns {CryptoOperationData} wrapped key - file kek.opq\r\n */\r\nfunction wrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, n = this.keySize;\r\n    var k = buffer(kek);\r\n    var c = buffer(cek);\r\n    if (k.byteLength !== n)\r\n        k = unpackKeySC.call(this, k);\r\n    var enc = encryptECB.call(this, k, c);\r\n    var mac = signMAC.call(this, k, c);\r\n    var d = new Uint8Array(m + n);\r\n    d.set(new Uint8Array(enc), 0);\r\n    d.set(new Uint8Array(mac), n);\r\n    return d.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom Key UnWrapping algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek - concatination of files mk.db3 + masks.db3 or clear kek\r\n * @param {CryptoOperationData} cek - wrapping key - file kek.opq\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction unwrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, n = this.keySize;\r\n    var k = buffer(kek);\r\n    var c = buffer(cek);\r\n    if (k.byteLength !== n)\r\n        k = unpackKeySC.call(this, k);\r\n    var enc = new Uint8Array(c, 0, n); // Encrypted kek\r\n    var mac = new Uint8Array(c, n, m); // MAC for clear kek\r\n    var d = decryptECB.call(this, k, enc);\r\n    if (!verifyMAC.call(this, k, mac, d))\r\n        throw new DataError('Invalid key MAC');\r\n    return d;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom master key generation for wrapping\r\n *\r\n * @memberOf GostCipher\r\n * @method generateKey\r\n * @instance\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction generateWrappingKeySC() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return packKeySC.call(this, generateKey.call(this));\r\n} // </editor-fold>\r\n\r\nfunction maskKey(mask, key, inverse, keySize) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var k = keySize / 4,\r\n      m32 = new Int32Array(buffer(mask)),\r\n      k32 = new Int32Array(buffer(key)),\r\n      r32 = new Int32Array(k);\r\n    if (inverse)\r\n        for (var i = 0; i < k; i++)\r\n            r32[i] = (k32[i] + m32[i]) & 0xffffffff;\r\n    else\r\n        for (var i = 0; i < k; i++)\r\n            r32[i] = (k32[i] - m32[i]) & 0xffffffff;\r\n    return r32.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-MASK<br><br>\r\n *\r\n * This algorithm wrap key mask\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} mask The mask\r\n * @param {CryptoOperationData} key The key\r\n * @returns {CryptoOperationData} The masked key\r\n */\r\nfunction wrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return maskKey(mask, key, this.procreator === 'VN', this.keySize);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm unwrap key mask\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} mask The mask\r\n * @param {CryptoOperationData} key The masked key\r\n * @return {CryptoOperationData} result The key\r\n */\r\nfunction unwrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return maskKey(mask, key, this.procreator !== 'VN', this.keySize);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKM<br><br>\r\n *\r\n * Key meshing in according to rfc4357 2.3.2. CryptoPro Key Meshing\r\n *\r\n * @memberOf GostCipher\r\n * @method keyMeshing\r\n * @instance\r\n * @private\r\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\r\n * @param {Uint8Array} s 8x8 bit sync (iv)\r\n * @param {Integer} i block index\r\n * @param {Int32Array} key 8x32 bit key schedule\r\n * @param {boolean} e true - decrypt\r\n * @returns CryptoOperationData next 8x8 bit key\r\n */\r\nfunction keyMeshingCP(k, s, i, key, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if ((i + 1) * this.blockSize % 1024 === 0) { // every 1024 octets\r\n        // K[i+1] = decryptECB (K[i], C);\r\n        k = decryptECB.call(this, k, C);\r\n        // IV0[i+1] = encryptECB (K[i+1],IVn[i])\r\n        s.set(new Uint8Array(encryptECB.call(this, k, s)));\r\n        // restore key schedule\r\n        key.set(this.keySchedule(k, e));\r\n    }\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n *  Null Key Meshing in according to rfc4357 2.3.1\r\n *\r\n * @memberOf GostCipher\r\n * @method keyMeshing\r\n * @instance\r\n * @private\r\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\r\n */\r\nfunction noKeyMeshing(k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-NoPadding<br><br>\r\n *\r\n * No padding.\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction noPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Uint8Array(d);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-PKCS5Padding<br><br>\r\n *\r\n *  PKCS#5 padding: 8-x remaining bytes are filled with the value of\r\n *  8-x.  If there’s no incomplete block, one extra block filled with\r\n *  value 8 is added\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction pkcs5Pad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = nb - n % nb,\r\n      m = Math.ceil((n + 1) / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    for (var i = n; i < m; i++)\r\n        r[i] = q;\r\n    return r;\r\n} // </editor-fold>\r\n\r\nfunction pkcs5Unpad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = d[m - 1],\r\n      n = m - q;\r\n    if (q > nb)\r\n        throw DataError('Invalid padding');\r\n    var r = new Uint8Array(n);\r\n    if (n > 0)\r\n        r.set(new Uint8Array(d.buffer, 0, n));\r\n    return r;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST 28147-ZeroPadding<br><br>\r\n *\r\n * Zero padding: 8-x remaining bytes are filled with zero\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction zeroPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      m = Math.ceil(n / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    for (var i = n; i < m; i++)\r\n        r[i] = 0;\r\n    return r;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST 28147-BitPadding<br><br>\r\n *\r\n * Bit padding: P* = P || 1 || 000...0 If there’s no incomplete block,\r\n * one extra block filled with 1 || 000...0\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction bitPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      m = Math.ceil((n + 1) / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    r[n] = 1;\r\n    for (var i = n + 1; i < m; i++)\r\n        r[i] = 0;\r\n    return r;\r\n} // </editor-fold>\r\n\r\nfunction bitUnpad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = d.byteLength,\r\n      n = m;\r\n    while (n > 1 && d[n - 1] === 0)\r\n        n--;\r\n    if (d[n - 1] !== 1)\r\n        throw DataError('Invalid padding');\r\n    n--;\r\n    var r = new Uint8Array(n);\r\n    if (n > 0)\r\n        r.set(new Uint8Array(d.buffer, 0, n));\r\n    return r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-RandomPadding<br><br>\r\n *\r\n * Random padding: 8-x remaining bytes of the last block are set to\r\n * random.\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction randomPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = nb - n % nb,\r\n      m = Math.ceil(n / nb) * nb,\r\n      r = new Uint8Array(m), e = new Uint8Array(r.buffer, n, q);\r\n    r.set(d);\r\n    randomSeed(e);\r\n    return r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST 28147-89 Encryption Algorithm<br><br>\r\n *\r\n * References {@link http://tools.ietf.org/html/rfc5830}<br><br>\r\n *\r\n * When keys and initialization vectors are converted to/from byte arrays,\r\n * little-endian byte order is assumed.<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\r\n *      <li><b>version</b> Algorithm version, number\r\n *          <ul>\r\n *              <li><b>1989</b> Current version of standard</li>\r\n *              <li><b>2015</b> New draft version of standard</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Block length\r\n *          <ul>\r\n *              <li><b>64</b> 64 bits length (default)</li>\r\n *              <li><b>128</b> 128 bits length (only for version 2015)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode, string\r\n *          <ul>\r\n *              <li><b>ES</b> Encryption mode (default)</li>\r\n *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\r\n *              <li><b>KW</b> Key wrapping mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Encript/Decrypt mode (ES)\r\n *          <ul>\r\n *              <li><b>block</b> Block mode, string. Default ECB</li>\r\n *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\r\n *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\r\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Sign/Verify mode (MAC)\r\n *          <ul>\r\n *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\r\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Wrap/Unwrap key mode (KW)\r\n *          <ul>\r\n *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\r\n *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * Supported paramters values:\r\n *\r\n *  <ul>\r\n *      <li>Block modes (parameter 'block')\r\n *          <ul>\r\n *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *              <li><b>OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Key meshing modes (parameter 'keyMeshing')\r\n *          <ul>\r\n *              <li><b>NO</b> No key wrapping (default)</li>\r\n *              <li><b>CP</b> CryptoPor Key key meshing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Padding modes (parameter 'padding')\r\n *          <ul>\r\n *              <li><b>NO</b> No padding only for CFB, OFB and CTR modes</li>\r\n *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\r\n *              <li><b>ZERO</b> Zero bits padding mode</li>\r\n *              <li><b>RANDOM</b> Random bits padding mode</li>\r\n *              <li><b>BIT</b> One bit padding mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Wrapping key modes (parameter 'keyWrapping')\r\n *          <ul>\r\n *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\r\n *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\r\n *              <li><b>SC</b> SignalCom Key wrapping mode</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostCipher\r\n * @param {AlgorithmIndentifier} algorithm WebCryptoAPI algorithm identifier\r\n */\r\nexport function GostCipher(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // Check little endian support\r\n    if (!littleEndian)\r\n        throw new NotSupportedError('Big endian platform not supported');\r\n    algorithm = algorithm || {};\r\n    this.keySize = 32;\r\n    this.blockLength = algorithm.length || 64;\r\n    this.blockSize = this.blockLength >> 3;\r\n\r\n    this.name = (algorithm.name || (algorithm.version === 1 ? 'RC2' :\r\n      algorithm.version === 1989 ? 'GOST 28147' : 'GOST R 34.12')) +\r\n      (algorithm.version > 4 ? '-' + ((algorithm.version || 1989) % 100) : '') + '-' +\r\n      (this.blockLength === 64 ? '' : this.blockLength + '-') +\r\n      ((algorithm.mode === 'MAC') ? 'MAC-' + (algorithm.macLength || this.blockLength >> 1) :\r\n        (algorithm.mode === 'KW' || algorithm.keyWrapping) ?\r\n          ((algorithm.keyWrapping || 'NO') !== 'NO' ? algorithm.keyWrapping : '') + 'KW' :\r\n          (algorithm.block || 'ECB') + ((algorithm.block === 'CFB' || algorithm.block === 'OFB' ||\r\n          (algorithm.block === 'CTR' && algorithm.version === 2015)) &&\r\n          algorithm.shiftBits && algorithm.shiftBits !== this.blockLength ? '-' + algorithm.shiftBits : '') +\r\n          (algorithm.padding ? '-' + (algorithm.padding || (algorithm.block === 'CTR' ||\r\n          algorithm.block === 'CFB' || algorithm.block === 'OFB' ? 'NO' : 'ZERO')) + 'PADDING' : '') +\r\n          ((algorithm.keyMeshing || 'NO') !== 'NO' ? '-CPKEYMESHING' : '')) +\r\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    // Algorithm procreator\r\n    this.procreator = algorithm.procreator;\r\n\r\n    switch (algorithm.version || 1989) {\r\n        case 1:\r\n            this.process = processRC2;\r\n            this.keySchedule = keyScheduleRC2;\r\n            this.blockLength = 64;\r\n            this.effectiveLength = algorithm.length || 32;\r\n            this.keySize = 8 * Math.ceil(this.effectiveLength / 8); // Max 128\r\n            this.blockSize = this.blockLength >> 3;\r\n            break;\r\n        case 2015:\r\n            this.version = 2015;\r\n            if (this.blockLength === 64) {\r\n                this.process = process15;\r\n                this.keySchedule = keySchedule15;\r\n            } else if (this.blockLength === 128) {\r\n                this.process = process128;\r\n                this.keySchedule = keySchedule128;\r\n            } else\r\n                throw new DataError('Invalid block length');\r\n            this.processMAC = processMAC15;\r\n            break;\r\n        case 1989:\r\n            this.version = 1989;\r\n            this.process = process89;\r\n            this.processMAC = processMAC89;\r\n            this.keySchedule = keySchedule89;\r\n            if (this.blockLength !== 64)\r\n                throw new DataError('Invalid block length');\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\r\n    }\r\n\r\n    switch (algorithm.mode || (algorithm.keyWrapping && 'KW') || 'ES') {\r\n\r\n        case 'ES':\r\n            switch (algorithm.block || 'ECB') {\r\n                case 'ECB':\r\n                    this.encrypt = encryptECB;\r\n                    this.decrypt = decryptECB;\r\n                    break;\r\n                case 'CTR':\r\n                    if (this.version === 1989) {\r\n                        this.encrypt = processCTR89;\r\n                        this.decrypt = processCTR89;\r\n                    } else {\r\n                        this.encrypt = processCTR15;\r\n                        this.decrypt = processCTR15;\r\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    }\r\n                    break;\r\n                case 'CBC':\r\n                    this.encrypt = encryptCBC;\r\n                    this.decrypt = decryptCBC;\r\n                    break;\r\n                case 'CFB':\r\n                    this.encrypt = encryptCFB;\r\n                    this.decrypt = decryptCFB;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                case 'OFB':\r\n                    this.encrypt = processOFB;\r\n                    this.decrypt = processOFB;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                default:\r\n                    throw new NotSupportedError('Block mode ' + algorithm.block + ' not supported');\r\n            }\r\n            switch (algorithm.keyMeshing) {\r\n                case 'CP':\r\n                    this.keyMeshing = keyMeshingCP;\r\n                    break;\r\n                default:\r\n                    this.keyMeshing = noKeyMeshing;\r\n            }\r\n            if (this.encrypt === encryptECB || this.encrypt === encryptCBC) {\r\n                switch (algorithm.padding) {\r\n                    case 'PKCS5P':\r\n                        this.pad = pkcs5Pad;\r\n                        this.unpad = pkcs5Unpad;\r\n                        break;\r\n                    case 'RANDOM':\r\n                        this.pad = randomPad;\r\n                        this.unpad = noPad;\r\n                        break;\r\n                    case 'BIT':\r\n                        this.pad = bitPad;\r\n                        this.unpad = bitUnpad;\r\n                        break;\r\n                    default:\r\n                        this.pad = zeroPad;\r\n                        this.unpad = noPad;\r\n                }\r\n            } else {\r\n                this.pad = noPad;\r\n                this.unpad = noPad;\r\n            }\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'MAC':\r\n            this.sign = signMAC;\r\n            this.verify = verifyMAC;\r\n            this.generateKey = generateKey;\r\n            this.macLength = algorithm.macLength || (this.blockLength >> 1);\r\n            this.pad = noPad;\r\n            this.unpad = noPad;\r\n            this.keyMeshing = noKeyMeshing;\r\n            break;\r\n        case 'KW':\r\n            this.pad = noPad;\r\n            this.unpad = noPad;\r\n            this.keyMeshing = noKeyMeshing;\r\n            switch (algorithm.keyWrapping) {\r\n                case 'CP':\r\n                    this.wrapKey = wrapKeyCP;\r\n                    this.unwrapKey = unwrapKeyCP;\r\n                    this.generateKey = generateKey;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                case 'SC':\r\n                    this.wrapKey = wrapKeySC;\r\n                    this.unwrapKey = unwrapKeySC;\r\n                    this.generateKey = generateWrappingKeySC;\r\n                    break;\r\n                default:\r\n                    this.wrapKey = wrapKeyGOST;\r\n                    this.unwrapKey = unwrapKeyGOST;\r\n                    this.generateKey = generateKey;\r\n            }\r\n            break;\r\n        case 'MASK':\r\n            this.wrapKey = wrapKeyMask;\r\n            this.unwrapKey = unwrapKeyMask;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Mode ' + algorithm.mode + ' not supported');\r\n    }\r\n\r\n    // Define sBox parameter\r\n    var sBox = algorithm.sBox, sBoxName;\r\n    if (!sBox)\r\n        sBox = this.version === 2015 ? sBoxes['E-Z'] : this.procreator === 'SC' ? sBoxes['E-SC'] : sBoxes['E-A'];\r\n    else if (typeof sBox === 'string') {\r\n        sBoxName = sBox.toUpperCase();\r\n        sBox = sBoxes[sBoxName];\r\n        if (!sBox)\r\n            throw new SyntaxError('Unknown sBox name: ' + algorithm.sBox);\r\n    } else if (!sBox.length || sBox.length !== sBoxes['E-Z'].length)\r\n        throw new SyntaxError('Length of sBox must be ' + sBoxes['E-Z'].length);\r\n    this.sBox = sBox;\r\n    // Initial vector\r\n    if (algorithm.iv) {\r\n        this.iv = new Uint8Array(algorithm.iv);\r\n        if (this.iv.byteLength !== this.blockSize && this.version === 1989)\r\n            throw new SyntaxError('Length of iv must be ' + this.blockLength + ' bits');\r\n        else if (this.iv.byteLength !== this.blockSize >> 1 && this.encrypt === processCTR15)\r\n            throw new SyntaxError('Length of iv must be ' + this.blockLength >> 1 + ' bits');\r\n        else if (this.iv.byteLength % this.blockSize !== 0 && this.encrypt !== processCTR15)\r\n            throw new SyntaxError('Length of iv must be a multiple of ' + this.blockLength + ' bits');\r\n    } else\r\n        this.iv = this.blockLength === 128 ? defaultIV128 : defaultIV;\r\n    // User key material\r\n    if (algorithm.ukm) {\r\n        this.ukm = new Uint8Array(algorithm.ukm);\r\n        if (this.ukm.byteLength * 8 !== this.blockLength)\r\n            throw new SyntaxError('Length of ukm must be ' + this.blockLength + ' bits');\r\n    }\r\n} // </editor-fold>\r\n","/**\r\n * @file PKCS ASN.1 message syntax and converters\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { expand } from '../utils/helpers';\r\nimport { gostSecurityInstance } from './gostSecurity';\r\nimport { gostCodingInstance } from './gostCoding';\r\n\r\n/**\r\n * Service functions\r\n **/\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n// Security parameters\r\nconst { algorithms, names, identifiers, attributes, parameters } = gostSecurityInstance;\r\n\r\n// Various coding algorithms\r\nconst { BER, PEM, Chars, Hex, Int16 } = gostCodingInstance;\r\n\r\n// Swap bytes in buffer\r\nfunction swapBytes(src) {\r\n    if (src instanceof CryptoOperationData)\r\n        src = new Uint8Array(src);\r\n    var dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\nfunction isBinary(value) {\r\n    return value instanceof CryptoOperationData || value.buffer instanceof CryptoOperationData;\r\n}\r\n\r\n// Left pad zero\r\nfunction lpad(n, width) {\r\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\r\n}\r\n\r\n// Nearest power 2\r\nfunction npw2(n) {\r\n    return n <= 2 ? n : n <= 4 ? 4 : n <= 8 ? 8 : n <= 16 ? 16 :\r\n      n <= 32 ? 32 : n <= 64 ? 64 : n <= 128 ? 128 : n <= 256 ? 256 :\r\n        n < 512 ? 512 : n < 1024 ? 1024 : undefined;\r\n}\r\n\r\n// String int encode/decode to buffer\r\nvar SInt = {\r\n    encode: function (value, endian) {\r\n        return '0x' + Hex.encode(value, endian);\r\n    },\r\n    decode: function (value, endian, len) {\r\n        if (typeof value === 'number')\r\n            value = value.toString(16);\r\n        var s = value.replace('0x', '');\r\n        len = len || npw2(s.length);\r\n        return Hex.decode(lpad(s, len), endian);\r\n    }\r\n};\r\n\r\n// Assert invalid message\r\nfunction assert(value) {\r\n    if (value)\r\n        throw Error('Invalid format');\r\n}\r\n\r\nfunction defineProperty(object, name, descriptor, enumerable) {\r\n    if (typeof descriptor !== 'object')\r\n        descriptor = { value: descriptor };\r\n    if (enumerable !== undefined)\r\n        descriptor.enumerable = enumerable;\r\n    Object.defineProperty(object, name, descriptor);\r\n}\r\n\r\nfunction defineProperties(object, properties, enumerable) {\r\n    for (var name in properties)\r\n        defineProperty(object, name, properties[name], enumerable);\r\n}\r\n\r\nfunction getOwnPropertyDescriptor(object, name) {\r\n    return Object.getOwnPropertyDescriptor(object, name);\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Base ASN.1 types and definitions\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Encode object primitive\r\nfunction encode(format, object, tagNumber, tagClass, tagConstructed, uniformTitle) {\r\n    assert(object === undefined);\r\n    var source = {\r\n        tagNumber: tagNumber,\r\n        tagClass: tagClass || 0x00,\r\n        tagConstructed: tagConstructed || false,\r\n        object: object\r\n    };\r\n    // Output format\r\n    format = format || 'DER';\r\n    if (format === 'DER' || format === 'CER')\r\n        source = BER.encode(source, format);\r\n    if (format === 'PEM')\r\n        source = PEM.encode(source, uniformTitle);\r\n    return source;\r\n}\r\n\r\n// Decode object primitive\r\nfunction decode(source, tagNumber, tagClass, tagConstructed, uniformTitle) {\r\n    assert(source === undefined);\r\n\r\n    // Decode PEM\r\n    if (typeof source === 'string')\r\n        source = PEM.decode(source, uniformTitle, false);\r\n    // Decode binary data\r\n    if (source instanceof CryptoOperationData) {\r\n        try {\r\n            source = PEM.decode(Chars.encode(source), uniformTitle, true);\r\n        } catch (e) {\r\n            source = BER.decode(source);\r\n        }\r\n    }\r\n\r\n    tagClass = tagClass || 0;\r\n    tagConstructed = tagConstructed || false;\r\n    // Restore context implicit formats\r\n    if (source.tagNumber === undefined) {\r\n        source = encode(true, source.object, tagNumber, tagClass,\r\n          source.object instanceof Array);\r\n        source = BER.decode(source);\r\n    }\r\n\r\n    // Check format\r\n    assert(source.tagClass !== tagClass ||\r\n      source.tagNumber !== tagNumber ||\r\n      source.tagConstructed !== tagConstructed);\r\n    // Clone value define from redefine original\r\n    if (tagClass === 0 && tagNumber === 0x05)\r\n        return null;\r\n    else\r\n        return source.object;\r\n}\r\n\r\n// Create class based on super\r\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\r\n    // If constructor not defined\r\n    if (typeof Class !== 'function') {\r\n        propertiesClass = propertiesObject;\r\n        propertiesObject = Class;\r\n        Class = function () {\r\n            Super.apply(this, arguments);\r\n        };\r\n    }\r\n    // Create prototype properties\r\n    Class.prototype = Object.create(Super.prototype, {\r\n        constructor: {\r\n            value: Class\r\n        },\r\n        superclass: {\r\n            value: Super.prototype\r\n        }\r\n    });\r\n    if (propertiesObject)\r\n        defineProperties(Class.prototype, propertiesObject);\r\n    // Inherites super class properties\r\n    if (Super !== Object)\r\n        for (var name in Super)\r\n            Class[name] = Super[name];\r\n    Class.super = Super;\r\n    if (propertiesClass)\r\n        defineProperties(Class, propertiesClass, true);\r\n    return Class;\r\n}\r\n\r\n// Base class\r\nvar ASN1Object = extend(Object, function (object) {\r\n    this.object = object;\r\n}, {\r\n    // Call set method for a class property\r\n    _set: function (Class, propName, value) {\r\n        Class.property(propName).set.call(this, value);\r\n    },\r\n    // Call get method for a class property\r\n    _get: function (Class, propName) {\r\n        return Class.property(propName).get.call(this);\r\n    },\r\n    // Call method for a class\r\n    _call: function (Class, methodName, args) {\r\n        return Class.method(methodName).apply(this, args);\r\n    },\r\n    hasProperty: function (propName) {\r\n        return this.hasOwnProperty(propName) ||\r\n          !!this.constructor.property(propName);\r\n    },\r\n    encode: function () {\r\n        return this.object;\r\n    }\r\n}, {\r\n    decode: function (source) {\r\n        return new this(source);\r\n    },\r\n    // Find ingerited property\r\n    property: function (propName) {\r\n        var proto = this.prototype;\r\n        while (proto) {\r\n            var descriptor = getOwnPropertyDescriptor(proto, propName);\r\n            if (descriptor)\r\n                return descriptor;\r\n            else\r\n                proto = proto.superclass;\r\n        }\r\n    },\r\n    // Find method\r\n    method: function (methodName) {\r\n        var proto = this.prototype;\r\n        while (proto) {\r\n            if (proto[methodName])\r\n                return proto[methodName];\r\n            else\r\n                proto = proto.superclass;\r\n        }\r\n    }\r\n});\r\n\r\n// Primitive metaclass\r\nvar PRIMITIVE = function (tagNumber) {\r\n    return extend(ASN1Object, {\r\n        encode: function (format) {\r\n            return encode(format, this.object, tagNumber);\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            return new this(decode(source, tagNumber));\r\n        }\r\n    });\r\n};\r\n\r\nvar ANY = ASN1Object;\r\n\r\nvar BOOLEAN = PRIMITIVE(0x01);\r\n\r\nvar IA5String = PRIMITIVE(0x16);\r\n\r\nvar NumericString = PRIMITIVE(0x12);\r\n\r\nvar PrintableString = PRIMITIVE(0x13);\r\n\r\nvar TeletexString = PRIMITIVE(0x14);\r\n\r\nvar UTF8String = PRIMITIVE(0x0c);\r\n\r\nvar UTCTime = PRIMITIVE(0x17);\r\n\r\nvar GeneralizedTime = PRIMITIVE(0x18);\r\n\r\nvar UniversalString = PRIMITIVE(0x1C);\r\n\r\nvar BMPString = PRIMITIVE(0x1e);\r\n\r\nvar NULL = extend(PRIMITIVE(0x05), {\r\n    object: {\r\n        get: function () {\r\n            return null;\r\n        },\r\n        set: function (object) {\r\n            assert(object !== null);\r\n        }\r\n    }\r\n});\r\n\r\n// Primitive class with value coding\r\nvar PRIMITIVE_CODE = function (tagNumber) {\r\n\r\n    // Base class primitive\r\n    var Class = extend(PRIMITIVE(tagNumber), function (object) {\r\n        if (this instanceof Class)\r\n            Class.super.apply(this, arguments);\r\n        else\r\n            return CODE(object);\r\n    });\r\n\r\n    // Create Class with encoded\r\n    function CODE(structure) {\r\n        // Structured class\r\n        return extend(PRIMITIVE(tagNumber), function (object) {\r\n            Class.super.call(this, object);\r\n        }, {\r\n            // Transformation to code values\r\n            encode: function (format) {\r\n                return encode(format, structure[this.object], tagNumber);\r\n            }\r\n        }, {\r\n            decode: function (source) {\r\n                var id = decode(source, tagNumber);\r\n                for (var name in structure)\r\n                    if (id === structure[name])\r\n                        return new this(name);\r\n                assert(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    return Class;\r\n};\r\n\r\nvar INTEGER = PRIMITIVE_CODE(0x02);\r\n\r\nvar ENUMERATED = PRIMITIVE_CODE(0x0a);\r\n\r\nvar OCTET_STRING = (function () {\r\n    // Base class primitive\r\n    var Class = extend(PRIMITIVE(0x04), function (object) {\r\n        if (this instanceof Class)\r\n            Class.super.apply(this, arguments);\r\n        else\r\n            return WRAPPING(object);\r\n    });\r\n\r\n    // Wrapping class\r\n    function WRAPPING(WrappedClass) {\r\n        if (WrappedClass) {\r\n            return extend(WrappedClass, {\r\n                encode: function (format) {\r\n                    return encode(format, WrappedClass.method('encode').call(this, true), 0x04);\r\n                }\r\n            }, {\r\n                decode: function (source) {\r\n                    return WrappedClass.decode.call(this, decode(source, 0x04));\r\n                }\r\n            });\r\n        } else\r\n            return Class;\r\n    }\r\n\r\n    return Class;\r\n})();\r\n\r\nvar BIT_STRING = (function () {\r\n    // Base class primitive\r\n    var Class = extend(PRIMITIVE(0x03), function (object) {\r\n        if (this instanceof Class)\r\n            Class.super.apply(this, arguments);\r\n        else if (typeof object === 'object')\r\n            return MASK(object);\r\n        else\r\n            return WRAPPING(object);\r\n    });\r\n\r\n    // Wrapping class\r\n    function WRAPPING(WrappedClass) {\r\n        if (WrappedClass) {\r\n            return extend(WrappedClass, {\r\n                encode: function (format) {\r\n                    return encode(format, WrappedClass.method('encode').call(this, true), 0x03);\r\n                }\r\n            }, {\r\n                decode: function (source) {\r\n                    return WrappedClass.decode.call(this, decode(source, 0x03));\r\n                }\r\n            });\r\n        } else\r\n            return Class;\r\n    }\r\n\r\n    // Create new class for a mask\r\n    function MASK(structure) {\r\n        // Bit string masked class\r\n        return extend(ASN1Object, function (object, numbits) {\r\n            ASN1Object.call(this, object);\r\n            this.numbits = numbits || 0;\r\n        }, {\r\n            encode: function (format) {\r\n                var object = this.object, data = [];\r\n                if (object instanceof Array) {\r\n                    for (var i = 0, n = object.length; i < n; i++) {\r\n                        var j = structure[object[i]];\r\n                        if (j !== undefined)\r\n                            data[j] = '1';\r\n                    }\r\n                    for (var i = 0, n = Math.max(data.length, this.numbits); i < n; i++)\r\n                        if (!data[i])\r\n                            data[i] = '0';\r\n                    data = data.join('');\r\n                } else\r\n                    data = '0';\r\n                return encode(format, data, 0x03);\r\n            }\r\n        }, {\r\n            // Transformation to array of values\r\n            decode: function (source) {\r\n                var data = decode(source, 0x03), object = [];\r\n                for (var name in structure) {\r\n                    var i = structure[name];\r\n                    if (data.charAt(i) === '1')\r\n                        object.push(name);\r\n                }\r\n                return new this(object, data.length);\r\n            }\r\n        });\r\n    }\r\n\r\n    return Class;\r\n})();\r\n\r\n// Combine sequence object properties with owner object\r\nvar COMBINE = function (Class) {\r\n    Class.combine = function (owner, valueName) {\r\n        for (var name in Class.prototype) {\r\n            if (Class.prototype.hasOwnProperty(name) && !owner.hasProperty(name)) {\r\n                defineProperty(owner, name, (function (name) {\r\n                    return {\r\n                        get: function () {\r\n                            // Get object property\r\n                            return this[valueName] && this[valueName][name];\r\n                        },\r\n                        set: function (object) {\r\n                            // Set object property\r\n                            if (!this[valueName])\r\n                                this[valueName] = {};\r\n                            this[valueName][name] = object;\r\n                        },\r\n                        configurable: false,\r\n                        enumerable: true\r\n                    };\r\n                })(name));\r\n            }\r\n        }\r\n    };\r\n    return Class;\r\n};\r\n\r\nvar SEQUENCE = function (structure, uniformTitle) {\r\n\r\n    /**\r\n     * Create SEQUENCE ASN.1 metaclass\r\n     *\r\n     * @class GostASN1.Sequence\r\n     * @param {(Object|FormatedData)} object Initialization object\r\n     * @param {boolean} check Check structure after initialization\r\n     */\r\n    var Class = extend(ASN1Object, function (object, check) {\r\n        // Define hidden properties\r\n        defineProperty(this, 'items', {\r\n            writable: true,\r\n            value: {}\r\n        });\r\n        if (typeof object === 'string' || object instanceof CryptoOperationData)\r\n            this.decode(object);\r\n        else if (object !== undefined) {\r\n            this.object = object;\r\n            // Check structure\r\n            if (check)\r\n                this.check();\r\n        }\r\n    }, {\r\n        object: {\r\n            get: function () {\r\n                return this;\r\n            },\r\n            set: function (object) {\r\n                if (object instanceof Class) {\r\n                    // Set the same sequence class\r\n                    this.items = object.items;\r\n                    for (var name in structure) {\r\n                        var ItemClass = this.getItemClass(name, this.items);\r\n                        if (ItemClass.combine)\r\n                            ItemClass.combine(this, name);\r\n                    }\r\n                } else {\r\n                    // Set other object structure\r\n                    var data = {};\r\n                    for (var name in structure) {\r\n                        var item = object[name];\r\n                        var ItemClass = this.getItemClass(name, data);\r\n                        if (item !== undefined) {\r\n                            data[name] = new ItemClass(item);\r\n                        } else if (ItemClass.combine) {\r\n                            // Create combined object\r\n                            data[name] = new ItemClass(object);\r\n                        }\r\n                        if (ItemClass.combine)\r\n                            ItemClass.combine(this, name);\r\n                    }\r\n                    this.items = data;\r\n                }\r\n            }\r\n        },\r\n        getItemClass: function (name, items) {\r\n            return structure[name];\r\n        },\r\n        /**\r\n         * Encode the object\r\n         *\r\n         * @memberOf GostASN1.Sequence\r\n         * @instance\r\n         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\r\n         * @returns {FormatedData}\r\n         */\r\n        encode: function (format) {\r\n            var source = [], items = this.items;\r\n            // Encode objects in structure\r\n            for (var name in structure) {\r\n                // console.log(name, 'encoding...', items[name]);\r\n                if (items[name]) {\r\n                    var encoded = items[name].encode(true);// Source from object\r\n                    if (encoded !== undefined) // Can be optional\r\n                        source.push(encoded);\r\n\r\n                }\r\n            }\r\n            return encode(format, source, 0x10, 0, true, uniformTitle);\r\n        },\r\n        /**\r\n         * Decode the source to self object\r\n         *\r\n         * @memberOf GostASN1.Sequence\r\n         * @instance\r\n         * @param {FormatedData} source Encoded data\r\n         */\r\n        decode: function (source) {\r\n            this.object = this.constructor.decode(source);\r\n        },\r\n        /**\r\n         * Check the object structure\r\n         *\r\n         * @memberOf GostASN1.Sequence\r\n         * @instance\r\n         */\r\n        check: function () {\r\n            this.constructor.decode(this.encode(true));\r\n        }\r\n    }, {\r\n        /**\r\n         * Encode data values with creating object\r\n         *\r\n         * @memberOf GostASN1.Sequence\r\n         * @static\r\n         * @param {Object} object Javascript object to encoding\r\n         * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\r\n         * @returns {FormatedData}\r\n         */\r\n        encode: function (object, format) {\r\n            return new this(object).encode(format);\r\n        },\r\n        /**\r\n         * Decode source and create object\r\n         *\r\n         * @memberOf GostASN1.Sequence\r\n         * @static\r\n         * @param {FormatedData} source Encoded data\r\n         * @returns {GostASN1.Sequence}\r\n         *\r\n         */\r\n        decode: function (source) {\r\n            // Decode structure\r\n            source = decode(source, 0x10, 0, true, uniformTitle);\r\n            var i = 0, result = new this(), data = result.items = {};\r\n            for (var name in structure) {\r\n                // console.log(name, 'decoding...');\r\n                // try to create and decode object\r\n                var ItemClass = result.getItemClass(name, data);\r\n                var item = ItemClass.decode(source[i]);\r\n                // success? item can be optional\r\n                if (item !== undefined) {\r\n                    data[name] = item;\r\n                    if (ItemClass.combine)\r\n                        ItemClass.combine(result, name);\r\n                    i++;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n\r\n    // Append structure items\r\n    for (var name in structure) {\r\n        defineProperty(Class.prototype, name, (function (name) {\r\n            return {\r\n                get: function () {\r\n                    // Get object property\r\n                    return this.items[name] && this.items[name].object;\r\n                },\r\n                set: function (object) {\r\n                    // Set object property\r\n                    if (object !== undefined) {\r\n                        var ItemClass = this.getItemClass(name, this.items);\r\n                        this.items[name] = new ItemClass(object);\r\n                    } else\r\n                        delete this.items[name];\r\n                },\r\n                configurable: false,\r\n                enumerable: !structure[name].combine\r\n            };\r\n        })(name));\r\n        if (structure[name].combine)\r\n            structure[name].combine(Class.prototype, name);\r\n    }\r\n    return Class;\r\n};\r\n\r\nvar ATTRIBUTE = function (structure, typeName, valueName, ownerDafaultType, uniformName) {\r\n\r\n    var BaseClass = SEQUENCE(structure, uniformName);\r\n\r\n    // Define attribute sequence\r\n    var DEFINE = function (typeSet, defaultType) {\r\n\r\n        typeName = typeName || 'type';\r\n        valueName = valueName || 'value';\r\n        defaultType = defaultType || ownerDafaultType || ANY;\r\n\r\n        var Class = extend(BaseClass, function (object) {\r\n            // Constructor - \"matrioshka\"\r\n            if (this instanceof Class) {\r\n                // Call super\r\n                BaseClass.apply(this, arguments);\r\n            } else\r\n                return DEFINE.apply(this, arguments);\r\n        }, {\r\n            getItemClass: function (name, items) {\r\n                var ItemClass = structure[name];\r\n                if (valueName === name) {\r\n                    // Define type of value attribute based on type attribute\r\n                    var type, typeId = items && items[typeName];\r\n                    if (typeId) {\r\n                        var id = typeId.object;\r\n                        if (typeSet) {\r\n                            if (typeof typeSet === 'function')\r\n                                type = typeSet(id);\r\n                            else\r\n                                type = typeSet[id];\r\n                        }\r\n                    }\r\n                    type = type || defaultType || ANY;\r\n                    ItemClass = ItemClass === ANY ? type :\r\n                      ItemClass(type);\r\n                }\r\n                return ItemClass;\r\n            }\r\n        });\r\n\r\n        // Redefine type property\r\n        defineProperty(Class.prototype, typeName, {\r\n            get: function () {\r\n                // Get value property of object\r\n                return this.items[typeName] && this.items[typeName].object;\r\n            },\r\n            set: function () {\r\n                // Can't set type definition property separatery\r\n                assert(true);\r\n            },\r\n            configurable: false,\r\n            enumerable: true\r\n        });\r\n\r\n        return Class;\r\n    };\r\n\r\n    return DEFINE();\r\n};\r\n\r\n\r\nvar OBJECT_IDENTIFIER = extend(ASN1Object, {\r\n    encode: function (format) {\r\n        var object = this.object;\r\n        object = /^(\\d+\\.)+\\d+$/.test(object) ? object : identifiers[object];\r\n        assert(!object);\r\n        return encode(format, object, 0x06);\r\n    }\r\n}, {\r\n    decode: function (source) {\r\n        var object = decode(source, 0x06);\r\n        return new this(names[object] || object);\r\n    }\r\n});\r\n\r\nvar IMPLICIT = function (Class) {\r\n    Class = Class || ANY;\r\n    // Add constracted tag\r\n    return extend(Class, {\r\n        encode: function (format) {\r\n            // Format encoding without CTX header\r\n            var source = Class.method('encode').call(this, format);\r\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\r\n                return source;\r\n            if (source.tagNumber !== 0x04 && source.tagClass === 0 &&\r\n              !(source.object instanceof Array))\r\n            // Encode primitive source\r\n                return { object: BER.encode(source, 'DER', true) };\r\n            else\r\n                return { object: source.object };\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            if (typeof source === 'string' || source instanceof CryptoOperationData) {\r\n                return Class.decode.call(this, source);\r\n            } else {\r\n                source = {\r\n                    object: source.object,\r\n                    header: source.header,\r\n                    content: source.content\r\n                };\r\n                return Class.decode.call(this, source);\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nvar EXPLICIT = function (Class) {\r\n    Class = Class || ANY;\r\n    // Add constracted tag\r\n    return extend(Class, {\r\n        encode: function (format) {\r\n            // Format encoding without CTX header\r\n            var source = Class.method('encode').call(this, format);\r\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\r\n                return source;\r\n            return { object: [source] };\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            if (typeof source === 'string' || source instanceof CryptoOperationData) {\r\n                return Class.decode.call(this, source);\r\n            } else\r\n                return Class.decode.call(this, source.object[0]);\r\n        }\r\n    });\r\n};\r\n\r\nvar CTX = function (number, ContentClass) {\r\n    function CTX() {\r\n        ContentClass.apply(this, arguments);\r\n    }\r\n\r\n    // Create CTX number class with wrapped content class\r\n    return extend(ContentClass, CTX, {\r\n        encode: function (format) {\r\n            var source = ContentClass.method('encode').call(this, format);\r\n            if (typeof source === 'string' || source instanceof CryptoOperationData)\r\n                return source;\r\n            source.tagNumber = number;\r\n            source.tagClass = 0x02;\r\n            source.tagConstructed = source.object instanceof Array;\r\n            return source;\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            // Format decoding without CTX\r\n            assert(source.tagNumber !== undefined &&\r\n              (source.tagClass !== 0x02 || source.tagNumber !== number));\r\n            return ContentClass.decode.call(this, source);\r\n        }\r\n    });\r\n};\r\n\r\nvar ARRAY_OF = function (tagNumber) {\r\n\r\n    return function (ItemClassDef, typeAndValue) {\r\n        // Difininition of item class\r\n        ItemClassDef = ItemClassDef || ANY;\r\n\r\n        // Metaclass definition\r\n        var DEFINE = function (typeSet, defaultType) {\r\n\r\n            // Define item class\r\n            var ItemClass = typeof ItemClassDef === 'function' &&\r\n            typeSet !== undefined ?\r\n              ItemClassDef(typeSet, defaultType) : ItemClassDef;\r\n\r\n            if (typeAndValue) {\r\n                /**\r\n                 * Create class with type and value structure<br><br>\r\n                 *\r\n                 * SET OF attribute and SEQUENCE OF attribute metaclass\r\n                 *\r\n                 * @class GostASN1.Set\r\n                 * @param {Object} object object value\r\n                 */\r\n                var Class = extend(ASN1Object, function (object) {\r\n                    // Constructor - \"matrioshka\"\r\n                    if (this instanceof Class) {\r\n                        // Define hidden items property\r\n                        defineProperty(this, 'items', {\r\n                            writable: true,\r\n                            value: {}\r\n                        });\r\n                        // Call super\r\n                        ASN1Object.call(this, object || {});\r\n                    } else\r\n                        return DEFINE.apply(this, arguments);\r\n                }, {\r\n                    object: {\r\n                        get: function () {\r\n                            // refresh items from object properties\r\n                            this.read();\r\n                            return this;\r\n                        },\r\n                        set: function (object) {\r\n                            if (object instanceof Class) {\r\n                                object.read();\r\n                                this.items = object.items;\r\n                            } else {\r\n                                // Set other object structure\r\n                                var data = {};\r\n                                for (var id in object) {\r\n                                    var item = object[id];\r\n                                    data[id] = this.createItem(item, id);\r\n                                }\r\n                                this.items = data;\r\n                            }\r\n                            // refresh object properties to items\r\n                            this.reset();\r\n                        }\r\n                    },\r\n                    createItem: function (value, type) {\r\n                        if (typeAndValue) {\r\n                            var object = {};\r\n                            object[typeAndValue.typeName] = type;\r\n                            object[typeAndValue.valueName] = value;\r\n                        } else\r\n                            object = value;\r\n                        return new ItemClass(object);\r\n                    },\r\n                    getItemValue: function (id) {\r\n                        var item = this.items[id];\r\n                        return typeAndValue ? item.object[typeAndValue.valueName] : item.object;\r\n                    },\r\n                    setItemValue: function (id, value) {\r\n                        var item = this.items[id];\r\n                        if (typeAndValue)\r\n                            item.object[typeAndValue.valueName] = value;\r\n                        else\r\n                            item.object = value;\r\n                    },\r\n                    isItemType: function (id) {\r\n                        return typeAndValue ? identifiers[id] : !isNaN(parseInt(id));\r\n                    },\r\n                    reset: function () {\r\n                        // remove unused properties\r\n                        var items = this.items;\r\n                        for (var id in this)\r\n                            if (this.hasOwnProperty(id) && !this.items[id] &&\r\n                              this.isItemType(id))\r\n                                delete this[id];\r\n                        // add new properties\r\n                        for (var id in items)\r\n                            this[id] = this.getItemValue(id);\r\n                    },\r\n                    read: function () {\r\n                        var items = this.items;\r\n                        for (var id in this) {\r\n                            if (this.isItemType(id)) {\r\n                                if (!this.items[id]) {\r\n                                    items[id] = this.createItem(this[id], id);\r\n                                    this[id] = this.getItemValue(id);\r\n                                } else if (this.getItemValue(id) !== this[id]) {\r\n                                    this.setItemValue(id, this[id]);\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    /**\r\n                     * Encode the object\r\n                     *\r\n                     * @memberOf GostASN1.Set\r\n                     * @instance\r\n                     * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\r\n                     * @returns {FormatedData}\r\n                     */\r\n                    encode: function (format) {\r\n                        // refresh items from object properties\r\n                        this.read();\r\n                        // repare source\r\n                        var object = this.items, source = [];\r\n                        for (var id in object) {\r\n                            // console.log(id, object[id], 'encoding...');\r\n                            var encoded = object[id].encode(true);\r\n                            if (encoded !== undefined)\r\n                                source.push(encoded);\r\n                        }\r\n                        return encode(format, source, tagNumber, 0, true);\r\n                    },\r\n                    /**\r\n                     * Decode the source to self object\r\n                     *\r\n                     * @memberOf GostASN1.Set\r\n                     * @instance\r\n                     * @param {FormatedData} source Encoded data\r\n                     */\r\n                    decode: function (source) {\r\n                        this.object = this.constructor.decode(source);\r\n                    },\r\n                    /**\r\n                     * Check the object structure\r\n                     *\r\n                     * @memberOf GostASN1.Set\r\n                     * @instance\r\n                     */\r\n                    check: function () {\r\n                        this.constructor.decode(this.encode(true));\r\n                    }\r\n                }, {\r\n                    /**\r\n                     * Encode data values with creating object\r\n                     *\r\n                     * @memberOf GostASN1.Set\r\n                     * @static\r\n                     * @param {Object} object Javascript object to encoding\r\n                     * @param {string} format Encoding format 'DER', 'CER' or 'PEM'\r\n                     * @returns {FormatedData}\r\n                     */\r\n                    encode: function (object, format) {\r\n                        return new this(object).encode(format);\r\n                    },\r\n                    /**\r\n                     * Decode source and create object\r\n                     *\r\n                     * @memberOf GostASN1.Set\r\n                     * @static\r\n                     * @param {FormatedData} source Encoded data\r\n                     * @returns {GostASN1.Sequence}\r\n                     *\r\n                     */\r\n                    decode: function (source) {\r\n                        // Decode structure\r\n                        source = decode(source, tagNumber, 0, true);\r\n                        var result = new this(), data = result.items = {};\r\n                        for (var i = 0, n = source.length; i < n; i++) {\r\n                            var item = ItemClass.decode(source[i]);\r\n                            var id = typeAndValue ? item.object[typeAndValue.typeName] : i;\r\n                            data[id] = item;\r\n                        }\r\n                        result.reset();\r\n                        return result;\r\n                    }\r\n                });\r\n\r\n                return Class;\r\n            } else {\r\n                // Create array class\r\n                var ArrayClass = extend(ASN1Object, function (object) {\r\n                    // Constructor - \"matrioshka\"\r\n                    if (this instanceof ArrayClass) {\r\n                        // Define hidden items property\r\n                        defineProperties(this, {\r\n                            items: {\r\n                                writable: true,\r\n                                value: []\r\n                            },\r\n                            values: {\r\n                                writable: true,\r\n                                value: []\r\n                            }\r\n                        });\r\n                        // Call super\r\n                        ASN1Object.call(this, object || []);\r\n                    } else\r\n                        return DEFINE.apply(this, arguments);\r\n                }, {\r\n                    object: {\r\n                        get: function () {\r\n                            // refresh items from object properties\r\n                            this.read();\r\n                            return this.values;\r\n                        },\r\n                        set: function (object) {\r\n                            if (object instanceof ArrayClass) {\r\n                                object.read();\r\n                                this.items = object.items;\r\n                            } else {\r\n                                // Set other object structure\r\n                                var data = [];\r\n                                for (var i = 0, n = object.length; i < n; i++)\r\n                                    data[i] = new ItemClass(object[i]);\r\n                                this.items = data;\r\n                            }\r\n                            // refresh object properties to items\r\n                            this.reset();\r\n                        }\r\n                    },\r\n                    encode: function (format) {\r\n                        // refresh items from object properties\r\n                        this.read();\r\n                        // repare source\r\n                        var data = this.items, source = [];\r\n                        for (var i = 0, n = data.length; i < n; i++) {\r\n                            var encoded = data[i].encode(true);\r\n                            if (encoded !== undefined)\r\n                                source.push(encoded);\r\n                        }\r\n                        return encode(format, source, tagNumber, 0, true);\r\n                    },\r\n                    decode: function (source) {\r\n                        this.object = this.constructor.decode(source);\r\n                    },\r\n                    check: function () {\r\n                        this.constructor.decode(this.encode(true));\r\n                    },\r\n                    reset: function () {\r\n                        // remove unused properties\r\n                        for (var i = 0, n = this.items.length; i < n; i++)\r\n                            this.values.push(this.items[i].object);\r\n                    },\r\n                    read: function () {\r\n                        var items = this.items, values = this.values;\r\n                        for (var i = 0, n = values.length; i < n; i++) {\r\n                            if (!this.items[i]) {\r\n                                items[i] = new ItemClass(values[i]);\r\n                                values[i] = items[i].object;\r\n                            } else if (items[i].object !== values[i])\r\n                                items[i].object = values[i];\r\n                        }\r\n                    }\r\n                }, {\r\n                    encode: function (object, format) {\r\n                        return new this(object).encode(format);\r\n                    },\r\n                    decode: function (source) {\r\n                        source = decode(source, tagNumber, 0, true);\r\n                        var result = new this();\r\n                        result.items = [];\r\n                        for (var i = 0, n = source.length; i < n; i++)\r\n                            result.items.push(ItemClass.decode(source[i]));\r\n                        result.reset();\r\n                        return result;\r\n                    }\r\n                });\r\n\r\n                return ArrayClass;\r\n            }\r\n        };\r\n        return DEFINE(); // Create simple class w/o any parameters\r\n    };\r\n};\r\n\r\nvar SEQUENCE_OF = ARRAY_OF(0x10);\r\n\r\nvar SET_OF = ARRAY_OF(0x11);\r\n\r\nvar ENCLOSURE = function (BaseClass, modifier) {\r\n    if (modifier) {\r\n        var Class = extend(ASN1Object, {\r\n            object: {\r\n                get: function () {\r\n                    if (this.item)\r\n                        return modifier.decode(this.item.object);\r\n                    else\r\n                        return undefined;\r\n                },\r\n                set: function (object) {\r\n                    if (object !== undefined)\r\n                        this.item = new BaseClass(modifier.encode(object));\r\n                    else\r\n                        delete this.item;\r\n                }\r\n            },\r\n            encode: function (format) {\r\n                return this.item.encode(format);\r\n            }\r\n        }, {\r\n            decode: function (source) {\r\n                var result = new this();\r\n                result.item = BaseClass.decode(source);\r\n                return result;\r\n            }\r\n        });\r\n        for (var name in BaseClass)\r\n            if (!Class[name])\r\n                Class[name] = BaseClass[name];\r\n        return Class;\r\n    } else\r\n        return BaseClass;\r\n};\r\n\r\nvar SET_OF_SINGLE = function (ItemClass) {\r\n\r\n    var Class = ENCLOSURE(SET_OF(ItemClass), {\r\n        encode: function (item) {\r\n            return [item];\r\n        },\r\n        decode: function (item) {\r\n            return item[0];\r\n        }\r\n    });\r\n    return Class;\r\n};\r\n\r\nvar CHOICE = function (structure, define) {\r\n\r\n    return extend(ASN1Object, {\r\n        object: {\r\n            get: function () {\r\n                return this.item && this.item.object;\r\n            },\r\n            set: function (object) {\r\n                // Try to find appropriate type in structure\r\n                if (object instanceof ASN1Object) {\r\n                    for (var name in structure)\r\n                        if (object instanceof structure[name]) {\r\n                            this.item = object;\r\n                            return;\r\n                        }\r\n                }\r\n                // Define class\r\n                var name = typeof define === 'function' ? define(object) : define;\r\n                assert(!name || !structure[name]);\r\n                object = new structure[name](object);\r\n                this.item = object;\r\n            }\r\n        },\r\n        encode: function (format) {\r\n            // Already in class\r\n            return this.item.encode(format);\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            // Try to find class structure\r\n            for (var name in structure) {\r\n                try {\r\n                    var item = structure[name].decode(source);\r\n                    if (item !== undefined)\r\n                        return new this(item);\r\n                } catch (e) {\r\n                }\r\n            }\r\n            assert(true);\r\n        }\r\n    });\r\n};\r\n\r\nvar ENCAPSULATES = function (WrappedClass) {\r\n    WrappedClass = WrappedClass || ANY;\r\n    // BER Encode/Decode values\r\n    return extend(WrappedClass, {\r\n        encode: function () {\r\n            return BER.encode(WrappedClass.method('encode').call(this, true));\r\n        }\r\n    }, {\r\n        encode: function (object, format) {\r\n            return new this(object).encode(format);\r\n        },\r\n        decode: function (source) {\r\n            return WrappedClass.decode.call(this, BER.decode(source));\r\n        }\r\n    });\r\n};\r\n\r\nvar DEFAULT = function (Class, optional) {\r\n    Class = Class || ANY;\r\n    return extend(Class, {\r\n        encode: function (format) {\r\n            if (this.object === optional)\r\n                return undefined;\r\n            return Class.method('encode').call(this, format);\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            if (source === undefined)\r\n                return new this(optional);\r\n            else\r\n                try {\r\n                    return Class.decode.call(this, source);\r\n                } catch (e) {\r\n                    return undefined;\r\n                }\r\n        }\r\n    });\r\n};\r\n\r\nvar OPTIONAL = function (Class) {\r\n    Class = Class || ANY;\r\n    return extend(Class, {}, {\r\n        decode: function (source) {\r\n            if (source === undefined)\r\n                return undefined;\r\n            else\r\n                try {\r\n                    return Class.decode.call(this, source);\r\n                } catch (e) {\r\n                    return undefined;\r\n                }\r\n        }\r\n    });\r\n};\r\n\r\nvar DEFAULT_NULL = function (Class, optional) {\r\n    Class = Class || ANY;\r\n    return extend(Class, {\r\n        encode: function (format) {\r\n            if (this.object === optional)\r\n                return new NULL(null).encode(format);\r\n            return Class.method('encode').call(this, format);\r\n        }\r\n    }, {\r\n        decode: function (source) {\r\n            if (source === undefined)\r\n                return undefined;\r\n            else if (source === null ||\r\n              (source.tagNumber === 0x05 && source.tagClass === 0))\r\n                return new this(optional);\r\n            else\r\n                try {\r\n                    return Class.decode.call(this, source);\r\n                } catch (e) {\r\n                    return undefined;\r\n                }\r\n        }\r\n    });\r\n};\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate Version, Name, Attributes, Validity\r\n     *\r\n     * http://tools.ietf.org/html/rfc5280\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar DirectoryString = CHOICE({\r\n    teletexString: TeletexString,\r\n    printableString: PrintableString,\r\n    universalString: UniversalString,\r\n    utf8String: UTF8String,\r\n    bmpString: BMPString,\r\n    numericString: NumericString\r\n}, function (value) {\r\n    // PrintableString - for characters and symbols with no spaces, overrise UTF8String\r\n    return /^[A-Za-z0-9\\.@\\+\\-\\:\\=\\\\\\/\\?\\!\\#\\$\\%\\^\\&\\*\\(\\)\\[\\]\\{\\}\\>\\<\\|\\~]*$/.test(value) ? 'printableString' : 'utf8String';\r\n});\r\n\r\nvar Time = CHOICE({\r\n    utcTime: UTCTime,\r\n    generalTime: GeneralizedTime\r\n}, function (value) {\r\n    return value.getYear() >= 2050 ? 'generalTime' : 'utcTime';\r\n});\r\n\r\n// Attribute\r\nvar AttributeType = OBJECT_IDENTIFIER;\r\n\r\nvar AttributeValue = ANY;\r\n\r\nvar AttributeTypeAndValue = ATTRIBUTE({\r\n    type: AttributeType,\r\n    value: AttributeValue\r\n});\r\n\r\nvar typeAndValue = {\r\n    typeName: 'type',\r\n    valueName: 'value'\r\n};\r\n\r\n/**\r\n * X.501 type Name\r\n * The Name describes a hierarchical name composed of attributes, such\r\n * as country name, and corresponding values, such as US.  The type of\r\n * the component AttributeValue is determined by the AttributeType; in\r\n * general it will be a DirectoryString.\r\n\r\n * The DirectoryString type is defined as a choice of PrintableString,\r\n * TeletexString, BMPString, UTF8String, and UniversalString.  The\r\n * UTF8String encoding [RFC 2279] is the preferred encoding, and all\r\n * certificates issued after December 31, 2003 MUST use the UTF8String\r\n * encoding of DirectoryString.\r\n *\r\n * Standard sets of attributes have been defined in the X.500 series of\r\n * specifications [X.520].  Implementations of this specification MUST\r\n * be prepared to receive the following standard attribute types in\r\n * issuer and subject (section 4.1.2.6) names:\r\n *  <ul>\r\n *      <li>country,</li>\r\n *      <li>organization,</li>\r\n *      <li>organizational-unit,</li>\r\n *      <li>distinguished name qualifier,</li>\r\n *      <li>state or province name,</li>\r\n *      <li>common name (e.g., \"Susan Housley\"), and</li>\r\n *      <li>serial number.</li>\r\n *  </ul>\r\n * In addition, implementations of this specification SHOULD be prepared\r\n * to receive the following standard attribute types in issuer and\r\n * subject names:\r\n *  <ul>\r\n *      <li>locality,</li>\r\n *      <li>title,</li>\r\n *      <li>surname,</li>\r\n *      <li>given name,</li>\r\n *      <li>initials,</li>\r\n *      <li>pseudonym, and</li>\r\n *      <li>generation qualifier (e.g., \"Jr.\", \"3rd\", or \"IV\").</li>\r\n *  </ul>\r\n The syntax for type Name:\r\n *  <pre>\r\n *  Name ::= CHOICE {\r\n     *    rdnSequence RDNSequence }\r\n *\r\n *  RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\r\n *\r\n *  RelativeDistinguishedName ::=\r\n *    SET OF AttributeTypeAndValue\r\n *\r\n *  AttributeTypeAndValue ::= SEQUENCE {\r\n     *    type     AttributeType,\r\n     *    value    AttributeValue }\r\n *\r\n *  AttributeType ::= OBJECT IDENTIFIER\r\n *\r\n *  AttributeValue ::= ANY DEFINED BY AttributeType\r\n *\r\n *  DirectoryString ::= CHOICE {\r\n     *        teletexString           TeletexString (SIZE (1..MAX)),\r\n     *        printableString         PrintableString (SIZE (1..MAX)),\r\n     *        universalString         UniversalString (SIZE (1..MAX)),\r\n     *        utf8String              UTF8String (SIZE (1..MAX)),\r\n     *        bmpString               BMPString (SIZE (1..MAX)) }\r\n *  </pre>\r\n * @class GostASN1.Name\r\n */\r\nvar RelativeDistinguishedName = SET_OF_SINGLE(AttributeTypeAndValue({\r\n    serialName: PrintableString,\r\n    countryName: PrintableString,\r\n    dnQualifier: PrintableString,\r\n    emailAddress: IA5String,\r\n    domainComponent: IA5String,\r\n    SNILS: NumericString,\r\n    OGRN: NumericString,\r\n    INN: NumericString\r\n}, DirectoryString));\r\n\r\nvar RDNSequence = SEQUENCE_OF(RelativeDistinguishedName, typeAndValue)();\r\n\r\nvar Name = CHOICE({\r\n    // only one possibility for now\r\n    rdnSequence: RDNSequence\r\n}, 'rdnSequence');\r\n\r\n/**\r\n * Validity\r\n * @class GostASN1.Validity\r\n * @extends GostASN1.Sequence\r\n */\r\nvar Validity = COMBINE(SEQUENCE({\r\n    notBefore: Time,\r\n    notAfter: Time\r\n}));\r\n\r\nvar Version = INTEGER;\r\n\r\nvar Attribute = ATTRIBUTE({\r\n    type: OBJECT_IDENTIFIER,\r\n    value: ANY\r\n});\r\n\r\n/**\r\n * Type and Value Attributes <br>\r\n *\r\n * Suggested naming attributes: Definition of the following\r\n * information object set may be augmented to meet local\r\n * requirements.  Note that deleting members of the set may\r\n * prevent interoperability with conforming implementations.\r\n * presented in pairs: the AttributeType followed by the type\r\n * definition for the corresponding AttributeValue\r\n *\r\n * @class GostASN1.Attributes\r\n * @extends GostASN1.Set\r\n */\r\nvar Attributes = SET_OF(Attribute, typeAndValue);\r\n\r\nvar AttributeSequence = SEQUENCE_OF(Attribute, typeAndValue);\r\n// </editor-fold>\r\n\r\n/*\r\n     * Algorithm identifiers\r\n     *\r\n     * http://tools.ietf.org/html/rfc3279\r\n     * http://tools.ietf.org/html/rfc4357\r\n     * http://tools.ietf.org/html/rfc2898\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar FieldElement = INTEGER;\r\nvar Curve = SEQUENCE({\r\n    a: FieldElement,\r\n    b: FieldElement,\r\n    seed: OPTIONAL(BIT_STRING)\r\n});\r\n\r\nvar ECPoint = OCTET_STRING(extend(ASN1Object, {\r\n    encode: function () {\r\n        var value = this.object;\r\n        var len = Math.max(npw2(value.x.length - 2), npw2(value.y.length - 2)) / 2,\r\n          r = new Uint8Array(2 * len + 1);\r\n        r[0] = 0x04;\r\n        r.set(new Uint8Array(SInt.decode(value.x, false, len)), 1); // x\r\n        r.set(new Uint8Array(SInt.decode(value.y, false, len)), len + 1); // y\r\n        return r.buffer;\r\n    }\r\n}, {\r\n    decode: function (value) {\r\n        var len = (value.byteLength - 1) / 2;\r\n        return new this({\r\n            x: SInt.encode(new Uint8Array(value, 1, len)),\r\n            y: SInt.encode(new Uint8Array(value, len + 1, len))\r\n        });\r\n    }\r\n}));\r\n\r\nvar FieldID = SEQUENCE({\r\n    fieldType: OBJECT_IDENTIFIER,\r\n    parameters: INTEGER\r\n});\r\n\r\nvar ECParameters = SEQUENCE({\r\n    version: Version, // version is always 1\r\n    fieldID: FieldID, // identifies the finite field over which the curve is defined\r\n    curve: Curve, // coefficients a and b of the elliptic curve\r\n    base: ECPoint, // specifies the base point P on the elliptic curve\r\n    order: INTEGER, // the order n of the base point\r\n    cofactor: OPTIONAL(INTEGER)\r\n}); // The integer h = #E(Fq)/n\r\n\r\nvar GostR3410Parameters = SEQUENCE({\r\n    publicKeyParamSet: OBJECT_IDENTIFIER,\r\n    digestParamSet: OBJECT_IDENTIFIER,\r\n    encryptionParamSet: OPTIONAL(OBJECT_IDENTIFIER)\r\n});\r\n\r\nvar GostR3411Parameters = DEFAULT_NULL(OBJECT_IDENTIFIER, 'id-GostR3411-94-CryptoProParamSet');\r\n\r\nvar ECDHParameters = CHOICE({\r\n    namedParameters: OBJECT_IDENTIFIER,\r\n    ecParameters: ECParameters,\r\n    implicitly: OPTIONAL(NULL)\r\n}, function (value) {\r\n    return typeof value === 'string' || value instanceof String ?\r\n      'namedParameters' : 'ecParameters';\r\n});\r\n\r\nvar Algorithm = function (paramType, modifier) {\r\n    return ENCLOSURE(SEQUENCE({\r\n        algorithm: OBJECT_IDENTIFIER,\r\n        parameters: OPTIONAL(paramType)\r\n    }), modifier);\r\n};\r\n\r\nvar AlgorithmIdentifier = (function () {\r\n\r\n    var DefaultAlgorithm = Algorithm(ANY),\r\n      Class = extend(ASN1Object, function (object) {\r\n          if (this instanceof Class)\r\n              Class.super.apply(this, arguments);\r\n          else\r\n              return DEFINE(object);\r\n      }, {\r\n          encode: function (format) {\r\n              return new DefaultAlgorithm(this.object).encode(format);\r\n          }\r\n      }, {\r\n          decode: function (source) {\r\n              return new this(DefaultAlgorithm.decode(source).object);\r\n          }\r\n      });\r\n\r\n    var DEFINE = function (algorithmSet) {\r\n\r\n        return extend(ASN1Object, {\r\n            object: {\r\n                get: function () {\r\n                    if (this.item)\r\n                        return this.item.object;\r\n                    else\r\n                        return undefined;\r\n                },\r\n                set: function (object) {\r\n                    if (object) {\r\n                        var ItemClass = algorithmSet[object.id];\r\n                        if (!ItemClass)\r\n                            throw new Error('Algorithm not supported');\r\n                        this.item = new ItemClass(object);\r\n                    } else\r\n                        delete this.item;\r\n                }\r\n            },\r\n            encode: function (format) {\r\n                return this.item.encode(format);\r\n            }\r\n        }, {\r\n            decode: function (source) {\r\n                // Decode PEM\r\n                if (typeof source === 'string')\r\n                    source = PEM.decode(source, undefined, false);\r\n                // Decode binary data\r\n                if (source instanceof CryptoOperationData)\r\n                    source = BER.decode(source);\r\n                var ItemClass = algorithmSet[names[source.object[0].object]];\r\n                if (ItemClass) {\r\n                    var result = new this();\r\n                    result.item = ItemClass.decode(source);\r\n                    return result;\r\n                } else\r\n                    throw new Error('Algorithm not supported');\r\n            }\r\n        });\r\n    };\r\n\r\n    return Class;\r\n})();\r\n\r\nvar ECDHKeyAlgorithm = Algorithm(ECDHParameters, {\r\n    encode: function (value) {\r\n        var params;\r\n        if (typeof value.namedCurve === 'string')\r\n            params = attributes['namedCurve'][value.namedCurve];\r\n        else\r\n            params = {\r\n                version: 1,\r\n                fieldID: {\r\n                    fieldType: 'id-prime-Field',\r\n                    parameters: value.curve.p\r\n                },\r\n                curve: {\r\n                    a: value.curve.a,\r\n                    b: value.curve.b\r\n                },\r\n                base: {\r\n                    x: value.curve.x,\r\n                    y: value.curve.y\r\n                },\r\n                order: value.curve.q,\r\n                cofactor: 1\r\n            };\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: params\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var params = value.parameters,\r\n          result = algorithms[value.algorithm];\r\n        if (typeof params === 'string' || params instanceof String) {\r\n            result = expand(result, parameters[params]);\r\n        } else if (typeof params === 'object') {\r\n            result = expand(result, {\r\n                curve: {\r\n                    p: params.fieldID.parameters,\r\n                    a: params.curve.a,\r\n                    b: params.curve.b,\r\n                    x: params.base.x,\r\n                    y: params.base.y,\r\n                    q: params.order\r\n                }\r\n            });\r\n        } else\r\n            throw new DataError('Invalid key paramters');\r\n        return result;\r\n    }\r\n});\r\n\r\nvar GostKeyAlgorithm = Algorithm(GostR3410Parameters, {\r\n    encode: function (value) {\r\n        var paramName = value.namedCurve ? 'namedCurve' : 'namedParam',\r\n          sBox = (value.name.indexOf('-94') >= 0 || value.name.indexOf('-2001') >= 0 ||\r\n            value.version === 1994 || value.version === 2001) ? value.sBox || 'D-A' :\r\n            (value.name.indexOf('-512') >= 0 || value.length === 512) ? 'D-512' : 'D-256';\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                publicKeyParamSet: attributes[paramName][value[paramName]],\r\n                digestParamSet: attributes['sBox'][sBox],\r\n                encryptionParamSet: value.encParams && value.encParams.sBox ?\r\n                  attributes['sBox'][value.encParams.sBox] : undefined\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var params = value.parameters,\r\n          algorithm = expand(algorithms[value.algorithm],\r\n            parameters[params.publicKeyParamSet],\r\n            parameters[params.digestParamSet]);\r\n        if (params.encryptionParamSet)\r\n            algorithm.encParams = parameters[params.encryptionParamSet];\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar AlgorithmWithNoParam = Algorithm(ANY, {\r\n    encode: function (value) {\r\n        return { algorithm: value.id };\r\n    },\r\n    decode: function (value) {\r\n        return algorithms[value.algorithm];\r\n    }\r\n});\r\n\r\nvar AlgorithmWithNullParam = Algorithm(NULL, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: null\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        return algorithms[value.algorithm];\r\n    }\r\n});\r\n\r\nvar Gost341194DigestAlgorithm = Algorithm(GostR3411Parameters, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: attributes['sBox'][value.sBox || (value.hash && value.hash.sBox) || 'D-A']\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]),\r\n          parameter = parameters[value.parameters];\r\n        if (algorithm.hash)\r\n            algorithm.hash = expand(algorithm.hash, parameter);\r\n        else\r\n            algorithm = expand(algorithm, parameter);\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar KeyAlgorithmIdentifier = AlgorithmIdentifier({\r\n    ecdsa: ECDHKeyAlgorithm,\r\n    noSignature: AlgorithmWithNullParam,\r\n    rsaEncryption: AlgorithmWithNullParam,\r\n    'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\r\n    'id-GostR3410-2001': GostKeyAlgorithm,\r\n    'id-GostR3410-94': GostKeyAlgorithm,\r\n    'id-GostR3410-2001DH': GostKeyAlgorithm,\r\n    'id-GostR3410-94DH': GostKeyAlgorithm,\r\n    'id-tc26-gost3410-12-256': GostKeyAlgorithm,\r\n    'id-tc26-gost3410-12-512': GostKeyAlgorithm,\r\n    'id-tc26-agreement-gost-3410-12-256': GostKeyAlgorithm,\r\n    'id-tc26-agreement-gost-3410-12-512': GostKeyAlgorithm,\r\n    'id-sc-gost28147-gfb': AlgorithmWithNoParam,\r\n    'id-Gost28147-89': AlgorithmWithNoParam\r\n});\r\n\r\nvar SignatureAlgorithmIdentifier = AlgorithmIdentifier({\r\n    noSignature: AlgorithmWithNullParam,\r\n    rsaEncryption: AlgorithmWithNullParam,\r\n    sha1withRSAEncryption: AlgorithmWithNullParam,\r\n    sha256withRSAEncryption: AlgorithmWithNullParam,\r\n    sha384withRSAEncryption: AlgorithmWithNullParam,\r\n    sha512withRSAEncryption: AlgorithmWithNullParam,\r\n    'ecdsa': AlgorithmWithNoParam,\r\n    'ecdsa-with-SHA1': AlgorithmWithNoParam,\r\n    'ecdsa-with-SHA256': AlgorithmWithNoParam,\r\n    'ecdsa-with-SHA384': AlgorithmWithNoParam,\r\n    'ecdsa-with-SHA512': AlgorithmWithNoParam,\r\n    'id-GostR3410-94': AlgorithmWithNullParam,\r\n    'id-GostR3410-2001': AlgorithmWithNullParam,\r\n    'id-GostR3411-94-with-GostR3410-2001': AlgorithmWithNoParam,\r\n    'id-GostR3411-94-with-GostR3410-94': AlgorithmWithNoParam,\r\n    'id-tc26-gost3410-12-256': AlgorithmWithNullParam,\r\n    'id-tc26-gost3410-12-512': AlgorithmWithNullParam,\r\n    'id-tc26-signwithdigest-gost3410-12-94': AlgorithmWithNoParam,\r\n    'id-tc26-signwithdigest-gost3410-12-256': AlgorithmWithNoParam,\r\n    'id-tc26-signwithdigest-gost3410-12-512': AlgorithmWithNoParam,\r\n    'id-sc-gostR3410-94': AlgorithmWithNullParam,\r\n    'id-sc-gostR3410-2001': AlgorithmWithNullParam,\r\n    'id-sc-gostR3411-94-with-gostR3410-94': AlgorithmWithNullParam,\r\n    'id-sc-gostR3411-94-with-gostR3410-2001': AlgorithmWithNullParam\r\n});\r\n\r\nvar DigestAlgorithmIdentifier = AlgorithmIdentifier({\r\n    sha1: AlgorithmWithNoParam,\r\n    sha256: AlgorithmWithNullParam,\r\n    sha384: AlgorithmWithNullParam,\r\n    sha512: AlgorithmWithNullParam,\r\n    'id-GostR3411-94': Gost341194DigestAlgorithm,\r\n    'id-tc26-gost3411-94': Gost341194DigestAlgorithm,\r\n    'id-tc26-gost3411-12-256': AlgorithmWithNullParam,\r\n    'id-tc26-gost3411-12-512': AlgorithmWithNullParam,\r\n    'id-sc-gostR3411-94': AlgorithmWithNoParam\r\n});\r\n\r\nvar Gost2814789Key = OCTET_STRING; //(SIZE (32))\r\n\r\nvar Gost2814789MAC = OCTET_STRING; // (SIZE (1..4))\r\n\r\nvar Gost2814789ParamSet = OBJECT_IDENTIFIER;\r\n\r\nvar Gost2814789IV = OCTET_STRING; // (SIZE (8))\r\n\r\nvar Gost2814789Parameters = SEQUENCE({\r\n    iv: Gost2814789IV,\r\n    encryptionParamSet: Gost2814789ParamSet\r\n});\r\n\r\nvar Gost2814789KeyWrapParameters = SEQUENCE({\r\n    encryptionParamSet: Gost2814789ParamSet,\r\n    ukm: OPTIONAL(OCTET_STRING)\r\n}); // (SIZE (8)) must be absent in key agreement\r\n\r\nvar Gost2814789Algorithm = Algorithm(Gost2814789Parameters, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                iv: value.iv,\r\n                encryptionParamSet: attributes['sBox'][value.sBox || 'E-A']\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm],\r\n          parameters[value.parameters.encryptionParamSet]);\r\n        algorithm.iv = value.parameters.iv;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar SCGostAlgorithm = Algorithm(Gost2814789IV, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: value.iv\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.iv = value.parameters || new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar GostKeyWrapAlgorithm = Algorithm(Gost2814789KeyWrapParameters, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                encryptionParamSet: attributes['sBox'][value.sBox || 'E-A'],\r\n                ukm: value.ukm\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm],\r\n          parameters[value.parameters.encryptionParamSet]);\r\n        if (value.parameters.ukm)\r\n            algorithm.ukm = value.parameters.ukm;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar KeyWrapAlgorithmIdentifier = AlgorithmIdentifier({\r\n    'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm,\r\n    'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm\r\n});\r\n\r\nvar GostKeyAgreementAlgorithm = Algorithm(KeyWrapAlgorithmIdentifier, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: value.wrapping\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.wrapping = value.parameters;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar BaseEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\r\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\r\n    'id-Gost28147-89': Gost2814789Algorithm\r\n});\r\n\r\nvar MessageAuthenticationCodeAlgorithm = AlgorithmIdentifier({\r\n    'id-Gost28147-89-MAC': Gost2814789Parameters,\r\n    'id-HMACGostR3411-94': Gost341194DigestAlgorithm,\r\n    'id-tc26-hmac-gost-3411-12-256': Gost341194DigestAlgorithm,\r\n    'id-tc26-hmac-gost-3411-12-512': Gost341194DigestAlgorithm,\r\n    'hmacWithSHA1': AlgorithmWithNoParam,\r\n    'hmacWithSHA224': AlgorithmWithNoParam,\r\n    'hmacWithSHA256': AlgorithmWithNoParam,\r\n    'hmacWithSHA384': AlgorithmWithNoParam,\r\n    'hmacWithSHA512': AlgorithmWithNoParam,\r\n    'id-sc-gost28147-mac': AlgorithmWithNoParam,\r\n    'id-sc-hmacWithGostR3411': AlgorithmWithNoParam\r\n});\r\n\r\n// rfc2898 PKCS #5: Password-Based Cryptography Specification\r\n// PBKDF2\r\nvar PBKDF2params = SEQUENCE({\r\n    salt: CHOICE({\r\n        specified: OCTET_STRING,\r\n        otherSource: AlgorithmIdentifier\r\n    }, function (value) {\r\n        return isBinary(value) ? 'specified' : 'otherSource';\r\n    }),\r\n    iterationCount: INTEGER,\r\n    keyLength: OPTIONAL(INTEGER),\r\n    prf: MessageAuthenticationCodeAlgorithm\r\n});\r\n\r\nvar PBKDF2Algorithm = Algorithm(PBKDF2params, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                salt: value.salt,\r\n                iterationCount: value.iterations,\r\n                prf: value.hmac\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.salt = value.parameters.salt;\r\n        algorithm.iterations = value.parameters.iterationCount;\r\n        algorithm.hmac = value.parameters.prf;\r\n        algorithm.hash = algorithm.hmac.hash;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar KeyDerivationAlgorithmIdentifier = AlgorithmIdentifier({\r\n    'PBKDF2': PBKDF2Algorithm\r\n});\r\n\r\nvar PBEParameter = SEQUENCE({\r\n    salt: OCTET_STRING,\r\n    iterationCount: INTEGER\r\n});\r\n\r\nvar PBES1Algorithm = Algorithm(PBEParameter, {\r\n    paramType: PBEParameter,\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                salt: value.derivation.salt,\r\n                iterationCount: value.derivation.iterations\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.derivation = expand(algorithm.derivation,\r\n          { salt: value.parameters.salt, iterations: value.parameters.iterationCount });\r\n        return algorithm;\r\n    }\r\n});\r\n\r\n// PBES2\r\nvar PBES2params = SEQUENCE({\r\n    keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBES2-KDFs}},\r\n    encryptionScheme: BaseEncryptionAlgorithmIdentifier\r\n}); // {{PBES2-Encs}}\r\n\r\nvar PBES2Algorithm = Algorithm(PBES2params, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                keyDerivationFunc: value.derivation,\r\n                encryptionScheme: value.encryption\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.derivation = value.parameters.keyDerivationFunc;\r\n        algorithm.encryption = value.parameters.encryptionScheme;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar PasswordEncryptionAlgorithmIndentifier = AlgorithmIdentifier({\r\n    // PBES1\r\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\r\n    // PKCS12 PBES1\r\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\r\n    'pbeUnknownGost': PBES1Algorithm,\r\n    // PBES2\r\n    'PBES2': PBES2Algorithm\r\n});\r\n\r\nvar KeyEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\r\n    ecdsa: ECDHKeyAlgorithm,\r\n    rsaEncryption: AlgorithmWithNullParam,\r\n    // Base encryption\r\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\r\n    'id-Gost28147-89': Gost2814789Algorithm,\r\n    // Key transport algorithms\r\n    'id-sc-gostR3410-2001': ECDHKeyAlgorithm,\r\n    'id-GostR3410-2001': GostKeyAlgorithm,\r\n    'id-GostR3410-94': GostKeyAlgorithm,\r\n    'id-tc26-gost3410-12-256': GostKeyAlgorithm,\r\n    'id-tc26-gost3410-12-512': GostKeyAlgorithm,\r\n    // Key agreement algorithms\r\n    'id-GostR3410-94-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\r\n    'id-GostR3410-2001-CryptoPro-ESDH': GostKeyAgreementAlgorithm,\r\n    'id-tc26-agreement-gost-3410-12-256': GostKeyAgreementAlgorithm,\r\n    'id-tc26-agreement-gost-3410-12-512': GostKeyAgreementAlgorithm,\r\n    'id-sc-r3410-ESDH-r3411kdf': AlgorithmWithNullParam,\r\n    // Key encryption key algorithms\r\n    'id-Gost28147-89-None-KeyWrap': GostKeyWrapAlgorithm, // Add ukm to algorithm\r\n    'id-Gost28147-89-CryptoPro-KeyWrap': GostKeyWrapAlgorithm,\r\n    'id-sc-cmsGostWrap': AlgorithmWithNoParam, // SC don't use ukm\r\n    'id-sc-cmsGost28147Wrap': AlgorithmWithNoParam,\r\n    // Password based encryption\r\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\r\n    // PKCS12 PBES1\r\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\r\n    'pbeUnknownGost': PBES1Algorithm,\r\n    // PBES2\r\n    'PBES2': PBES2Algorithm\r\n});\r\n\r\nvar PBMAC1params = SEQUENCE({\r\n    keyDerivationFunc: KeyDerivationAlgorithmIdentifier, // {{PBMAC1-KDFs}},\r\n    messageAuthScheme: MessageAuthenticationCodeAlgorithm\r\n}); // {{PBMAC1-MACs}}\r\n\r\nvar PasswordMACAlgorithm = Algorithm(PBMAC1params, {\r\n    encode: function (value) {\r\n        return {\r\n            algorithm: value.id,\r\n            parameters: {\r\n                keyDerivationFunc: value.derivation,\r\n                messageAuthScheme: value.hmac\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var algorithm = expand(algorithms[value.algorithm]);\r\n        algorithm.derivation = value.parameters.keyDerivationFunc;\r\n        algorithm.hmac = value.parameters.messageAuthScheme;\r\n        return algorithm;\r\n    }\r\n});\r\n\r\nvar PasswordMACAlgorithmIdentifier = AlgorithmIdentifier({\r\n    'PBMAC1': PasswordMACAlgorithm\r\n});\r\n\r\nvar ContentEncryptionAlgorithmIdentifier = AlgorithmIdentifier({\r\n    // Base encryption\r\n    'id-sc-gost28147-gfb': SCGostAlgorithm,\r\n    'id-Gost28147-89': Gost2814789Algorithm,\r\n    // Password based encryption\r\n    'pbeWithSHAAndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAndAES256-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES128-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES192-CBC': PBES1Algorithm,\r\n    'pbeWithSHA256AndAES256-CBC': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147': PBES1Algorithm,\r\n    'id-sc-pbeWithGost3411AndGost28147CFB': PBES1Algorithm,\r\n    // PKCS12 PBES1\r\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd128BitRC2-CBC': PBES1Algorithm,\r\n    'pbeWithSHAAnd40BitRC2-CBC': PBES1Algorithm,\r\n    'pbeUnknownGost': PBES1Algorithm,\r\n    // PBES2\r\n    'PBES2': PBES2Algorithm\r\n});\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Public Key Info\r\n     *\r\n     * http://tools.ietf.org/html/rfc5280\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar KeyData = ENCLOSURE;\r\n\r\nvar DHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(INTEGER)), {\r\n    encode: function (value) {\r\n        return Int16.encode(swapBytes(value));\r\n    },\r\n    decode: function (value) {\r\n        return swapBytes(Int16.decode(value));\r\n    }\r\n});\r\n\r\nvar ECDHPublicKey = KeyData(BIT_STRING(ENCAPSULATES(OCTET_STRING)), {\r\n    encode: function (value) {\r\n        var r = new Uint8Array(value.byteLength + 1),\r\n          d = swapBytes(value),\r\n          len = value.byteLength / 2;\r\n        r[0] = 0x04; // type hex;\r\n        r.set(new Uint8Array(d, len, len), 1); // x\r\n        r.set(new Uint8Array(d, 0, len), len + 1); // y\r\n        return r.buffer;\r\n    },\r\n    decode: function (value) {\r\n        assert((value.byteLength & 1) === 0);\r\n        var d = new Uint8Array(value.byteLength - 1),\r\n          len = d.byteLength / 2;\r\n        d.set(new Uint8Array(value, len + 1, len), 0); // y\r\n        d.set(new Uint8Array(value, 1, len), len); // x\r\n        return swapBytes(d);\r\n    }\r\n});\r\n\r\nvar GostR3410PublicKey = BIT_STRING(ENCAPSULATES(OCTET_STRING));\r\n\r\n/**\r\n * Subject Public Key Info Syntax X.509\r\n * <pre>\r\n *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\r\n     *      algorithm            AlgorithmIdentifier,\r\n     *      subjectPublicKey     BIT STRING  }\r\n *\r\n *  AlgorithmIdentifier  ::=  SEQUENCE  {\r\n     *      algorithm               OBJECT IDENTIFIER,\r\n     *      parameters              ANY DEFINED BY algorithm OPTIONAL  }\r\n -- contains a value of the type\r\n -- registered for use with the\r\n -- algorithm object identifier value\r\n * </pre>\r\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\r\n * @class GostASN1.SubjectPublicKeyInfo\r\n * @extends GostASN1.Sequence\r\n * @property {AlgorithmIdentifier} algorithm Identifies the public-key algorithm.\r\n * @property {CryptoOperationData} subjectPublicKey An binary data whose contents are the value of the public key\r\n */\r\nvar SubjectPublicKeyInfo = SEQUENCE({\r\n    algorithm: KeyAlgorithmIdentifier,\r\n    subjectPublicKey: BIT_STRING\r\n}, 'PUBLIC KEY');\r\n\r\nvar GostSubjectPublicKeyInfo = (function (PKTypes) {\r\n\r\n    /**\r\n     * Coding methods for {@link Algorithm} and {@link GostASN1.SubjectPublicKeyInfo}\r\n     * Supported types for GOST algorithms:\r\n     * <pre>\r\n     *  {\r\n         *      'id-sc-gostR3410-2001': ECDHPublicKey,\r\n         *      'id-sc-gostR3410-94': DHPublicKey,\r\n         *      'id-GostR3410-2001': GostR3410PublicKey,\r\n         *      'id-GostR3410-94': GostR3410PublicKey,\r\n         *      'id-tc26-gost3410-12-256': GostR3410PublicKey,\r\n         *      'id-tc26-gost3410-12-512': GostR3410PublicKey\r\n         *  }\r\n     * </pre>\r\n     *\r\n     * @class GostASN1.GostSubjectPublicKeyInfo\r\n     * @extends GostASN1.SubjectPublicKeyInfo\r\n     * @extends Key\r\n     */\r\n    return ENCLOSURE(ATTRIBUTE({\r\n          algorithm: KeyAlgorithmIdentifier,\r\n          subjectPublicKey: ANY\r\n      },\r\n      'algorithm', 'subjectPublicKey')(function (algorithm) {\r\n        return PKTypes[algorithm.id];\r\n    }), {\r\n        encode: function (value) {\r\n            return {\r\n                algorithm: value.algorithm,\r\n                subjectPublicKey: value.buffer\r\n            };\r\n        },\r\n        decode: function (value) {\r\n            return {\r\n                algorithm: value.algorithm,\r\n                type: 'public',\r\n                extractable: true,\r\n                usages: ['verify', 'deriveKey', 'deriveBits'],\r\n                buffer: value.subjectPublicKey\r\n            };\r\n        }\r\n    });\r\n})({\r\n    'id-sc-gostR3410-2001': ECDHPublicKey,\r\n    'id-sc-gostR3410-94': DHPublicKey,\r\n    'id-GostR3410-2001': GostR3410PublicKey,\r\n    'id-GostR3410-94': GostR3410PublicKey,\r\n    'id-tc26-gost3410-12-256': GostR3410PublicKey,\r\n    'id-tc26-gost3410-12-512': GostR3410PublicKey\r\n});\r\n// </editor-fold>\r\n\r\n/*\r\n     * Private Key Info PKCS#8\r\n     *\r\n     * http://tools.ietf.org/html/rfc5208\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar PrivateKey = OCTET_STRING;\r\n\r\nvar DHPrivateKey = KeyData(PrivateKey(ENCAPSULATES(INTEGER)), {\r\n    encode: function (value) { // for SignalCom INTEGER d\r\n        return SInt.encode(value, true);\r\n    },\r\n    decode: function (value) {\r\n        return SInt.decode(value, true);\r\n    }\r\n});\r\n\r\nvar GostR3410KeyValueMask = OCTET_STRING;\r\n\r\nvar GostR3410KeyValueInfo = SEQUENCE({\r\n    keyValueMask: GostR3410KeyValueMask,\r\n    keyValyePublicKey: OCTET_STRING\r\n});\r\n\r\nvar GostR3410PrivateKey = CHOICE({\r\n    privateKey: PrivateKey(ENCAPSULATES(CHOICE({\r\n        keyValueMask: GostR3410KeyValueMask,\r\n        keyValueInfo: GostR3410KeyValueInfo\r\n    }, function (value) {\r\n        if (isBinary(value))\r\n            return 'keyValueMask';\r\n        else\r\n            return 'keyValueInfo';\r\n    }))),\r\n    keyValueMask: GostR3410KeyValueMask\r\n}, function (value) {\r\n    return value.enclosed ? 'keyValueMask' : 'privateKey';\r\n});\r\n\r\nvar GostWrappedPrivateKey = (function (PKTypes) {\r\n\r\n    /**\r\n     * Gost Wrapped Private Key for SignalCom key container\r\n     *\r\n     * @class GostASN1.GostWrappedPrivateKey\r\n     * @extends GostASN1.PrivateKeyInfo\r\n     */\r\n    return ATTRIBUTE({\r\n        version: Version,\r\n        privateKeyAlgorithm: KeyAlgorithmIdentifier,\r\n        privateKeyWrapped: KeyData(PrivateKey(ENCAPSULATES(SEQUENCE({\r\n            keyData: INTEGER,\r\n            keyMac: INTEGER\r\n        }))), {\r\n            encode: function (value) {\r\n                var size = value.byteLength - 4;\r\n                return {\r\n                    keyData: SInt.encode(new Uint8Array(value, 0, size)),\r\n                    keyMac: SInt.encode(new Uint8Array(value, size, 4))\r\n                };\r\n            },\r\n            decode: function (value) {\r\n                var data = SInt.decode(value.keyData),\r\n                  mac = SInt.decode(value.keyMac),\r\n                  result = new Uint8Array(data.byteLength + mac.byteLength);\r\n                result.set(new Uint8Array(data));\r\n                result.set(new Uint8Array(mac), data.byteLength);\r\n                return result;\r\n            }\r\n        }),\r\n        attributes: ANY\r\n    }, 'privateKeyAlgorithm', 'attributes')(function (algorithm) {\r\n        return OPTIONAL(CTX(0, IMPLICIT(Attributes({\r\n            'id-sc-gostR3410-2001-publicKey': SET_OF_SINGLE(PKTypes[algorithm.id])\r\n        }))));\r\n    });\r\n})({\r\n    // Signature keys\r\n    'id-sc-gostR3410-2001': ECDHPublicKey,\r\n    'id-sc-gostR3410-94': DHPublicKey,\r\n    'id-GostR3410-2001': GostR3410PublicKey,\r\n    'id-GostR3410-94': GostR3410PublicKey,\r\n    'id-GostR3410-2001DH': GostR3410PublicKey,\r\n    'id-GostR3410-94DH': GostR3410PublicKey,\r\n    'id-tc26-gost3410-12-256': GostR3410PublicKey,\r\n    'id-tc26-gost3410-12-512': GostR3410PublicKey,\r\n    'id-tc26-agreement-gost-3410-12-256': GostR3410PublicKey,\r\n    'id-tc26-agreement-gost-3410-12-512': GostR3410PublicKey\r\n});\r\n\r\n/**\r\n * Private-Key Information Syntax PKSC#8\r\n * <pre>\r\n *  -- Private-key information syntax\r\n *\r\n *  PrivateKeyInfo ::= SEQUENCE {\r\n     *      version Version,\r\n     *      privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},\r\n     *      privateKey PrivateKey,\r\n     *      attributes [0] Attributes OPTIONAL }\r\n *\r\n *  Version ::= INTEGER {v1(0)} (v1,...)\r\n *\r\n *  PrivateKey ::= OCTET STRING\r\n *\r\n *  Attributes ::= SET OF Attribute\r\n * </pre>\r\n * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208}\r\n * @class GostASN1.PrivateKeyInfo\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number. Should be 0\r\n * @property {AlgorithmIndentifier} privateKeyAlgorithm Identifies the private-key algorithm\r\n * @property {CryptoOperationData} privateKey Is an binary data whose contents are the value of the private key.\r\n * @property {GostASN1.Attributes} attributes A set of attributes\r\n */\r\nvar PrivateKeyInfo = SEQUENCE({\r\n    version: Version,\r\n    privateKeyAlgorithm: KeyAlgorithmIdentifier,\r\n    privateKey: PrivateKey,\r\n    attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))\r\n}, 'PRIVATE KEY');\r\n\r\nvar PrivateKeyAlgorithmIdentifier = KeyAlgorithmIdentifier;\r\n\r\nvar PublicKey = BIT_STRING;\r\n\r\nvar OneAsymmetricKey = SEQUENCE({\r\n    version: Version,\r\n    privateKeyAlgorithm: PrivateKeyAlgorithmIdentifier,\r\n    privateKey: PrivateKey,\r\n    attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes))),\r\n    publicKey: OPTIONAL(CTX(1, IMPLICIT(PublicKey)))\r\n});\r\n\r\nvar AsymmetricKeyPackage = SEQUENCE_OF(OneAsymmetricKey);\r\n\r\nvar GostPrivateKeyInfo = (function (PKTypes) {\r\n\r\n    /**\r\n     * Coding methods for {@link Algorithm} and {@link GostASN1.PrivateKeyInfo}\r\n     * Supported types for GOST algorithms:\r\n     * <pre>\r\n     *  {\r\n         *      'id-sc-gostR3410-2001': DHPrivateKey,\r\n         *      'id-sc-gostR3410-94': DHPrivateKey,\r\n         *      'id-GostR3410-2001': GostR3410PrivateKey,\r\n         *      'id-GostR3410-94': GostR3410PrivateKey,\r\n         *      'id-tc26-gost3410-12-256': GostR3410PrivateKey,\r\n         *      'id-tc26-gost3410-12-512': GostR3410PrivateKey\r\n         *  }\r\n     * </pre>\r\n     *\r\n     * @class GostASN1.GostPrivateKeyInfo\r\n     * @extends GostASN1.PrivateKeyInfo\r\n     * @extends Key\r\n     */\r\n    return ENCLOSURE(ATTRIBUTE({\r\n          version: Version,\r\n          privateKeyAlgorithm: KeyAlgorithmIdentifier,\r\n          privateKey: ANY,\r\n          attributes: OPTIONAL(CTX(0, IMPLICIT(Attributes)))\r\n      },\r\n      'privateKeyAlgorithm', 'privateKey')(function (algorithm) {\r\n        return PKTypes[algorithm.id];\r\n    }), {\r\n        encode: function (value) {\r\n            return {\r\n                version: 0,\r\n                privateKeyAlgorithm: value.algorithm,\r\n                privateKey: value.buffer\r\n            };\r\n        },\r\n        decode: function (value) {\r\n            return {\r\n                algorithm: value.privateKeyAlgorithm,\r\n                type: 'private',\r\n                extractable: true,\r\n                usages: ['sign', 'deriveKey', 'deriveBits'],\r\n                buffer: isBinary(value.privateKey) ? value.privateKey :\r\n                  value.privateKey.keyValueMask\r\n            };\r\n        }\r\n    });\r\n})({\r\n    // Signature keys\r\n    'id-sc-gostR3410-2001': DHPrivateKey,\r\n    'id-sc-gostR3410-94': DHPrivateKey,\r\n    'id-GostR3410-2001': GostR3410PrivateKey,\r\n    'id-GostR3410-94': GostR3410PrivateKey,\r\n    'id-GostR3410-2001DH': GostR3410PrivateKey,\r\n    'id-GostR3410-94DH': GostR3410PrivateKey,\r\n    'id-tc26-gost3410-12-256': GostR3410PrivateKey,\r\n    'id-tc26-gost3410-12-512': GostR3410PrivateKey,\r\n    'id-tc26-agreement-gost-3410-12-256': GostR3410PrivateKey,\r\n    'id-tc26-agreement-gost-3410-12-512': GostR3410PrivateKey\r\n});\r\n\r\nvar KeyEncryptedData = OCTET_STRING;\r\n/**\r\n * Encrypted Private-Key Information Syntax\r\n * <pre>\r\n *  -- Encrypted private-key information syntax\r\n *\r\n *  EncryptedPrivateKeyInfo ::= SEQUENCE {\r\n     *      encryptionAlgorithm AlgorithmIdentifier {{KeyEncryptionAlgorithms}},\r\n     *      encryptedData KeyEncryptedData\r\n     *  }\r\n *\r\n *  KeyEncryptedData ::= OCTET STRING\r\n *\r\n *  PrivateKeyAlgorithms ALGORITHM-IDENTIFIER ::= {\r\n     *      ... -- For local profiles\r\n     *  }\r\n *\r\n *  KeyEncryptionAlgorithms ALGORITHM-IDENTIFIER ::= {\r\n     *      ... -- For local profiles\r\n     *  }\r\n * </pre>\r\n * RFC 5208 references {@link http://tools.ietf.org/html/rfc5208}\r\n * @class GostASN1.EncryptedPrivateKeyInfo\r\n * @extends GostASN1.Sequence\r\n * @property {AlgorithmIdentifier} encryptionAlgorithm Identifies key encryption algorithm\r\n * @property {CryptoOperationData} encryptedData Encrypted {@link GostASN1.PrivateKeyInfo}\r\n */\r\nvar EncryptedPrivateKeyInfo = SEQUENCE({\r\n    encryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\r\n    encryptedData: KeyEncryptedData\r\n}, 'ENCRYPTED PRIVATE KEY');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate Extensions\r\n     *\r\n     * http://tools.ietf.org/html/rfc5280\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\nvar UniqueIdentifier = BIT_STRING;\r\n\r\nvar CertificateSerialNumber = INTEGER;\r\n\r\nvar BasicConstraints = SEQUENCE({\r\n    cA: DEFAULT(BOOLEAN, false),\r\n    pathLenConstraint: OPTIONAL(INTEGER)\r\n});\r\n\r\nvar KeyUsage = BIT_STRING({\r\n    digitalSignature: 0,\r\n    nonRepudiation: 1,\r\n    keyEncipherment: 2,\r\n    dataEncipherment: 3,\r\n    keyAgreement: 4,\r\n    keyCertSign: 5,\r\n    cRLSign: 6,\r\n    encipherOnly: 7,\r\n    decipherOnly: 8\r\n});\r\nvar KeyPurposeId = OBJECT_IDENTIFIER,\r\n  ExtKeyUsageSyntax = SEQUENCE_OF(KeyPurposeId);\r\n\r\nvar KeyIdentifier = OCTET_STRING;\r\n\r\nvar OtherName = SEQUENCE({\r\n    type: OBJECT_IDENTIFIER,\r\n    value: CTX(0, EXPLICIT(ANY))\r\n});\r\n\r\nvar EDIPartyName = SEQUENCE({\r\n    nameAssigner: OPTIONAL(CTX(0, IMPLICIT(DirectoryString))),\r\n    partyName: OPTIONAL(CTX(1, IMPLICIT(DirectoryString)))\r\n});\r\n\r\nvar ORAddress = SEQUENCE({});\r\n\r\nvar GeneralName = CHOICE({\r\n    otherName: CTX(0, IMPLICIT(OtherName)),\r\n    rfc822Name: CTX(1, IMPLICIT(DirectoryString)),\r\n    dNSName: CTX(2, IMPLICIT(DirectoryString)),\r\n    x400Address: CTX(3, IMPLICIT(ORAddress)),\r\n    directoryName: CTX(4, EXPLICIT(Name)), // Name is CHOICE(RDNSequence)\r\n    ediPartyName: CTX(5, IMPLICIT(EDIPartyName)),\r\n    uniformResourceIdentifier: CTX(6, IMPLICIT(DirectoryString)),\r\n    iPAddress: CTX(7, IMPLICIT(OCTET_STRING)),\r\n    registeredID: CTX(8, IMPLICIT(OBJECT_IDENTIFIER))\r\n}, function (value) {\r\n    return typeof value === 'string' || value instanceof String ?\r\n      (value.indexOf('@') >= 0 ? 'rfc822Name' : 'dNSName') :\r\n      isBinary(value) ? 'iPAddress' : 'directoryName';\r\n});\r\n\r\nvar GeneralNames = SEQUENCE_OF(GeneralName);\r\n\r\nvar AuthorityKeyIdentifier = SEQUENCE({\r\n    keyIdentifier: OPTIONAL(CTX(0, IMPLICIT(KeyIdentifier))),\r\n    authorityCertIssuer: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\r\n    authorityCertSerialNumber: OPTIONAL(CTX(2, IMPLICIT(CertificateSerialNumber)))\r\n});\r\n\r\nvar PrivateKeyUsagePeriod = SEQUENCE({\r\n    notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\r\n    notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\r\n});\r\n\r\nvar CertPolicyId = OBJECT_IDENTIFIER,\r\n  PolicyQualifierId = OBJECT_IDENTIFIER;\r\n\r\nvar PolicyQualifierInfo = SEQUENCE({\r\n    policyQualifierId: PolicyQualifierId,\r\n    qualifier: ANY\r\n});\r\n\r\nvar PolicyInformation = SEQUENCE({\r\n    policyIdentifier: CertPolicyId,\r\n    policyQualifiers: OPTIONAL(SEQUENCE_OF(PolicyQualifierInfo))\r\n});\r\n\r\nvar PolicyMapping = SEQUENCE({\r\n    issuerDomainPolicy: CertPolicyId,\r\n    subjectDomainPolicy: CertPolicyId\r\n});\r\n\r\nvar BaseDistance = INTEGER;\r\n\r\nvar GeneralSubtree = SEQUENCE({\r\n    base: GeneralName,\r\n    minimum: DEFAULT(CTX(0, IMPLICIT(BaseDistance)), 0),\r\n    maximum: OPTIONAL(CTX(1, IMPLICIT(BaseDistance)))\r\n});\r\n\r\nvar GeneralSubtrees = SEQUENCE_OF(GeneralSubtree);\r\n\r\nvar NameConstraints = SEQUENCE({\r\n    permittedSubtrees: OPTIONAL(CTX(0, IMPLICIT(GeneralSubtrees))),\r\n    excludedSubtrees: OPTIONAL(CTX(1, IMPLICIT(GeneralSubtrees)))\r\n});\r\n\r\nvar SkipCerts = INTEGER;\r\n\r\nvar PolicyConstraints = SEQUENCE({\r\n    requireExplicitPolicy: OPTIONAL(CTX(0, IMPLICIT(SkipCerts))),\r\n    inhibitPolicyMapping: OPTIONAL(CTX(1, IMPLICIT(SkipCerts)))\r\n});\r\n\r\nvar ReasonFlags = BIT_STRING({\r\n    unused: 0,\r\n    keyCompromise: 1,\r\n    cACompromise: 2,\r\n    affiliationChanged: 3,\r\n    superseded: 4,\r\n    cessationOfOperation: 5,\r\n    certificateHold: 6,\r\n    privilegeWithdrawn: 7,\r\n    aACompromise: 8\r\n});\r\n\r\nvar DistributionPointName = CHOICE({\r\n    fullName: CTX(0, IMPLICIT(GeneralNames)),\r\n    nameRelativeToCRLIssuer: CTX(1, IMPLICIT(RelativeDistinguishedName))\r\n}, function (value) {\r\n    return value instanceof Array ? 'fullName' : 'nameRelativeToCRLIssuer';\r\n});\r\n\r\nvar DistributionPoint = SEQUENCE({\r\n    distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName CHOICE\r\n    reasons: OPTIONAL(CTX(1, IMPLICIT(ReasonFlags))),\r\n    cRLIssuer: OPTIONAL(CTX(2, IMPLICIT(GeneralNames)))\r\n});\r\n\r\nvar CRLDistributionPoints = SEQUENCE_OF(DistributionPoint);\r\n\r\nvar FreshestCRL = CRLDistributionPoints;\r\n\r\nvar AccessDescription = SEQUENCE({\r\n    accessMethod: OBJECT_IDENTIFIER,\r\n    accessLocation: GeneralName\r\n});\r\n\r\nvar Extension = function (typeSet, defaultCritical) {\r\n\r\n    var Attribute = ATTRIBUTE({\r\n        extnID: OBJECT_IDENTIFIER,\r\n        critical: DEFAULT(BOOLEAN, false),\r\n        extnValue: function (type) {\r\n            return OCTET_STRING(ENCAPSULATES(type));\r\n        }\r\n    }, 'extnID', 'extnValue');\r\n\r\n    var Class = extend(Attribute(typeSet), {\r\n        object: {\r\n            get: function () {\r\n                var value = this._get(Class.super, 'object');\r\n                if (value && typeof value.extnValue === 'object')\r\n                    this.defineValue(value.extnValue);\r\n                return value;\r\n            },\r\n            set: function (object) {\r\n                this._set(Class.super, 'object', object);\r\n                // Define critical\r\n                if (object && object.extnValue)\r\n                    if (object.extnValue.critical !== undefined)\r\n                        this.critical = object.extnValue.critical;\r\n                    else if (this.critical === undefined && defaultCritical)\r\n                        this.critical = defaultCritical(this.extnID, object.extnValue);\r\n            }\r\n        },\r\n        extnValue: {\r\n            get: function () {\r\n                // Get value property of object\r\n                var value = this._get(Class.super, 'extnValue');\r\n                if (typeof value === 'object')\r\n                    this.defineValue(value);\r\n                return value;\r\n            },\r\n            set: function (object) {\r\n                // Set value property of object\r\n                this._set(Class.super, 'extnValue', object);\r\n                // Define critical\r\n                if (object) {\r\n                    if (object.critical !== undefined)\r\n                        this.critical = object.critical;\r\n                    else if (this.critical === undefined && defaultCritical)\r\n                        this.critical = defaultCritical(this.extnID, object);\r\n                }\r\n            }\r\n        },\r\n        defineValue: function (value) {\r\n            if (typeof value === 'object')\r\n                if (!getOwnPropertyDescriptor(value, 'critical')) {\r\n                    var self = this;\r\n                    defineProperty(value, 'critical', {\r\n                        get: function () {\r\n                            return self.critical;\r\n                        },\r\n                        set: function (value) {\r\n                            self.critical = value;\r\n                        },\r\n                        enumerable: true,\r\n                        configurable: false\r\n                    });\r\n                }\r\n        }\r\n    });\r\n    return Class;\r\n};\r\n\r\n// http://base.garant.ru/70133464/#ixzz4KaOTGI1l\r\nvar IssuerSignTool = SEQUENCE({\r\n    signTool: UTF8String,\r\n    cATool: UTF8String,\r\n    signToolCert: UTF8String,\r\n    cAToolCert: UTF8String\r\n});\r\n\r\n/**\r\n * Extensions is a base class for extension attributes of certificates, CRLs, requests and etc.\r\n *\r\n * @class GostASN1.Extensions\r\n * @extends GostASN1.Set\r\n */\r\nvar Extensions = SEQUENCE_OF(Extension, {\r\n    typeName: 'extnID',\r\n    valueName: 'extnValue'\r\n});\r\n\r\nvar CertExtensions = Extensions({\r\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\r\n    subjectKeyIdentifier: KeyIdentifier,\r\n    keyUsage: KeyUsage,\r\n    privateKeyUsagePeriod: PrivateKeyUsagePeriod,\r\n    certificatePolicies: SEQUENCE_OF(PolicyInformation),\r\n    policyMappings: SEQUENCE_OF(PolicyMapping),\r\n    subjectAltName: GeneralNames,\r\n    issuerAltName: GeneralNames,\r\n    subjectDirectoryAttributes: AttributeSequence,\r\n    basicConstraints: BasicConstraints,\r\n    nameConstraints: NameConstraints,\r\n    policyConstraints: PolicyConstraints,\r\n    extKeyUsage: ExtKeyUsageSyntax,\r\n    cRLDistributionPoints: CRLDistributionPoints,\r\n    inhibitAnyPolicy: SkipCerts,\r\n    freshestCRL: FreshestCRL,\r\n    authorityInfoAccess: SEQUENCE_OF(AccessDescription),\r\n    subjectInfoAccess: SEQUENCE_OF(AccessDescription),\r\n    subjectSignTool: UTF8String,\r\n    issuerSignTool: IssuerSignTool\r\n}, function (id, value) {\r\n    return id === 'keyUsage' ||\r\n      (id === 'basicConstraints' && value.pathLenConstraint === undefined);\r\n});\r\n// </editor-fold>\r\n\r\n/*\r\n * Signature Values\r\n *\r\n * http://tools.ietf.org/html/rfc5280\r\n * http://tools.ietf.org/html/rfc4491\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n/**\r\n * Gost Signature encode signature values for different GOST signatures\r\n * Support algorithms:\r\n * <pre>\r\n *  {\r\n     *      'id-GostR3410-94': GostR3410Signature,\r\n     *      'id-GostR3410-2001': GostR3410Signature,\r\n     *      'id-tc26-gost3410-12-256': GostR3410Signature,\r\n     *      'id-tc26-gost3410-12-512': GostR3410Signature,\r\n     *      'id-GostR3411-94-with-GostR3410-2001': GostR3410Signature,\r\n     *      'id-GostR3411-94-with-GostR3410-94': GostR3410Signature,\r\n     *      'id-tc26-signwithdigest-gost3410-12-94': GostR3410Signature,\r\n     *      'id-tc26-signwithdigest-gost3410-12-256': GostR3410Signature,\r\n     *      'id-tc26-signwithdigest-gost3410-12-512': GostR3410Signature,\r\n     *      'id-sc-gostR3410-94': ECDHSignature,\r\n     *      'id-sc-gostR3410-2001': ECDHSignature,\r\n     *      'id-sc-gostR3411-94-with-gostR3410-94': ECDHSignature,\r\n     *      'id-sc-gostR3411-94-with-gostR3410-2001': ECDHSignature\r\n     *  }\r\n * </pre>\r\n *\r\n * @class GostASN1.GostSignature\r\n * @extends GostASN1.Sequence\r\n */\r\n\r\n  // SignalCom signature\r\nvar ECDHSignature = SEQUENCE({\r\n      r: INTEGER,\r\n      s: INTEGER\r\n  });\r\n\r\nvar GostR3410Signature = ANY;\r\n\r\n// Signature value (only need for CryptoPro\r\n//    var GostSignature = extend(CHOICE({\r\n//        ecdhSignature: ECDHSignature}, 'ecdhSignature'));\r\nvar GostSignature = ECDHSignature;\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate\r\n     *\r\n     * http://tools.ietf.org/html/rfc5280\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n/**\r\n * The sequence TBSCertificate contains information associated with the\r\n * subject of the certificate and the CA who issued it.  Every\r\n * TBSCertificate contains the names of the subject and issuer, a public\r\n * key associated with the subject, a validity period, a version number,\r\n * and a serial number; some MAY contain optional unique identifier\r\n * fields.  The remainder of this section describes the syntax and\r\n * semantics of these fields.  A TBSCertificate usually includes\r\n * extensions.\r\n * <pre>\r\n *  TBSCertificate  ::=  SEQUENCE  {\r\n     *       version         [0]  EXPLICIT Version DEFAULT v1,\r\n     *       serialNumber         CertificateSerialNumber,\r\n     *       signature            AlgorithmIdentifier,\r\n     *       issuer               Name,\r\n     *       validity             Validity,\r\n     *       subject              Name,\r\n     *       subjectPublicKeyInfo SubjectPublicKeyInfo,\r\n     *       issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\r\n     *                            -- If present, version MUST be v2 or v3\r\n     *       subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\r\n     *                            -- If present, version MUST be v2 or v3\r\n     *       extensions      [3]  EXPLICIT Extensions OPTIONAL\r\n     *                            -- If present, version MUST be v3\r\n     *       }\r\n *\r\n *  Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\r\n *\r\n *  CertificateSerialNumber  ::=  INTEGER\r\n *\r\n *  Validity ::= SEQUENCE {\r\n     *       notBefore      Time,\r\n     *       notAfter       Time }\r\n *\r\n *  Time ::= CHOICE {\r\n     *       utcTime        UTCTime,\r\n     *       generalTime    GeneralizedTime }\r\n *\r\n *  UniqueIdentifier  ::=  BIT STRING\r\n *\r\n *  SubjectPublicKeyInfo  ::=  SEQUENCE  {\r\n     *       algorithm            AlgorithmIdentifier,\r\n     *       subjectPublicKey     BIT STRING  }\r\n *\r\n *  Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension\r\n *\r\n *  Extension  ::=  SEQUENCE  {\r\n     *       extnID      OBJECT IDENTIFIER,\r\n     *       critical    BOOLEAN DEFAULT FALSE,\r\n     *       extnValue   OCTET STRING  }\r\n * </pre>\r\n * See {@link GostASN1.Certificate} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\r\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\r\n *\r\n * @class GostASN1.TBSCertificate\r\n * @extends GostASN1.Sequence\r\n * @extends GostASN1.Validity\r\n * @property {number} version The version of the encoded certificate\r\n * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\r\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\r\n * @property {GostASN1.Name} issuer The issuer field identifies the entity that has signed and issued the certificate.\r\n * @property {GostASN1.Validity} validity The certificate validity period\r\n * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\r\n * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\r\n * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\r\n * @property {CryptoOperationData} subjectUniqueID The subject unique identifier\r\n * @property {GostASN1.Extensions} extensions The extensions defined for X.509 v3 certificates\r\n */\r\nvar TBSCertificate = COMBINE(SEQUENCE({\r\n    version: CTX(0, EXPLICIT(Version)),\r\n    serialNumber: CertificateSerialNumber,\r\n    signature: SignatureAlgorithmIdentifier,\r\n    issuer: Name,\r\n    validity: Validity,\r\n    subject: Name,\r\n    subjectPublicKeyInfo: SubjectPublicKeyInfo,\r\n    issuerUniqueID: OPTIONAL(CTX(1, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3\r\n    subjectUniqueID: OPTIONAL(CTX(2, IMPLICIT(UniqueIdentifier))), // If present, version MUST be v2 or v3\r\n    extensions: OPTIONAL(CTX(3, EXPLICIT(CertExtensions)))\r\n})); // If present, version MUST be v3\r\n\r\n/**\r\n * The X.509 v3 certificate basic syntax is as follows.  For signature\r\n * calculation, the data that is to be signed is encoded using the ASN.1\r\n * distinguished encoding rules (DER) [X.690].  ASN.1 DER encoding is a\r\n * tag, length, value encoding system for each element.\r\n * <pre>\r\n *  Certificate  ::=  SEQUENCE  {\r\n     *       tbsCertificate       TBSCertificate,\r\n     *       signatureAlgorithm   AlgorithmIdentifier,\r\n     *       signatureValue       BIT STRING  }\r\n * </pre>\r\n * See {@link GostASN1.TBSCertificate}<br><br>\r\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\r\n *\r\n * @class GostASN1.Certificate\r\n * @extends GostASN1.TBSCertificate\r\n * @property {GostASN1.TBSCertificate} tbsCertificate The sequence TBSCertificate\r\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\r\n * @property {CryptoOperationData} signatureValue Signature value\r\n */\r\nvar Certificate = SEQUENCE({\r\n    tbsCertificate: TBSCertificate,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n}, 'CERTIFICATE');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certification Request\r\n     *\r\n     * http://tools.ietf.org/html/rfc2986\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar ExtensionRequest = CertExtensions;\r\n\r\nvar CRIAttributes = Attributes({\r\n    challengePassword: SET_OF_SINGLE(DirectoryString),\r\n    extensionRequest: SET_OF_SINGLE(ExtensionRequest),\r\n    msCertExtensions: SET_OF_SINGLE(CertExtensions),\r\n    extendedCertificateAttributes: SET_OF_SINGLE(Attributes)\r\n});\r\n\r\n/**\r\n * Certification request information shall have ASN.1 type CertificationRequestInfo:\r\n * <pre>\r\n *  CertificationRequestInfo ::= SEQUENCE {\r\n     *       version       INTEGER { v1(0) } (v1,...),\r\n     *       subject       Name,\r\n     *       subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\r\n     *       attributes    [0] Attributes{{ CRIAttributes }}\r\n     *  }\r\n *\r\n *  SubjectPublicKeyInfo { ALGORITHM : IOSet} ::= SEQUENCE {\r\n     *       algorithm        AlgorithmIdentifier {{IOSet}},\r\n     *       subjectPublicKey BIT STRING\r\n     *  }\r\n *\r\n *  PKInfoAlgorithms ALGORITHM ::= {\r\n     *       ...  -- add any locally defined algorithms here -- }\r\n *\r\n *  Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\r\n *\r\n *  CRIAttributes  ATTRIBUTE  ::= {\r\n     *       ... -- add any locally defined attributes here -- }\r\n *\r\n *  Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\r\n     *       type   ATTRIBUTE.&id({IOSet}),\r\n     *       values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\r\n     *  }\r\n * </pre>\r\n * See {@link GostASN1.CertificationRequest} and {@link GostASN1.SubjectPublicKeyInfo}<br><br>\r\n * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986}\r\n *\r\n * @class GostASN1.CertificationRequestInfo\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The version of the encoded request\r\n * @property {GostASN1.Name} subject The subject field identifies the entity associated with the public key stored in the subject public key field.\r\n * @property {GostASN1.SubjectPublicKeyInfo} subject The public key and identify the algorithm with which the key is used\r\n * @property {GostASN1.Attributes} attributes The request attributes\r\n */\r\nvar CertificationRequestInfo = COMBINE(SEQUENCE({\r\n    version: INTEGER,\r\n    subject: Name,\r\n    subjectPublicKeyInfo: SubjectPublicKeyInfo,\r\n    attributes: CTX(0, IMPLICIT(CRIAttributes))\r\n}));\r\n\r\n/**\r\n * A certification request consists of three parts: \"certification\r\n * request information,\" a signature algorithm identifier, and a digital\r\n * signature on the certification request information.  The\r\n * certification request information consists of the entity's\r\n * distinguished name, the entity's public key, and a set of attributes\r\n * providing other information about the entity.\r\n * <pre>\r\n *  A certification request shall have ASN.1 type CertificationRequest:\r\n *\r\n *  CertificationRequest ::= SEQUENCE {\r\n     *       certificationRequestInfo CertificationRequestInfo,\r\n     *       signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\r\n     *       signature          BIT STRING\r\n     *  }\r\n *\r\n *  AlgorithmIdentifier {ALGORITHM:IOSet } ::= SEQUENCE {\r\n     *       algorithm          ALGORITHM.&id({IOSet}),\r\n     *       parameters         ALGORITHM.&Type({IOSet}{@algorithm}) OPTIONAL\r\n     *  }\r\n *\r\n *  SignatureAlgorithms ALGORITHM ::= {\r\n     *       ... -- add any locally defined algorithms here -- }\r\n * </pre>\r\n * See {@link GostASN1.CertificationRequestInfo}\r\n * RFC 2986 references {@link http://tools.ietf.org/html/rfc2986}\r\n *\r\n * @class GostASN1.CertificationRequest\r\n * @extends GostASN1.CertificationRequestInfo\r\n * @property {GostASN1.CertificationRequestInfo} requestInfo Request information\r\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\r\n * @property {CryptoOperationData} signatureValue Signature value\r\n */\r\nvar CertificationRequest = SEQUENCE({\r\n    requestInfo: CertificationRequestInfo,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n}, 'CERTIFICATE REQUEST');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate Revocation List\r\n     *\r\n     * http://tools.ietf.org/html/rfc5280\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CRLNumber = INTEGER;\r\n\r\nvar CRLReason = ENUMERATED({\r\n    unspecified: 0,\r\n    keyCompromise: 1,\r\n    cACompromise: 2,\r\n    affiliationChanged: 3,\r\n    superseded: 4,\r\n    cessationOfOperation: 5,\r\n    certificateHold: 6,\r\n    removeFromCRL: 8,\r\n    privilegeWithdrawn: 9,\r\n    aACompromise: 10\r\n});\r\n\r\nvar IssuingDistributionPoint = SEQUENCE({\r\n    distributionPoint: OPTIONAL(CTX(0, EXPLICIT(DistributionPointName))), // DistributionPointName is CHOICE\r\n    onlyContainsUserCerts: DEFAULT(CTX(1, IMPLICIT(BOOLEAN)), false),\r\n    onlyContainsCACerts: DEFAULT(CTX(2, IMPLICIT(BOOLEAN)), false),\r\n    onlySomeReasons: OPTIONAL(CTX(3, IMPLICIT(ReasonFlags))),\r\n    indirectCRL: DEFAULT(CTX(4, IMPLICIT(BOOLEAN)), false),\r\n    onlyContainsAttributeCerts: DEFAULT(CTX(5, IMPLICIT(BOOLEAN)), false)\r\n});\r\n\r\nvar CLRExtensions = Extensions({\r\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\r\n    issuerAltName: GeneralNames,\r\n    cRLNumber: CRLNumber,\r\n    deltaCRLIndicator: CRLNumber,\r\n    issuingDistributionPoint: IssuingDistributionPoint,\r\n    freshestCRL: FreshestCRL\r\n}, function (id) {\r\n    return id === 'cRLNumber';\r\n});\r\n\r\nvar CLREntryExtensions = Extensions({\r\n    cRLReason: CRLReason,\r\n    instructionCode: OBJECT_IDENTIFIER,\r\n    invalidityDate: GeneralizedTime,\r\n    certificateIssuer: GeneralNames\r\n});\r\n\r\n/**\r\n * This field is itself a sequence containing the name of the issuer,\r\n * issue date, issue date of the next list, the optional list of revoked\r\n * certificates, and optional CRL extensions.  When there are no revoked\r\n * certificates, the revoked certificates list is absent.  When one or\r\n * more certificates are revoked, each entry on the revoked certificate\r\n * list is defined by a sequence of user certificate serial number,\r\n * revocation date, and optional CRL entry extensions.\r\n * <pre>\r\n *  TBSCertList  ::=  SEQUENCE  {\r\n     *       version                 Version OPTIONAL,\r\n     *                                    -- if present, MUST be v2\r\n     *       signature               AlgorithmIdentifier,\r\n     *       issuer                  Name,\r\n     *       thisUpdate              Time,\r\n     *       nextUpdate              Time OPTIONAL,\r\n     *       revokedCertificates     SEQUENCE OF SEQUENCE  {\r\n     *            userCertificate         CertificateSerialNumber,\r\n     *            revocationDate          Time,\r\n     *            crlEntryExtensions      Extensions OPTIONAL\r\n     *                                          -- if present, MUST be v2\r\n     *                                 }  OPTIONAL,\r\n     *       crlExtensions           [0]  EXPLICIT Extensions OPTIONAL\r\n     *                                          -- if present, MUST be v2\r\n     *                                 }\r\n * </pre>\r\n * See {@link GostASN1.CertificateList}<br><br>\r\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\r\n *\r\n * @class GostASN1.TBSCertList\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The version of the encoded CRL\r\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used to sign the CRL\r\n * @property {Name} issuer The issuer name identifies the entity that has signed and issued the CRL\r\n * @property {Date} thisUpdate The issue date of this CRL\r\n * @property {Date} nextUpdate The date by which the next CRL will be issued\r\n * @property {Array} revokedCertificates The revoked certificates are listed by their serial numbers\r\n * @property {Extensions} crlExtensions The CRL extensions\r\n */\r\nvar TBSCertList = COMBINE(SEQUENCE({\r\n    version: OPTIONAL(Version), // if present, MUST be v2\r\n    signature: SignatureAlgorithmIdentifier,\r\n    issuer: Name,\r\n    thisUpdate: Time,\r\n    nextUpdate: OPTIONAL(Time),\r\n    revokedCertificates: OPTIONAL(SEQUENCE_OF(SEQUENCE({\r\n        userCertificate: CertificateSerialNumber,\r\n        revocationDate: Time,\r\n        crlEntryExtensions: OPTIONAL(CLREntryExtensions) // if present, MUST be v2\r\n    }))),\r\n    crlExtensions: OPTIONAL(CTX(0, EXPLICIT(CLRExtensions)))\r\n})); // if present, MUST be v2\r\n\r\n/**\r\n * The X.509 v2 CRL syntax is as follows.  For signature calculation,\r\n * the data that is to be signed is ASN.1 DER encoded.  ASN.1 DER\r\n * encoding is a tag, length, value encoding system for each element.\r\n * <pre>\r\n *  CertificateList  ::=  SEQUENCE  {\r\n     *       tbsCertList          TBSCertList,\r\n     *       signatureAlgorithm   AlgorithmIdentifier,\r\n     *       signatureValue       BIT STRING  }\r\n * </pre>\r\n * See {@link GostASN1.TBSCertList}<br><br>\r\n * RFC 5280 references {@link http://tools.ietf.org/html/rfc5280}\r\n *\r\n * @class GostASN1.CertificateList\r\n * @extends GostASN1.TBSCertList\r\n * @property {GostASN1.TBSCertList} tbsCertList The tbsCertList\r\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\r\n * @property {CryptoOperationData} signatureValue Signature value\r\n */\r\nvar CertificateList = SEQUENCE({\r\n    tbsCertList: TBSCertList,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n}, 'CRL');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Attribute Certificate Definision\r\n     * http://tools.ietf.org/html/rfc5755\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar AttCertVersion = INTEGER;\r\n\r\nvar ObjectDigestInfo = SEQUENCE({\r\n    digestedObjectType: ENUMERATED({\r\n        publicKey: 0,\r\n        publicKeyCert: 1,\r\n        otherObjectTypes: 2\r\n    }), // otherObjectTypes MUST NOT be used in this profile\r\n    otherObjectTypeID: OPTIONAL(OBJECT_IDENTIFIER),\r\n    digestAlgorithm: DigestAlgorithmIdentifier,\r\n    objectDigest: BIT_STRING\r\n});\r\n\r\nvar IssuerSerial = SEQUENCE({\r\n    issuer: GeneralNames,\r\n    serial: CertificateSerialNumber,\r\n    issuerUID: OPTIONAL(UniqueIdentifier)\r\n});\r\n\r\nvar V2Form = SEQUENCE({\r\n    issuerName: OPTIONAL(GeneralNames),\r\n    baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\r\n    // issuerName MUST be present in this profile baseCertificateID and\r\n    // objectDigestInfo MUST NOT be present in this profile\r\n    objectDigestInfo: OPTIONAL(CTX(1, IMPLICIT(ObjectDigestInfo)))\r\n});\r\n\r\nvar TargetCert = SEQUENCE({\r\n    targetCertificate: IssuerSerial,\r\n    targetName: OPTIONAL(GeneralName),\r\n    certDigestInfo: OPTIONAL(ObjectDigestInfo)\r\n});\r\n\r\nvar Target = CHOICE({\r\n    targetName: CTX(0, EXPLICIT(GeneralName)), // GeneralName is CHOICE\r\n    targetGroup: CTX(1, EXPLICIT(GeneralName)),\r\n    targetCert: CTX(2, IMPLICIT(TargetCert))\r\n});\r\n\r\nvar Targets = SEQUENCE_OF(Target);\r\n\r\nvar AttCertExtensions = Extensions({\r\n    auditIdentity: OCTET_STRING,\r\n    targetInformation: Targets,\r\n    authorityKeyIdentifier: AuthorityKeyIdentifier,\r\n    authorityInfoAccess: SEQUENCE_OF(AccessDescription),\r\n    cRLDistributionPoints: CRLDistributionPoints,\r\n    noRevAvail: NULL\r\n}, function (id) {\r\n    return id === 'auditIdentity' || id === 'targetInformation';\r\n});\r\n\r\nvar Holder = SEQUENCE({\r\n    // the issuer and serial number of the holder's Public Key Certificate\r\n    baseCertificateID: OPTIONAL(CTX(0, IMPLICIT(IssuerSerial))),\r\n    // the name of the claimant or role\r\n    entityName: OPTIONAL(CTX(1, IMPLICIT(GeneralNames))),\r\n    // used to directly authenticate the holder, for example, an executable\r\n    objectDigestInfo: OPTIONAL(CTX(2, IMPLICIT(ObjectDigestInfo)))\r\n});\r\n\r\nvar AttCertIssuer = CHOICE({\r\n    v1Form: GeneralNames, // MUST NOT be used in this profile\r\n    v2Form: CTX(0, IMPLICIT(V2Form))\r\n}, 'v2Form');     // v2 only\r\n\r\nvar AttCertValidityPeriod = SEQUENCE({\r\n    notBeforeTime: GeneralizedTime,\r\n    notAfterTime: GeneralizedTime\r\n});\r\n\r\nvar SvceAuthInfo = SEQUENCE({\r\n    service: GeneralName,\r\n    ident: GeneralName,\r\n    authInfo: OPTIONAL(OCTET_STRING)\r\n});\r\n\r\nvar RoleSyntax = SEQUENCE({\r\n    roleAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\r\n    roleName: CTX(1, EXPLICIT(GeneralName))\r\n}); // GeneralName is CHOICE\r\n\r\nvar ClassList = BIT_STRING({\r\n    unmarked: 0,\r\n    unclassified: 1,\r\n    restricted: 2,\r\n    confidential: 3,\r\n    secret: 4,\r\n    topSecret: 5\r\n});\r\n\r\nvar SecurityCategory = SEQUENCE({\r\n    type: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\r\n    value: CTX(1, IMPLICIT(ANY))\r\n});\r\n\r\nvar Clearance = SEQUENCE({\r\n    policyId: CTX(0, IMPLICIT(OBJECT_IDENTIFIER)),\r\n    classList: DEFAULT(CTX(1, IMPLICIT(ClassList)), ['unclassified']),\r\n    securityCategories: OPTIONAL(CTX(2, IMPLICIT(SET_OF(SecurityCategory))))\r\n});\r\n\r\nvar IetfAttrSyntax = SEQUENCE({\r\n    policyAuthority: OPTIONAL(CTX(0, IMPLICIT(GeneralNames))),\r\n    values: SEQUENCE_OF(CHOICE({\r\n        octets: OCTET_STRING,\r\n        oid: OBJECT_IDENTIFIER,\r\n        string: UTF8String\r\n    }, function (value) {\r\n        return isBinary ? 'octets' : getIdentifier(value) ? 'oid' : 'string';\r\n    }))\r\n});\r\n\r\n/**\r\n * X.509 Attribute Certificate Definition<br><br>\r\n *\r\n * X.509 contains the definition of an AC given below.  All types that\r\n * are not defined in this document can be found in [PKIXPROF].\r\n * <pre>\r\n *           AttributeCertificateInfo ::= SEQUENCE {\r\n     *                version              AttCertVersion -- version is v2,\r\n     *                holder               Holder,\r\n     *                issuer               AttCertIssuer,\r\n     *                signature            AlgorithmIdentifier,\r\n     *                serialNumber         CertificateSerialNumber,\r\n     *                attrCertValidityPeriod   AttCertValidityPeriod,\r\n     *                attributes           SEQUENCE OF Attribute,\r\n     *                issuerUniqueID       UniqueIdentifier OPTIONAL,\r\n     *                extensions           Extensions OPTIONAL\r\n     *           }\r\n * <pre>\r\n * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281}\r\n *\r\n * @class GostASN1.AttributeCertificateInfo\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The version of the encoded certificate\r\n * @property {GostASN1.Name} holder Identifies the holder.\r\n * @property {GostASN1.Name} issuer Identifies the issuer.\r\n * @property {AlgorithmIdentifier} signature The algorithm identifier for the algorithm used by the CA to sign the certificate.\r\n * @property {(number|string)} serialNumber The serial number MUST be a positive integer assigned by the CA to each certificate.\r\n * @property {GostASN1.Validity} attrCertValidityPeriod The certificate validity period\r\n * @property {GostASN1.Attributes} attributes The certificate attributes\r\n * @property {CryptoOperationData} issuerUniqueID The issuer unique identifier\r\n * @property {GostASN1.Extensions} extensions The certificate extensions\r\n */\r\nvar AttributeCertificateInfo = COMBINE(SEQUENCE({\r\n    version: AttCertVersion, // version is v2,\r\n    holder: Holder,\r\n    issuer: AttCertIssuer,\r\n    signature: SignatureAlgorithmIdentifier,\r\n    serialNumber: CertificateSerialNumber,\r\n    attrCertValidityPeriod: AttCertValidityPeriod,\r\n    attributes: AttributeSequence({\r\n        authenticationInfo: SET_OF(SvceAuthInfo),\r\n        accessIdentity: SET_OF(SvceAuthInfo),\r\n        chargingIdentity: SET_OF_SINGLE(IetfAttrSyntax),\r\n        group: SET_OF_SINGLE(IetfAttrSyntax),\r\n        role: SET_OF(RoleSyntax),\r\n        clearance: SET_OF(Clearance)\r\n    }),\r\n    issuerUniqueID: OPTIONAL(UniqueIdentifier),\r\n    extensions: OPTIONAL(AttCertExtensions)\r\n}));\r\n\r\n/**\r\n * Attribute Certificate Profile<br></br>\r\n *\r\n * ACs may be used in a wide range of applications and environments\r\n * covering a broad spectrum of interoperability goals and a broader\r\n * spectrum of operational and assurance requirements.  The goal of this\r\n * document is to establish a common baseline for generic applications\r\n * requiring broad interoperability and limited special purpose\r\n * requirements.  In particular, the emphasis will be on supporting the\r\n * use of attribute certificates for informal Internet electronic mail,\r\n * IPSec, and WWW applications.\r\n * <pre>\r\n *           AttributeCertificate ::= SEQUENCE {\r\n     *                acinfo               AttributeCertificateInfo,\r\n     *                signatureAlgorithm   AlgorithmIdentifier,\r\n     *                signatureValue       BIT STRING\r\n     *           }\r\n * </pre>\r\n * See {@link GostASN1.AttributeCertificateInfo}<br><br>\r\n * RFC 3281 references {@link http://tools.ietf.org/html/rfc3281}\r\n *\r\n * @class GostASN1.AttributeCertificate\r\n * @extends GostASN1.AttributeCertificateInfo\r\n * @property {GostASN1.AttributeCertificateInfo} acinfo Attribute certificate information\r\n * @property {AlgorithmIndentifier} signatureAlgorithm Identifies signature algorithm\r\n * @property {CryptoOperationData} signatureValue Signature value\r\n */\r\nvar AttributeCertificate = SEQUENCE({\r\n    acinfo: AttributeCertificateInfo,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n}, 'ATTRIBUTE CERTIFICATE');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Encrypted Key with CMS\r\n     *\r\n     * http://tools.ietf.org/html/rfc5652\r\n     * http://tools.ietf.org/html/rfc4490\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// RecipientInfo\r\nvar EncryptedKey = OCTET_STRING;\r\n\r\nvar EncryptedContent = OCTET_STRING;\r\n\r\nvar SubjectKeyIdentifier = OCTET_STRING;\r\n\r\nvar UserKeyingMaterial = OCTET_STRING;\r\n\r\nvar ECCCMSSharedInfo = SEQUENCE({\r\n    keyInfo: KeyWrapAlgorithmIdentifier,\r\n    entityUInfo: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING))),\r\n    suppPubInfo: CTX(2, EXPLICIT(OCTET_STRING))\r\n});\r\n\r\n// GOST Key Transport & Key agreement rfc4490\r\nvar Gost2814789EncryptedKey = ENCLOSURE(SEQUENCE({\r\n    encryptedKey: Gost2814789Key,\r\n    maskKey: OPTIONAL(CTX(0, IMPLICIT(Gost2814789Key))),\r\n    macKey: Gost2814789MAC\r\n}), {\r\n    encode: function (value) {\r\n        // wrappedKey: (CEK_ENC(32) | CEK_MAC(4))\r\n        var encryptedKey = new Uint8Array(new Uint8Array(value, 0, 32)).buffer,\r\n          macKey = new Uint8Array(new Uint8Array(value, 32, 4)).buffer;\r\n        return {// from wrapped key\r\n            encryptedKey: encryptedKey,\r\n            macKey: macKey\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        var encryptedKey = value.encryptedKey,\r\n          maskKey = value.maskKey,\r\n          macKey = value.macKey;\r\n        if (maskKey) {\r\n            var m = new Int32Array(maskKey), k = new Int32Array(encryptedKey);\r\n            for (var i = 0, n = m.length / k.length; i < n; i++) {\r\n                for (var j = 0, l = k.length; j < l; j++)\r\n                    k[j] = (k[j] + m[l * i + j]) & 0xffffffff;\r\n            }\r\n        }\r\n        var result = new Uint8Array(encryptedKey.byteLength + macKey.byteLength);\r\n        result.set(new Uint8Array(encryptedKey), 0);\r\n        result.set(new Uint8Array(macKey), 32);\r\n        return result.buffer;\r\n    }\r\n});\r\n\r\n\r\nvar GostR3410TransportParameters = SEQUENCE({\r\n    encryptionParamSet: Gost2814789ParamSet,\r\n    ephemeralPublicKey: OPTIONAL(CTX(0, IMPLICIT(GostSubjectPublicKeyInfo))),\r\n    ukm: OCTET_STRING\r\n}); // ( SIZE(8) )\r\n\r\nvar GostR3410KeyTransport = ENCLOSURE(SEQUENCE({\r\n    sessionEncryptedKey: Gost2814789EncryptedKey,\r\n    transportParameters: OPTIONAL(CTX(0, IMPLICIT(GostR3410TransportParameters)))\r\n}), {\r\n    encode: function (value) {\r\n        var algorithm = value.algorithm;\r\n        return {\r\n            sessionEncryptedKey: value.sessionEncryptedKey,\r\n            transportParameters: {\r\n                encryptionParamSet: attributes['sBox'][algorithm.wrapping.sBox || 'E-A'],\r\n                ephemeralPublicKey: algorithm['public'],\r\n                ukm: algorithm.ukm\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        return {\r\n            algorithm: {\r\n                wrapping: parameters[value.transportParameters.encryptionParamSet],\r\n                ukm: value.transportParameters.ukm,\r\n                'public': value.transportParameters.ephemeralPublicKey\r\n            },\r\n            sessionEncryptedKey: value.sessionEncryptedKey\r\n        };\r\n    }\r\n});\r\n\r\nvar SCGostKeyTransport = ENCLOSURE(SEQUENCE({\r\n    sessionEncryptedKey: Gost2814789EncryptedKey,\r\n    ukm: SEQUENCE({\r\n        ephemeralPublicKey: GostSubjectPublicKeyInfo,\r\n        addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))\r\n    })\r\n}), {\r\n    encode: function (value) {\r\n        var algorithm = value.algorithm;\r\n        return {\r\n            sessionEncryptedKey: value.sessionEncryptedKey,\r\n            ukm: {\r\n                ephemeralPublicKey: algorithm['public'],\r\n                addedukm: algorithm.ukm\r\n            }\r\n        };\r\n    },\r\n    decode: function (value) {\r\n        return {\r\n            algorithm: {\r\n                ukm: value.ukm.addedukm,\r\n                'public': value.ukm.ephemeralPublicKey\r\n            },\r\n            sessionEncryptedKey: value.sessionEncryptedKey\r\n        };\r\n    }\r\n});\r\n\r\nvar GostEncryptedKey = (function (typeSet) {\r\n    /**\r\n     * Gost Encrypted key encoder for CMS\r\n     *\r\n     * @class GostASN1.GostEncryptedKey\r\n     * @extends GostASN1.Sequence\r\n     * @param {AlgorithmIdentifier} algorithm\r\n     */\r\n    return function (algorithm) {\r\n        var type = typeSet[algorithm.id];\r\n        return type ? ENCAPSULATES(type) : ANY;\r\n    };\r\n})({\r\n    // Key transport algorithms\r\n    'id-sc-gostR3410-2001': SCGostKeyTransport,\r\n    'id-sc-gostR3410-94': SCGostKeyTransport,\r\n    'id-GostR3410-2001': GostR3410KeyTransport,\r\n    'id-GostR3410-94': GostR3410KeyTransport,\r\n    'id-tc26-gost3410-12-256': GostR3410KeyTransport,\r\n    'id-tc26-gost3410-12-512': GostR3410KeyTransport,\r\n    // Key agreement algorithms\r\n    'id-GostR3410-94-CryptoPro-ESDH': Gost2814789EncryptedKey,\r\n    'id-GostR3410-2001-CryptoPro-ESDH': Gost2814789EncryptedKey,\r\n    'id-tc26-agreement-gost-3410-12-256': Gost2814789EncryptedKey,\r\n    'id-tc26-agreement-gost-3410-12-512': Gost2814789EncryptedKey,\r\n    'id-sc-r3410-ESDH-r3411kdf': Gost2814789EncryptedKey,\r\n    // Key encryption key algorithms\r\n    'id-Gost28147-89-None-KeyWrap': Gost2814789EncryptedKey,\r\n    'id-Gost28147-89-CryptoPro-KeyWrap': Gost2814789EncryptedKey,\r\n    'id-sc-cmsGostWrap': Gost2814789EncryptedKey,\r\n    'id-sc-cmsGost28147Wrap': Gost2814789EncryptedKey\r\n});\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * CryptoPro Gost Private Key Store\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar GostKeyContainerContentAttributes = BIT_STRING({\r\n    kccaSoftPassword: 0,\r\n    kccaReservePrimary: 1,\r\n    kccaPrimaryKeyAbsent: 2,\r\n    kccaFKCShared: 3\r\n});\r\n\r\nvar GostPrivateKeyAttributes = BIT_STRING({\r\n    pkaExportable: 0,\r\n    pkaUserProtect: 1,\r\n    pkaExchange: 2,\r\n    pkaEphemeral: 3,\r\n    pkaNonCachable: 4,\r\n    pkaDhAllowed: 5\r\n});\r\n\r\nvar GostPrivateKeyParameters = SEQUENCE({\r\n    attributes: OPTIONAL(GostPrivateKeyAttributes),\r\n    privateKeyAlgorithm: OPTIONAL(CTX(0, IMPLICIT(KeyAlgorithmIdentifier)))\r\n});\r\n\r\nvar CertificateLink = SEQUENCE({\r\n    path: IA5String,\r\n    hmac: Gost2814789MAC\r\n});\r\n\r\nvar PasswordPolicy = AlgorithmIdentifier;\r\n\r\nvar GostKeyContainerContent = SEQUENCE({\r\n    containerAlgoritmIdentifier: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\r\n    containerName: OPTIONAL(IA5String),\r\n    attributes: GostKeyContainerContentAttributes,\r\n    primaryPrivateKeyParameters: GostPrivateKeyParameters,\r\n    hmacPassword: OPTIONAL(CTX(2, IMPLICIT(Gost2814789MAC))),\r\n    secondaryEncryptedPrivateKey: OPTIONAL(CTX(3, IMPLICIT(Gost2814789EncryptedKey))),\r\n    secondaryPrivateKeyParameters: OPTIONAL(CTX(4, IMPLICIT(GostPrivateKeyParameters))),\r\n    primaryCertificate: OPTIONAL(CTX(5, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\r\n    secondaryCertificate: OPTIONAL(CTX(6, IMPLICIT(OCTET_STRING(ENCAPSULATES(Certificate))))),\r\n    encryptionContainerName: OPTIONAL(CTX(7, IMPLICIT(IA5String))),\r\n    primaryCertificateLink: OPTIONAL(CTX(8, IMPLICIT(CertificateLink))),\r\n    secondaryCertificateLink: OPTIONAL(CTX(9, IMPLICIT(CertificateLink))),\r\n    primaryFP: OPTIONAL(CTX(10, IMPLICIT(OCTET_STRING))),\r\n    secondaryFP: OPTIONAL(CTX(11, IMPLICIT(OCTET_STRING))),\r\n    passwordPolicy: OPTIONAL(PasswordPolicy),\r\n    containerSecurityLevel: OPTIONAL(INTEGER),\r\n    extensions: OPTIONAL(CTX(12, IMPLICIT(Extensions({\r\n        keyValidity: SEQUENCE({\r\n            notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\r\n            notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\r\n        })\r\n    })))),\r\n    secondaryEncryptionContainerName: OPTIONAL(CTX(13, IMPLICIT(IA5String)))\r\n});\r\n\r\n/**\r\n * CryptoPro key container header\r\n *\r\n * @class GostASN1.GostKeyContainer\r\n * @extends GostASN1.Sequence\r\n */\r\nvar GostKeyContainer = SEQUENCE({\r\n    keyContainerContent: GostKeyContainerContent,\r\n    hmacKeyContainerContent: Gost2814789MAC\r\n});\r\n\r\n/**\r\n * CryptoPro key container name\r\n *\r\n * @class GostASN1.GostKeyContainerName\r\n * @extends GostASN1.Sequence\r\n */\r\nvar GostKeyContainerName = SEQUENCE({\r\n    containerName: IA5String,\r\n    extElem1: OPTIONAL(ANY)\r\n});\r\n\r\n/**\r\n * PrivateKey encrypted content for CryptoPro key containers\r\n *\r\n * @class GostASN1.GostPrivateKeys\r\n * @extends GostASN1.Sequence\r\n */\r\nvar GostPrivateKeys = SEQUENCE({\r\n    primaryKey: Gost2814789Key,\r\n    secondaryKey: OPTIONAL(Gost2814789Key),\r\n    hmacKey: OPTIONAL(Gost2814789MAC)\r\n});\r\n\r\n/**\r\n * PrivateKey masks for CryptoPro key containers\r\n *\r\n * @class GostASN1.GostPrivateMasks\r\n * @extends GostASN1.Sequence\r\n */\r\nvar GostPrivateMasks = SEQUENCE({\r\n    mask: Gost2814789Key,\r\n    randomStatus: OCTET_STRING,\r\n    hmacRandom: Gost2814789MAC\r\n});\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * ViPNet Gost Private Key Store\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar ViPNetKeyInfo = SEQUENCE({\r\n    keyClass: INTEGER,\r\n    keyType: INTEGER,\r\n    algorithm: OPTIONAL(CTX(0, EXPLICIT(KeyAlgorithmIdentifier))),\r\n    serialNumber: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING))),\r\n    addSerialNumber: OPTIONAL(CTX(2, EXPLICIT(OCTET_STRING))),\r\n    certSerialNumber: OPTIONAL(CTX(3, EXPLICIT(OCTET_STRING))),\r\n    subjectUID: OPTIONAL(CTX(4, EXPLICIT(OCTET_STRING))),\r\n    recipientUID: OPTIONAL(CTX(5, EXPLICIT(OCTET_STRING))),\r\n    validity: OPTIONAL(CTX(6, EXPLICIT(CHOICE({\r\n        validity: Validity,\r\n        keyValidity: SEQUENCE({\r\n            notBefore: OPTIONAL(CTX(0, IMPLICIT(GeneralizedTime))),\r\n            notAfter: OPTIONAL(CTX(1, IMPLICIT(GeneralizedTime)))\r\n        })\r\n    }, function () {\r\n        return 'keyValidity';\r\n    })))),\r\n    keyUID: OPTIONAL(CTX(7, EXPLICIT(BIT_STRING))),\r\n    flags: OPTIONAL(CTX(10, EXPLICIT(INTEGER)))\r\n});\r\n\r\n/**\r\n * ViPNet key container info\r\n *\r\n * @class GostASN1.ViPNetInfo\r\n * @extends GostASN1.Sequence\r\n */\r\nvar ViPNetInfo = SEQUENCE({\r\n    version: INTEGER,\r\n    keyInfo: ViPNetKeyInfo,\r\n    defenceKeyInfo: ViPNetKeyInfo,\r\n    certificate: OPTIONAL(CTX(0, EXPLICIT(Certificate))),\r\n    publicKey: OPTIONAL(CTX(1, EXPLICIT(OCTET_STRING)))\r\n});\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Cryptographic Message Syntax\r\n     *\r\n     * http://tools.ietf.org/html/rfc5652\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// CMS signed data\r\nvar CMSVersion = INTEGER;\r\n\r\nvar ContentType = OBJECT_IDENTIFIER;\r\n\r\nvar SigningTime = Time;\r\n\r\nvar SubjectKeyIdentifier = OCTET_STRING;\r\n\r\nvar Digest = OCTET_STRING;\r\n\r\nvar MessageAuthenticationCode = OCTET_STRING;\r\n\r\nvar BodyPartID = INTEGER;\r\n\r\nvar BodyPartPath = SEQUENCE_OF(BodyPartID);\r\n\r\nvar CMCUnsignedData = SEQUENCE({\r\n    bodyPartPath: BodyPartPath,\r\n    identifier: OBJECT_IDENTIFIER,\r\n    content: ANY\r\n}); // DEFINED BY identifier\r\n/**\r\n * SignedAttributes is a collection of attributes that are signed.  The\r\n * field is optional, but it MUST be present if the content type of\r\n * the EncapsulatedContentInfo value being signed is not id-data.\r\n * SignedAttributes MUST be DER encoded, even if the rest of the\r\n * structure is BER encoded.  Useful attribute types, such as signing\r\n * time, are defined in Section 11.  If the field is present, it MUST\r\n * contain, at a minimum, the following two attributes: <br>\r\n *\r\n * A content-type attribute having as its value the content type\r\n * of the EncapsulatedContentInfo value being signed.  Section\r\n * 11.1 defines the content-type attribute.  However, the\r\n * content-type attribute MUST NOT be used as part of a\r\n * countersignature unsigned attribute as defined in Section 11.4.<br>\r\n *\r\n * A message-digest attribute, having as its value the message\r\n * digest of the content.  Section 11.2 defines the message-digest\r\n * attribute.\r\n *\r\n * @class GostASN1.SignedAttributes\r\n * @extends GostASN1.Attributes\r\n */\r\nvar SignedAttributes = Attributes({\r\n    contentType: SET_OF_SINGLE(ContentType),\r\n    signingTime: SET_OF_SINGLE(SigningTime),\r\n    messageDigest: SET_OF_SINGLE(OCTET_STRING)\r\n});\r\n\r\nvar UnsignedAttributes = Attributes(function (type) {\r\n    /**\r\n     * UnsignedAttributes is a collection of attributes that are not signed.\r\n     * The field is optional.  Useful attribute types, such as\r\n     * countersignatures.\r\n     *\r\n     * @class GostASN1.UnsignedAttributes\r\n     * @extends GostASN1.Attributes\r\n     */\r\n    //    var UnsignedAttributes = Attributes({\r\n    //        countersignature: SET_OF(Countersignature), // -- check forward\r\n    //        unsignedData: SET_OF(CMCUnsignedData)\r\n    //    });\r\n    return ({\r\n        countersignature: SET_OF(Countersignature), // recursion\r\n        unsignedData: SET_OF(CMCUnsignedData)\r\n    })[type];\r\n});\r\n\r\nvar AuthAttributes = SignedAttributes,\r\n  UnauthAttributes = Attributes,\r\n  UnprotectedAttributes = Attributes;\r\n\r\nvar IssuerAndSerialNumber = SEQUENCE({\r\n    issuer: Name,\r\n    serialNumber: CertificateSerialNumber\r\n});\r\n\r\nvar SignerIdentifier = CHOICE({\r\n    issuerAndSerialNumber: IssuerAndSerialNumber,\r\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))\r\n}, function (value) {\r\n    return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\r\n});\r\n\r\nvar SignerInfo = SEQUENCE({\r\n    version: CMSVersion,\r\n    sid: SignerIdentifier,\r\n    digestAlgorithm: DigestAlgorithmIdentifier,\r\n    signedAttrs: OPTIONAL(CTX(0, IMPLICIT(SignedAttributes))),\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: OCTET_STRING,\r\n    unsignedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnsignedAttributes)))\r\n});\r\n\r\nvar Countersignature = SignerInfo,\r\n  SignerInfos = SET_OF(SignerInfo),\r\n  DigestAlgorithmIdentifiers = SET_OF(DigestAlgorithmIdentifier),\r\n  AttributeCertificateV2 = AttributeCertificate;\r\n\r\nvar ExtendedCertificateInfo = COMBINE(SEQUENCE({\r\n    version: CMSVersion,\r\n    certificate: Certificate,\r\n    attributes: UnauthAttributes\r\n}));\r\n\r\nvar ExtendedCertificate = SEQUENCE({\r\n    extendedCertificateInfo: ExtendedCertificateInfo,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n});\r\n\r\nvar OtherCertificateFormat = SEQUENCE({\r\n    otherCertFormat: OBJECT_IDENTIFIER,\r\n    otherCert: ANY\r\n});\r\n\r\nvar AttributeCertificateInfoV1 = COMBINE(SEQUENCE({\r\n    version: INTEGER,\r\n    subject: CHOICE({\r\n        baseCertificateID: CTX(0, IMPLICIT(IssuerSerial)), // associated with a Public Key Certificate\r\n        subjectName: CTX(1, IMPLICIT(GeneralNames))\r\n    }, function (value) {\r\n        return value.issuer ? 'baseCertificateID' : 'subjectName';\r\n    }), //associated with a name\r\n    issuer: GeneralNames,\r\n    signature: SignatureAlgorithmIdentifier,\r\n    serialNumber: CertificateSerialNumber,\r\n    attCertValidityPeriod: AttCertValidityPeriod,\r\n    attributes: AttributeSequence,\r\n    issuerUniqueID: OPTIONAL(UniqueIdentifier),\r\n    extensions: OPTIONAL(CertExtensions)\r\n}));\r\n\r\nvar AttributeCertificateV1 = SEQUENCE({\r\n    acInfo: AttributeCertificateInfoV1,\r\n    signatureAlgorithm: SignatureAlgorithmIdentifier,\r\n    signatureValue: BIT_STRING\r\n});\r\n\r\nvar EncapsulatedContentInfo = SEQUENCE({\r\n    eContentType: ContentType,\r\n    eContent: OPTIONAL(CTX(0, EXPLICIT(OCTET_STRING)))\r\n});\r\n\r\nvar CertificateChoices = CHOICE({\r\n    certificate: Certificate,\r\n    extendedCertificate: CTX(0, IMPLICIT(ExtendedCertificate)), // Obsolete\r\n    v1AttrCert: CTX(1, IMPLICIT(AttributeCertificateV1)), // Obsolete\r\n    v2AttrCert: CTX(2, IMPLICIT(AttributeCertificateV2)),\r\n    other: CTX(3, IMPLICIT(OtherCertificateFormat))\r\n}, function (value) {\r\n    return value.holder ? 'AttributeCertificateV2' : value.certificate ?\r\n      'ExtendedCertificate' : value.otherCertFormat ? 'other' :\r\n        'certificate';\r\n});\r\n\r\nvar OtherRevocationInfoFormat = SEQUENCE({\r\n    otherRevInfoFormat: OBJECT_IDENTIFIER,\r\n    otherRevInfo: ANY\r\n});\r\n\r\nvar RevocationInfoChoice = CHOICE({\r\n    crl: CertificateList,\r\n    other: CTX(1, IMPLICIT(OtherRevocationInfoFormat))\r\n}, function (value) {\r\n    return value.otherRevInfoFormat ? 'other' : 'crl';\r\n});\r\n\r\nvar CertificateSet = SET_OF(CertificateChoices),\r\n  RevocationInfoChoices = SET_OF(RevocationInfoChoice);\r\n\r\n/**\r\n * The signed-data content type consists of a content of any type and zero or more\r\n * signature values.  Any number of signers in parallel can sign any type of content.<br><br>\r\n *\r\n * The signed-data content type shall have ASN.1 type SignedData:<br><br>\r\n *<pre>\r\n *\r\n *      SignedData ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        digestAlgorithms DigestAlgorithmIdentifiers,\r\n     *        encapContentInfo EncapsulatedContentInfo,\r\n     *        certificates [0] IMPLICIT CertificateSet OPTIONAL,\r\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\r\n     *        signerInfos SignerInfos }\r\n *\r\n *      DigestAlgorithmIdentifiers ::= SET OF DigestAlgorithmIdentifier\r\n *\r\n *      SignerInfos ::= SET OF SignerInfo\r\n *\r\n *       EncapsulatedContentInfo ::= SEQUENCE {\r\n     *        eContentType ContentType,\r\n     *        eContent [0] EXPLICIT OCTET STRING OPTIONAL }\r\n *\r\n *</pre>\r\n * Per-signer information is represented in the type SignerInfo:<br><br>\r\n *<pre>\r\n *\r\n *      SignerInfo ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        sid SignerIdentifier,\r\n     *        digestAlgorithm DigestAlgorithmIdentifier,\r\n     *        signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\r\n     *        signatureAlgorithm SignatureAlgorithmIdentifier,\r\n     *        signature SignatureValue,\r\n     *        unsignedAttrs [1] IMPLICIT UnsignedAttributes OPTIONAL }\r\n *\r\n *      SignerIdentifier ::= CHOICE {\r\n     *        issuerAndSerialNumber IssuerAndSerialNumber,\r\n     *        subjectKeyIdentifier [0] SubjectKeyIdentifier }\r\n *\r\n *      SignedAttributes ::= SET SIZE (1..MAX) OF Attribute\r\n *\r\n *      UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute\r\n *\r\n *     SignatureValue ::= OCTET STRING\r\n *\r\n *</pre>\r\n * See also {@link GostASN1.SignedAttributes} and {@link GostASN1.UnsignedAttributes}\r\n * @class GostASN1.SignedData\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number\r\n * @property {AlgorithmIdentifier[]} digestAlgorithms Collection of message digest algorithm identifiers\r\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\r\n * @property {GostASN1.Certificate[]} certificates Certificates\r\n * @property {GostASN1.CertificateList[]} crls Certificates\r\n * @property {GostASN1.Sequence[]} signerInfos The Signer information\r\n */\r\nvar SignedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    digestAlgorithms: DigestAlgorithmIdentifiers,\r\n    encapContentInfo: EncapsulatedContentInfo,\r\n    certificates: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\r\n    crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices))),\r\n    signerInfos: SignerInfos\r\n});\r\n\r\nvar RecipientIdentifier = CHOICE({\r\n    issuerAndSerialNumber: IssuerAndSerialNumber,\r\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier))\r\n}, function (value) {\r\n    return isBinary(value) ? 'subjectKeyIdentifier' : 'issuerAndSerialNumber';\r\n});\r\n\r\nvar KeyTransRecipientInfo = SEQUENCE({\r\n    version: CMSVersion, // always set to 0 or 2\r\n    rid: RecipientIdentifier,\r\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\r\n    encryptedKey: EncryptedKey\r\n});\r\n\r\nvar OtherKeyAttribute = SEQUENCE({\r\n    keyAttrId: OBJECT_IDENTIFIER,\r\n    keyAttr: OPTIONAL(ANY)\r\n});\r\n\r\nvar RecipientKeyIdentifier = SEQUENCE({\r\n    subjectKeyIdentifier: SubjectKeyIdentifier,\r\n    date: OPTIONAL(GeneralizedTime),\r\n    other: OPTIONAL(OtherKeyAttribute)\r\n});\r\n\r\nvar KeyAgreeRecipientIdentifier = CHOICE({\r\n    issuerAndSerialNumber: IssuerAndSerialNumber,\r\n    rKeyId: CTX(0, IMPLICIT(RecipientKeyIdentifier))\r\n}, function (value) {\r\n    return isBinary(value) ? 'rKeyId' : 'issuerAndSerialNumber';\r\n});\r\n\r\nvar RecipientEncryptedKey = SEQUENCE({\r\n    rid: KeyAgreeRecipientIdentifier,\r\n    encryptedKey: EncryptedKey\r\n});\r\n\r\nvar RecipientEncryptedKeys = SEQUENCE_OF(RecipientEncryptedKey);\r\n\r\nvar OriginatorPublicKey = SEQUENCE({\r\n    algorithm: KeyAlgorithmIdentifier,\r\n    publicKey: BIT_STRING\r\n});\r\n\r\nvar MQVuserKeyingMaterial = SEQUENCE({// ECC rfc5753 KeyAgreeRecipientInfo in ukm\r\n    ephemeralPublicKey: OriginatorPublicKey,\r\n    addedukm: OPTIONAL(CTX(0, EXPLICIT(UserKeyingMaterial)))\r\n});\r\n\r\nvar OriginatorIdentifierOrKey = CHOICE({\r\n    issuerAndSerialNumber: IssuerAndSerialNumber,\r\n    subjectKeyIdentifier: CTX(0, IMPLICIT(SubjectKeyIdentifier)),\r\n    originatorKey: CTX(1, IMPLICIT(OriginatorPublicKey))\r\n}, function (value) {\r\n    return isBinary(value) ? 'subjectKeyIdentifier' : value.algorithm ?\r\n      'originatorKey' : 'issuerAndSerialNumber';\r\n});\r\n\r\nvar KeyAgreeRecipientInfo = SEQUENCE({\r\n    version: CMSVersion, // always set to 3\r\n    originator: CTX(0, EXPLICIT(OriginatorIdentifierOrKey)),\r\n    ukm: OPTIONAL(CTX(1, EXPLICIT(UserKeyingMaterial))),\r\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\r\n    recipientEncryptedKeys: RecipientEncryptedKeys\r\n});\r\n\r\nvar KEKIdentifier = SEQUENCE({\r\n    keyIdentifier: OCTET_STRING,\r\n    date: OPTIONAL(GeneralizedTime),\r\n    other: OPTIONAL(OtherKeyAttribute)\r\n});\r\n\r\nvar KEKRecipientInfo = SEQUENCE({\r\n    version: CMSVersion, // always set to 4\r\n    kekid: KEKIdentifier,\r\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\r\n    encryptedKey: EncryptedKey\r\n});\r\n\r\nvar PasswordRecipientInfo = SEQUENCE({\r\n    version: CMSVersion, // always set to 0\r\n    friendlyName: OPTIONAL(CTX(0, IMPLICIT(KeyDerivationAlgorithmIdentifier))),\r\n    keyEncryptionAlgorithm: KeyEncryptionAlgorithmIdentifier,\r\n    encryptedKey: EncryptedKey\r\n});\r\n\r\nvar OtherRecipientInfo = SEQUENCE({\r\n    oriType: OBJECT_IDENTIFIER,\r\n    oriValue: ANY\r\n});\r\n\r\nvar RecipientInfo = CHOICE({\r\n    ktri: KeyTransRecipientInfo,\r\n    kari: CTX(1, IMPLICIT(KeyAgreeRecipientInfo)),\r\n    kekri: CTX(2, IMPLICIT(KEKRecipientInfo)),\r\n    pwri: CTX(3, IMPLICIT(PasswordRecipientInfo)),\r\n    ori: CTX(4, IMPLICIT(OtherRecipientInfo))\r\n}, function (value) {\r\n    return value.rid ? 'ktri' : value.originator ? 'kari' :\r\n      value.kekid ? 'kekri' : value.oriType ? 'ori' : 'pwri';\r\n});\r\n\r\nvar OriginatorInfo = SEQUENCE({\r\n    certs: OPTIONAL(CTX(0, IMPLICIT(CertificateSet))),\r\n    crls: OPTIONAL(CTX(1, IMPLICIT(RevocationInfoChoices)))\r\n});\r\n\r\nvar RecipientInfos = SET_OF(RecipientInfo);\r\n\r\n// EncryptedContentInfo\r\nvar EncryptedContentInfo = SEQUENCE({\r\n    contentType: ContentType,\r\n    contentEncryptionAlgorithm: ContentEncryptionAlgorithmIdentifier,\r\n    encryptedContent: OPTIONAL(CTX(0, IMPLICIT(EncryptedContent)))\r\n});\r\n\r\n/**\r\n * The enveloped-data content type consists of an encrypted content of\r\n * any type and encrypted content-encryption keys for one or more\r\n * recipients.  The combination of the encrypted content and one\r\n * encrypted content-encryption key for a recipient is a \"digital\r\n * envelope\" for that recipient.  Any type of content can be enveloped\r\n * for an arbitrary number of recipients using any of the supported key\r\n * management techniques for each recipient.<br><br>\r\n *\r\n * The typical application of the enveloped-data content type will\r\n * represent one or more recipients' digital envelopes on content of the\r\n * data or signed-data content types.<br><br>\r\n * <pre>\r\n *\r\n *      EnvelopedData ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\r\n     *        recipientInfos RecipientInfos,\r\n     *        encryptedContentInfo EncryptedContentInfo,\r\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\r\n *\r\n *      OriginatorInfo ::= SEQUENCE {\r\n     *        certs [0] IMPLICIT CertificateSet OPTIONAL,\r\n     *        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }\r\n *\r\n *      RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo\r\n *\r\n *      EncryptedContentInfo ::= SEQUENCE {\r\n     *        contentType ContentType,\r\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\r\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\r\n *\r\n *      EncryptedContent ::= OCTET STRING\r\n *\r\n *      UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute\r\n *\r\n * </pre>\r\n * @class GostASN1.EnvelopedData\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number\r\n * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\r\n * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information.\r\n * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\r\n * @property {Attributes} unprotectedAttrs The unprotected attributes\r\n */\r\nvar EnvelopedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\r\n    recipientInfos: RecipientInfos,\r\n    encryptedContentInfo: EncryptedContentInfo,\r\n    unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))\r\n});\r\n\r\n/**\r\n * The digested-data content type consists of content of any type and a\r\n * message digest of the content.<br><br>\r\n * Typically, the digested-data content type is used to provide content\r\n * integrity, and the result generally becomes an input to the\r\n * enveloped-data content type.<br><br>\r\n * <pre>\r\n *\r\n *      DigestedData ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        digestAlgorithm DigestAlgorithmIdentifier,\r\n     *        encapContentInfo EncapsulatedContentInfo,\r\n     *        digest Digest }\r\n *\r\n *      Digest ::= OCTET STRING\r\n *\r\n *</pre>\r\n * @class GostASN1.DigestedData\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number\r\n * @property {AlgorithmIdentifier} digestAlgorithm Message digest algorithm identifier\r\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\r\n * @property {CryptoOperationData} digest The degist\r\n */\r\nvar DigestedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    digestAlgorithm: DigestAlgorithmIdentifier,\r\n    encapContentInfo: EncapsulatedContentInfo,\r\n    digest: Digest\r\n});\r\n\r\n/**\r\n * The encrypted-data content type consists of encrypted content of any\r\n * type.  Unlike the enveloped-data content type, the encrypted-data\r\n * content type has neither recipients nor encrypted content-encryption\r\n * keys.  Keys MUST be managed by other means.<br><br>\r\n *\r\n * The typical application of the encrypted-data content type will be to\r\n * encrypt the content of the data content type for local storage,\r\n * perhaps where the encryption key is derived from a password.<br><br>\r\n * <pre>\r\n *\r\n *      EncryptedData ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        encryptedContentInfo EncryptedContentInfo,\r\n     *        unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }\r\n *\r\n *      EncryptedContentInfo ::= SEQUENCE {\r\n     *        contentType ContentType,\r\n     *        contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\r\n     *        encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL }\r\n *\r\n *      EncryptedContent ::= OCTET STRING\r\n *\r\n * </pre>\r\n * @class GostASN1.EncryptedData\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number\r\n * @property {GostASN1.Sequence} encryptedContentInfo The content is represented in the type EncryptedContentInfo\r\n * @property {Attributes} unprotectedAttrs The unprotected attributes\r\n */\r\nvar EncryptedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    encryptedContentInfo: EncryptedContentInfo,\r\n    unprotectedAttrs: OPTIONAL(CTX(1, IMPLICIT(UnprotectedAttributes)))\r\n});\r\n\r\n/**\r\n * The authenticated-data content type consists of content of any type,\r\n * a message authentication code (MAC), and encrypted authentication\r\n * keys for one or more recipients.  The combination of the MAC and one\r\n * encrypted authentication key for a recipient is necessary for that\r\n * recipient to verify the integrity of the content.  Any type of\r\n * content can be integrity protected for an arbitrary number of\r\n * recipients.<br><br>\r\n * <pre>\r\n *\r\n *      AuthenticatedData ::= SEQUENCE {\r\n     *        version CMSVersion,\r\n     *        originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\r\n     *        recipientInfos RecipientInfos,\r\n     *        macAlgorithm MessageAuthenticationCodeAlgorithm,\r\n     *        digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\r\n     *        encapContentInfo EncapsulatedContentInfo,\r\n     *        authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,\r\n     *        mac MessageAuthenticationCode,\r\n     *        unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }\r\n *\r\n *      AuthAttributes ::= SET SIZE (1..MAX) OF Attribute\r\n *\r\n *      UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute\r\n *\r\n *      MessageAuthenticationCode ::= OCTET STRING\r\n *\r\n * </pre>\r\n * @class GostASN1.AuthenticatedData\r\n * @extends GostASN1.Sequence\r\n * @property {number} version The syntax version number\r\n * @property {GostASN1.Sequence} originatorInfo Optionally provides information about the originator.\r\n * @property {GostASN1.Sequence[]} recipientInfos Collection of per-recipient information.\r\n * @property {AlgorithmIdentifier} macAlgorithm Identifies the Message Authentication Code algorithm\r\n * @property {AlgorithmIdentifier} digestAlgorithm Identifies the Digest algorithm\r\n * @property {GostASN1.Sequence} encapContentInfo The content is represented in the type EncapsulatedContentInfo\r\n * @property {Attributes} authAttrs The autheniticated attributes\r\n * @property {CryptoOpertionData} mac The Message Authentication Code\r\n * @property {Attributes} unauthAttrs The unautheniticated attributes\r\n */\r\nvar AuthenticatedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\r\n    recipientInfos: RecipientInfos,\r\n    macAlgorithm: MessageAuthenticationCodeAlgorithm,\r\n    digestAlgorithm: OPTIONAL(CTX(1, DigestAlgorithmIdentifier)),\r\n    encapContentInfo: EncapsulatedContentInfo,\r\n    authAttrs: OPTIONAL(CTX(2, IMPLICIT(AuthAttributes))),\r\n    mac: MessageAuthenticationCode,\r\n    unauthAttrs: OPTIONAL(CTX(3, IMPLICIT(UnauthAttributes)))\r\n});\r\n\r\n// AuthEnvelopedData RFC 5911\r\nvar AuthEnvelopedData = SEQUENCE({\r\n    version: CMSVersion,\r\n    originatorInfo: OPTIONAL(CTX(0, IMPLICIT(OriginatorInfo))),\r\n    recipientInfos: RecipientInfos,\r\n    authEncryptedContentInfo: EncryptedContentInfo,\r\n    authAttrs: OPTIONAL(CTX(1, IMPLICIT(AuthAttributes))),\r\n    mac: MessageAuthenticationCode,\r\n    unauthAttrs: OPTIONAL(CTX(2, IMPLICIT(UnauthAttributes)))\r\n});\r\n\r\n// EncryptedKeyPackage rfc6032\r\nvar EncryptedKeyPackage = CHOICE({\r\n    encrypted: EncryptedData,\r\n    enveloped: CTX(0, IMPLICIT(EnvelopedData)),\r\n    authEnveloped: CTX(1, IMPLICIT(AuthEnvelopedData))\r\n}, function (value) {\r\n    return value.encryptedContentInfo ? (value.recipientInfos ?\r\n      'enveloped' : 'encrypted') : 'authEnveloped';\r\n});\r\n\r\n/**\r\n * Cryptographic Message Syntax<br>\r\n * The CMS associates a content type identifier with a content. The syntax\r\n * MUST have ASN.1 type ContentInfo:\r\n * <pre>\r\n *\r\n *  ContentInfo ::= SEQUENCE {\r\n     *    contentType ContentType,\r\n     *    content [0] EXPLICIT ANY DEFINED BY contentType }\r\n *\r\n *  ContentType ::= OBJECT IDENTIFIER\r\n *\r\n * </pre>\r\n * The fields of ContentInfo have the following meanings:\r\n * <ul>\r\n * <li>contentType indicates the type of the associated content.  It is\r\n * an object identifier; it is a unique string of integers assigned\r\n * by an authority that defines the content type.</li>\r\n * <li>content is the associated content.  The type of content can be\r\n * determined uniquely by contentType.  Content types for data,\r\n * signed-data, enveloped-data, digested-data, encrypted-data, and\r\n * authenticated-data are defined in this document.  If additional\r\n * content types are defined in other documents, the ASN.1 type\r\n * defined SHOULD NOT be a CHOICE type.</li>\r\n * </ul>\r\n * RFC 5652 references {@link http://tools.ietf.org/html/rfc5652}\r\n *\r\n * @class GostASN1.ContentInfo\r\n * @extends GostASN1.Sequence\r\n * @property {string} contentType The content type identifier\r\n * @property {(GostASN1.Sequence|CryptoOperationData)} content The content\r\n */\r\nvar ContentType = OBJECT_IDENTIFIER;\r\n\r\nvar ContentInfo = ATTRIBUTE({\r\n    contentType: ContentType,\r\n    content: function (type) {\r\n        return CTX(0, EXPLICIT(type));\r\n    }\r\n}, 'contentType', 'content', undefined, 'CMS')({\r\n    data: OCTET_STRING,\r\n    signedData: COMBINE(SignedData),\r\n    envelopedData: COMBINE(EnvelopedData),\r\n    digestedData: COMBINE(DigestedData),\r\n    encryptedData: COMBINE(EncryptedData),\r\n    authData: COMBINE(AuthenticatedData),\r\n    encryptedKeyPkg: COMBINE(EncryptedKeyPackage),\r\n    aKeyPackage: COMBINE(AsymmetricKeyPackage)\r\n});\r\n\r\nvar DigestInfo = SEQUENCE({\r\n    digestAlgorithm: DigestAlgorithmIdentifier,\r\n    digest: Digest\r\n});\r\n// </editor-fold>\r\n\r\n/*\r\n     * PFX format syntax PKCS#12\r\n     *\r\n     * http://tools.ietf.org/html/rfc7292\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar PKCS12Attributes = Attributes({\r\n    friendlyName: SET_OF_SINGLE(BMPString),\r\n    keyProviderNameAttr: SET_OF_SINGLE(BMPString),\r\n    localKeyId: SET_OF_SINGLE(OCTET_STRING),\r\n    certKeyIdentifierPropId: SET_OF_SINGLE(OCTET_STRING)\r\n});\r\n\r\nvar SafeBagType = OBJECT_IDENTIFIER;\r\n\r\nvar CertType = OBJECT_IDENTIFIER;\r\n\r\nvar CRLType = OBJECT_IDENTIFIER;\r\n\r\nvar SecretType = OBJECT_IDENTIFIER;\r\n\r\nvar KeyBag = PrivateKeyInfo;\r\n\r\nvar PKCS8ShroudedKeyBag = EncryptedPrivateKeyInfo;\r\n\r\nvar CertBag = ATTRIBUTE({\r\n    certId: CertType,\r\n    certValue: function (type) {\r\n        return CTX(0, EXPLICIT(type));\r\n    }\r\n}, 'certId', 'certValue')({\r\n    // DER-encoded X.509 certificate stored in OCTET STRING\r\n    x509Certificate: OCTET_STRING(ENCAPSULATES(Certificate)),\r\n    // Base64-encoded SDSI certificate stored in IA5String\r\n    sdsiCertificate: IA5String\r\n}, OCTET_STRING);\r\n\r\nvar CRLBag = ATTRIBUTE({\r\n    crlId: CRLType,\r\n    crlValue: function (type) {\r\n        return CTX(0, EXPLICIT(type));\r\n    }\r\n}, 'crlId', 'crlValue')({\r\n    // DER-encoded X.509 certificate stored in OCTET STRING\r\n    x509CRL: OCTET_STRING(ENCAPSULATES(CertificateList))\r\n}, OCTET_STRING);\r\n\r\nvar SecretBag = ATTRIBUTE({\r\n    secretTypeId: SecretType,\r\n    secretValue: function (type) {\r\n        return CTX(0, EXPLICIT(type));\r\n    }\r\n}, 'secretTypeId', 'secretValue')({\r\n    secret: OCTET_STRING\r\n}, OCTET_STRING);\r\n\r\nvar SafeBag = ATTRIBUTE({\r\n    bagId: SafeBagType,\r\n    bagValue: function (type) {\r\n        return CTX(0, EXPLICIT(type));\r\n    },\r\n    bagAttributes: OPTIONAL(PKCS12Attributes)\r\n}, 'bagId', 'bagValue')(function (type) {\r\n    return ({\r\n        keyBag: KeyBag,\r\n        pkcs8ShroudedKeyBag: PKCS8ShroudedKeyBag,\r\n        certBag: CertBag,\r\n        crlBag: CRLBag,\r\n        secretBag: SecretBag,\r\n        safeContentsBag: SafeContents // recursion\r\n    })[type];\r\n});\r\n\r\n/**\r\n * The SafeContents Type<br><br>\r\n *\r\n * The sixth type of bag that can be held in a SafeBag is a\r\n * SafeContents. This recursive structure allows for arbitrary nesting\r\n * of multiple KeyBags, PKCS8ShroudedKeyBags, CertBags, CRLBags, and\r\n * SecretBags within the top-level SafeContents.\r\n * <pre>\r\n *  SafeContents ::= SEQUENCE OF SafeBag\r\n *   SafeBag ::= SEQUENCE {\r\n     *       bagId BAG-TYPE.&id ({PKCS12BagSet})\r\n     *       bagValue [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\r\n     *       bagAttributes SET OF PKCS12Attribute OPTIONAL\r\n     *   }\r\n *\r\n *   PKCS12Attribute ::= SEQUENCE {\r\n     *       attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\r\n     *       attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\r\n     *   } -- This type is compatible with the X.500 type ’Attribute’\r\n *\r\n *   PKCS12AttrSet ATTRIBUTE ::= {\r\n     *       friendlyName | -- from PKCS #9 [23]\r\n     *       localKeyId, -- from PKCS #9\r\n     *       ... -- Other attributes are allowed\r\n     *   }\r\n * </pre>\r\n * The SafeContents type is made up of SafeBags. Each SafeBag holds one\r\n * piece of information -- a key, a certificate, etc. -- which is\r\n * identified by an object identifier.<br><br>\r\n *\r\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\r\n *\r\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\r\n * @class GostASN1.SafeContents\r\n */\r\nvar SafeContents = SEQUENCE_OF(SafeBag);\r\n\r\n/**\r\n * The AuthenticatedSafe<br><br>\r\n * Each compliant platform shall be able to import and export\r\n * AuthenticatedSafe PDUs wrapped in PFX PDUs.<br>\r\n * For integrity, the AuthenticatedSafe is either signed (if public-key\r\n * integrity mode is used) or MACed (if password integrity mode is used)\r\n * to produce a PFX PDU.\r\n * <pre>\r\n *      AuthenticatedSafe ::= SEQUENCE OF ContentInfo\r\n *\r\n *      -- Data if unencrypted\r\n *      -- EncryptedData if password-encrypted\r\n *      -- EnvelopedData if public key-encrypted\r\n * </pre>\r\n * As mentioned, the contentType field of authSafe shall be of type data\r\n * or signedData. The content field of the authSafe shall, either\r\n * directly (data case) or indirectly (signedData case), contain a BER-\r\n * encoded value of type AuthenticatedSafe.<br><br>\r\n *\r\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PFX}<br><br>\r\n *\r\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\r\n *\r\n * @class GostASN1.AuthenticatedSafe\r\n */\r\nvar AuthenticatedSafe = SEQUENCE_OF(ContentInfo);\r\n\r\nvar MacData = SEQUENCE({\r\n    mac: DigestInfo,\r\n    macSalt: OCTET_STRING,\r\n    // Note: The default is for historical reasons and its use is deprecated.\r\n    iterations: DEFAULT(INTEGER, 1)\r\n});\r\n\r\n/**\r\n * PFX format syntax<br><br>\r\n *\r\n * This format corresponds to the data model presented above, with\r\n * wrappers for privacy and integrity. This section makes free\r\n * reference to PKCS #7 {@link GostASN1.ContentInfo}<br>\r\n * All modes of direct exchange use the same PDU format.  ASN.1 and BER-\r\n * encoding ensure platform independence.<br>\r\n * This standard has one ASN.1 export: PFX.  This is the outer integrity\r\n * wrapper.<br><br>\r\n * Instances of PFX contain:\r\n *  <ol>\r\n *  <li>A version indicator.  The version shall be v3 for this version of\r\n *      this document.</li>\r\n *  <li>A PKCS #7 ContentInfo, whose contentType is signedData in public-\r\n *      key integrity mode and data in password integrity mode.</li>\r\n *  <li>An optional instance of MacData, present only in password\r\n *      integrity.  This object, if present, contains a PKCS #7\r\n *      DigestInfo, which holds the MAC value, a macSalt, and an\r\n *      iterationCount.  As described in Appendix B, the MAC key is\r\n *      derived from the password, the macSalt, and the iterationCount;\r\n *      the MAC is computed from the authSafe value and the MAC key via HMAC.\r\n *      The password and the MAC key are not actually present anywhere in the PFX.\r\n *      The salt and (to a certain extent) the iteration count thwarts dictionary\r\n *      attacks against the integrity password. </li>\r\n *  </ol>\r\n *  <pre>\r\n *  PFX ::= SEQUENCE {\r\n     *      version     INTEGER {v3(3)}(v3,...),\r\n     *      authSafe    ContentInfo,\r\n     *      macData     MacData OPTIONAL\r\n     *  }\r\n *\r\n *  MacData ::= SEQUENCE {\r\n     *      mac         DigestInfo,\r\n     *      macSalt     OCTET STRING,\r\n     *      iterations  INTEGER DEFAULT 1\r\n     *      -- Note: The default is for historical reasons and its\r\n     *      --       use is deprecated.\r\n     *  }\r\n *  </pre>\r\n * See {@link GostASN1.ContentInfo}<br><br>\r\n *\r\n * RFC 7292 references {@link http://tools.ietf.org/html/rfc7292}\r\n * @class GostASN1.PFX\r\n * @extends GostASN1.Sequence\r\n * @property {number} version Encoded version number\r\n * @property {GostASN1.ContentInfo} authSafe ContentInfo with {@link GostASN1.AuthenticatedSafe} content\r\n */\r\nvar PFX = SEQUENCE({\r\n    version: INTEGER,\r\n    authSafe: ContentInfo,\r\n    macData: OPTIONAL(MacData)\r\n}, 'PFX');\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate Request Message Format\r\n     *\r\n     * http://tools.ietf.org/html/rfc4211\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar RegToken = UTF8String;\r\n\r\nvar Authenticator = UTF8String;\r\n\r\nvar CertId = SEQUENCE({\r\n    issuer: GeneralName,\r\n    serialNumber: INTEGER\r\n});\r\nvar OldCertId = CertId;\r\n\r\nvar ProtocolEncrKey = SubjectPublicKeyInfo;\r\n\r\nvar EncryptedValue = SEQUENCE({\r\n    // the intended algorithm for which the value will be used\r\n    intendedAlg: OPTIONAL(CTX(0, IMPLICIT(AlgorithmIdentifier))),\r\n    // the symmetric algorithm used to encrypt the value\r\n    symmAlg: OPTIONAL(CTX(1, IMPLICIT(AlgorithmIdentifier))),\r\n    // the (encrypted) symmetric key used to encrypt the value\r\n    encSymmKey: OPTIONAL(CTX(2, IMPLICIT(BIT_STRING))),\r\n    // algorithm used to encrypt the symmetric key\r\n    keyAlg: OPTIONAL(CTX(3, IMPLICIT(AlgorithmIdentifier))),\r\n    valueHint: OPTIONAL(CTX(4, IMPLICIT(OCTET_STRING))),\r\n    // a brief description or identifier of the encValue content\r\n    // (may be meaningful only to the sending entity, and used only\r\n    // if EncryptedValue might be re-examined by the sending entity\r\n    // in the future)\r\n    encValue: BIT_STRING\r\n});\r\nvar KeyGenParameters = OCTET_STRING;\r\n\r\n// The encrypted private key MUST be placed in the envelopedData\r\n// encryptedContentInfo encryptedContent OCTET STRING.\r\nvar EncryptedKey = CHOICE({\r\n    encryptedValue: EncryptedValue, // Deprecated\r\n    envelopedData: CTX(0, IMPLICIT(EnvelopedData))\r\n}, function (value) {\r\n    return value.encryptedContentInfo ? 'envelopedData' : 'encryptedValue';\r\n});\r\n\r\nvar PKIArchiveOptions = CHOICE({\r\n    // the actual value of the private key\r\n    encryptedPrivKey: CTX(0, EncryptedKey),\r\n    // parameters that allow the private key to be re-generated\r\n    keyGenParameters: CTX(1, IMPLICIT(KeyGenParameters)),\r\n    // set to TRUE if sender wishes receiver to archive the private\r\n    // key of a key pair that the receiver generates in response to\r\n    // this request; set to FALSE if no archival is desired.\r\n    archiveRemGenPrivKey: CTX(2, IMPLICIT(BOOLEAN))\r\n});\r\n\r\nvar SinglePubInfo = SEQUENCE({\r\n    pubMethod: INTEGER({\r\n        dontCare: 0,\r\n        x500: 1,\r\n        web: 2,\r\n        ldap: 3\r\n    }),\r\n    pubLocation: OPTIONAL(GeneralName)\r\n});\r\n\r\n// pubInfos MUST NOT be present if action is \"dontPublish\"\r\n// (if action is \"pleasePublish\" and pubInfos is omitted,\r\n// \"dontCare\" is assumed)\r\nvar PKIPublicationInfo = SEQUENCE({\r\n    action: INTEGER({\r\n        dontPublish: 0,\r\n        pleasePublish: 1\r\n    }),\r\n    pubInfos: OPTIONAL(SEQUENCE_OF(SinglePubInfo))\r\n});\r\n\r\nvar SubsequentMessage = INTEGER({\r\n    // requests that resulting certificate be encrypted for the\r\n    // end entity (following which, POP will be proven in a\r\n    // confirmation message)\r\n    encrCert: 0,\r\n    // requests that CA engage in challenge-response exchange with\r\n    // end entity in order to prove private key possession\r\n    challengeResp: 1\r\n});\r\n\r\nvar POPOPrivKey = CHOICE({\r\n    // possession is proven in this message (which contains the private\r\n    // key itself (encrypted for the CA))\r\n    thisMessage: CTX(0, IMPLICIT(BIT_STRING)), // Deprecated\r\n    subsequentMessage: CTX(1, IMPLICIT(SubsequentMessage)),\r\n    // possession will be proven in a subsequent message\r\n    dhMAC: CTX(2, IMPLICIT(BIT_STRING)), // Deprecated\r\n    agreeMAC: CTX(3, IMPLICIT(PKMACValue)),\r\n    encryptedKey: CTX(4, IMPLICIT(EnvelopedData))\r\n});\r\n\r\nvar PBMParameter = SEQUENCE({\r\n    salt: OCTET_STRING,\r\n    // AlgId for a One-Way Function (SHA-1 recommended)\r\n    owf: AlgorithmIdentifier,\r\n    // number of times the OWF is applied\r\n    iterationCount: INTEGER,\r\n    // the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11], or HMAC [HMAC, RFC2202])\r\n    mac: AlgorithmIdentifier\r\n});\r\n\r\nvar PKMACValue = SEQUENCE({\r\n    // algorithm value shall be PasswordBasedMac {1 2 840 113533 7 66 13}\r\n    // parameter value is PBMParameter\r\n    algId: AlgorithmIdentifier,\r\n    value: BIT_STRING\r\n});\r\n\r\nvar POPOSigningKeyInput = SEQUENCE({\r\n    authInfo: CHOICE({\r\n        // used only if an authenticated identity has been\r\n        // established for the sender (e.g., a DN from a\r\n        // previously-issued and currently-valid certificate)\r\n        sender: CTX(0, EXPLICIT(GeneralName)), // GeneralName choice - explicit\r\n        // used if no authenticated GeneralName currently exists for\r\n        // the sender; publicKeyMAC contains a password-based MAC\r\n        // on the DER-encoded value of publicKey\r\n        publicKeyMAC: PKMACValue\r\n    }),\r\n    publicKey: SubjectPublicKeyInfo\r\n});  // from CertTemplate\r\n\r\nvar POPOSigningKey = SEQUENCE({\r\n    poposkInput: OPTIONAL(CTX(0, POPOSigningKeyInput)),\r\n    algorithmIdentifier: AlgorithmIdentifier,\r\n    signature: BIT_STRING\r\n});\r\n\r\nvar ProofOfPossession = CHOICE({\r\n    // used if the RA has already verified that the requester is in\r\n    // possession of the private key\r\n    raVerified: CTX(0, IMPLICIT(NULL)),\r\n    signature: CTX(1, IMPLICIT(POPOSigningKey)),\r\n    keyEncipherment: CTX(2, IMPLICIT(POPOPrivKey)),\r\n    keyAgreement: CTX(3, IMPLICIT(POPOPrivKey))\r\n});\r\n\r\nvar Controls = SEQUENCE_OF(AttributeTypeAndValue({\r\n    regToken: RegToken,\r\n    authenticator: Authenticator,\r\n    pkiPublicationInfo: PKIPublicationInfo,\r\n    pkiArchiveOptions: PKIArchiveOptions,\r\n    oldCertID: OldCertId,\r\n    protocolEncrKey: ProtocolEncrKey\r\n}));\r\n\r\nvar OptionalValidity = SEQUENCE({\r\n    notBefore: OPTIONAL(CTX(0, IMPLICIT(Time))),\r\n    notAfter: OPTIONAL(CTX(1, IMPLICIT(Time)))\r\n}); // at least one MUST be present\r\n\r\nvar CertTemplate = SEQUENCE({\r\n    version: OPTIONAL(CTX(0, IMPLICIT(Version))),\r\n    serialNumber: OPTIONAL(CTX(1, IMPLICIT(INTEGER))),\r\n    signingAlg: OPTIONAL(CTX(2, IMPLICIT(AlgorithmIdentifier))),\r\n    issuer: OPTIONAL(CTX(3, IMPLICIT(Name))),\r\n    validity: OPTIONAL(CTX(4, IMPLICIT(OptionalValidity))),\r\n    subject: OPTIONAL(CTX(5, IMPLICIT(Name))),\r\n    publicKey: OPTIONAL(CTX(6, IMPLICIT(SubjectPublicKeyInfo))),\r\n    issuerUID: OPTIONAL(CTX(7, IMPLICIT(UniqueIdentifier))),\r\n    subjectUID: OPTIONAL(CTX(8, IMPLICIT(UniqueIdentifier))),\r\n    extensions: OPTIONAL(CTX(9, IMPLICIT(Extensions)))\r\n});\r\n\r\nvar CertRequest = SEQUENCE({\r\n    certReqId: INTEGER, // ID for matching request and reply\r\n    certTemplate: CertTemplate, // Selected fields of cert to be issued\r\n    controls: OPTIONAL(Controls)\r\n});   // Attributes affecting issuance\r\n\r\nvar UTF8Pairs = UTF8String;\r\n\r\nvar CertReq = CertRequest;\r\n\r\nvar EncKeyWithID = SEQUENCE({\r\n    privateKey: PrivateKeyInfo,\r\n    identifier: OPTIONAL(CHOICE({\r\n        string: UTF8String,\r\n        generalName: GeneralName\r\n    }, function (value) {\r\n        return typeof value === 'string' || value instanceof String ?\r\n          'string' : 'generalName';\r\n    }))\r\n});\r\n\r\nvar CertReqMsg = SEQUENCE({\r\n    certReq: CertRequest,\r\n    popo: OPTIONAL(ProofOfPossession),\r\n    // content depends upon key type\r\n    regInfo: OPTIONAL(SEQUENCE_OF(AttributeTypeAndValue({\r\n        utf8Pairs: UTF8Pairs,\r\n        certReq: CertReq,\r\n        encKeyWithID: EncKeyWithID\r\n    })))\r\n});\r\n\r\nvar CertReqMessages = SEQUENCE_OF(CertReqMsg);\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n     * Certificate Management over CMS\r\n     *\r\n     * http://tools.ietf.org/html/rfc5272\r\n     *\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar PendInfo = SEQUENCE({\r\n    pendToken: OCTET_STRING,\r\n    pendTime: GeneralizedTime\r\n});\r\n\r\nvar CMCStatus = INTEGER({\r\n    success: 0,\r\n    failed: 2,\r\n    pending: 3,\r\n    noSupport: 4,\r\n    confirmRequired: 5,\r\n    popRequired: 6,\r\n    partial: 7\r\n});\r\n\r\nvar CMCFailInfo = INTEGER({\r\n    badAlg: 0,\r\n    badMessageCheck: 1,\r\n    badRequest: 2,\r\n    badTime: 3,\r\n    badCertId: 4,\r\n    unsupportedExt: 5,\r\n    mustArchiveKeys: 6,\r\n    badIdentity: 7,\r\n    popRequired: 8,\r\n    popFailed: 9,\r\n    noKeyReuse: 10,\r\n    internalCAError: 11,\r\n    tryLater: 12,\r\n    authDataFail: 13\r\n});\r\n\r\nvar CMCStatusInfo = SEQUENCE({\r\n    cMCStatus: CMCStatus,\r\n    bodyList: SEQUENCE_OF(BodyPartID),\r\n    statusString: OPTIONAL(UTF8String),\r\n    otherInfo: OPTIONAL(CHOICE({\r\n        failInfo: CMCFailInfo,\r\n        pendInfo: PendInfo\r\n    }))\r\n});\r\n\r\nvar AddExtensions = SEQUENCE({\r\n    pkiDataReference: BodyPartID,\r\n    certReferences: SEQUENCE_OF(BodyPartID),\r\n    extensions: SEQUENCE_OF(Extension)\r\n});\r\n\r\nvar LraPopWitness = SEQUENCE({\r\n    pkiDataBodyid: BodyPartID,\r\n    bodyIds: SEQUENCE_OF(BodyPartID)\r\n});\r\n\r\nvar GetCert = SEQUENCE({\r\n    issuerName: GeneralName,\r\n    serialNumber: INTEGER\r\n});\r\n\r\nvar GetCRL = SEQUENCE({\r\n    issuerName: Name,\r\n    cRLName: OPTIONAL(GeneralName),\r\n    time: OPTIONAL(GeneralizedTime),\r\n    reasons: OPTIONAL(ReasonFlags)\r\n});\r\n\r\nvar RevokeRequest = SEQUENCE({\r\n    issuerName: Name,\r\n    serialNumber: INTEGER,\r\n    reason: CRLReason,\r\n    invalidityDate: OPTIONAL(GeneralizedTime),\r\n    passphrase: OPTIONAL(OCTET_STRING),\r\n    comment: OPTIONAL(UTF8String)\r\n});\r\n\r\nvar DecryptedPOP = SEQUENCE({\r\n    bodyPartID: BodyPartID,\r\n    thePOPAlgID: AlgorithmIdentifier,\r\n    thePOP: OCTET_STRING\r\n});\r\n\r\nvar CMCCertId = IssuerAndSerialNumber;\r\n\r\nvar BodyPartReference = CHOICE({\r\n    bodyPartID: BodyPartID,\r\n    bodyPartPath: BodyPartPath\r\n});\r\n\r\nvar CMCStatusInfoV2 = SEQUENCE({\r\n    cMCStatus: CMCStatus,\r\n    bodyList: SEQUENCE_OF(BodyPartReference),\r\n    statusString: OPTIONAL(UTF8String),\r\n    otherInfo: OPTIONAL(CHOICE({\r\n        failInfo: CMCFailInfo,\r\n        pendInfo: PendInfo,\r\n        extendedFailInfo: SEQUENCE({\r\n            failInfoOID: OBJECT_IDENTIFIER,\r\n            failInfoValue: AttributeValue\r\n        })\r\n    }))\r\n});\r\n\r\nvar PublishTrustAnchors = SEQUENCE({\r\n    seqNumber: INTEGER,\r\n    hashAlgorithm: AlgorithmIdentifier,\r\n    anchorHashes: SEQUENCE_OF(OCTET_STRING)\r\n});\r\n\r\nvar AuthPublish = BodyPartID;\r\n\r\nvar BodyPartList = SEQUENCE_OF(BodyPartID);\r\n\r\nvar CMCPublicationInfo = SEQUENCE({\r\n    hashAlg: AlgorithmIdentifier,\r\n    certHashes: SEQUENCE_OF(OCTET_STRING),\r\n    pubInfo: PKIPublicationInfo\r\n});\r\n\r\nvar ModCertTemplate = SEQUENCE({\r\n    pkiDataReference: BodyPartPath,\r\n    certReferences: BodyPartList,\r\n    replace: DEFAULT(BOOLEAN, true),\r\n    certTemplate: CertTemplate\r\n});\r\n\r\nvar ControlsProcessed = SEQUENCE({\r\n    bodyList: SEQUENCE_OF(BodyPartReference)\r\n});\r\n\r\nvar IdentifyProofV2 = SEQUENCE({\r\n    proofAlgID: AlgorithmIdentifier,\r\n    macAlgId: AlgorithmIdentifier,\r\n    witness: OCTET_STRING\r\n});\r\n\r\nvar PopLinkWitnessV2 = SEQUENCE({\r\n    keyGenAlgorithm: AlgorithmIdentifier,\r\n    macAlgorithm: AlgorithmIdentifier,\r\n    witness: OCTET_STRING\r\n});\r\n\r\nvar TaggedCertificationRequest = SEQUENCE({\r\n    bodyPartID: BodyPartID,\r\n    certificationRequest: CertificationRequest\r\n});\r\n\r\nvar TaggedContentInfo = SEQUENCE({\r\n    bodyPartID: BodyPartID,\r\n    contentInfo: ContentInfo\r\n});\r\n\r\nvar OtherMsg = SEQUENCE({\r\n    bodyPartID: BodyPartID,\r\n    otherMsgType: OBJECT_IDENTIFIER,\r\n    otherMsgValue: ANY\r\n}); //DEFINED BY otherMsgType\r\n\r\nvar TaggedRequest = CHOICE({\r\n    tcr: CTX(0, IMPLICIT(TaggedCertificationRequest)),\r\n    crm: CTX(1, IMPLICIT(CertReqMsg)),\r\n    orm: CTX(2, IMPLICIT(SEQUENCE({\r\n        bodyPartID: BodyPartID,\r\n        requestMessageType: OBJECT_IDENTIFIER,\r\n        requestMessageValue: ANY\r\n    })))\r\n}); // DEFINED BY requestMessageType\r\n\r\nvar EncryptedPOP = SEQUENCE({\r\n    request: TaggedRequest,\r\n    cms: ContentInfo,\r\n    thePOPAlgID: AlgorithmIdentifier,\r\n    witnessAlgID: AlgorithmIdentifier,\r\n    witness: OCTET_STRING\r\n});\r\n\r\nvar TaggedAttribute = ATTRIBUTE({\r\n    bodyPartID: BodyPartID,\r\n    attrType: OBJECT_IDENTIFIER,\r\n    attrValues: function (type) {\r\n        return SET_OF(type);\r\n    }\r\n}, 'attrType', 'attrValues', AttributeValue)({\r\n    statusInfo: CMCStatusInfo,\r\n    identification: UTF8String,\r\n    identityProof: OCTET_STRING,\r\n    dataReturn: OCTET_STRING,\r\n    transactionId: INTEGER,\r\n    senderNonce: OCTET_STRING,\r\n    recipientNonce: OCTET_STRING,\r\n    addExtensions: AddExtensions,\r\n    encryptedPOP: EncryptedPOP,\r\n    decryptedPOP: DecryptedPOP,\r\n    lraPOPWitness: LraPopWitness,\r\n    getCert: GetCert,\r\n    getCRL: GetCRL,\r\n    revokeRequest: RevokeRequest,\r\n    regInfo: OCTET_STRING,\r\n    responseInfo: OCTET_STRING,\r\n    queryPending: OCTET_STRING,\r\n    popLinkRandom: OCTET_STRING,\r\n    popLinkWitness: OCTET_STRING,\r\n    confirmCertAcceptance: CMCCertId,\r\n    statusInfoV2: CMCStatusInfoV2,\r\n    trustedAnchors: PublishTrustAnchors,\r\n    authPublish: AuthPublish,\r\n    batchRequests: BodyPartList,\r\n    batchResponses: BodyPartList,\r\n    publishCert: CMCPublicationInfo,\r\n    modCertTemplate: ModCertTemplate,\r\n    controlProcessed: ControlsProcessed,\r\n    popLinkWitnessV2: PopLinkWitnessV2,\r\n    identityProofV2: IdentifyProofV2\r\n});\r\n/**\r\n * PKIData Content Type<br><br>\r\n *\r\n * The PKIData content type is used for the Full PKI Request.  A PKIData\r\n * content type is identified by:\r\n * <pre>\r\n *   id-cct-PKIData ::= {id-pkix id-cct(12) 2 }\r\n * </pre>\r\n * The ASN.1 structure corresponding to the PKIData content type is:\r\n * <pre>\r\n *   PKIData ::= SEQUENCE {\r\n     *       controlSequence    SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\r\n     *       reqSequence        SEQUENCE SIZE(0..MAX) OF TaggedRequest,\r\n     *       cmsSequence        SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\r\n     *       otherMsgSequence   SEQUENCE SIZE(0..MAX) OF OtherMsg\r\n     *   }\r\n * </pre>\r\n * All certification requests encoded into a single PKIData SHOULD be\r\n * for the same identity.  RAs that batch process (see Section 6.17) are\r\n * expected to place the PKI Requests received into the cmsSequence of a\r\n * PKIData. <br><br>\r\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIResponse}<br><br>\r\n * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272}\r\n *\r\n * @class GostASN1.PKIData\r\n * @extends GostASN1.Sequence\r\n * @property {GostASN1.Attributes[]} controlSequence\r\n * @property {GostASN1.Sequence[]} reqSequence\r\n * @property {GostASN1.ContentInfo[]} cmsSequence\r\n * @property {GostASN1.Sequence[]} otherMsgSequence\r\n */\r\nvar PKIData = SEQUENCE({\r\n    controlSequence: SEQUENCE_OF(TaggedAttribute),\r\n    reqSequence: SEQUENCE_OF(TaggedRequest),\r\n    cmsSequence: SEQUENCE_OF(TaggedContentInfo),\r\n    otherMsgSequence: SEQUENCE_OF(OtherMsg)\r\n}, 'PKI REQUEST');\r\n\r\n/**\r\n * PKIResponse Content Type<br><br>\r\n *\r\n * The PKIResponse content type is used for the Full PKI Response.  The\r\n * PKIResponse content type is identified by:\r\n * <pre>\r\n *   id-cct-PKIResponse ::= {id-pkix id-cct(12) 3  }\r\n * </pre>\r\n * The ASN.1 structure corresponding to the PKIResponse content type is:\r\n * <pre>\r\n *    PKIResponse ::= SEQUENCE {\r\n     *        controlSequence   SEQUENCE SIZE(0..MAX) OF TaggedAttribute,\r\n     *        cmsSequence       SEQUENCE SIZE(0..MAX) OF TaggedContentInfo,\r\n     *        otherMsgSequence  SEQUENCE SIZE(0..MAX) OF OtherMsg\r\n     *    }\r\n *\r\n *    ReponseBody ::= PKIResponse\r\n * </pre>\r\n *\r\n * Note: In [RFC2797], this ASN.1 type was named ResponseBody.  It has\r\n * been renamed to PKIResponse for clarity and the old name kept as a\r\n * synonym.<br><br>\r\n *\r\n * See {@link GostASN1.ContentInfo} and {@link GostASN1.PKIData}<br><br>\r\n *\r\n * RFC 5272 references {@link http://tools.ietf.org/html/rfc5272}\r\n *\r\n * @class GostASN1.PKIResponse\r\n * @extends GostASN1.Sequence\r\n * @property {GostASN1.Attributes[]} controlSequence\r\n * @property {GostASN1.ContentInfo[]} cmsSequence\r\n * @property {GostASN1.Sequence[]} otherMsgSequence\r\n */\r\nvar PKIResponse = SEQUENCE({\r\n    controlSequence: SEQUENCE_OF(TaggedAttribute),\r\n    cmsSequence: SEQUENCE_OF(TaggedContentInfo),\r\n    otherMsgSequence: SEQUENCE_OF(OtherMsg)\r\n}, 'PKI RESPONSE');\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * ASN.1 syntax definitions\r\n *\r\n * @class GostASN1\r\n */\r\nexport function GostASN1() {\r\n}\r\n\r\nGostASN1.prototype = {\r\n    /**\r\n     * Gost PrivateKey info encoder\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostPrivateKeyInfo\r\n     */\r\n    GostPrivateKeyInfo: GostPrivateKeyInfo,\r\n    /**\r\n     * Gost subject PublicKey info encoder\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostSubjectPublicKeyInfo\r\n     */\r\n    GostSubjectPublicKeyInfo: GostSubjectPublicKeyInfo,\r\n    /**\r\n     * CryptoPro key container header\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostKeyContainer\r\n     */\r\n    GostKeyContainer: GostKeyContainer,\r\n    /**\r\n     * CryptoPro key container name\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostKeyContainerName\r\n     */\r\n    GostKeyContainerName: GostKeyContainerName,\r\n    /**\r\n     * CryptoPro encrypted PrivateKey for key containers\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostPrivateKeys\r\n     */\r\n    GostPrivateKeys: GostPrivateKeys,\r\n    /**\r\n     * CryptoPro PrivateKey masks for key containers\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostPrivateMasks\r\n     */\r\n    GostPrivateMasks: GostPrivateMasks,\r\n    /**\r\n     * ViPNet key container\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.ViPNetInfo\r\n     */\r\n    ViPNetInfo: ViPNetInfo,\r\n    /**\r\n     * Gost Signature encoders\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostSignature\r\n     */\r\n    GostSignature: GostSignature,\r\n    /**\r\n     * Gost Encrypted key encoder for CMS\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostEncryptedKey\r\n     */\r\n    GostEncryptedKey: GostEncryptedKey,\r\n    /**\r\n     * SignalCom wrapped PrivateKey\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.GostWrappedPrivateKey\r\n     */\r\n    GostWrappedPrivateKey: GostWrappedPrivateKey,\r\n    /**\r\n     * PKCS#8 PrivateKey info\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.PrivateKeyInfo\r\n     */\r\n    PrivateKeyInfo: PrivateKeyInfo,\r\n    /**\r\n     * PKCS#8 encrypted PrivateKey info\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.EncryptedPrivateKeyInfo\r\n     */\r\n    EncryptedPrivateKeyInfo: EncryptedPrivateKeyInfo,\r\n    /**\r\n     * X.509 subject PublicKey info\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.SubjectPublicKeyInfo\r\n     */\r\n    SubjectPublicKeyInfo: SubjectPublicKeyInfo,\r\n    /**\r\n     * X.509 To be signed Certificate\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.TBSCertificate\r\n     */\r\n    TBSCertificate: TBSCertificate,\r\n    /**\r\n     * X.509 Certificate\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.Certificate\r\n     */\r\n    Certificate: Certificate,\r\n    /**\r\n     * PKCS#10 Certification request definition\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.CertificationRequestInfo\r\n     */\r\n    CertificationRequestInfo: CertificationRequestInfo,\r\n    /**\r\n     * PKCS#10 Certification request\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.CertificationRequest\r\n     */\r\n    CertificationRequest: CertificationRequest,\r\n    /**\r\n     * X.509 To be signed CRL\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.TBSCertList\r\n     */\r\n    TBSCertList: TBSCertList,\r\n    /**\r\n     * X.509 CRL\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.CertificateList\r\n     */\r\n    CertificateList: CertificateList,\r\n    /**\r\n     * X.509 Attribute Certificate definition\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.AttributeCertificateInfo\r\n     */\r\n    AttributeCertificateInfo: AttributeCertificateInfo,\r\n    /**\r\n     * X.509 Attribute Certificate\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.AttributeCertificate\r\n     */\r\n    AttributeCertificate: AttributeCertificate,\r\n    /**\r\n     * CMS Signed Attributes\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.SignedAttributes\r\n     */\r\n    SignedAttributes: SignedAttributes,\r\n    /**\r\n     * CMS Unsigned Attributes\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.UnsignedAttributes\r\n     */\r\n    UnsignedAttributes: UnsignedAttributes,\r\n    /**\r\n     * CMS Content definition\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.ContentInfo\r\n     */\r\n    ContentInfo: ContentInfo,\r\n    /**\r\n     * PKCS#12 Safe Contents\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.SafeContents\r\n     */\r\n    SafeContents: SafeContents,\r\n    /**\r\n     * PKCS#12 Authenticated Safe\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.AuthenticatedSafe\r\n     */\r\n    AuthenticatedSafe: AuthenticatedSafe,\r\n    /**\r\n     * PKCS#12 Personal Information Exchange (PFX)\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.PFX\r\n     */\r\n    PFX: PFX,\r\n    /**\r\n     * PKI Request\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.PKIData\r\n     */\r\n    PKIData: PKIData,\r\n    /**\r\n     * PKI Response\r\n     *\r\n     * @memberOf GostASN1\r\n     * @instance\r\n     * @type GostASN1.PKIResponse\r\n     */\r\n    PKIResponse: PKIResponse\r\n};\r\n\r\nexport const gostASN1Instance  = new GostASN1();\r\n","/**\r\n * @file GOST and common ASN.1 Object and Algorithm Identifiers\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\n// <editor-fold defaultstate=\"collapsed\">\r\n// Expand javascript object\r\nfunction expand() {\r\n    var r = {};\r\n    for (var i = 0, n = arguments.length; i < n; i++) {\r\n        var item = arguments[i];\r\n        if (typeof item === 'object')\r\n            for (var name in item)\r\n                r[name] = item[name];\r\n    }\r\n    return r;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Freandly names for ASN.1 Object Identifiers\r\n *\r\n * @field names\r\n * @memberOf GostSecurity\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar names = {\r\n    // CryptoPro algoritms\r\n    '1.2.643.2.2': 'CryptoPro',\r\n    '1.2.643.2.2.3': 'id-GostR3411-94-with-GostR3410-2001',\r\n    '1.2.643.2.2.4': 'id-GostR3411-94-with-GostR3410-94',\r\n    '1.2.643.2.2.9': 'id-GostR3411-94',\r\n    '1.2.643.2.2.10': 'id-HMACGostR3411-94',\r\n    '1.2.643.2.2.13.0': 'id-Gost28147-89-None-KeyWrap',\r\n    '1.2.643.2.2.13.1': 'id-Gost28147-89-CryptoPro-KeyWrap',\r\n    '1.2.643.2.2.14.0': 'id-Gost28147-89-None-KeyMeshing',\r\n    '1.2.643.2.2.14.1': 'id-Gost28147-89-CryptoPro-KeyMeshing',\r\n    '1.2.643.2.2.19': 'id-GostR3410-2001',\r\n    '1.2.643.2.2.20': 'id-GostR3410-94',\r\n    '1.2.643.2.2.20.1': 'id-GostR3410-94-a',\r\n    '1.2.643.2.2.20.2': 'id-GostR3410-94-aBis',\r\n    '1.2.643.2.2.20.3': 'id-GostR3410-94-b',\r\n    '1.2.643.2.2.20.4': 'id-GostR3410-94-bBis',\r\n    '1.2.643.2.2.21': 'id-Gost28147-89',\r\n    '1.2.643.2.2.22': 'id-Gost28147-89-MAC',\r\n    '1.2.643.2.2.30.0': 'id-GostR3411-94-TestParamSet',\r\n    '1.2.643.2.2.30.1': 'id-GostR3411-94-CryptoProParamSet',\r\n    '1.2.643.2.2.30.2': 'id-GostR3411-94-CryptoPro-B-ParamSet',\r\n    '1.2.643.2.2.30.3': 'id-GostR3411-94-CryptoPro-C-ParamSet',\r\n    '1.2.643.2.2.30.4': 'id-GostR3411-94-CryptoPro-D-ParamSet',\r\n    '1.2.643.2.2.31.0': 'id-Gost28147-89-TestParamSet',\r\n    '1.2.643.2.2.31.1': 'id-Gost28147-89-CryptoPro-A-ParamSet',\r\n    '1.2.643.2.2.31.2': 'id-Gost28147-89-CryptoPro-B-ParamSet',\r\n    '1.2.643.2.2.31.3': 'id-Gost28147-89-CryptoPro-C-ParamSet',\r\n    '1.2.643.2.2.31.4': 'id-Gost28147-89-CryptoPro-D-ParamSet',\r\n    '1.2.643.2.2.31.5': 'id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet',\r\n    '1.2.643.2.2.31.6': 'id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet',\r\n    '1.2.643.2.2.31.7': 'id-Gost28147-89-CryptoPro-RIC-1-ParamSet ',\r\n    '1.2.643.2.2.31.12': 'id-Gost28147-89-CryptoPro-tc26-1',\r\n    '1.2.643.2.2.31.13': 'id-Gost28147-89-CryptoPro-tc26-2',\r\n    '1.2.643.2.2.31.14': 'id-Gost28147-89-CryptoPro-tc26-3',\r\n    '1.2.643.2.2.31.15': 'id-Gost28147-89-CryptoPro-tc26-4',\r\n    '1.2.643.2.2.31.16': 'id-Gost28147-89-CryptoPro-tc26-5',\r\n    '1.2.643.2.2.31.17': 'id-Gost28147-89-CryptoPro-tc26-6',\r\n    '1.2.643.2.2.32.0': 'id-GostR3410-94-TestParamSet',\r\n    '1.2.643.2.2.32.2': 'id-GostR3410-94-CryptoPro-A-ParamSet',\r\n    '1.2.643.2.2.32.3': 'id-GostR3410-94-CryptoPro-B-ParamSet',\r\n    '1.2.643.2.2.32.4': 'id-GostR3410-94-CryptoPro-C-ParamSet',\r\n    '1.2.643.2.2.32.5': 'id-GostR3410-94-CryptoPro-D-ParamSet',\r\n    '1.2.643.2.2.33.1': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\r\n    '1.2.643.2.2.33.2': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\r\n    '1.2.643.2.2.33.3': 'id-GostR3410-94-CryptoPro-XchC-ParamSet',\r\n    // Certificate center attributes\r\n    '1.2.643.2.2.34.2': 'temporaryAccessToRC',\r\n    '1.2.643.2.2.34.3': 'internetContentSignature',\r\n    '1.2.643.2.2.34.4': 'adminRC',\r\n    '1.2.643.2.2.34.5': 'operatorRC',\r\n    '1.2.643.2.2.34.6': 'userRC',\r\n    '1.2.643.2.2.34.7': 'clientRC',\r\n    '1.2.643.2.2.34.8': 'serverRC',\r\n    '1.2.643.2.2.34.9': 'sysAdminRC',\r\n    '1.2.643.2.2.34.10': 'arcAdminRC',\r\n    '1.2.643.2.2.34.11': 'authorityPersonRC',\r\n    '1.2.643.2.2.34.12': 'clientCC',\r\n    '1.2.643.2.2.34.13': 'sysAdminCC',\r\n    '1.2.643.2.2.34.14': 'arcAdminCC',\r\n    '1.2.643.2.2.34.15': 'accessIPSecCA',\r\n    '1.2.643.2.2.34.16': 'auditAdminHSM',\r\n    '1.2.643.2.2.34.21': 'adminHSM',\r\n    '1.2.643.2.2.34.22': 'serverAdminHSH',\r\n    '1.2.643.2.2.34.24': 'winlogonCA',\r\n    '1.2.643.2.2.34.25': 'timestampServiceUser',\r\n    '1.2.643.2.2.34.26': 'statusServiceUser',\r\n    '1.2.643.2.2.34.27': 'arcAdminHSM',\r\n    '1.2.643.2.2.34.28': 'auditorHSM',\r\n    // CryptoPro algoritms\r\n    '1.2.643.2.2.35.0': 'id-GostR3410-2001-CryptoPro-TestParamSet',\r\n    '1.2.643.2.2.35.1': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\r\n    '1.2.643.2.2.35.2': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\r\n    '1.2.643.2.2.35.3': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\r\n    '1.2.643.2.2.36.0': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\r\n    '1.2.643.2.2.36.1': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\r\n    \"1.2.643.2.2.37.1\": 'id-CryptoPro-GostPrivateKeys-V1',\r\n    \"1.2.643.2.2.37.2\": 'id-CryptoPro-GostPrivateKeys-V2',\r\n    \"1.2.643.2.2.37.2.1\": 'id-CryptoPro-GostPrivateKeys-V2-Full',\r\n    \"1.2.643.2.2.37.2.2\": 'id-CryptoPro-GostPrivateKeys-V2-PartOf',\r\n    '1.2.643.2.2.37.3.1': 'intermediateCertificates',\r\n    '1.2.643.2.2.37.3.2': 'trustedCertificatesSignature',\r\n    '1.2.643.2.2.37.3.3': 'trustedCertificatesExchange',\r\n    '1.2.643.2.2.37.3.10': 'keyValidity',\r\n    '1.2.643.2.2.38.1': 'personalBaseProlicy',\r\n    '1.2.643.2.2.38.2': 'networkBasePolicy',\r\n    '1.2.643.2.2.47.1': 'id-CryptoPro-ocsp-treats-exp-key-or-exp-cert-rev',\r\n    '1.2.643.2.2.47.2': 'id-CryptoPro-ocsp-crl-locator',\r\n    '1.2.643.2.2.47.3': 'id-CryptoPro-ocsp-instant-revocation-indicator',\r\n    '1.2.643.2.2.47.4': 'id-CryptoPro-ocsp-revocation-announcement-reference',\r\n    '1.2.643.2.2.47.5': 'id-CryptoPro-ocsp-historical-request',\r\n    '1.2.643.2.2.49.2': 'limitedLicense',\r\n    '1.2.643.2.2.96': 'id-GostR3410-2001-CryptoPro-ESDH',\r\n    '1.2.643.2.2.97': 'id-GostR3410-94-CryptoPro-ESDH',\r\n    '1.2.643.2.2.98': 'id-GostR3410-2001DH',\r\n    '1.2.643.2.2.99': 'id-GostR3410-94DH',\r\n    // signature attributes\r\n    '1.2.643.2.45.1.1.1': 'signatureComment',\r\n    '1.2.643.2.45.1.1.2': 'resourceName',\r\n    '1.2.643.2.45.1.1.3': 'signatureUsage',\r\n    // params\r\n    '1.2.643.3.131.1.1': 'INN',\r\n    '1.2.643.3.141.1.1': 'RNS FSS',\r\n    '1.2.643.3.141.1.2': 'KP FSS',\r\n    // tc26\r\n    '1.2.643.7.1': 'tc26',\r\n    '1.2.643.7.1.1.1.1': 'id-tc26-gost3410-12-256',\r\n    '1.2.643.7.1.1.1.2': 'id-tc26-gost3410-12-512',\r\n    '1.2.643.7.1.1.2.1': 'id-tc26-gost3411-94',\r\n    '1.2.643.7.1.1.2.2': 'id-tc26-gost3411-12-256',\r\n    '1.2.643.7.1.1.2.3': 'id-tc26-gost3411-12-512',\r\n    '1.2.643.7.1.1.3.1': 'id-tc26-signwithdigest-gost3410-12-94',\r\n    '1.2.643.7.1.1.3.2': 'id-tc26-signwithdigest-gost3410-12-256',\r\n    '1.2.643.7.1.1.3.3': 'id-tc26-signwithdigest-gost3410-12-512',\r\n    '1.2.643.7.1.1.4.1': 'id-tc26-hmac-gost-3411-12-256',\r\n    '1.2.643.7.1.1.4.2': 'id-tc26-hmac-gost-3411-12-512',\r\n    '1.2.643.7.1.1.6.1': 'id-tc26-agreement-gost-3410-12-256',\r\n    '1.2.643.7.1.1.6.2': 'id-tc26-agreement-gost-3410-12-512',\r\n    '1.2.643.7.1.2.1.1.0': 'id-tc26-gost-3410-12-256-paramSetTest',\r\n    '1.2.643.7.1.2.1.1.1': 'id-tc26-gost-3410-12-256-paramSetA',\r\n    '1.2.643.7.1.2.1.1.2': 'id-tc26-gost-3410-12-256-paramSetB',\r\n    '1.2.643.7.1.2.1.2.0': 'id-tc26-gost-3410-12-512-paramSetTest',\r\n    '1.2.643.7.1.2.1.2.1': 'id-tc26-gost-3410-12-512-paramSetA',\r\n    '1.2.643.7.1.2.1.2.2': 'id-tc26-gost-3410-12-512-paramSetB',\r\n    '1.2.643.7.1.2.1.2.3': 'id-tc26-gost-3410-12-512-paramSetC',\r\n    '1.2.643.7.1.2.1.2.4': 'id-tc26-gost-3410-12-512-paramSetD',\r\n    '1.2.643.7.1.2.5.1.1': 'id-tc26-gost-28147-param-Z',\r\n    // GOST Parameters\r\n    '1.2.643.100.1': 'OGRN',\r\n    '1.2.643.100.2.1': 'SMEV-person',\r\n    '1.2.643.100.2.2': 'SMEV-government',\r\n    '1.2.643.100.3': 'SNILS',\r\n    '1.2.643.100.4': 'KPP',\r\n    '1.2.643.100.5': 'OGRNIP',\r\n    '1.2.643.100.6': 'internal-government',\r\n    '1.2.643.100.111': 'subjectSignTool',\r\n    '1.2.643.100.112': 'issuerSignTool',\r\n    '1.2.643.100.113.1': 'signToolClassKC1',\r\n    '1.2.643.100.113.2': 'signToolClassKC2',\r\n    '1.2.643.100.113.3': 'signToolClassKC3',\r\n    '1.2.643.100.113.4': 'signToolClassKB1',\r\n    '1.2.643.100.113.5': 'signToolClassKB2',\r\n    '1.2.643.100.113.6': 'signToolClassKA1',\r\n    '1.2.643.100.114.1': 'issuerToolClassKC1',\r\n    '1.2.643.100.114.2': 'issuerToolClassKC2',\r\n    '1.2.643.100.114.3': 'issuerToolClassKC3',\r\n    '1.2.643.100.114.4': 'issuerToolClassKB2',\r\n    '1.2.643.100.114.5': 'issuerToolClassKB1',\r\n    '1.2.643.100.114.6': 'issuerToolClassKA1',\r\n    // Common algorithms\r\n    '1.2.840.10040.4': 'x9cm',\r\n    '1.2.840.10040.4.1': 'dsa',\r\n    '1.2.840.10040.4.3': 'dsa-with-SHA1',\r\n    '1.2.840.10045': 'ansi-x962',\r\n    '1.2.840.10045.1': 'id-fieldType',\r\n    '1.2.840.10045.1.1': 'id-prime-Field',\r\n    '1.2.840.10045.1.2': 'id-characteristic-two-field',\r\n    '1.2.840.10045.2.1': 'ecPublicKey',\r\n    '1.2.840.10045.3.0': 'characteristicTwo',\r\n    '1.2.840.10045.3.1.1': 'secp192r1',\r\n    '1.2.840.10045.3.1.2': 'prime192v2',\r\n    '1.2.840.10045.3.1.3': 'prime192v3',\r\n    '1.2.840.10045.3.1.4': 'prime239v1',\r\n    '1.2.840.10045.3.1.5': 'prime239v2',\r\n    '1.2.840.10045.3.1.6': 'prime239v3',\r\n    '1.2.840.10045.3.1.7': 'secp256r1',\r\n    '1.2.840.10045.4': 'ecdsa',\r\n    '1.2.840.10045.4.1': 'ecdsa-with-SHA1',\r\n    '1.2.840.10045.4.2': 'ecdsa-with-Recommended',\r\n    '1.2.840.10045.4.4': 'ecdsa-with-SHA2',\r\n    '1.2.840.10045.4.4.1': 'ecdsa-with-SHA224',\r\n    '1.2.840.10045.4.4.2': 'ecdsa-with-SHA256',\r\n    '1.2.840.10045.4.4.3': 'ecdsa-with-SHA384',\r\n    '1.2.840.10045.4.4.4': 'ecdsa-with-SHA512',\r\n    '1.2.840.113533.7.66.13': 'PasswordBasedMac',\r\n    '1.3.6.1.4.1.22554.1.1.2.1.2': 'pbeWithSHAAndAES128-CBC',\r\n    '1.3.6.1.4.1.22554.1.1.2.1.22': 'pbeWithSHAAndAES192-CBC',\r\n    '1.3.6.1.4.1.22554.1.1.2.1.42': 'pbeWithSHAAndAES256-CBC',\r\n    '1.3.6.1.4.1.22554.1.2.1.2.1.2': 'pbeWithSHA256AndAES128-CBC',\r\n    '1.3.6.1.4.1.22554.1.2.1.2.1.22': 'pbeWithSHA256AndAES192-CBC',\r\n    '1.3.6.1.4.1.22554.1.2.1.2.1.42': 'pbeWithSHA256AndAES256-CBC',\r\n    //  Diffie-Hellman Key Exchange Keys\r\n    '1.2.840.113549': 'rsa',\r\n    '1.2.840.113549.1.1.1': 'rsaEncryption',\r\n    '1.2.840.113549.1.1.2': 'md2withRSAEncryption',\r\n    '1.2.840.113549.1.1.3': 'md4withRSAEncryption',\r\n    '1.2.840.113549.1.1.4': 'md5withRSAEncryption',\r\n    '1.2.840.113549.1.1.5': 'sha1withRSAEncryption',\r\n    '1.2.840.113549.1.1.7': 'rsaes-oaep',\r\n    '1.2.840.113549.1.1.8': 'mgf1',\r\n    '1.2.840.113549.1.1.9': 'pSpecified',\r\n    '1.2.840.113549.1.1.10': 'rsassa-pss',\r\n    '1.2.840.113549.1.1.11': 'sha256withRSAEncryption',\r\n    '1.2.840.113549.1.1.12': 'sha384withRSAEncryption',\r\n    '1.2.840.113549.1.1.13': 'sha512withRSAEncryption',\r\n    '1.2.840.113549.1.2.7': 'hmacWithSHA1',\r\n    '1.2.840.113549.1.2.8': 'hmacWithSHA224',\r\n    '1.2.840.113549.1.2.9': 'hmacWithSHA256',\r\n    '1.2.840.113549.1.2.10': 'hmacWithSHA384',\r\n    '1.2.840.113549.1.2.11': 'hmacWithSHA512',\r\n    '1.2.840.113549.1.3.1': 'dhKeyAgreement',\r\n    // pkcs#7 content types\r\n    '1.2.840.113549.1.5.12': 'PBKDF2',\r\n    '1.2.840.113549.1.5.13': 'PBES2',\r\n    '1.2.840.113549.1.5.14': 'PBMAC1',\r\n    '1.2.840.113549.1.7.1': 'data',\r\n    '1.2.840.113549.1.7.2': 'signedData',\r\n    '1.2.840.113549.1.7.3': 'envelopedData',\r\n    '1.2.840.113549.1.7.4': 'signedAndEnvelopedData',\r\n    '1.2.840.113549.1.7.5': 'digestedData',\r\n    '1.2.840.113549.1.7.6': 'encryptedData',\r\n    '1.2.840.113549.1.9.1': 'emailAddress',\r\n    '1.2.840.113549.1.9.2': 'unstructuredName',\r\n    '1.2.840.113549.1.9.3': 'contentType',\r\n    '1.2.840.113549.1.9.4': 'messageDigest',\r\n    '1.2.840.113549.1.9.5': 'signingTime',\r\n    '1.2.840.113549.1.9.6': 'countersignature',\r\n    '1.2.840.113549.1.9.7': 'challengePassword',\r\n    '1.2.840.113549.1.9.8': 'unstructuredAddress',\r\n    '1.2.840.113549.1.9.9': 'extendedCertificateAttributes',\r\n    '1.2.840.113549.1.9.10': 'issuerAndSerialNumber',\r\n    '1.2.840.113549.1.9.11': 'passwordCheck',\r\n    '1.2.840.113549.1.9.12': 'publicKey',\r\n    '1.2.840.113549.1.9.13': 'signingDescription',\r\n    '1.2.840.113549.1.9.14': 'extensionRequest',\r\n    '1.2.840.113549.1.9.15': 'sMimeCapabilities',\r\n    '1.2.840.113549.1.9.16': 'sMimeObjectIdentifierRegistry',\r\n    '1.2.840.113549.1.9.16.1.2': 'authData',\r\n    '1.2.840.113549.1.9.16.1.4 ': 'timestampToken',\r\n    '1.2.840.113549.1.9.16.1.17 ': 'firmwareLoadReceipt',\r\n    '1.2.840.113549.1.9.16.1.21': 'encKeyWithID',\r\n    '1.2.840.113549.1.9.16.1.23': 'authEnvelopedData',\r\n    '1.2.840.113549.1.9.16.2': 'sMimeAttributes',\r\n    '1.2.840.113549.1.9.16.2.1': 'receiptRequest',\r\n    '1.2.840.113549.1.9.16.2.12': 'signingCertificate',\r\n    '1.2.840.113549.1.9.16.2.14': 'timeStampToken',\r\n    '1.2.840.113549.1.9.16.2.2': 'securityLabel',\r\n    '1.2.840.113549.1.9.16.2.3': 'mlExpansionHistory',\r\n    '1.2.840.113549.1.9.16.2.34': 'unsignedData',\r\n    '1.2.840.113549.1.9.16.2.47': 'signingCertificateV2',\r\n    '1.2.840.113549.1.9.16.3.5': 'ESDH',\r\n    // pkcs#9 oids\r\n    '1.2.840.113549.1.9.20': 'friendlyName',\r\n    '1.2.840.113549.1.9.21': 'localKeyId',\r\n    '1.2.840.113549.1.9.22': 'certTypes',\r\n    '1.2.840.113549.1.9.22.1': 'x509Certificate',\r\n    '1.2.840.113549.1.9.22.2': 'sdsiCertificate',\r\n    '1.2.840.113549.1.9.23': 'crlTypes',\r\n    '1.2.840.113549.1.9.23.1': 'x509CRL',\r\n    '1.2.840.113549.1.9.24': 'secretTypes',\r\n    '1.2.840.113549.1.9.24.1': 'secret',\r\n    '1.2.840.113549.1.9.25.1': 'pkcs15Token',\r\n    '1.2.840.113549.1.9.25.2': 'encryptedPrivateKeyInfo',\r\n    '1.2.840.113549.1.9.25.3': 'randomNonce',\r\n    '1.2.840.113549.1.9.25.4': 'sequenceNumber',\r\n    '1.2.840.113549.1.9.25.5': 'pkcs7PDU',\r\n    '1.2.840.113549.1.9.26.1': 'pkcs9String',\r\n    '1.2.840.113549.1.9.26.2': 'signingTimeString',\r\n    '1.2.840.113549.1.9.27.1': 'caseIgnoreMatch',\r\n    '1.2.840.113549.1.9.27.2': 'signingTimeMatch',\r\n    // password-based-encryption for pkcs#12\r\n    '1.2.840.113549.1.12.0.1': 'pkcs-12',\r\n    '1.2.840.113549.1.12.1': 'pbe',\r\n    '1.2.840.113549.1.12.1.1': 'pbeWithSHAAnd128BitRC4',\r\n    '1.2.840.113549.1.12.1.2': 'pbeWithSHAAnd40BitRC4',\r\n    '1.2.840.113549.1.12.1.3': 'pbeWithSHAAnd3-KeyTripleDES-CBC',\r\n    '1.2.840.113549.1.12.1.4': 'pbeWithSHAAnd2-KeyTripleDES-CBC',\r\n    '1.2.840.113549.1.12.1.5': 'pbeWithSHAAnd128BitRC2-CBC',\r\n    '1.2.840.113549.1.12.1.6': 'pbeWithSHAAnd40BitRC2-CBC',\r\n    '1.2.840.113549.1.12.1.80': 'pbeUnknownGost',\r\n    '1.2.840.113549.1.12.2.1': 'pkcs8-key-shrouding',\r\n    '1.2.840.113549.1.12.3.1': 'keyBagId',\r\n    '1.2.840.113549.1.12.3.2': 'certAndCRLBagId',\r\n    '1.2.840.113549.1.12.3.3': 'secretBagId',\r\n    '1.2.840.113549.1.12.3.4': 'safeContentsId',\r\n    '1.2.840.113549.1.12.3.5': 'pkcs-8ShroudedKeyBagId',\r\n    '1.2.840.113549.1.12.4.1': 'x509CertCRLBagId',\r\n    '1.2.840.113549.1.12.4.2': 'pkcs-12-SDSICertBag',\r\n    // pkcs#12 safe bags\r\n    '1.2.840.113549.1.12.10.1.1': 'keyBag',\r\n    '1.2.840.113549.1.12.10.1.2': 'pkcs8ShroudedKeyBag',\r\n    '1.2.840.113549.1.12.10.1.3': 'certBag',\r\n    '1.2.840.113549.1.12.10.1.4': 'crlBag',\r\n    '1.2.840.113549.1.12.10.1.5': 'secretBag',\r\n    '1.2.840.113549.1.12.10.1.6': 'safeContentsBag',\r\n    // hash algorithm\r\n    '1.2.840.113549.2.5': 'md-5',\r\n    // symmetric key algorithm oids\r\n    '1.2.840.113549.3.7': 'des-EDE3-CBC',\r\n    // additional algorithms\r\n    '1.3.132.0.34': 'secp384r1',\r\n    '1.3.132.0.35': 'secp521r1',\r\n    '1.3.132.112': 'ecDH',\r\n    '1.3.14.3.2.26': 'sha1',\r\n    '1.3.6.1.4.1.311.2.1.14': 'msCertExtensions',\r\n    '1.3.6.1.4.1.311.17.1': 'keyProviderNameAttr',\r\n    '1.3.6.1.4.1.311.17.2': 'localMachineKeyset',\r\n    '1.3.6.1.4.1.311.17.3.20': 'certKeyIdentifierPropId',\r\n    // SignalCom algorithms\r\n    '1.3.6.1.4.1.5849': 'SignalCom',\r\n    '1.3.6.1.4.1.5849.1.1.1': 'id-sc-gost28147-ecb',\r\n    '1.3.6.1.4.1.5849.1.1.2': 'id-sc-gost28147-gamma',\r\n    '1.3.6.1.4.1.5849.1.1.3': 'id-sc-gost28147-gfb',\r\n    '1.3.6.1.4.1.5849.1.1.4': 'id-sc-gost28147-mac',\r\n    '1.3.6.1.4.1.5849.1.1.5': 'id-sc-gostR3410-94',\r\n    '1.3.6.1.4.1.5849.1.1.6.1.1.1': 'id-sc-gostR3410-94-default',\r\n    '1.3.6.1.4.1.5849.1.1.6.1.1.2': 'id-sc-gostR3410-94-test',\r\n    '1.3.6.1.4.1.5849.1.2.1': 'id-sc-gostR3411-94',\r\n    '1.3.6.1.4.1.5849.1.3.1': 'id-sc-gostR3411-94-with-gostR3410-94',\r\n    '1.3.6.1.4.1.5849.1.3.2': 'id-sc-gostR3411-94-with-gostR3410-2001',\r\n    '1.3.6.1.4.1.5849.1.4.1': 'id-sc-cmsGostWrap',\r\n    '1.3.6.1.4.1.5849.1.4.2': 'id-sc-cmsGost28147Wrap',\r\n    '1.3.6.1.4.1.5849.1.5.1': 'id-sc-pbeWithGost3411AndGost28147',\r\n    '1.3.6.1.4.1.5849.1.5.2': 'id-sc-pbeWithGost3411AndGost28147CFB',\r\n    '1.3.6.1.4.1.5849.1.6.2': 'id-sc-gostR3410-2001',\r\n    '1.3.6.1.4.1.5849.1.7.2': 'id-sc-hmacWithGostR3411',\r\n    '1.3.6.1.4.1.5849.1.8.1': 'id-sc-r3410-ESDH-r3411kdf',\r\n    '1.3.6.1.4.1.5849.1.8.3': 'id-sc-ecdh-singlePass-cofactor-r3411kdf',\r\n    '1.3.6.1.4.1.5849.2.2.1': 'id-sc-gostR3410-2001-publicKey',\r\n    // additinal data\r\n    '1.3.6.1.5.5.7.0.12': 'attribute-cert',\r\n    '1.3.6.1.5.5.7.1.1': 'authorityInfoAccess',\r\n    '1.3.6.1.5.5.7.1.4': 'auditIdentity',\r\n    '1.3.6.1.5.5.7.1.6': 'aaControls',\r\n    '1.3.6.1.5.5.7.1.10': 'ac-proxying',\r\n    '1.3.6.1.5.5.7.1.11': 'subjectInfoAccess',\r\n    '1.3.6.1.5.5.7.3.1': 'serverAuth',\r\n    '1.3.6.1.5.5.7.3.2': 'clientAuth',\r\n    '1.3.6.1.5.5.7.3.3': 'codeSigning',\r\n    '1.3.6.1.5.5.7.3.4': 'emailProtection',\r\n    '1.3.6.1.5.5.7.3.5': 'ipsecEndSystem',\r\n    '1.3.6.1.5.5.7.3.6': 'ipsecTunnel',\r\n    '1.3.6.1.5.5.7.3.7': 'ipsecUser',\r\n    '1.3.6.1.5.5.7.3.8': 'timeStamping',\r\n    '1.3.6.1.5.5.7.3.9': 'OCSPSigning',\r\n    '1.3.6.1.5.5.7.5.1': 'regCtrl',\r\n    '1.3.6.1.5.5.7.5.1.1': 'regToken',\r\n    '1.3.6.1.5.5.7.5.1.2': 'authenticator',\r\n    '1.3.6.1.5.5.7.5.1.3': 'pkiPublicationInfo',\r\n    '1.3.6.1.5.5.7.5.1.4': 'pkiArchiveOptions',\r\n    '1.3.6.1.5.5.7.5.1.5': 'oldCertID',\r\n    '1.3.6.1.5.5.7.5.1.6': 'protocolEncrKey',\r\n    '1.3.6.1.5.5.7.5.2': 'regInfoAttr',\r\n    '1.3.6.1.5.5.7.5.2.1': 'UTF8Pairs',\r\n    '1.3.6.1.5.5.7.5.2.2': 'certReq',\r\n    '1.3.6.1.5.5.7.6.2': 'noSignature',\r\n    '1.3.6.1.5.5.7.7.1': 'statusInfo',\r\n    '1.3.6.1.5.5.7.7.2': 'identification',\r\n    '1.3.6.1.5.5.7.7.3': 'identityProof',\r\n    '1.3.6.1.5.5.7.7.4': 'dataReturn',\r\n    '1.3.6.1.5.5.7.7.5': 'transactionId',\r\n    '1.3.6.1.5.5.7.7.6': 'senderNonce',\r\n    '1.3.6.1.5.5.7.7.7': 'recipientNonce',\r\n    '1.3.6.1.5.5.7.7.8': 'addExtensions',\r\n    '1.3.6.1.5.5.7.7.9': 'encryptedPOP',\r\n    '1.3.6.1.5.5.7.7.10': 'decryptedPOP',\r\n    '1.3.6.1.5.5.7.7.11': 'lraPOPWitness',\r\n    '1.3.6.1.5.5.7.7.15': 'getCert',\r\n    '1.3.6.1.5.5.7.7.16': 'getCRL',\r\n    '1.3.6.1.5.5.7.7.17': 'revokeRequest',\r\n    '1.3.6.1.5.5.7.7.18': 'regInfo',\r\n    '1.3.6.1.5.5.7.7.19': 'responseInfo',\r\n    '1.3.6.1.5.5.7.7.21': 'queryPending',\r\n    '1.3.6.1.5.5.7.7.22': 'popLinkRandom',\r\n    '1.3.6.1.5.5.7.7.23': 'popLinkWitness',\r\n    '1.3.6.1.5.5.7.7.24': 'confirmCertAcceptance',\r\n    '1.3.6.1.5.5.7.7.25': 'statusInfoV2',\r\n    '1.3.6.1.5.5.7.7.26': 'trustedAnchors',\r\n    '1.3.6.1.5.5.7.7.27': 'authPublish',\r\n    '1.3.6.1.5.5.7.7.28': 'batchRequests',\r\n    '1.3.6.1.5.5.7.7.29': 'batchResponses',\r\n    '1.3.6.1.5.5.7.7.30': 'publishCert',\r\n    '1.3.6.1.5.5.7.7.31': 'modCertTemplate',\r\n    '1.3.6.1.5.5.7.7.32': 'controlProcessed',\r\n    '1.3.6.1.5.5.7.7.33': 'popLinkWitnessV2',\r\n    '1.3.6.1.5.5.7.7.34': 'identityProofV2',\r\n    '1.3.6.1.5.5.7.9.1': 'dateOfBirth',\r\n    '1.3.6.1.5.5.7.9.2': 'placeOfBirth',\r\n    '1.3.6.1.5.5.7.9.3': 'gender',\r\n    '1.3.6.1.5.5.7.9.4': 'countryOfCitizenship',\r\n    '1.3.6.1.5.5.7.9.5': 'countryOfResidence',\r\n    '1.3.6.1.5.5.7.10.1': 'authenticationInfo',\r\n    '1.3.6.1.5.5.7.10.2': 'accessIdentity',\r\n    '1.3.6.1.5.5.7.10.3': 'chargingIdentity',\r\n    '1.3.6.1.5.5.7.10.4': 'group',\r\n    '1.3.6.1.5.5.7.10.6': 'encAttrs',\r\n    '1.3.6.1.5.5.7.12.2': 'PKIData',\r\n    '1.3.6.1.5.5.7.12.3': 'PKIResponse',\r\n    '1.3.6.1.5.5.7.48.1.1': 'ocsp-basic',\r\n    '1.3.6.1.5.5.7.48.1.2': 'ocsp-nonce',\r\n    '1.3.6.1.5.5.7.48.1.3': 'ocsp-crl',\r\n    '1.3.6.1.5.5.7.48.1.4': 'ocsp-response',\r\n    '1.3.6.1.5.5.7.48.1.5': 'ocsp-nocheck',\r\n    '1.3.6.1.5.5.7.48.1.6': 'ocsp-archive-cutoff',\r\n    '1.3.6.1.5.5.7.48.1.7': 'ocsp-service-locator',\r\n    // Key packages\r\n    '2.16.840.1.101.2.1.2.78.2': 'encryptedKeyPkg',\r\n    '2.16.840.1.101.2.1.2.78.3': 'keyPackageReceipt',\r\n    '2.16.840.1.101.2.1.2.78.5': 'aKeyPackage',\r\n    '2.16.840.1.101.2.1.2.78.6': 'keyPackageError',\r\n    // symmetric key algorithm oids\r\n    '2.16.840.1.101.3.4': 'nistAlgorithms',\r\n    '2.16.840.1.101.3.4.1': 'aes',\r\n    '2.16.840.1.101.3.4.1.1': 'aes128-ECB',\r\n    '2.16.840.1.101.3.4.1.2': 'aes128-CBC',\r\n    '2.16.840.1.101.3.4.1.3': 'aes128-OFB',\r\n    '2.16.840.1.101.3.4.1.4': 'aes128-CFB',\r\n    '2.16.840.1.101.3.4.1.5': 'aes128-wrap',\r\n    '2.16.840.1.101.3.4.1.6': 'aes128-GCM',\r\n    '2.16.840.1.101.3.4.1.7': 'aes128-CCM',\r\n    '2.16.840.1.101.3.4.1.8': 'aes128-wrap-pad',\r\n    '2.16.840.1.101.3.4.1.21': 'aes192-ECB',\r\n    '2.16.840.1.101.3.4.1.22': 'aes192-CBC',\r\n    '2.16.840.1.101.3.4.1.23': 'aes192-OFB',\r\n    '2.16.840.1.101.3.4.1.24': 'aes192-CFB',\r\n    '2.16.840.1.101.3.4.1.25': 'aes192-wrap',\r\n    '2.16.840.1.101.3.4.1.26': 'aes192-GCM',\r\n    '2.16.840.1.101.3.4.1.27': 'aes192-CCM',\r\n    '2.16.840.1.101.3.4.1.28': 'aes192-wrap-pad',\r\n    '2.16.840.1.101.3.4.1.41': 'aes256-ECB',\r\n    '2.16.840.1.101.3.4.1.42': 'aes256-CBC',\r\n    '2.16.840.1.101.3.4.1.43': 'aes256-OFB',\r\n    '2.16.840.1.101.3.4.1.44': 'aes256-CFB',\r\n    '2.16.840.1.101.3.4.1.45': 'aes256-wrap',\r\n    '2.16.840.1.101.3.4.1.46': 'aes256-GCM',\r\n    '2.16.840.1.101.3.4.1.47': 'aes256-CCM',\r\n    '2.16.840.1.101.3.4.1.48': 'aes256-wrap-pad',\r\n    // hash algorihtms\r\n    '2.16.840.1.101.3.4.2.1': 'sha256',\r\n    '2.16.840.1.101.3.4.2.2': 'sha384',\r\n    '2.16.840.1.101.3.4.2.3': 'sha512',\r\n    // pkcs12\r\n    '2.16.840.1.113730.3.1.216': 'userPKCS12',\r\n    // certificate issuer/subject OIDsets\r\n    '2.5.1.5.55': 'clearance',\r\n    '2.5.4.0': 'objectClass',\r\n    '2.5.4.1': 'aliasedEntryName',\r\n    '2.5.4.2': 'knowldgeinformation',\r\n    '2.5.4.3': 'commonName',\r\n    '2.5.4.5': 'serialName',\r\n    '2.5.4.6': 'countryName',\r\n    '2.5.4.7': 'localityName',\r\n    '2.5.4.8': 'stateOrProvinceName',\r\n    '2.5.4.9': 'streetAddress',\r\n    '2.5.4.10': 'organizationName',\r\n    '2.5.4.11': 'organizationalUnitName',\r\n    '2.5.4.12': 'title',\r\n    '2.5.4.13': 'description',\r\n    '2.5.4.14': 'searchGuide',\r\n    '2.5.4.15': 'businessCategory',\r\n    '2.5.4.16': 'postalAddress',\r\n    '2.5.4.17': 'postalCode',\r\n    '2.5.4.18': 'postOfficeBox',\r\n    '2.5.4.19': 'physicalDeliveryOfficeName',\r\n    '2.5.4.20': 'telephoneNumber',\r\n    '2.5.4.21': 'telexNumber',\r\n    '2.5.4.22': 'teletexTerminalIdentifier',\r\n    '2.5.4.23': 'facsimileTelephoneNumber',\r\n    '2.5.4.24': 'x121Address',\r\n    '2.5.4.25': 'internationalISDNNumber',\r\n    '2.5.4.26': 'registeredAddress',\r\n    '2.5.4.27': 'destinationIndicator',\r\n    '2.5.4.28': 'preferredDeliveryMethod',\r\n    '2.5.4.29': 'presentationAddress',\r\n    '2.5.4.30': 'supportedApplicationContext',\r\n    '2.5.4.31': 'member',\r\n    '2.5.4.32': 'owner',\r\n    '2.5.4.33': 'roleOccupant',\r\n    '2.5.4.34': 'seeAlso',\r\n    '2.5.4.35': 'userPassword',\r\n    '2.5.4.36': 'userCertificate',\r\n    '2.5.4.37': 'cACertificate',\r\n    '2.5.4.38': 'authorityRevocationList',\r\n    '2.5.4.39': 'certificateRevocationList',\r\n    '2.5.4.40': 'crossCertificatePair',\r\n    '2.5.4.41': 'name',\r\n    '2.5.4.42': 'givenName',\r\n    '2.5.4.43': 'initials',\r\n    '2.5.4.44': 'generationQualifier',\r\n    '2.5.4.45': 'uniqueIdentifier',\r\n    '2.5.4.46': 'dnQualifier',\r\n    '2.5.4.47': 'enhancedSearchGuide',\r\n    '2.5.4.48': 'protocolInformation',\r\n    '2.5.4.49': 'distinguishedName',\r\n    '2.5.4.50': 'uniqueMember',\r\n    '2.5.4.51': 'houseIdentifier',\r\n    '2.5.4.52': 'supportedAlgorithms',\r\n    '2.5.4.53': 'deltaRevocationList',\r\n    '2.5.4.58': 'attributeCertificate',\r\n    '2.5.4.65': 'pseudonym',\r\n    '2.5.4.72': 'role',\r\n    // X.509 extension OIDsets\r\n    '2.5.29.1': 'authorityKeyIdentifierX',\r\n    '2.5.29.2': 'keyAttributesX',\r\n    '2.5.29.3': 'certificatePoliciesX',\r\n    '2.5.29.4': 'keyUsageRestriction',\r\n    '2.5.29.5': 'policyMapping',\r\n    '2.5.29.6': 'subtreesConstraint',\r\n    '2.5.29.7': 'subjectAltNameX',\r\n    '2.5.29.8': 'issuerAltNameX',\r\n    '2.5.29.9': 'subjectDirectoryAttributes',\r\n    '2.5.29.10': 'basicConstraintsX',\r\n    '2.5.29.11': 'nameConstraintsX',\r\n    '2.5.29.12': 'policyConstraintsX',\r\n    '2.5.29.13': 'basicConstraintsY',\r\n    '2.5.29.14': 'subjectKeyIdentifier',\r\n    '2.5.29.15': 'keyUsage',\r\n    '2.5.29.16': 'privateKeyUsagePeriod',\r\n    '2.5.29.17': 'subjectAltName',\r\n    '2.5.29.18': 'issuerAltName',\r\n    '2.5.29.19': 'basicConstraints',\r\n    '2.5.29.20': 'cRLNumber',\r\n    '2.5.29.21': 'cRLReason',\r\n    '2.5.29.22': 'expirationDate',\r\n    '2.5.29.23': 'instructionCode',\r\n    '2.5.29.24': 'invalidityDate',\r\n    '2.5.29.25': 'cRLDistributionPointsX',\r\n    '2.5.29.26': 'issuingDistributionPointX',\r\n    '2.5.29.27': 'deltaCRLIndicator',\r\n    '2.5.29.28': 'issuingDistributionPoint',\r\n    '2.5.29.29': 'certificateIssuer',\r\n    '2.5.29.30': 'nameConstraints',\r\n    '2.5.29.31': 'cRLDistributionPoints',\r\n    '2.5.29.32': 'certificatePolicies',\r\n    '2.5.29.33': 'policyMappings',\r\n    '2.5.29.34': 'policyConstraintsY',\r\n    '2.5.29.35': 'authorityKeyIdentifier',\r\n    '2.5.29.36': 'policyConstraints',\r\n    '2.5.29.37': 'extKeyUsage',\r\n    '2.5.29.46': 'freshestCRL',\r\n    '2.5.29.54': 'inhibitAnyPolicy',\r\n    '2.5.29.55': 'targetInformation',\r\n    '2.5.29.56': 'noRevAvail'\r\n};\r\n\r\n/**\r\n * ASN.1 Object Identifiers for friandly names\r\n * Generated automaticly\r\n * @field identifiers\r\n * @memberOf GostSecurity\r\n */\r\nvar identifiers = {};\r\nfor (let id in names)\r\n    identifiers[names[id]] = id;\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Algorithm identifiers {@link gostCrypto.AlgorithmIdentifier} for Object Identifiers\r\n *\r\n * @field algorithms\r\n * @memberOf GostSecurity\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar algorithms = {\r\n    // CryptoPro algoritms\r\n    'id-GostR3411-94-with-GostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94',\r\n    'id-GostR3411-94-with-GostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94',\r\n    'id-GostR3411-94': 'GOST R 34.11-94',\r\n    'id-HMACGostR3411-94': { name: 'HMAC', hash: { name: 'GOST R 34.11-94' } },\r\n    'id-Gost28147-89-None-KeyWrap': 'GOST 28147-89-KW',\r\n    'id-Gost28147-89-CryptoPro-KeyWrap': 'GOST 28147-89-CPKW',\r\n    'id-GostR3410-2001': 'GOST R 34.10-2001',\r\n    'id-GostR3410-94': 'GOST R 34.10-94',\r\n    'id-GostR3410-94-a': 'GOST R 34.10-94',\r\n    'id-GostR3410-94-aBis': 'GOST R 34.10-94',\r\n    'id-GostR3410-94-b': 'GOST R 34.10-94',\r\n    'id-GostR3410-94-bBis': 'GOST R 34.10-94',\r\n    'id-Gost28147-89': 'GOST 28147-89',\r\n    'id-Gost28147-89-MAC': 'GOST 28147-89-MAC',\r\n    'id-GostR3410-2001-CryptoPro-ESDH': 'GOST R 34.10-2001-DH/GOST R 34.11-94',\r\n    'id-GostR3410-94-CryptoPro-ESDH': 'GOST R 34.10-94-DH/GOST R 34.11-94',\r\n    'id-GostR3410-2001DH': 'GOST R 34.10-2001-DH',\r\n    'id-GostR3410-94DH': 'GOST R 34.10-94-DH',\r\n    // TK-26 attributes\r\n    'id-tc26-gost3410-12-256': 'GOST R 34.10-256',\r\n    'id-tc26-gost3410-12-512': 'GOST R 34.10-512',\r\n    'id-tc26-gost3411-94': 'GOST R 34.11-94',\r\n    'id-tc26-gost3411-12-256': 'GOST R 34.11-256',\r\n    'id-tc26-gost3411-12-512': 'GOST R 34.11-512',\r\n    'id-tc26-signwithdigest-gost3410-12-94': 'GOST R 34.10-256/GOST R 34.11-94',\r\n    'id-tc26-signwithdigest-gost3410-12-256': 'GOST R 34.10-256/GOST R 34.11-256',\r\n    'id-tc26-signwithdigest-gost3410-12-512': 'GOST R 34.10-512/GOST R 34.11-512',\r\n    'id-tc26-hmac-gost-3411-12-256': { name: 'HMAC', hash: { name: 'GOST R 34.11-256' } },\r\n    'id-tc26-hmac-gost-3411-12-512': { name: 'HMAC', hash: { name: 'GOST R 34.11-512' } },\r\n    'id-tc26-agreement-gost-3410-12-256': 'GOST R 34.10-256-DH/GOST R 34.11-256',\r\n    'id-tc26-agreement-gost-3410-12-512': 'GOST R 34.10-512-DH/GOST R 34.11-256',\r\n    // SignalCom algorithms\r\n    'id-sc-gost28147-ecb': 'GOST 28147-89-ECB/SC',\r\n    'id-sc-gost28147-gamma': 'GOST 28147-89-CTR/SC',\r\n    'id-sc-gost28147-gfb': 'GOST 28147-89-CFB/SC',\r\n    'id-sc-gost28147-mac': 'GOST 28147-89-MAC/SC',\r\n    'id-sc-gostR3410-94': 'GOST R 34.10-94/SC',\r\n    'id-sc-gostR3410-94-default': 'GOST R 34.10-94/SC',\r\n    'id-sc-gostR3410-94-test': 'GOST R 34.10-94/SC/S-TEST',\r\n    'id-sc-gostR3411-94': 'GOST R 34.11-94/SC',\r\n    'id-sc-gostR3411-94-with-gostR3410-94': 'GOST R 34.10-94/GOST R 34.11-94/SC',\r\n    'id-sc-gostR3411-94-with-gostR3410-2001': 'GOST R 34.10-2001/GOST R 34.11-94/SC',\r\n    'id-sc-cmsGostWrap': 'GOST 28147-89-SCKW/SC',\r\n    'id-sc-cmsGost28147Wrap': 'GOST 28147-89-KW/SC',\r\n    'id-sc-pbeWithGost3411AndGost28147': {\r\n        derivation: { name: 'GOST R 34.11-94-PBKDF2/SC' },\r\n        encryption: { name: 'GOST 28147-ECB/SC' }\r\n    },\r\n    'id-sc-pbeWithGost3411AndGost28147CFB': {\r\n        derivation: { name: 'GOST R 34.11-94-PBKDF2/SC' },\r\n        encryption: { name: 'GOST 28147-CFB/SC' }\r\n    },\r\n    'id-sc-gostR3410-2001': 'GOST R 34.10-2001/SC',\r\n    'id-sc-hmacWithGostR3411': { name: 'HMAC', hash: { name: 'GOST R 34.11-94/SC' } },\r\n    'id-sc-r3410-ESDH-r3411kdf': 'GOST R 34.10-2001-DH/GOST R 34.11-94/SC',\r\n    // RSA algorithms\r\n    noSignature: 'NONE',\r\n    rsaEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } },\r\n    sha1withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-1' } },\r\n    sha256withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-256' } },\r\n    sha384withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-384' } },\r\n    sha512withRSAEncryption: { name: 'RSASSA-PKCS1-v1_5', hash: { name: 'SHA-512' } },\r\n    'rsaes-oaep': 'RSA-OAEP',\r\n    'rsassa-pss': 'RSA-PSS',\r\n    // ECDSA\r\n    'ecdsa': 'ECDSA',\r\n    'ecdsa-with-SHA1': { name: 'ECDSA', hash: { name: 'SHA-1' } },\r\n    'ecdsa-with-SHA256': { name: 'ECDSA', hash: { name: 'SHA-256' } },\r\n    'ecdsa-with-SHA384': { name: 'ECDSA', hash: { name: 'SHA-384' } },\r\n    'ecdsa-with-SHA512': { name: 'ECDSA', hash: { name: 'SHA-512' } },\r\n    // Legion of the Bouncy Castle pbe\r\n    'pbeWithSHAAndAES128-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\r\n        encryption: { name: 'AES-CBC', length: 128 }\r\n    },\r\n    'pbeWithSHAAndAES192-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\r\n        encryption: { name: 'AES-CBC', length: 192 }\r\n    },\r\n    'pbeWithSHAAndAES256-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-1' } },\r\n        encryption: { name: 'AES-CBC', length: 256 }\r\n    },\r\n    'pbeWithSHA256AndAES128-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\r\n        encryption: { name: 'AES-CBC', length: 128 }\r\n    },\r\n    'pbeWithSHA256AndAES192-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\r\n        encryption: { name: 'AES-CBC', length: 192 }\r\n    },\r\n    'pbeWithSHA256AndAES256-CBC': {\r\n        derivation: { name: 'PBKDF2', hash: { name: 'SHA-256' } },\r\n        encryption: { name: 'AES-CBC', length: 256 }\r\n    },\r\n    // PKCS12 PBE\r\n    'pbeWithSHAAnd3-KeyTripleDES-CBC': {\r\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\r\n        encryption: { name: '3DES', block: 'CBC' }\r\n    },\r\n    'pbeWithSHAAnd2-KeyTripleDES-CBC': {\r\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\r\n        encryption: { name: '2DES', block: 'CBC' }\r\n    },\r\n    'pbeWithSHAAnd128BitRC2-CBC': {\r\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\r\n        encryption: { name: 'RC2', block: 'CBC', length: 128 }\r\n    },\r\n    'pbeWithSHAAnd40BitRC2-CBC': {\r\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'SHA-1' },\r\n        encryption: { name: 'RC2', block: 'CBC', length: 40 }\r\n    },\r\n    'pbeUnknownGost': {\r\n        derivation: { name: 'PFXKDF', iterations: 2000, hash: 'GOST R 34.11-94' },\r\n        encryption: { name: 'GOST 28147-89-CFB' }\r\n    },\r\n    //  Diffie-Hellman Key Exchange Keys\r\n    ecDH: 'ECDH',\r\n    dhKeyAgreement: 'DH',\r\n    // symmetric key algorithm oids\r\n    'aes128-CBC': { name: 'AES-CBC', length: 128 },\r\n    'aes128-CFB': { name: 'AES-CFB-8', length: 128 },\r\n    'aes128-GCM': { name: 'AES-GCM', length: 128 },\r\n    'aes128-wrap': { name: 'AES-KW', length: 128 },\r\n    'aes192-CBC': { name: 'AES-CBC', length: 192 },\r\n    'aes192-CFB': { name: 'AES-CFB-8', length: 192 },\r\n    'aes192-GCM': { name: 'AES-GCM', length: 192 },\r\n    'aes192-wrap': { name: 'AES-KW', length: 192 },\r\n    'aes256-CBC': { name: 'AES-CBC', length: 256 },\r\n    'aes256-CFB': { name: 'AES-CFB-8', length: 256 },\r\n    'aes256-GCM': { name: 'AES-GCM', length: 256 },\r\n    'aes256-wrap': { name: 'AES-KW', length: 256 },\r\n    // hash algorihtms\r\n    sha1: 'SHA-1',\r\n    sha256: 'SHA-256',\r\n    sha384: 'SHA-384',\r\n    sha512: 'SHA-512',\r\n    // PBE\r\n    PBKDF2: 'PBKDF2',\r\n    PBES2: { derivation: { name: 'PBKDF2' }, encryption: {} },\r\n    PBMAC1: { derivation: { name: 'PBKDF2' }, hmac: {} },\r\n    // HMAC\r\n    hmacWithSHA1: 'SHA-1-HMAC',\r\n    hmacWithSHA256: { name: 'HMAC', hash: { name: 'SHA-256' } },\r\n    hmacWithSHA384: { name: 'HMAC', hash: { name: 'SHA-384' } },\r\n    hmacWithSHA512: { name: 'HMAC', hash: { name: 'SHA-512' } }\r\n};\r\n\r\n// Each algorithm must has id for convertions\r\nfor (let id in algorithms) {\r\n    let algorithm = algorithms[id];\r\n    if (typeof algorithm === 'string') {\r\n        algorithm = { name: algorithm };\r\n    }\r\n    algorithm.id = id;\r\n    algorithms[id] = algorithm;\r\n}  // </editor-fold>\r\n\r\n/**\r\n * Algorithm parameters\r\n *\r\n * @field parameters\r\n * @memberOf GostSecurity\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar parameters = {\r\n    'id-GostR3410-94-TestParamSet': { namedParam: 'S-TEST' },\r\n    'id-GostR3410-94-CryptoPro-A-ParamSet': { namedParam: 'S-A' },\r\n    'id-GostR3410-94-CryptoPro-B-ParamSet': { namedParam: 'S-B' },\r\n    'id-GostR3410-94-CryptoPro-C-ParamSet': { namedParam: 'S-C' },\r\n    'id-GostR3410-94-CryptoPro-D-ParamSet': { namedParam: 'S-D' },\r\n    'id-GostR3410-94-CryptoPro-XchA-ParamSet': { namedParam: 'X-A' },\r\n    'id-GostR3410-94-CryptoPro-XchB-ParamSet': { namedParam: 'X-B' },\r\n    'id-GostR3410-94-CryptoPro-XchC-ParamSet': { namedParam: 'X-C' },\r\n    // CryptoPro named curves\r\n    'id-GostR3410-2001-CryptoPro-TestParamSet': { namedCurve: 'S-256-TEST' },\r\n    'id-GostR3410-2001-CryptoPro-A-ParamSet': { namedCurve: 'S-256-A' },\r\n    'id-GostR3410-2001-CryptoPro-B-ParamSet': { namedCurve: 'S-256-B' },\r\n    'id-GostR3410-2001-CryptoPro-C-ParamSet': { namedCurve: 'S-256-C' },\r\n    'id-GostR3410-2001-CryptoPro-XchA-ParamSet': { namedCurve: 'X-256-A' },\r\n    'id-GostR3410-2001-CryptoPro-XchB-ParamSet': { namedCurve: 'X-256-B' },\r\n    // TC-26 named curves\r\n    'id-tc26-gost-3410-12-256-paramSetTest': { namedCurve: 'T-256-TEST' },\r\n    'id-tc26-gost-3410-12-256-paramSetA': { namedCurve: 'T-256-A' },\r\n    'id-tc26-gost-3410-12-256-paramSetB': { namedCurve: 'T-256-B' },\r\n    'id-tc26-gost-3410-12-512-paramSetTest': { namedCurve: 'T-512-TEST' },\r\n    'id-tc26-gost-3410-12-512-paramSetA': { namedCurve: 'T-512-A' },\r\n    'id-tc26-gost-3410-12-512-paramSetB': { namedCurve: 'T-512-B' },\r\n    'id-tc26-gost-3410-12-512-paramSetC': { namedCurve: 'T-512-C' },\r\n    'id-tc26-gost-3410-12-512-paramSetD': { namedCurve: 'T-512-D' },\r\n    // Curve attributes additional algorithms\r\n    secp256r1: { namedCurve: 'P-256' },\r\n    secp384r: { namedCurve: 'P-384' },\r\n    secp521r: { namedCurve: 'P-521' },\r\n    // CryptoPro encryption parameters\r\n    'id-GostR3411-94-TestParamSet': { sBox: 'D-TEST' },\r\n    'id-GostR3411-94-CryptoProParamSet': { sBox: 'D-A' },\r\n    'id-GostR3411-94-CryptoPro-A-ParamSet': { sBox: 'D-B' },\r\n    'id-GostR3411-94-CryptoPro-B-ParamSet': { sBox: 'D-C' },\r\n    'id-GostR3411-94-CryptoPro-C-ParamSet': { sBox: 'D-D' },\r\n    'id-Gost28147-89-TestParamSet': { block: 'CTR', sBox: 'E-TEST' },\r\n    'id-Gost28147-89-CryptoPro-A-ParamSet': { block: 'CFB', sBox: 'E-A', keyMeshing: 'CP' },\r\n    'id-Gost28147-89-CryptoPro-B-ParamSet': { block: 'CFB', sBox: 'E-B', keyMeshing: 'CP' },\r\n    'id-Gost28147-89-CryptoPro-C-ParamSet': { block: 'CFB', sBox: 'E-C', keyMeshing: 'CP' },\r\n    'id-Gost28147-89-CryptoPro-D-ParamSet': { block: 'CFB', sBox: 'E-D', keyMeshing: 'CP' },\r\n    'id-Gost28147-89-None-KeyMeshing': { keyMeshing: 'NO' },\r\n    'id-Gost28147-89-CryptoPro-KeyMeshing': { keyMeshing: 'CP' },\r\n    // TC-26 encryption parameters\r\n    'id-tc26-gost-28147-param-Z': { block: 'CFB', sBox: 'E-Z' }\r\n};  // </editor-fold>\r\n\r\n/**\r\n * Named attributes for Algorithm identifiers {@link AlgorithmIdentifier}<br><br>\r\n *\r\n * Recognized attributes:\r\n *  <ul>\r\n *      <li>sBox - Paramsets for GOST 28147. Supported values:\r\n *          <ul>\r\n *              <li>D-TEST - id-GostR3411-94-TestParamSet</li>\r\n *              <li>D-A - id-GostR3411-94-CryptoProParamSet</li>\r\n *              <li>D-B - id-GostR3411-94-CryptoPro-A-ParamSet</li>\r\n *              <li>D-C - id-GostR3411-94-CryptoPro-B-ParamSet</li>\r\n *              <li>D-D - id-GostR3411-94-CryptoPro-C-ParamSet</li>\r\n *              <li>E-TEST - id-Gost28147-89-TestParamSet</li>\r\n *              <li>E-A - id-Gost28147-89-CryptoPro-A-ParamSet</li>\r\n *              <li>E-B - id-Gost28147-89-CryptoPro-B-ParamSet</li>\r\n *              <li>E-C - id-Gost28147-89-CryptoPro-C-ParamSet</li>\r\n *              <li>E-D - id-Gost28147-89-CryptoPro-D-ParamSet</li>\r\n *              <li>E-Z - id-tc26-gost-28147-param-Z</li>\r\n *              <li>D-256 - id-tc26-gost3411-12-256</li>\r\n *              <li>D-512 - id-tc26-gost3411-12-512</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>namedParam - Paramset for GOST R 34.10-94\r\n *          <ul>\r\n *              <li>S-TEST - id-GostR3410-94-TestParamSet</li>\r\n *              <li>S-A - id-GostR3410-94-CryptoPro-A-ParamSet</li>\r\n *              <li>S-B - id-GostR3410-94-CryptoPro-B-ParamSet</li>\r\n *              <li>S-C - id-GostR3410-94-CryptoPro-C-ParamSet</li>\r\n *              <li>S-D - id-GostR3410-94-CryptoPro-D-ParamSet</li>\r\n *              <li>X-A - id-GostR3410-94-CryptoPro-XchA-ParamSet</li>\r\n *              <li>X-B - id-GostR3410-94-CryptoPro-XchB-ParamSet</li>\r\n *              <li>X-C - id-GostR3410-94-CryptoPro-XchC-ParamSet</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>namedCurve - Paramset for GOST R 34.10-01 and GOST R 34.10-12\r\n *          <ul>\r\n *              <li>S-256-TEST - id-GostR3410-2001-CryptoPro-TestParamSet</li>\r\n *              <li>S-256-A - id-GostR3410-2001-CryptoPro-A-ParamSet</li>\r\n *              <li>S-256-B - id-GostR3410-2001-CryptoPro-B-ParamSet</li>\r\n *              <li>S-256-C - id-GostR3410-2001-CryptoPro-C-ParamSet</li>\r\n *              <li>X-256-A - id-GostR3410-2001-CryptoPro-XchA-ParamSet</li>\r\n *              <li>X-256-B - id-GostR3410-2001-CryptoPro-XchB-ParamSet</li>\r\n *              <li>P-256 - secp256r1</li>\r\n *              <li>T-256-TEST - id-tc26-gost-3410-12-256-paramSetTest</li>\r\n *              <li>T-256-A - id-tc26-gost-3410-12-256-paramSetA</li>\r\n *              <li>T-256-B - id-tc26-gost-3410-12-256-paramSetB</li>\r\n *              <li>T-512-TEST - id-tc26-gost-3410-12-512-paramSetTest</li>\r\n *              <li>T-512-A - id-tc26-gost-3410-12-512-paramSetA</li>\r\n *              <li>T-512-B - id-tc26-gost-3410-12-512-paramSetB</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n * @field attributes\r\n * @memberOf GostSecurity\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar attributes = {\r\n    sBox: {\r\n        'D-TEST': 'id-GostR3411-94-TestParamSet',\r\n        'D-A': 'id-GostR3411-94-CryptoProParamSet',\r\n        'D-B': 'id-GostR3411-94-CryptoPro-A-ParamSet',\r\n        'D-C': 'id-GostR3411-94-CryptoPro-B-ParamSet',\r\n        'D-D': 'id-GostR3411-94-CryptoPro-C-ParamSet',\r\n        'E-TEST': 'id-Gost28147-89-TestParamSet',\r\n        'E-A': 'id-Gost28147-89-CryptoPro-A-ParamSet',\r\n        'E-B': 'id-Gost28147-89-CryptoPro-B-ParamSet',\r\n        'E-C': 'id-Gost28147-89-CryptoPro-C-ParamSet',\r\n        'E-D': 'id-Gost28147-89-CryptoPro-D-ParamSet',\r\n        'E-Z': 'id-tc26-gost-28147-param-Z',\r\n        'D-256': 'id-tc26-gost3411-12-256',\r\n        'D-512': 'id-tc26-gost3411-12-512'\r\n    },\r\n    namedParam: {\r\n        'S-TEST': 'id-GostR3410-94-TestParamSet',\r\n        'S-A': 'id-GostR3410-94-CryptoPro-A-ParamSet',\r\n        'S-B': 'id-GostR3410-94-CryptoPro-B-ParamSet',\r\n        'S-C': 'id-GostR3410-94-CryptoPro-C-ParamSet',\r\n        'S-D': 'id-GostR3410-94-CryptoPro-D-ParamSet',\r\n        'X-A': 'id-GostR3410-94-CryptoPro-XchA-ParamSet',\r\n        'X-B': 'id-GostR3410-94-CryptoPro-XchB-ParamSet',\r\n        'X-C': 'id-GostR3410-94-CryptoPro-XchC-ParamSet'\r\n    },\r\n    namedCurve: {\r\n        'S-256-TEST': 'id-GostR3410-2001-CryptoPro-TestParamSet',\r\n        'S-256-A': 'id-GostR3410-2001-CryptoPro-A-ParamSet',\r\n        'S-256-B': 'id-GostR3410-2001-CryptoPro-B-ParamSet',\r\n        'S-256-C': 'id-GostR3410-2001-CryptoPro-C-ParamSet',\r\n        'X-256-A': 'id-GostR3410-2001-CryptoPro-XchA-ParamSet',\r\n        'X-256-B': 'id-GostR3410-2001-CryptoPro-XchB-ParamSet',\r\n        'P-256': 'secp256r1',\r\n        'T-256-TEST': 'id-tc26-gost-3410-12-256-paramSetTest',\r\n        'T-256-A': 'id-tc26-gost-3410-12-256-paramSetA',\r\n        'T-256-B': 'id-tc26-gost-3410-12-256-paramSetB',\r\n        'T-512-TEST': 'id-tc26-gost-3410-12-512-paramSetTest',\r\n        'T-512-A': 'id-tc26-gost-3410-12-512-paramSetA',\r\n        'T-512-B': 'id-tc26-gost-3410-12-512-paramSetB'\r\n    }\r\n}; // </editor-fold>\r\n\r\n/**\r\n * Set of algorithms for different providers<br><br>\r\n * Supported providers:\r\n *  <ul>\r\n *      <li><b>CP-94</b> - CryptoPro GOST R 34.10-94 algorithm set</li>\r\n *      <li><b>CP-01</b> - CryptoPro GOST R 34.10-2001 algorithm set</li>\r\n *      <li><b>TC-256</b> - Technical Commitee GOST R 34.10-256 algorithm set</li>\r\n *      <li><b>TC-512</b> - Technical Commitee GOST R 34.10-512 algorithm set</li>\r\n *      <li><b>SC-94</b> - SignalCom GOST R 34.10-94 algorithm set</li>\r\n *      <li><b>SC-01</b> - SignalCom GOST R 34.10-2001 algorithm set</li>\r\n *  </ul>\r\n *\r\n *  Follow set can be used if it's supported your browser native WebCrypto API:\r\n *  <ul>\r\n *      <li><b>RSA-2048</b> - RSA Encryption 2048 bits with SHA-256 algorithm set</li>\r\n *      <li><b>ECDSA-256</b> - ECDSA-256 with SHA-256 algorithm set</li>\r\n *  </ul>\r\n *\r\n *  Each provider records has follow standart algorithm identifiers:\r\n *  <ul>\r\n *      <li><b>signature</b> - Signature algorithm</li>\r\n *      <li><b>generation</b> - Asymmetric key generation algorithm</li>\r\n *      <li><b>digest</b> - Digest algorithm</li>\r\n *      <li><b>wrapping</b> - Key wrapping algorithm</li>\r\n *      <li><b>hmac</b> - Hash-based message authentication code algorithm</li>\r\n *      <li><b>agreement</b> - Key agreement algorithm (except RSA schema)</li>\r\n *      <li><b>encryption</b> - Content encription algorithm</li>\r\n *      <li><b>derivation</b> - Password-based derivation algorithm</li>\r\n *      <li><b>pbes</b> - Password-based encryption algorithm</li>\r\n *      <li><b>pbmac</b> - Password-based message authentication code algorithm</li>\r\n *  </ul>\r\n *\r\n * @field providers\r\n * @memberOf GostSecurity\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar providers = {\r\n    'CP-94': {\r\n        title: 'Crypto-Pro GOST R 34.10-94 Cryptographic Service Provider',\r\n        signature: algorithms['id-GostR3411-94-with-GostR3410-94'],\r\n        publicKey: { id: 'id-GostR3410-94', name: 'GOST R 34.10-94', namedParam: 'X-A' },\r\n        privateKey: { id: 'id-GostR3410-94DH', name: 'GOST R 34.10-94-DH', namedParam: 'X-A' },\r\n        digest: algorithms['id-GostR3411-94'],\r\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\r\n        hmac: algorithms['id-HMACGostR3411-94'],\r\n        agreement: algorithms['id-GostR3410-94-CryptoPro-ESDH'],\r\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89', block: 'CFB', sBox: 'E-A', keyMeshing: 'CP' },\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000 }\r\n    },\r\n    'CP-01': {\r\n        title: 'Crypto-Pro GOST R 34.10-2001 Cryptographic Service Provider',\r\n        signature: algorithms['id-GostR3411-94-with-GostR3410-2001'],\r\n        publicKey: { id: 'id-GostR3410-2001', name: 'GOST R 34.10-2001', namedCurve: 'X-256-A' },\r\n        privateKey: { id: 'id-GostR3410-2001DH', name: 'GOST R 34.10-2001-DH', namedCurve: 'X-256-A' },\r\n        digest: { id: 'id-GostR3411-94', name: 'GOST R 34.11-94', sBox: 'D-A' },\r\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\r\n        hmac: algorithms['id-HMACGostR3411-94'],\r\n        agreement: algorithms['id-GostR3410-2001-CryptoPro-ESDH'],\r\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2', iterations: 2000 }\r\n    },\r\n    'TC-256': {\r\n        title: 'Crypto-Pro GOST R 34.10-2012 Cryptographic Service Provider',\r\n        signature: algorithms['id-tc26-signwithdigest-gost3410-12-256'],\r\n        publicKey: { id: 'id-tc26-gost3410-12-256', name: 'GOST R 34.10-256', namedCurve: 'X-256-A' },\r\n        privateKey: {\r\n            id: 'id-tc26-agreement-gost-3410-12-256',\r\n            name: 'GOST R 34.10-256-DH/GOST R 34.11-256',\r\n            namedCurve: 'X-256-A'\r\n        },\r\n        digest: algorithms['id-tc26-gost3411-12-256'],\r\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\r\n        hmac: algorithms['id-tc26-hmac-gost-3411-12-256'],\r\n        agreement: algorithms['id-tc26-agreement-gost-3410-12-256'],\r\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-256-12-PBKDF2', iterations: 2000 }\r\n    },\r\n    'TC-512': {\r\n        title: 'Crypto-Pro GOST R 34.10-2012 Strong Cryptographic Service Provider',\r\n        signature: algorithms['id-tc26-signwithdigest-gost3410-12-512'],\r\n        publicKey: { id: 'id-tc26-gost3410-12-512', name: 'GOST R 34.10-512', namedCurve: 'T-512-A' },\r\n        privateKey: {\r\n            id: 'id-tc26-agreement-gost-3410-12-512',\r\n            name: 'GOST R 34.10-512-DH/GOST R 34.11-256',\r\n            namedCurve: 'T-512-A'\r\n        },\r\n        digest: algorithms['id-tc26-gost3411-12-512'],\r\n        wrapping: { id: 'id-Gost28147-89-CryptoPro-KeyWrap', name: 'GOST 28147-89-CPKW', sBox: 'E-A' },\r\n        hmac: algorithms['id-tc26-hmac-gost-3411-12-512'],\r\n        agreement: algorithms['id-tc26-agreement-gost-3410-12-512'],\r\n        encryption: { id: 'id-Gost28147-89', name: 'GOST 28147-89-CFB-CPKM', sBox: 'E-A' },\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-256-PBKDF2', iterations: 2000 }\r\n    },\r\n    'SC-94': {\r\n        title: 'Signal-COM GOST Cryptographic Provider',\r\n        signature: algorithms['id-sc-gostR3411-94-with-gostR3410-94'],\r\n        publicKey: { id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', namedParam: 'S-A' },\r\n        privateKey: {\r\n            id: 'id-sc-gostR3410-94', name: 'GOST R 34.10-94/SC', modulusLength: 1024, param: {\r\n                p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\r\n                q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\r\n                a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\r\n            }\r\n        },\r\n        digest: algorithms['id-sc-gostR3411-94'],\r\n        encryption: { id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC' },\r\n        hmac: algorithms['id-sc-hmacWithGostR3411'],\r\n        wrapping: ['id-sc-cmsGostWrap'],\r\n        agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\r\n        pbes: {\r\n            id: 'id-sc-pbeWithGost3411AndGost28147CFB',\r\n            derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\r\n            encryption: {\r\n                id: 'id-sc-gost28147-gfb',\r\n                name: 'GOST 28147-CFB/SC',\r\n                iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])\r\n            }\r\n        }\r\n    },\r\n    'SC-01': {\r\n        title: 'Signal-COM ECGOST Cryptographic Provider',\r\n        signature: algorithms['id-sc-gostR3411-94-with-gostR3410-2001'],\r\n        publicKey: { id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', namedCurve: 'P-256' },\r\n        privateKey: {\r\n            id: 'id-sc-gostR3410-2001', name: 'GOST R 34.10-2001/SC', curve: {\r\n                p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\r\n                a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\r\n                b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\r\n                x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\r\n                y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\r\n                q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\r\n            }\r\n        },\r\n        digest: algorithms['id-sc-gostR3411-94'],\r\n        encryption: { id: 'id-sc-gost28147-gfb', name: 'GOST 28147-89-CFB/SC' },\r\n        hmac: algorithms['id-sc-hmacWithGostR3411'],\r\n        wrapping: algorithms['id-sc-cmsGostWrap'],\r\n        agreement: algorithms['id-sc-r3410-ESDH-r3411kdf'],\r\n        derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\r\n        pbes: {\r\n            id: 'id-sc-pbeWithGost3411AndGost28147CFB',\r\n            derivation: { id: 'PBKDF2', name: 'GOST R 34.11-94-PBKDF2/SC', iterations: 2048 },\r\n            encryption: {\r\n                id: 'id-sc-gost28147-gfb',\r\n                name: 'GOST 28147-CFB/SC',\r\n                iv: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])\r\n            }\r\n        }\r\n    },\r\n    'RSA-2048': {\r\n        title: 'Microsoft Strong Cryptographic Provider',\r\n        signature: algorithms['sha256withRSAEncryption'],\r\n        publicKey: {\r\n            id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\r\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']\r\n        },\r\n        privateKey: {\r\n            id: 'rsaEncryption', name: 'RSASSA-PKCS1-v1_5', modulusLength: 2048,\r\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), hash: algorithms['sha256']\r\n        },\r\n        digest: algorithms['sha256'],\r\n        encryption: algorithms['aes256-CFB'],\r\n        hmac: algorithms['hmacWithSHA256']\r\n    },\r\n    'ECDSA-256': {\r\n        title: 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider',\r\n        signature: algorithms['ecdsa-with-SHA256'],\r\n        publicKey: { id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256' },\r\n        privateKey: { id: 'ecdsa', name: 'ECDSA', namedCurve: 'P-256' },\r\n        digest: algorithms['sha256'],\r\n        encryption: algorithms['aes256-CFB'],\r\n        hmac: algorithms['hmacWithSHA256'],\r\n        agreement: algorithms['ecDH']\r\n    }\r\n};\r\n// Russian providers extension\r\n['CP-94', 'CP-01', 'TC-256', 'TC-512', 'SC-94', 'SC-01'].forEach(function (name) {\r\n    var provider = providers[name];\r\n    provider.hmac = expand(provider.hmac, { hash: provider.digest });\r\n    provider.derivation = expand(provider.derivation, { hash: provider.digest, hmac: provider.hmac });\r\n    provider.pbes = provider.pbes || {\r\n        id: 'PBES2', derivation: provider.derivation,\r\n        encryption: provider.encryption\r\n    };\r\n    provider.pbmac = provider.pbmac || {\r\n        id: 'PBMAC1', derivation: provider.derivation,\r\n        hmac: provider.hmac\r\n    };\r\n    provider.agreement = expand(provider.agreement, { wrapping: provider.wrapping });\r\n});\r\n// RSA & ECDA providers extension\r\n['RSA-2048', 'ECDSA-256'].forEach(function (name) {\r\n    var provider = providers[name];\r\n    provider.derivation = provider.derivation || {\r\n        id: 'PBKDF2', name: 'PBKDF2',\r\n        iterations: 2048, hash: provider.digest\r\n    };\r\n    provider.pbes = provider.pbes || {\r\n        id: 'PBES2',\r\n        derivation: provider.derivation,\r\n        encryption: provider.encryption\r\n    };\r\n    provider.pbmac = provider.pbmac || {\r\n        id: 'PBMAC1',\r\n        derivation: provider.derivation,\r\n        hmac: provider.hmac\r\n    };\r\n});\r\n// Workaround for Chrome error for RSA algorithm when hash for keys is not defined\r\n// if (root.crypto && root.crypto.subtle)\r\n//    setTimeout(function () {\r\n//        root.crypto.subtle.generateKey(providers['RSA-2048'].generation, false, [\"sign\"])['catch'](function () {\r\n//            providers['RSA-2048'].generation.hash = providers['RSA-2048'].digest;\r\n//            algorithms['rsaEncryption'].hash = providers['RSA-2048'].digest;\r\n//        });\r\n//    });\r\n// </editor-fold>\r\n\r\n/**\r\n * GOST and common ASN.1 Object and Algorithm Identifiers\r\n * @class GostSecurity\r\n */\r\nexport function GostSecurity() {\r\n}\r\n\r\nGostSecurity.prototype = {\r\n    names,\r\n    identifiers,\r\n    algorithms,\r\n    parameters,\r\n    attributes,\r\n    providers\r\n};\r\n\r\nexport const gostSecurityInstance = new GostSecurity();\r\n","export function getRoot() {\r\n    return isInNode() ? global : self;\r\n}\r\n\r\nexport function getCryptoModule() {\r\n    const root = getRoot();\r\n    if (getRoot().hasOwnProperty('crypto')) {\r\n        return root.crypto;\r\n    } else if (root.hasOwnProperty('msCrypto')) {\r\n        return root.msCrypto;\r\n    } else if (isInNode()) {\r\n        return require('crypto');\r\n    }\r\n\r\n    throw new Error('Your environment does not have сrypto module');\r\n}\r\n\r\nexport function isInNode() {\r\n    return typeof exports === 'object' && typeof module !== 'undefined';\r\n}\r\n\r\nexport function isBrowser() {\r\n    return typeof window !== 'undefined';\r\n}\r\n\r\nexport function isInWebWorker() {\r\n    return typeof importScripts !== 'undefined';\r\n}\r\n","/**\r\n * @file Implementation Web Crypto random generatore for GOST algorithms\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { isBrowser, getCryptoModule } from './utils/environment';\r\n\r\n// Initialize mouse and time counters for random generator\r\nconst randomRing = {\r\n    seed: new Uint8Array(1024),\r\n    getIndex: 0,\r\n    setIndex: 0,\r\n    set: function (x) {\r\n        if (this.setIndex >= 1024)\r\n            this.setIndex = 0;\r\n        this.seed[this.setIndex++] = x;\r\n    },\r\n    get: function () {\r\n        if (this.getIndex >= 1024)\r\n            this.getIndex = 0;\r\n        return this.seed[this.getIndex++];\r\n    }\r\n};\r\n\r\nif (isBrowser()) {\r\n    try {\r\n        // Mouse move event to fill random array\r\n        document.addEventListener('mousemove', function (e) {\r\n            randomRing.set((new Date().getTime() & 255) ^\r\n              ((e.clientX || e.pageX) & 255) ^\r\n              ((e.clientY || e.pageY) & 255));\r\n        }, false);\r\n    } catch (e) {\r\n    }\r\n\r\n    try {\r\n        // Keypress event to fill random array\r\n        document.addEventListener('keydown', function (e) {\r\n            randomRing.set((new Date().getTime() & 255) ^\r\n              (e.keyCode & 255));\r\n        }, false);\r\n    } catch (e) {\r\n    }\r\n} // </editor-fold>\r\n\r\nclass TypeMismatchError extends Error {\r\n}\r\n\r\nclass QuotaExceededError extends Error {\r\n}\r\n\r\n/**\r\n * The gostCrypto provide general purpose cryptographic functionality for\r\n * GOST standards including a cryptographically strong pseudo-random number\r\n * generator seeded with truly random values.\r\n *\r\n * @Class GostRandom\r\n *\r\n */\r\nexport function GostRandom() {\r\n}\r\n\r\n/**\r\n * The getRandomValues method generates cryptographically random values. <br><br>\r\n *\r\n * Random generator based on JavaScript Web Crypto random genereator\r\n * (if it is possible) or  Math.random mixed with time and parameters of\r\n * mouse and keyboard events\r\n *\r\n * @memberOf GostRandom\r\n * @param {(ArrayBuffer|ArrayBufferView)} array Destination buffer for random data\r\n */\r\n\r\nconst rootCryptoModule = getCryptoModule();\r\n\r\nGostRandom.prototype.getRandomValues = function (array) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (!array.byteLength)\r\n        throw new TypeMismatchError('Array is not of an integer type (Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, or Uint32Array)');\r\n\r\n    if (array.byteLength > 65536)\r\n        throw new QuotaExceededError('Byte length of array can\\'t be greate then 65536');\r\n\r\n    var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\r\n    if (rootCryptoModule && rootCryptoModule.getRandomValues) {\r\n        // Native window cryptographic interface\r\n        rootCryptoModule.getRandomValues(u8);\r\n    } else {\r\n        // Standard Javascript method\r\n        for (var i = 0, n = u8.length; i < n; i++)\r\n            u8[i] = Math.floor(256 * Math.random()) & 255;\r\n    }\r\n\r\n    // Mix bio randomizator\r\n    for (var i = 0, n = u8.length; i < n; i++)\r\n        u8[i] = u8[i] ^ randomRing.get();\r\n    return array;\r\n}; // </editor-fold>\r\n","/**\r\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { GostDigest } from './gostDigest';\r\nimport { DataError, NotSupportedError } from '../utils/errors';\r\nimport { getSeed } from '../utils/seeds';\r\n\r\n/*\r\n * Predefined curves and params collection\r\n *\r\n * http://tools.ietf.org/html/rfc5832\r\n * http://tools.ietf.org/html/rfc7091\r\n * http://tools.ietf.org/html/rfc4357\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n// Predefined named curve collection\r\nvar ECGostParams = {\r\n    'S-256-TEST': {\r\n        a: 7,\r\n        b: '0x5FBFF498AA938CE739B8E022FBAFEF40563F6E6A3472FC2A514C0CE9DAE23B7E',\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000431',\r\n        q: '0x8000000000000000000000000000000150FE8A1892976154C59CFC193ACCF5B3',\r\n        x: 2,\r\n        y: '0x8E2A8A0E65147D4BD6316030E16D19C85C97F0A9CA267122B96ABBCEA7E8FC8'\r\n    },\r\n    'S-256-A': {\r\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94',\r\n        b: 166,\r\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97',\r\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893',\r\n        x: 1,\r\n        y: '0x8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14'\r\n    },\r\n    'S-256-B': {\r\n        a: '0x8000000000000000000000000000000000000000000000000000000000000C96',\r\n        b: '0x3E1AF419A269A5F866A7D3C25C3DF80AE979259373FF2B182F49D4CE7E1BBC8B',\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000C99',\r\n        q: '0x800000000000000000000000000000015F700CFFF1A624E5E497161BCC8A198F',\r\n        x: 1,\r\n        y: '0x3FA8124359F96680B83D1C3EB2C070E5C545C9858D03ECFB744BF8D717717EFC'\r\n    },\r\n    'S-256-C': {\r\n        a: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D7598',\r\n        b: 32858,\r\n        p: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D759B',\r\n        q: '0x9B9F605F5A858107AB1EC85E6B41C8AA582CA3511EDDFB74F02F3A6598980BB9',\r\n        x: 0,\r\n        y: '0x41ECE55743711A8C3CBF3783CD08C0EE4D4DC440D4641A8F366E550DFDB3BB67'\r\n    },\r\n    'P-256': {\r\n        p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\r\n        a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\r\n        b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\r\n        x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\r\n        y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\r\n        q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\r\n    },\r\n    'T-512-TEST': {\r\n        a: 7,\r\n        b: '0x1CFF0806A31116DA29D8CFA54E57EB748BC5F377E49400FDD788B649ECA1AC4361834013B2AD7322480A89CA58E0CF74BC9E540C2ADD6897FAD0A3084F302ADC',\r\n        p: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DF1D852741AF4704A0458047E80E4546D35B8336FAC224DD81664BBF528BE6373',\r\n        q: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DA82F2D7ECB1DBAC719905C5EECC423F1D86E25EDBE23C595D644AAF187E6E6DF',\r\n        x: '0x24D19CC64572EE30F396BF6EBBFD7A6C5213B3B3D7057CC825F91093A68CD762FD60611262CD838DC6B60AA7EEE804E28BC849977FAC33B4B530F1B120248A9A',\r\n        y: '0x2BB312A43BD2CE6E0D020613C857ACDDCFBF061E91E5F2C3F32447C259F39B2C83AB156D77F1496BF7EB3351E1EE4E43DC1A18B91B24640B6DBB92CB1ADD371E'\r\n    },\r\n    'T-512-A': {\r\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC7',\r\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC4',\r\n        b: '0xE8C2505DEDFC86DDC1BD0B2B6667F1DA34B82574761CB0E879BD081CFD0B6265EE3CB090F30D27614CB4574010DA90DD862EF9D4EBEE4761503190785A71C760',\r\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27E69532F48D89116FF22B8D4E0560609B4B38ABFAD2B85DCACDB1411F10B275',\r\n        x: 3,\r\n        y: '0x7503CFE87A836AE3A61B8816E25450E6CE5E1C93ACF1ABC1778064FDCBEFA921DF1626BE4FD036E93D75E6A50E3A41E98028FE5FC235F5B889A589CB5215F2A4'\r\n    },\r\n    'T-512-B': {\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006F',\r\n        a: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006C',\r\n        b: '0x687D1B459DC841457E3E06CF6F5E2517B97C7D614AF138BCBF85DC806C4B289F3E965D2DB1416D217F8B276FAD1AB69C50F78BEE1FA3106EFB8CCBC7C5140116',\r\n        q: '0x800000000000000000000000000000000000000000000000000000000000000149A1EC142565A545ACFDB77BD9D40CFA8B996712101BEA0EC6346C54374F25BD',\r\n        x: 2,\r\n        y: '0x1A8F7EDA389B094C2C071E3647A8940F3C123B697578C213BE6DD9E6C8EC7335DCB228FD1EDF4A39152CBCAAF8C0398828041055F94CEEEC7E21340780FE41BD'\r\n    }\r\n};\r\nECGostParams['X-256-A'] = ECGostParams['S-256-A'];\r\nECGostParams['X-256-B'] = ECGostParams['S-256-C'];\r\nECGostParams['T-256-TEST'] = ECGostParams['S-256-TEST'];\r\nECGostParams['T-256-A'] = ECGostParams['S-256-A'];\r\nECGostParams['T-256-B'] = ECGostParams['S-256-B'];\r\nECGostParams['T-256-C'] = ECGostParams['S-256-C'];\r\n\r\n\r\nvar GostParams = {\r\n    'S-TEST': {\r\n        modulusLength: 512, // bit length of p (512 or 1024 bits)\r\n        p: '0xEE8172AE8996608FB69359B89EB82A69854510E2977A4D63BC97322CE5DC3386EA0A12B343E9190F23177539845839786BB0C345D165976EF2195EC9B1C379E3',\r\n        q: '0x98915E7EC8265EDFCDA31E88F24809DDB064BDC7285DD50D7289F0AC6F49DD2D',\r\n        a: '0x9e96031500c8774a869582d4afde2127afad2538b4b6270a6f7c8837b50d50f206755984a49e509304d648be2ab5aab18ebe2cd46ac3d8495b142aa6ce23e21c'\r\n    },\r\n    'S-A': {\r\n        modulusLength: 1024,\r\n        p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\r\n        q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\r\n        a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\r\n    },\r\n    'S-B': {\r\n        modulusLength: 1024,\r\n        p: '0xC6971FC57524B30C9018C5E621DE15499736854F56A6F8AEE65A7A404632B1BCF0349FFCAFCB0A103177971FC1612ADCDB8C8CC938C70225C8FD12AFF01B1D064E0AD6FDE6AB9159166CB9F2FC171D92F0CC7B6A6B2CD7FA342ACBE2C9315A42D576B1ECCE77A963157F3D0BD96A8EB0B0F3502AD238101B05116334F1E5B7AB',\r\n        q: '0xB09D634C10899CD7D4C3A7657403E05810B07C61A688BAB2C37F475E308B0607',\r\n        a: '0x3D26B467D94A3FFC9D71BF8DB8934084137264F3C2E9EB16DCA214B8BC7C872485336744934FD2EF5943F9ED0B745B90AA3EC8D70CDC91682478B664A2E1F8FB56CEF2972FEE7EDB084AF746419B854FAD02CC3E3646FF2E1A18DD4BEB3C44F7F2745588029649674546CC9187C207FB8F2CECE8E2293F68395C4704AF04BAB5'\r\n    },\r\n    'S-C': {\r\n        modulusLength: 1024,\r\n        p: '0x9D88E6D7FE3313BD2E745C7CDD2AB9EE4AF3C8899E847DE74A33783EA68BC30588BA1F738C6AAF8AB350531F1854C3837CC3C860FFD7E2E106C3F63B3D8A4C034CE73942A6C3D585B599CF695ED7A3C4A93B2B947B7157BB1A1C043AB41EC8566C6145E938A611906DE0D32E562494569D7E999A0DDA5C879BDD91FE124DF1E9',\r\n        q: '0xFADD197ABD19A1B4653EECF7ECA4D6A22B1F7F893B641F901641FBB555354FAF',\r\n        a: '0x7447ED7156310599070B12609947A5C8C8A8625CF1CF252B407B331F93D639DDD1BA392656DECA992DD035354329A1E95A6E32D6F47882D960B8F10ACAFF796D13CD9611F853DAB6D2623483E46788708493937A1A29442598AEC2E0742022563440FE9C18740ECE6765AC05FAF024A64B026E7E408840819E962E7E5F401AE3'\r\n    },\r\n    'S-D': {\r\n        modulusLength: 1024,\r\n        p: '0x80F102D32B0FD167D069C27A307ADAD2C466091904DBAA55D5B8CC7026F2F7A1919B890CB652C40E054E1E9306735B43D7B279EDDF9102001CD9E1A831FE8A163EED89AB07CF2ABE8242AC9DEDDDBF98D62CDDD1EA4F5F15D3A42A6677BDD293B24260C0F27C0F1D15948614D567B66FA902BAA11A69AE3BCEADBB83E399C9B5',\r\n        q: '0xF0F544C418AAC234F683F033511B65C21651A6078BDA2D69BB9F732867502149',\r\n        a: '0x6BCC0B4FADB3889C1E06ADD23CC09B8AB6ECDEDF73F04632595EE4250005D6AF5F5ADE44CB1E26E6263C672347CFA26F9E9393681E6B759733784CDE5DBD9A14A39369DFD99FA85CC0D10241C4010343F34A91393A706CF12677CBFA1F578D6B6CFBE8A1242CFCC94B3B653A476E145E3862C18CC3FED8257CFEF74CDB205BF1'\r\n    },\r\n    'X-A': {\r\n        modulusLength: 1024,\r\n        p: '0xCA3B3F2EEE9FD46317D49595A9E7518E6C63D8F4EB4D22D10D28AF0B8839F079F8289E603B03530784B9BB5A1E76859E4850C670C7B71C0DF84CA3E0D6C177FE9F78A9D8433230A883CD82A2B2B5C7A3306980278570CDB79BF01074A69C9623348824B0C53791D53C6A78CAB69E1CFB28368611A397F50F541E16DB348DBE5F',\r\n        q: '0xCAE4D85F80C147704B0CA48E85FB00A9057AA4ACC44668E17F1996D7152690D9',\r\n        a: '0xBE27D652F2F1E339DA734211B85B06AE4DE236AA8FBEEB3F1ADCC52CD43853777E834A6A518138678A8ADBD3A55C70A7EAB1BA7A0719548677AAF4E609FFB47F6B9D7E45B0D06D83D7ADC53310ABD85783E7317F7EC73268B6A9C08D260B85D8485696CA39C17B17F044D1E050489036ABD381C5E6BF82BA352A1AFF136601AF'\r\n    },\r\n    'X-B': {\r\n        modulusLength: 1024,\r\n        p: '0x9286DBDA91ECCFC3060AA5598318E2A639F5BA90A4CA656157B2673FB191CD0589EE05F4CEF1BD13508408271458C30851CE7A4EF534742BFB11F4743C8F787B11193BA304C0E6BCA25701BF88AF1CB9B8FD4711D89F88E32B37D95316541BF1E5DBB4989B3DF13659B88C0F97A3C1087B9F2D5317D557DCD4AFC6D0A754E279',\r\n        q: '0xC966E9B3B8B7CDD82FF0F83AF87036C38F42238EC50A876CD390E43D67B6013F',\r\n        a: '0x7E9C3096676F51E3B2F9884CF0AC2156779496F410E049CED7E53D8B7B5B366B1A6008E5196605A55E89C3190DABF80B9F1163C979FCD18328DAE5E9048811B370107BB7715F82091BB9DE0E33EE2FED6255474F8769FCE5EAFAEEF1CB5A32E0D5C6C2F0FC0B3447072947F5B4C387666993A333FC06568E534AD56D2338D729'\r\n    },\r\n    'X-C': {\r\n        modulusLength: 1024,\r\n        p: '0xB194036ACE14139D36D64295AE6C50FC4B7D65D8B340711366CA93F383653908EE637BE428051D86612670AD7B402C09B820FA77D9DA29C8111A8496DA6C261A53ED252E4D8A69A20376E6ADDB3BDCD331749A491A184B8FDA6D84C31CF05F9119B5ED35246EA4562D85928BA1136A8D0E5A7E5C764BA8902029A1336C631A1D',\r\n        q: '0x96120477DF0F3896628E6F4A88D83C93204C210FF262BCCB7DAE450355125259',\r\n        a: '0x3F1817052BAA7598FE3E4F4FC5C5F616E122CFF9EBD89EF81DC7CE8BF56CC64B43586C80F1C4F56DD5718FDD76300BE336784259CA25AADE5A483F64C02A20CF4A10F9C189C433DEFE31D263E6C9764660A731ECCAECB74C8279303731E8CF69205BC73E5A70BDF93E5BB681DAB4EEB9C733CAAB2F673C475E0ECA921D29782E'\r\n    }\r\n}; // </editor-fold>\r\n\r\n/*\r\n * BigInteger arithmetic tools\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Bits per one element\r\nvar DB = 28, DM = (1 << DB) - 1, DV = 1 << DB,\r\n  FV = Math.pow(2, 52), F1 = 52 - DB, F2 = 2 * DB - 52;\r\n\r\nfunction am(y, i, x, w, j, c, n) {\r\n    var xl = x & 0x3fff, xh = x >> 14;\r\n    while (--n >= 0) {\r\n        var l = y[i] & 0x3fff;\r\n        var h = y[i++] >> 14;\r\n        var m = xh * l + h * xl;\r\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\r\n        c = (l >> 28) + (m >> 14) + xh * h;\r\n        w[j++] = l & 0xfffffff;\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction nbi(words) {\r\n    var r = new Array(Math.ceil(words));\r\n    r.s = 0;\r\n    r.t = 0;\r\n    return r;\r\n}\r\n\r\nfunction copyTo(x, r) {\r\n    for (var i = x.t - 1; i >= 0; --i)\r\n        r[i] = x[i];\r\n    r.t = x.t;\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction copy(x) {\r\n    return copyTo(x, nbi(x.t));\r\n}\r\n\r\nfunction setInt(x, i) {\r\n    x.t = 1;\r\n    x.s = (i < 0) ? -1 : 0;\r\n    if (i > 0)\r\n        x[0] = i;\r\n    else if (i < -1)\r\n        x[0] = i + DV;\r\n    else\r\n        x.t = 0;\r\n    return x;\r\n}\r\n\r\nfunction nbv(i) {\r\n    var r = nbi(1);\r\n    setInt(r, i);\r\n    return r;\r\n}\r\n\r\nvar ZERO = nbv(0), ONE = nbv(1), THREE = nbv(3);\r\n\r\nfunction clamp(x) {\r\n    var c = x.s & DM;\r\n    while (x.t > 0 && x[x.t - 1] === c)\r\n        --x.t;\r\n    return x;\r\n}\r\n\r\nfunction subTo(x, a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\r\n    while (i < m) {\r\n        c += x[i] - a[i];\r\n        r[i++] = c & DM;\r\n        c >>= DB;\r\n    }\r\n    if (a.t < x.t) {\r\n        c -= a.s;\r\n        while (i < x.t) {\r\n            c += x[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c += x.s;\r\n    }\r\n    else {\r\n        c += x.s;\r\n        while (i < a.t) {\r\n            c -= a[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c -= a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c < -1)\r\n        r[i++] = DV + c;\r\n    else if (c > 0)\r\n        r[i++] = c;\r\n    r.t = i;\r\n    return clamp(r);\r\n}\r\n\r\nfunction sub(x, y) {\r\n    return subTo(x, y, nbi(x.t));\r\n}\r\n\r\nfunction addTo(x, a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\r\n    while (i < m) {\r\n        c += x[i] + a[i];\r\n        r[i++] = c & DM;\r\n        c >>= DB;\r\n    }\r\n    if (a.t < x.t) {\r\n        c += a.s;\r\n        while (i < x.t) {\r\n            c += x[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c += x.s;\r\n    }\r\n    else {\r\n        c += x.s;\r\n        while (i < a.t) {\r\n            c += a[i];\r\n            r[i++] = c & DM;\r\n            c = c >> DB;\r\n        }\r\n        c += a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c > 0)\r\n        r[i++] = c;\r\n    else if (c < -1)\r\n        r[i++] = DV + c;\r\n    r.t = i;\r\n    return clamp(r);\r\n}\r\n\r\nfunction add(x, y) {\r\n    return addTo(x, y, nbi(x.t));\r\n}\r\n\r\nfunction negTo(x, r) {\r\n    return subTo(ZERO, x, r);\r\n}\r\n\r\nfunction neg(x) {\r\n    return negTo(x, nbi(x.t));\r\n}\r\n\r\nfunction absTo(x, r) {\r\n    return (x.s < 0) ? negTo(r) : copyTo(r);\r\n}\r\n\r\nfunction abs(x) {\r\n    return (x.s < 0) ? neg(x) : x;\r\n}\r\n\r\nfunction compare(x, a) {\r\n    var r = x.s - a.s;\r\n    if (r !== 0)\r\n        return r;\r\n    var i = x.t;\r\n    r = i - a.t;\r\n    if (r !== 0)\r\n        return (x.s < 0) ? -r : r;\r\n    while (--i >= 0)\r\n        if ((r = x[i] - a[i]) !== 0)\r\n            return r;\r\n    return 0;\r\n}\r\n\r\nfunction equals(x, y) {\r\n    return (compare(x, y) === 0);\r\n}\r\n\r\nfunction min(x, y) {\r\n    return (compare(x, y) < 0) ? x : y;\r\n}\r\n\r\nfunction max(x, y) {\r\n    return (compare(x, y) > 0) ? x : y;\r\n}\r\n\r\nfunction nbits(x) {\r\n    var r = 1, t;\r\n    if ((t = x >>> 16) !== 0) {\r\n        x = t;\r\n        r += 16;\r\n    }\r\n    if ((t = x >> 8) !== 0) {\r\n        x = t;\r\n        r += 8;\r\n    }\r\n    if ((t = x >> 4) !== 0) {\r\n        x = t;\r\n        r += 4;\r\n    }\r\n    if ((t = x >> 2) !== 0) {\r\n        x = t;\r\n        r += 2;\r\n    }\r\n    if ((t = x >> 1) !== 0) {\r\n        x = t;\r\n        r += 1;\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction dshlTo(x, n, r) {\r\n    var i;\r\n    for (i = x.t - 1; i >= 0; --i)\r\n        r[i + n] = x[i];\r\n    for (i = n - 1; i >= 0; --i)\r\n        r[i] = 0;\r\n    r.t = x.t + n;\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction dshrTo(x, n, r) {\r\n    for (var i = n; i < x.t; ++i)\r\n        r[i - n] = x[i];\r\n    r.t = Math.max(x.t - n, 0);\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction shlTo(x, n, r) {\r\n    var bs = n % DB;\r\n    var cbs = DB - bs;\r\n    var bm = (1 << cbs) - 1;\r\n    var ds = Math.floor(n / DB), c = (x.s << bs) & DM, i;\r\n    for (i = x.t - 1; i >= 0; --i) {\r\n        r[i + ds + 1] = (x[i] >> cbs) | c;\r\n        c = (x[i] & bm) << bs;\r\n    }\r\n    for (i = ds - 1; i >= 0; --i)\r\n        r[i] = 0;\r\n    r[ds] = c;\r\n    r.t = x.t + ds + 1;\r\n    r.s = x.s;\r\n    return clamp(r);\r\n}\r\n\r\nfunction shrTo(x, n, r) {\r\n    r.s = x.s;\r\n    var ds = Math.floor(n / DB);\r\n    if (ds >= x.t) {\r\n        r.t = 0;\r\n        return;\r\n    }\r\n    var bs = n % DB;\r\n    var cbs = DB - bs;\r\n    var bm = (1 << bs) - 1;\r\n    r[0] = x[ds] >> bs;\r\n    for (var i = ds + 1; i < x.t; ++i) {\r\n        r[i - ds - 1] |= (x[i] & bm) << cbs;\r\n        r[i - ds] = x[i] >> bs;\r\n    }\r\n    if (bs > 0)\r\n        r[x.t - ds - 1] |= (x.s & bm) << cbs;\r\n    r.t = x.t - ds;\r\n    return clamp(r);\r\n}\r\n\r\nfunction shl(x, n) {\r\n    var r = nbi(x.t);\r\n    if (n < 0)\r\n        shrTo(x, -n, r);\r\n    else\r\n        shlTo(x, n, r);\r\n    return r;\r\n}\r\n\r\nfunction shr(x, n) {\r\n    var r = nbi(x.t);\r\n    if (n < 0)\r\n        shlTo(x, -n, r);\r\n    else\r\n        shrTo(x, n, r);\r\n    return r;\r\n}\r\n\r\nfunction bitLength(x) {\r\n    if (x.t <= 0)\r\n        return 0;\r\n    return DB * (x.t - 1) + nbits(x[x.t - 1] ^ (x.s & DM));\r\n}\r\n\r\nfunction mulTo(b, a, r) {\r\n    var x = abs(b), y = abs(a);\r\n    var i = x.t;\r\n    r.t = i + y.t;\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = 0; i < y.t; ++i)\r\n        r[i + x.t] = am(x, 0, y[i], r, i, 0, x.t);\r\n    r.s = 0;\r\n    if (b.s !== a.s)\r\n        subTo(ZERO, r, r);\r\n    return clamp(r);\r\n}\r\n\r\nfunction mul(x, y) {\r\n    return mulTo(x, y, nbi(x.t + y.t));\r\n}\r\n\r\nfunction sqrTo(a, r) {\r\n    var x = abs(a);\r\n    var i = r.t = 2 * x.t;\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = 0; i < x.t - 1; ++i) {\r\n        var c = am(x, i, x[i], r, 2 * i, 0, 1);\r\n        if ((r[i + x.t] += am(x, i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\r\n            r[i + x.t] -= x.DV;\r\n            r[i + x.t + 1] = 1;\r\n        }\r\n    }\r\n    if (r.t > 0)\r\n        r[r.t - 1] += am(x, i, x[i], r, 2 * i, 0, 1);\r\n    r.s = 0;\r\n    return clamp(r);\r\n}\r\n\r\nfunction sqr(a) {\r\n    return sqrTo(a, nbi(a.t * 2));\r\n}\r\n\r\nfunction divRemTo(n, m, q, r) {\r\n    var pm = abs(m);\r\n    if (pm.t <= 0)\r\n        throw new OperationError('Division by zero');\r\n    var pt = abs(n);\r\n    if (pt.t < pm.t) {\r\n        if (q)\r\n            setInt(q, 0);\r\n        if (r)\r\n            copyTo(n, r);\r\n        return q;\r\n    }\r\n    if (!r)\r\n        r = nbi(m.t);\r\n    var y = nbi(m.t), ts = n.s, ms = m.s;\r\n    var nsh = DB - nbits(pm[pm.t - 1]);\r\n    if (nsh > 0) {\r\n        shlTo(pm, nsh, y);\r\n        shlTo(pt, nsh, r);\r\n    }\r\n    else {\r\n        copyTo(pm, y);\r\n        copyTo(pt, r);\r\n    }\r\n    var ys = y.t;\r\n    var y0 = y[ys - 1];\r\n    if (y0 === 0)\r\n        return q;\r\n    var yt = y0 * (1 << F1) + ((ys > 1) ? y[ys - 2] >> F2 : 0);\r\n    var d1 = FV / yt, d2 = (1 << F1) / yt, e = 1 << F2;\r\n    var i = r.t, j = i - ys, t = !q ? nbi(Math.max(n.t - m.t, 1)) : q;\r\n    dshlTo(y, j, t);\r\n    if (compare(r, t) >= 0) {\r\n        r[r.t++] = 1;\r\n        subTo(r, t, r);\r\n    }\r\n    dshlTo(ONE, ys, t);\r\n    subTo(t, y, y);\r\n    while (y.t < ys)\r\n        y[y.t++] = 0;\r\n    while (--j >= 0) {\r\n        var qd = (r[--i] === y0) ? DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\r\n        if ((r[i] += am(y, 0, qd, r, j, 0, ys)) < qd) {\r\n            dshlTo(y, j, t);\r\n            subTo(r, t, r);\r\n            while (r[i] < --qd)\r\n                subTo(r, t, r);\r\n        }\r\n    }\r\n    if (q) {\r\n        dshrTo(r, ys, q);\r\n        if (ts !== ms)\r\n            subTo(ZERO, q, q);\r\n    }\r\n    r.t = ys;\r\n    clamp(r);\r\n    if (nsh > 0)\r\n        shrTo(r, nsh, r);\r\n    if (ts < 0)\r\n        subTo(ZERO, r, r);\r\n    return q;\r\n}\r\n\r\nfunction modTo(b, a, r) {\r\n    divRemTo(abs(b), a, null, r);\r\n    if (b.s < 0 && compare(r, ZERO) > 0)\r\n        subTo(a, r, r);\r\n    return r;\r\n}\r\n\r\nfunction mod(b, a) {\r\n    return modTo(b, a, nbi(a.t));\r\n}\r\n\r\nfunction div(b, a) {\r\n    return divRemTo(b, a, nbi(Math.max(b.t - a.t, 1)), null);\r\n}\r\n\r\nfunction isEven(x) {\r\n\r\n    return ((x.t > 0) ? (x[0] & 1) : x.s) === 0;\r\n}\r\n\r\nfunction isZero(x) {\r\n    return equals(x, ZERO);\r\n}\r\n\r\nfunction sig(x) {\r\n    if (x.s < 0)\r\n        return -1;\r\n    else if (x.t <= 0 || (x.t === 1 && x[0] <= 0))\r\n        return 0;\r\n    else\r\n        return 1;\r\n}\r\n\r\nfunction invMod(x, m) {\r\n    var ac = isEven(m);\r\n    if ((isEven(x) && ac) || sig(m) === 0)\r\n        return ZERO;\r\n    var u = copy(m), v = copy(x);\r\n    var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\r\n    while (sig(u) !== 0) {\r\n        while (isEven(u)) {\r\n            shrTo(u, 1, u);\r\n            if (ac) {\r\n                if (!isEven(a) || !isEven(b)) {\r\n                    addTo(a, x, a);\r\n                    subTo(b, m, b);\r\n                }\r\n                shrTo(a, 1, a);\r\n            }\r\n            else if (!isEven(b))\r\n                subTo(b, m, b);\r\n            shrTo(b, 1, b);\r\n        }\r\n        while (isEven(v)) {\r\n            shrTo(v, 1, v);\r\n            if (ac) {\r\n                if (!isEven(c) || !isEven(d)) {\r\n                    addTo(c, x, c);\r\n                    subTo(d, m, d);\r\n                }\r\n                shrTo(c, 1, c);\r\n            }\r\n            else if (!isEven(d))\r\n                subTo(d, m, d);\r\n            shrTo(d, 1, d);\r\n        }\r\n        if (compare(u, v) >= 0) {\r\n            subTo(u, v, u);\r\n            if (ac)\r\n                subTo(a, c, a);\r\n            subTo(b, d, b);\r\n        }\r\n        else {\r\n            subTo(v, u, v);\r\n            if (ac)\r\n                subTo(c, a, c);\r\n            subTo(d, b, d);\r\n        }\r\n    }\r\n    if (compare(v, ONE) !== 0)\r\n        return ZERO;\r\n    if (compare(d, m) >= 0)\r\n        return subtract(d, m);\r\n    if (sig(d) < 0)\r\n        addTo(d, m, d);\r\n    else\r\n        return d;\r\n    if (sig(d) < 0)\r\n        return add(d, m);\r\n    else\r\n        return d;\r\n}\r\n\r\nfunction testBit(x, n) {\r\n    var j = Math.floor(n / DB);\r\n    if (j >= x.t)\r\n        return (x.s !== 0);\r\n    return ((x[j] & (1 << (n % DB))) !== 0);\r\n}\r\n\r\nfunction nothing(x) {\r\n    return x;\r\n}\r\n\r\nfunction extend(c, o) {\r\n    for (var i in o)\r\n        c.prototype[i] = o[i];\r\n} // </editor-fold>\r\n\r\n/*\r\n * Classic, Barret, Mongomery reductions, optimized ExpMod algorithms\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn2.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Classic reduction\r\nvar Classic = function (m) {\r\n    this.m = m;\r\n};\r\n\r\nextend(Classic, {\r\n    convert: function (x) {\r\n        if (x.s < 0 || compare(x, this.m) >= 0)\r\n            return mod(x, this.m);\r\n        else\r\n            return x;\r\n    },\r\n    revert: nothing,\r\n    reduce: function (x) {\r\n        modTo(x, this.m, x);\r\n    },\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n});\r\n\r\nfunction invDig(a) {\r\n    if (a.t < 1)\r\n        return 0;\r\n    var x = a[0];\r\n    if ((x & 1) === 0)\r\n        return 0;\r\n    var y = x & 3;\r\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\r\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\r\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\r\n    y = (y * (2 - x * y % DV)) % DV;\r\n    return (y > 0) ? DV - y : -y;\r\n}\r\n\r\n// Montgomery reduction\r\nvar Montgomery = function (m) {\r\n    this.m = m;\r\n    this.mp = invDig(m);\r\n    this.mpl = this.mp & 0x7fff;\r\n    this.mph = this.mp >> 15;\r\n    this.um = (1 << (DB - 15)) - 1;\r\n    this.mt2 = 2 * m.t;\r\n};\r\n\r\nextend(Montgomery, {\r\n    // xR mod m\r\n    convert: function (x) {\r\n        var r = nbi(x.t);\r\n        dshlTo(abs(x), this.m.t, r);\r\n        divRemTo(r, this.m, null, r);\r\n        if (x.s < 0 && compare(r, ZERO) > 0)\r\n            subTo(this.m, r, r);\r\n        return r;\r\n    },\r\n    // x/R mod m\r\n    revert: function (x) {\r\n        var r = nbi(x.t);\r\n        copyTo(x, r);\r\n        this.reduce(r);\r\n        return r;\r\n    },\r\n    // x = x/R mod m (HAC 14.32)\r\n    reduce: function (x) {\r\n        while (x.t <= this.mt2)\r\n            x[x.t++] = 0;\r\n        for (var i = 0; i < this.m.t; ++i) {\r\n            var j = x[i] & 0x7fff;\r\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & DM;\r\n            j = i + this.m.t;\r\n            x[j] += am(this.m, 0, u0, x, i, 0, this.m.t);\r\n            while (x[j] >= DV) {\r\n                x[j] -= DV;\r\n                x[++j]++;\r\n            }\r\n        }\r\n        clamp(x);\r\n        dshrTo(x, this.m.t, x);\r\n        if (compare(x, this.m) >= 0)\r\n            subTo(x, this.m, x);\r\n    },\r\n    // r = \"x^2/R mod m\"; x != r\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    // r = \"xy/R mod m\"; x,y != r\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n});\r\n\r\nfunction dAddOffset(x, n, w) {\r\n    if (n === 0)\r\n        return;\r\n    while (x.t <= w)\r\n        x[x.t++] = 0;\r\n    x[w] += n;\r\n    while (x[w] >= DV) {\r\n        x[w] -= DV;\r\n        if (++w >= x.t)\r\n            x[x.t++] = 0;\r\n        ++x[w];\r\n    }\r\n}\r\n\r\nfunction mulLowerTo(x, a, n, r) {\r\n    var i = Math.min(x.t + a.t, n);\r\n    r.s = 0; // assumes a,x >= 0\r\n    r.t = i;\r\n    while (i > 0)\r\n        r[--i] = 0;\r\n    var j;\r\n    for (j = r.t - x.t; i < j; ++i)\r\n        r[i + x.t] = am(x, 0, a[i], r, i, 0, x.t);\r\n    for (j = Math.min(a.t, n); i < j; ++i)\r\n        am(x, 0, a[i], r, i, 0, n - i);\r\n    return clamp(r);\r\n}\r\n\r\nfunction mulUpperTo(x, a, n, r) {\r\n    --n;\r\n    var i = r.t = x.t + a.t - n;\r\n    r.s = 0; // assumes a,x >= 0\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = Math.max(n - x.t, 0); i < a.t; ++i)\r\n        r[x.t + i - n] = am(x, n - i, a[i], r, 0, 0, x.t + i - n);\r\n    clamp(r);\r\n    return dshrTo(r, 1, r);\r\n}\r\n\r\n// Barrett modular reduction\r\nfunction Barrett(m) {\r\n    // setup Barrett\r\n    this.r2 = nbi(2 * m.t);\r\n    this.q3 = nbi(2 * m.t);\r\n    dshlTo(ONE, 2 * m.t, this.r2);\r\n    this.mu = div(this.r2, m);\r\n    this.m = m;\r\n}\r\n\r\nextend(Barrett, {\r\n    convert: function (x) {\r\n        if (x.s < 0 || x.t > 2 * this.m.t)\r\n            return mod(x, this.m);\r\n        else if (compare(x, this.m) < 0)\r\n            return x;\r\n        else {\r\n            var r = nbi(x.t);\r\n            copyTo(x, r);\r\n            this.reduce(r);\r\n            return r;\r\n        }\r\n    },\r\n    revert: function (x) {\r\n        return x;\r\n    },\r\n    // x = x mod m (HAC 14.42)\r\n    reduce: function (x) {\r\n        dshrTo(x, this.m.t - 1, this.r2);\r\n        if (x.t > this.m.t + 1) {\r\n            x.t = this.m.t + 1;\r\n            clamp(x);\r\n        }\r\n        mulUpperTo(this.mu, this.r2, this.m.t + 1, this.q3);\r\n        mulLowerTo(this.m, this.q3, this.m.t + 1, this.r2);\r\n        while (compare(x, this.r2) < 0)\r\n            dAddOffset(x, 1, this.m.t + 1);\r\n        subTo(x, this.r2, x);\r\n        while (compare(x, this.m) >= 0)\r\n            subTo(x, this.m, x);\r\n    },\r\n    // r = x^2 mod m; x != r\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    // r = x*y mod m; x,y != r\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n\r\n});\r\n\r\n// x^e % m (HAC 14.85)\r\nfunction expMod(x, e, m) {\r\n    var i = bitLength(e), k, r = nbv(1), z;\r\n    if (i <= 0)\r\n        return r;\r\n    else if (i < 18)\r\n        k = 1;\r\n    else if (i < 48)\r\n        k = 3;\r\n    else if (i < 144)\r\n        k = 4;\r\n    else if (i < 768)\r\n        k = 5;\r\n    else\r\n        k = 6;\r\n    if (i < 8)\r\n        z = new Classic(m);\r\n    else if (isEven(m))\r\n        z = new Barrett(m);\r\n    else\r\n        z = new Montgomery(m);\r\n\r\n    // precomputation\r\n    var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\r\n    g[1] = z.convert(x);\r\n    if (k > 1) {\r\n        var g2 = nbi(m.t * 2);\r\n        z.sqrTo(g[1], g2);\r\n        while (n <= km) {\r\n            g[n] = nbi(m.t * 2);\r\n            z.mulTo(g2, g[n - 2], g[n]);\r\n            n += 2;\r\n        }\r\n    }\r\n\r\n    var j = e.t - 1, w, is1 = true, r2 = nbi(m.t * 2), t;\r\n    i = nbits(e[j]) - 1;\r\n    while (j >= 0) {\r\n        if (i >= k1)\r\n            w = (e[j] >> (i - k1)) & km;\r\n        else {\r\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\r\n            if (j > 0)\r\n                w |= e[j - 1] >> (DB + i - k1);\r\n        }\r\n\r\n        n = k;\r\n        while ((w & 1) == 0) {\r\n            w >>= 1;\r\n            --n;\r\n        }\r\n        if ((i -= n) < 0) {\r\n            i += DB;\r\n            --j;\r\n        }\r\n        if (is1) {\t// ret == 1, don't bother squaring or multiplying it\r\n            copyTo(g[w], r);\r\n            is1 = false;\r\n        }\r\n        else {\r\n            while (n > 1) {\r\n                z.sqrTo(r, r2);\r\n                z.sqrTo(r2, r);\r\n                n -= 2;\r\n            }\r\n            if (n > 0)\r\n                z.sqrTo(r, r2);\r\n            else {\r\n                t = r;\r\n                r = r2;\r\n                r2 = t;\r\n            }\r\n            z.mulTo(r2, g[w], r);\r\n        }\r\n        while (j >= 0 && (e[j] & (1 << i)) == 0) {\r\n            z.sqrTo(r, r2);\r\n            t = r;\r\n            r = r2;\r\n            r2 = t;\r\n            if (--i < 0) {\r\n                i = DB - 1;\r\n                --j;\r\n            }\r\n        }\r\n    }\r\n    return z.revert(r);\r\n} // </editor-fold>\r\n\r\n/*\r\n * EC Field Elements, Points, Curves\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/ec.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// EC Field Elemets\r\nfunction newFE(a, x) {\r\n    a.r.reduce(x);\r\n    x.q = a.q;\r\n    x.r = a.r;\r\n    return x;\r\n}\r\n\r\nfunction copyFE(a, x) {\r\n    x.q = a.q;\r\n    x.r = a.r;\r\n    return x;\r\n}\r\n\r\nfunction negFE(a) {\r\n    return copyFE(a, sub(a.q, a));\r\n}\r\n\r\nfunction addFE(a, b) {\r\n    var r = add(a, b);\r\n    if (compare(r, a.q) > 0)\r\n        subTo(r, a.q, r);\r\n    return copyFE(a, r);\r\n}\r\n\r\nfunction subFE(a, b) {\r\n    var r = sub(a, b);\r\n    if (r.s < 0)\r\n        addTo(a.q, r, r);\r\n    return copyFE(a, r);\r\n}\r\n\r\nfunction mulFE(a, b) {\r\n    return newFE(a, mul(a, b));\r\n}\r\n\r\nfunction sqrFE(a) {\r\n    return newFE(a, sqr(a));\r\n}\r\n\r\nfunction shlFE(a, i) {\r\n    return newFE(a, shl(a, i));\r\n}\r\n\r\nfunction invFE(a) {\r\n    return copyFE(a, invMod(a, a.q));\r\n}\r\n\r\n// EC Points\r\nfunction newEC(curve, x, y, z) {\r\n    return {\r\n        curve: curve,\r\n        x: x,\r\n        y: y,\r\n        z: z || newFE(curve, ONE)\r\n    };\r\n}\r\n\r\nfunction getX(point) {\r\n    if (!point.zinv)\r\n        point.zinv = invFE(point.z);\r\n    return mulFE(point.x, point.zinv);\r\n}\r\n\r\nfunction getY(point) {\r\n    if (!point.zinv)\r\n        point.zinv = invFE(point.z);\r\n    return mulFE(point.y, point.zinv);\r\n}\r\n\r\nfunction isInfinity(a) {\r\n    if ((!a.x) && (!a.y))\r\n        return true;\r\n    return isZero(a.z) && !isZero(a.y);\r\n}\r\n\r\nfunction getInfinity(a) {\r\n    return a.curve.infinity;\r\n}\r\n\r\nfunction equalsEC(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (isInfinity(a))\r\n        return isInfinity(b);\r\n    if (isInfinity(b))\r\n        return isInfinity(a);\r\n    var u, v;\r\n    // u = Y2 * Z1 - Y1 * Z2\r\n    u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\r\n    if (!isZero(u))\r\n        return false;\r\n    // v = X2 * Z1 - X1 * Z2\r\n    v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\r\n    return isZero(v);\r\n}\r\n\r\nfunction negEC(a) {\r\n    return newEC(a.curve, a.x, negFE(a.y), a.z);\r\n}\r\n\r\nfunction addEC(a, b) {\r\n    if (isInfinity(a))\r\n        return b;\r\n    if (isInfinity(b))\r\n        return a;\r\n\r\n    // u = Y2 * Z1 - Y1 * Z2\r\n    var u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\r\n    // v = X2 * Z1 - X1 * Z2\r\n    var v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\r\n\r\n    if (isZero(v)) {\r\n        if (isZero(u)) {\r\n            return twiceEC(a); // a == b, so double\r\n        }\r\n        return getInfinity(a); // a = -b, so infinity\r\n    }\r\n\r\n    var x1 = a.x;\r\n    var y1 = a.y;\r\n\r\n    var v2 = sqrFE(v);\r\n    var v3 = mulFE(v2, v);\r\n    var x1v2 = mulFE(x1, v2);\r\n    var zu2 = mulFE(sqrFE(u), a.z);\r\n\r\n    // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\r\n    var x3 = mulFE(subFE(mulFE(subFE(zu2, shlFE(x1v2, 1)), b.z), v3), v);\r\n    // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\r\n    var y3 = addFE(mulFE(subFE(subFE(mulFE(mulFE(x1v2, THREE), u), mulFE(y1, v3)), mulFE(zu2, u)), b.z), mulFE(u, v3));\r\n    // z3 = v^3 * z1 * z2\r\n    var z3 = mulFE(mulFE(v3, a.z), b.z);\r\n\r\n    return newEC(a.curve, x3, y3, z3);\r\n}\r\n\r\nfunction twiceEC(b) {\r\n    if (isInfinity(b))\r\n        return b;\r\n    if (sig(b.y) === 0)\r\n        return getInfinity(b);\r\n\r\n    var x1 = b.x;\r\n    var y1 = b.y;\r\n\r\n    var y1z1 = mulFE(y1, b.z);\r\n    var y1sqz1 = mulFE(y1z1, y1);\r\n    var a = b.curve.a;\r\n\r\n    // w = 3 * x1^2 + a * z1^2\r\n    var w = mulFE(sqrFE(x1), THREE);\r\n    if (!isZero(a)) {\r\n        w = addFE(w, mulFE(sqrFE(b.z), a));\r\n    }\r\n\r\n    // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\r\n    var x3 = mulFE(shlFE(subFE(sqrFE(w), mulFE(shlFE(x1, 3), y1sqz1)), 1), y1z1);\r\n    // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\r\n    var y3 = subFE(mulFE(shlFE(subFE(mulFE(mulFE(w, THREE), x1), shlFE(y1sqz1, 1)), 2), y1sqz1), mulFE(sqrFE(w), w));\r\n    // z3 = 8 * (y1 * z1)^3\r\n    var z3 = shlFE(mulFE(sqrFE(y1z1), y1z1), 3);\r\n\r\n    return newEC(b.curve, x3, y3, z3);\r\n}\r\n\r\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\r\nfunction mulEC(a, k) {\r\n    if (isInfinity(a))\r\n        return a;\r\n    if (sig(k) === 0)\r\n        return getInfinity(a);\r\n\r\n    var e = k;\r\n    var h = mul(e, THREE);\r\n\r\n    var neg = negEC(a);\r\n    var R = a;\r\n\r\n    var i;\r\n    for (i = bitLength(h) - 2; i > 0; --i) {\r\n        R = twiceEC(R);\r\n\r\n        var hBit = testBit(h, i);\r\n        var eBit = testBit(e, i);\r\n\r\n        if (hBit !== eBit) {\r\n            R = addEC(R, hBit ? a : neg);\r\n        }\r\n    }\r\n\r\n    return R;\r\n}\r\n\r\nfunction mul2AndAddEC(a, k) {\r\n    var nbits = bitLength(k);\r\n    var R = a,\r\n      Q = getInfinity(a);\r\n\r\n    for (var i = 0; i < nbits - 1; i++) {\r\n        if (testBit(k, i) === 1)\r\n            Q = addEC(Q, R);\r\n\r\n        R = twiceEC(R);\r\n    }\r\n\r\n    if (testBit(k, nbits - 1) === 1)\r\n        Q = addEC(Q, R);\r\n\r\n    return Q;\r\n}\r\n\r\n// Compute a*j + x*k (simultaneous multiplication)\r\nfunction mulTwoEC(a, j, x, k) {\r\n    var i;\r\n    if (bitLength(j) > bitLength(k))\r\n        i = bitLength(j) - 1;\r\n    else\r\n        i = bitLength(k) - 1;\r\n\r\n    var R = getInfinity(a);\r\n    var both = addEC(a, x);\r\n    while (i >= 0) {\r\n        R = twiceEC(R);\r\n        if (testBit(j, i)) {\r\n            if (testBit(k, i)) {\r\n                R = addEC(R, both);\r\n            }\r\n            else {\r\n                R = addEC(R, a);\r\n            }\r\n        }\r\n        else {\r\n            if (testBit(k, i)) {\r\n                R = addEC(R, x);\r\n            }\r\n        }\r\n        --i;\r\n    }\r\n\r\n    return R;\r\n}\r\n\r\n// EC Curve\r\nfunction newCurve(q, a, b) {\r\n    var curve = {};\r\n    curve.q = q;\r\n    curve.r = new Barrett(q);\r\n    curve.a = newFE(curve, a);\r\n    curve.b = newFE(curve, b);\r\n    curve.infinity = newEC(curve);\r\n    return curve;\r\n} // </editor-fold>\r\n\r\n/*\r\n * Converion tools (hex, binary)\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nfunction atobi(d) {\r\n    var k = 8;\r\n    var a = new Uint8Array(d);\r\n    var r = nbi(a.length * 8 / DB);\r\n    r.t = 0;\r\n    r.s = 0;\r\n    var sh = 0;\r\n    for (var i = 0, n = a.length; i < n; i++) {\r\n        var x = a[i];\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    return clamp(r);\r\n}\r\n\r\nfunction bitoa(s, bitLength) {\r\n    var k = 8;\r\n    var km = (1 << k) - 1, d, m = false, r = [], i = s.t;\r\n    var p = DB - (i * DB) % k;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = s[i] >> p) > 0) {\r\n            m = true;\r\n            r.push(d);\r\n        }\r\n        while (i >= 0) {\r\n            if (p < k) {\r\n                d = (s[i] & ((1 << p) - 1)) << (k - p);\r\n                d |= s[--i] >> (p += DB - k);\r\n            }\r\n            else {\r\n                d = (s[i] >> (p -= k)) & km;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if (d > 0)\r\n                m = true;\r\n            if (m)\r\n                r.push(d);\r\n        }\r\n    }\r\n    var r8 = new Uint8Array(bitLength ? bitLength / 8 : r.length);\r\n    if (m)\r\n        r8.set(r.reverse());\r\n    return r8.buffer;\r\n}\r\n\r\n\r\nfunction htobi(s) {\r\n    if (typeof s === 'number' || s instanceof Number)\r\n        return nbv(s);\r\n    s = s.replace(/[^\\-A-Fa-f0-9]/g, '');\r\n    if (!s)\r\n        s = '0';\r\n    var k = 4;\r\n    var r = nbi(s.length / 7);\r\n    var i = s.length, mi = false, sh = 0;\r\n    while (--i >= 0) {\r\n        var c = s.charAt(i);\r\n        if (c === '-') {\r\n            mi = true;\r\n            continue;\r\n        }\r\n        var x = parseInt(s.charAt(i), 16);\r\n        mi = false;\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    if (mi)\r\n        subTo(ZERO, r, r);\r\n    return clamp(r);\r\n}\r\n\r\nfunction bitoh(x) {\r\n    if (x.s < 0)\r\n        return \"-\" + bitoh(negTo(x, nbi(x.t)));\r\n    var k = 4;\r\n    var km = (1 << k) - 1, d, m = false, r = \"\", i = x.t;\r\n    var p = DB - (i * DB) % k;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = x[i] >> p) > 0) {\r\n            m = true;\r\n            r = d.toString(16);\r\n        }\r\n        while (i >= 0) {\r\n            if (p < k) {\r\n                d = (x[i] & ((1 << p) - 1)) << (k - p);\r\n                d |= x[--i] >> (p += DB - k);\r\n            }\r\n            else {\r\n                d = (x[i] >> (p -= k)) & km;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if (d > 0)\r\n                m = true;\r\n            if (m)\r\n                r += d.toString(16);\r\n        }\r\n    }\r\n    return \"0x\" + (m ? r : \"0\");\r\n}\r\n\r\n// biginteger to big-endian integer bytearray\r\nfunction bitoi(s) {\r\n    var i = s.t, r = [];\r\n    r[0] = s.s;\r\n    var p = DB - (i * DB) % 8, d, k = 0;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = s[i] >> p) !== (s.s & DM) >> p)\r\n            r[k++] = d | (s.s << (DB - p));\r\n        while (i >= 0) {\r\n            if (p < 8) {\r\n                d = (s[i] & ((1 << p) - 1)) << (8 - p);\r\n                d |= s[--i] >> (p += DB - 8);\r\n            }\r\n            else {\r\n                d = (s[i] >> (p -= 8)) & 0xff;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if ((d & 0x80) !== 0)\r\n                d |= -256;\r\n            if (k === 0 && (s.s & 0x80) !== (d & 0x80))\r\n                ++k;\r\n            if (k > 0 || d !== s.s)\r\n                r[k++] = d;\r\n        }\r\n    }\r\n    return new Uint8Array(r).buffer;\r\n}\r\n\r\n// big-endian integer bytearray to biginteger\r\nfunction itobi(d) {\r\n    var k = 8, s = new Uint8Array(d),\r\n      r = nbi(s.length / 7);\r\n    r.t = 0;\r\n    r.s = 0;\r\n    var i = s.length, sh = 0;\r\n    while (--i >= 0) {\r\n        var x = s[i] & 0xff;\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    if ((s[0] & 0x80) !== 0) {\r\n        r.s = -1;\r\n        if (sh > 0)\r\n            r[r.t - 1] |= ((1 << (DB - sh)) - 1) << sh;\r\n    }\r\n    return clamp(r);\r\n}\r\n\r\n\r\n// Swap bytes in buffer\r\nfunction swap(s) {\r\n    var src = new Uint8Array(s),\r\n      dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\n// Calculate hash of data\r\nfunction hash(d) {\r\n    if (this.hash)\r\n        d = this.hash.digest(d);\r\n    // Swap hash for SignalCom\r\n    if (this.procreator === 'SC' ||\r\n      (this.procreator === 'VN' && this.hash.version === 2012))\r\n        d = swap(d);\r\n    return d;\r\n}\r\n\r\n// Check buffer\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData or CryptoOperationDataView required');\r\n}\r\n\r\n// Check double buffer\r\nfunction to2(d) {\r\n    var b = buffer(d);\r\n    if (b.byteLength % 2 > 0)\r\n        throw new DataError('Buffer length must be even');\r\n    var n = b.byteLength / 2;\r\n    return [atobi(new Uint8Array(b, 0, n)), atobi(new Uint8Array(b, n, n))];\r\n}\r\n\r\nfunction from2(x, y, bitLength) {\r\n    var a = bitoa(x, bitLength),\r\n      b = bitoa(y, bitLength),\r\n      d = new Uint8Array(a.byteLength + b.byteLength);\r\n    d.set(new Uint8Array(a));\r\n    d.set(new Uint8Array(b), a.byteLength);\r\n    return d.buffer;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The sign method returns sign data generated with the supplied privateKey.<br>\r\n *\r\n * @memberOf GostSign\r\n * @method sign\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} privateKey Private key\r\n * @param {(CryptoOperationData|TypedArray)} data Data\r\n * @returns {CryptoOperationData} Signature\r\n */\r\nfunction sign(privateKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    // Stage 1\r\n    var b = buffer(data);\r\n    var alpha = atobi(hash.call(this, b));\r\n\r\n    var q = this.q;\r\n    var x = mod(atobi(buffer(privateKey)), q);\r\n\r\n    // Stage 2\r\n    var e = mod(alpha, q);\r\n    if (isZero(e))\r\n        e = ONE;\r\n\r\n    var s = ZERO;\r\n    while (isZero(s)) {\r\n        var r = ZERO;\r\n        while (isZero(r)) {\r\n\r\n            // Stage 3\r\n            var k = mod(atobi(this.ukm ||\r\n              getSeed(this.bitLength)), q); // pseudo random 0 < k < q\r\n            // Stage 4\r\n            if (this.curve) {\r\n                // Gost R 34.10-2001 || Gost R 34.10-2012\r\n                var P = this.P;\r\n                var C = mulEC(P, k);\r\n                r = mod(getX(C), q);\r\n            } else {\r\n                // Gost R 34.10-94\r\n                var p = this.p, a = this.a;\r\n                r = mod(expMod(a, k, p), q);\r\n            }\r\n        }\r\n        // Stage 5\r\n        s = mod(add(mul(r, x), mul(k, e)), q);\r\n    }\r\n    // Stage 6\r\n    // console.log('s', bitoh(s));\r\n    // console.log('r', bitoh(r));\r\n    var zetta;\r\n    // Integer structure for SignalCom algorithm\r\n    if (this.procreator === 'SC') {\r\n        zetta = {\r\n            r: bitoh(r),\r\n            s: bitoh(s)\r\n        };\r\n    } else {\r\n        zetta = from2(r, s, this.bitLength);\r\n        // Swap bytes for CryptoPro algorithm\r\n        if (this.procreator === 'CP' || this.procreator === 'VN')\r\n            zetta = swap(zetta);\r\n    }\r\n    return zetta;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The verify method returns signature verification for the supplied publicKey.<br>\r\n *\r\n * @memberOf GostSign\r\n * @method sign\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} publicKey Public key\r\n * @param {(CryptoOperationData|TypedArray)} signature Signature\r\n * @param {(CryptoOperationData|TypedArray)} data Data\r\n * @returns {boolean} Signature verified = true\r\n */\r\nfunction verify(publicKey, signature, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    // Stage 1\r\n    var q = this.q;\r\n    var r, s;\r\n    // Ready int for SignalCom algorithm\r\n    if (this.procreator === 'SC') {\r\n        r = htobi(signature.r);\r\n        s = htobi(signature.s);\r\n    } else {\r\n        if (this.procreator === 'CP' || this.procreator === 'VN')\r\n            signature = swap(signature);\r\n        var zetta = to2(signature);\r\n        // Swap bytes for CryptoPro algorithm\r\n        s = zetta[1]; //  first 32 octets contain the big-endian representation of s\r\n        r = zetta[0]; //  and second 32 octets contain the big-endian representation of r\r\n    }\r\n    if (compare(r, q) >= 0 || compare(s, q) >= 0)\r\n        return false;\r\n    // Stage 2\r\n    var b = buffer(data);\r\n    var alpha = atobi(hash.call(this, b));\r\n    // Stage 3\r\n    var e = mod(alpha, q);\r\n    if (isZero(e) === 0)\r\n        e = ONE;\r\n    // Stage 4\r\n    var v = invMod(e, q);\r\n    // Stage 5\r\n    var z1 = mod(mul(s, v), q);\r\n    var z2 = sub(q, mod(mul(r, v), q));\r\n    // Stage 6\r\n    if (this.curve) {\r\n        // Gost R 34.10-2001 || Gost R 34.10-2012\r\n        var k2 = to2(publicKey),\r\n          curve = this.curve,\r\n          P = this.P,\r\n          x = newFE(curve, k2[0]), // first 32 octets contain the little-endian representation of x\r\n          y = newFE(curve, k2[1]), // and second 32 octets contain the little-endian representation of y.\r\n          Q = new newEC(curve, x, y); // This corresponds to the binary representation of (<y>256||<x>256)\r\n        var C = mulTwoEC(P, z1, Q, z2);\r\n        var R = mod(getX(C), q);\r\n    } else {\r\n        // Gost R 34.10-94\r\n        var p = this.p, a = this.a;\r\n        var y = atobi(publicKey);\r\n        var R = mod(mod(mul(expMod(a, z1, p), expMod(y, z2, p)), p), q);\r\n    }\r\n    // Stage 7\r\n    return (compare(R, r) === 0);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The generateKey method returns a new generated key pair using the specified\r\n * AlgorithmIdentifier.\r\n *\r\n * @memberOf GostSign\r\n * @method generateKey\r\n * @instance\r\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\r\n */\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n\r\n        var Q = curve.infinity;\r\n        while (isInfinity(Q)) {\r\n\r\n            // Generate random private key\r\n            var d = ZERO;\r\n            if (this.ukm) {\r\n                d = atobi(this.ukm);\r\n            } else {\r\n                while (isZero(d))\r\n                    d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\r\n            }\r\n\r\n            // Calculate public key\r\n            Q = mulEC(this.P, d);\r\n            var x = getX(Q), y = getY(Q);\r\n            // console.log('d', bitoh(d));\r\n            // console.log('x', bitoh(x));\r\n            // console.log('y', bitoh(y));\r\n        }\r\n\r\n        // Return result\r\n        return {\r\n            privateKey: bitoa(d, this.bitLength),\r\n            publicKey: from2(x, y, this.bitLength) // This corresponds to the binary representation of (<y>256||<x>256)\r\n        };\r\n\r\n    } else\r\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10 mode MASK<br><br>\r\n *\r\n * The generateMaskKey method returns a new generated key mask using for wrapping.\r\n *\r\n * @memberOf GostSign\r\n * @method generateMaskKey\r\n * @instance\r\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\r\n */\r\nfunction generateMaskKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        // Generate random private key\r\n        var d = ZERO;\r\n        while (isZero(d))\r\n            d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\r\n\r\n        // Return result\r\n        return bitoa(d, this.bitLength);\r\n    } else\r\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * Unwrap private key from private key and ukm (mask)\r\n *\r\n * @memberOf GostSign\r\n * @method unwrap\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Unwrapping key\r\n * @param {(CryptoOperationData|TypedArray)} data Wrapped key\r\n * @returns {Object} CryptoOperationData unwrapped privateKey\r\n */\r\nfunction unwrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        var q = this.q;\r\n        var x = mod(atobi(buffer(data)), q);\r\n        var y = mod(atobi(buffer(baseKey)), q);\r\n        var z = this.procreator === 'VN' ? mod(mul(x, y), q) : mod(mul(x, invMod(y, q)), q);\r\n        return bitoa(z);\r\n    } else\r\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * Wrap private key with private key and ukm (mask)\r\n *\r\n * @memberOf GostSign\r\n * @method unwrap\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Wrapping key\r\n * @param {(CryptoOperationData|TypedArray)} data Key\r\n * @returns {Object} CryptoOperationData unwrapped privateKey\r\n */\r\nfunction wrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        var q = this.q;\r\n        var x = mod(atobi(buffer(data)), q);\r\n        var y = mod(atobi(buffer(baseKey)), q);\r\n        var z = this.procreator === 'VN' ? mod(mul(x, invMod(y, q)), q) : mod(mul(x, y), q);\r\n        return bitoa(z);\r\n    } else\r\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * @memberOf GostSign\r\n * @method derive\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} baseKey Key for deriviation\r\n * @returns {CryptoOperationData}\r\n */\r\nfunction derive(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    var k, ukm = atobi(this.ukm);\r\n    var q = this.q;\r\n    var x = mod(atobi(buffer(baseKey)), q);\r\n\r\n    if (this.curve) {\r\n        // 1) Let K(x,y,UKM) = ((UKM*x)(mod q)) . (y.P) (512 bit), where\r\n        // x - sender’s private key (256 bit)\r\n        // x.P - sender’s public key (512 bit)\r\n        // y - recipient’s private key (256 bit)\r\n        // y.P - recipient’s public key (512 bit)\r\n        // UKM - non-zero integer, produced as in step 2 p. 6.1 [GOSTR341001]\r\n        // P - base point on the elliptic curve (two 256-bit coordinates)\r\n        // UKM*x - x multiplied by UKM as integers\r\n        // x.P - a multiple point\r\n        var K = mulEC(this.peer_Q, mod(mul(ukm, x), q));\r\n        k = from2(getX(K), getY(K), // This corresponds to the binary representation of (<y>256||<x>256)\r\n          this.bitLength);\r\n    } else {\r\n        // 1) Let K(x,y) = a^(x*y) (mod p), where\r\n        // x - sender’s private key, a^x - sender’s public key\r\n        // y - recipient’s private key, a^y - recipient’s public key\r\n        // a, p - parameters\r\n        var p = this.p, a = this.a;\r\n        k = bitoa(expMod(this.peer_y, x, p));\r\n    }\r\n    // 2) Calculate a 256-bit hash of K(x,y,UKM):\r\n    // KEK(x,y,UKM) = gostSign (K(x,y,UKM)\r\n    return hash.call(this, k);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The deriveBits method returns length bits on baseKey.\r\n *\r\n * @memberOf GostSign\r\n * @method deriveBits\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\r\n * @param {number} length output bit-length\r\n * @returns {CryptoOperationData} result\r\n */\r\nfunction deriveBits(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length < 8 || length > this.bitLength || length % 8 > 0)\r\n        throw new DataError('Length must be no more than ' + this.bitLength + ' bits and multiple of 8');\r\n    var n = length / 8,\r\n      b = derive.call(this, baseKey),\r\n      r = new Uint8Array(n);\r\n\r\n    r.set(new Uint8Array(b, 0, n));\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The deriveKey method returns 256 bit Key encryption key on baseKey.\r\n *\r\n * This algorithm creates a key encryption key (KEK) using 64 bit UKM,\r\n * the sender’s private key, and the recipient’s public key (or the\r\n * reverse of the latter pair\r\n *\r\n * @memberOf GostSign\r\n * @method deriveKey\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\r\n * @returns {CryptoOperationData} result\r\n */\r\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var b = derive.call(this, baseKey),\r\n      r = new Uint8Array(32);\r\n\r\n    r.set(new Uint8Array(b, 0, 32));\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Gost R 34.10 universal object<br><br>\r\n *\r\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\r\n *      <li><b>version</b> Algorithm version\r\n *          <ul>\r\n *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\r\n *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\r\n *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\r\n *          <ul>\r\n *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\r\n *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode\r\n *          <ul>\r\n *              <li><b>SIGN</b> Digital signature mode (default)</li>\r\n *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Sign/Verify mode (SIGN)</li>\r\n *      <li>DeriveKey/DeriveBits mode (DH)\r\n *          <ul>\r\n *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\r\n *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>GenerateKey mode (SIGN and DH) version = 1994\r\n *          <ul>\r\n *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n *          </ul>\r\n *          Additional parameters, if namedParam not specified\r\n *          <ul>\r\n *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\r\n *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\r\n *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\r\n *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>GenerateKey mode (SIGN and DH) version = 2001 or 2012\r\n *          <ul>\r\n *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n *          </ul>\r\n *          Additional EC parameters, if namedCurve not specified\r\n *          <ul>\r\n *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\r\n *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\r\n *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\r\n *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\r\n *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\r\n *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostSign\r\n * @param {AlgorithmIndentifier} algorithm\r\n */\r\nexport function GostSign(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    algorithm = algorithm || {};\r\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' +\r\n      ((algorithm.version || 2012) % 100) + '-' + (algorithm.length || 256) +\r\n      (((algorithm.mode || 'SIGN') !== 'SIGN') ? '-' + algorithm.mode : '') +\r\n      (typeof algorithm.namedParam === 'string' ? '/' + algorithm.namedParam : '') +\r\n      (typeof algorithm.namedCurve === 'string' ? '/' + algorithm.namedCurve : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    var version = algorithm.version || 2012;\r\n\r\n    // Functions\r\n    switch (algorithm.mode || 'SIGN') {\r\n        case 'SIGN':\r\n            this.sign = sign;\r\n            this.verify = verify;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'DH':\r\n            this.deriveBits = deriveBits;\r\n            this.deriveKey = deriveKey;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'MASK':\r\n            this.wrapKey = wrapKey;\r\n            this.unwrapKey = unwrapKey;\r\n            this.generateKey = generateMaskKey;\r\n            break;\r\n    }\r\n\r\n    // Define parameters\r\n    if (version === 1994) {\r\n        // Named or parameters algorithm\r\n        var param = algorithm.param;\r\n        if (!param)\r\n            param = GostParams[this.namedParam = (algorithm.namedParam || 'S-A').toUpperCase()];\r\n        this.modulusLength = algorithm.modulusLength || param.modulusLength || 1024;\r\n        this.p = htobi(param.p);\r\n        this.q = htobi(param.q);\r\n        this.a = htobi(param.a);\r\n        // Public key for derive\r\n        if (algorithm['public'])\r\n            this.peer_y = atobi(algorithm['public']);\r\n    } else {\r\n        // Named or parameters algorithm\r\n        var param = algorithm.curve;\r\n        if (!param)\r\n            param = ECGostParams[this.namedCurve = (algorithm.namedCurve || 'S-256-A').toUpperCase()];\r\n        var curve = this.curve = newCurve(htobi(param.p), htobi(param.a), htobi(param.b));\r\n        this.P = newEC(curve,\r\n          newFE(curve, htobi(param.x)),\r\n          newFE(curve, htobi(param.y)));\r\n        this.q = htobi(param.q);\r\n        // Public key for derive\r\n        if (algorithm['public']) {\r\n            var k2 = to2(algorithm['public']);\r\n            this.peer_Q = new newEC(this.curve, // This corresponds to the binary representation of (<y>256||<x>256)\r\n              newFE(this.curve, k2[0]), // first 32 octets contain the little-endian representation of x\r\n              newFE(this.curve, k2[1])); // and second 32 octets contain the little-endian representation of y.\r\n        }\r\n    }\r\n\r\n    // Check bit length\r\n    var hashLen, keyLen;\r\n    if (this.curve) {\r\n        keyLen = algorithm.length || bitLength(this.q);\r\n        if (keyLen > 508 && keyLen <= 512)\r\n            keyLen = 512;\r\n        else if (keyLen > 254 && keyLen <= 256)\r\n            keyLen = 256;\r\n        else\r\n            throw new NotSupportedError('Support keys only 256 or 512 bits length');\r\n        hashLen = keyLen;\r\n    } else {\r\n        keyLen = algorithm.modulusLength || bitLength(this.p);\r\n        if (keyLen > 1016 && keyLen <= 1024)\r\n            keyLen = 1024;\r\n        else if (keyLen > 508 && keyLen <= 512)\r\n            keyLen = 512;\r\n        else\r\n            throw new NotSupportedError('Support keys only 512 or 1024 bits length');\r\n        hashLen = 256;\r\n    }\r\n    this.bitLength = hashLen;\r\n    this.keyLength = keyLen;\r\n\r\n    // Algorithm proceator for result conversion\r\n    this.procreator = algorithm.procreator;\r\n\r\n    // Hash function definition\r\n    var hash = algorithm.hash;\r\n    if (hash) {\r\n        if (typeof hash === 'string' || hash instanceof String)\r\n            hash = { name: hash };\r\n        if (algorithm.version === 1994 || algorithm.version === 2001) {\r\n            hash.version = 1994;\r\n            hash.length = 256;\r\n            hash.sBox = algorithm.sBox || hash.sBox;\r\n        } else {\r\n            hash.version = 2012;\r\n            hash.length = hashLen;\r\n        }\r\n        hash.procreator = hash.procreator || algorithm.procreator;\r\n\r\n        this.hash = new GostDigest(hash);\r\n    }\r\n\r\n    // Pregenerated seed for key exchange algorithms\r\n    if (algorithm.ukm) // Now don't check size\r\n        this.ukm = algorithm.ukm;\r\n\r\n} // </editor-fold>\r\n\r\n\r\n","/**\r\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { GostCipher } from './gostCipher';\r\nimport { GostDigest } from './gostDigest';\r\nimport { GostSign } from './gostSign';\r\nimport { NotSupportedError } from '../utils/errors';\r\n\r\n/*\r\n * Engine definition base on normalized algorithm identifier\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Define engine\r\nfunction defineEngine(method, algorithm) {\r\n    if (!algorithm)\r\n        throw new (SyntaxError || Error)('Algorithm not defined');\r\n\r\n    if (!algorithm.name)\r\n        throw new (SyntaxError || Error)('Algorithm name not defined');\r\n\r\n    var name = algorithm.name, mode = algorithm.mode;\r\n    if ((name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2') && (method === 'generateKey' ||\r\n      (mode === 'MAC' && (method === 'sign' || method === 'verify')) ||\r\n      ((mode === 'KW' || mode === 'MASK') && (method === 'wrapKey' || method === 'unwrapKey')) ||\r\n      ((!mode || mode === 'ES') && (method === 'encrypt' || method === 'decrypt')))) {\r\n        return 'GostCipher';\r\n\r\n    } else if ((name === 'GOST R 34.11' || name === 'SHA') && (method === 'digest' ||\r\n      (mode === 'HMAC' && (method === 'sign' || method === 'verify' || method === 'generateKey')) ||\r\n      ((mode === 'KDF' || mode === 'PBKDF2' || mode === 'PFXKDF' || mode === 'CPKDF') &&\r\n        (method === 'deriveKey' || method === 'deriveBits' || method === 'generateKey')))) {\r\n        return 'GostDigest';\r\n\r\n    } else if (name === 'GOST R 34.10' && (method === 'generateKey' ||\r\n      ((!mode || mode === 'SIGN') && (method === 'sign' || method === 'verify')) ||\r\n      (mode === 'MASK' && (method === 'wrapKey' || method === 'unwrapKey')) ||\r\n      (mode === 'DH' && (method === 'deriveKey' || method === 'deriveBits')))) {\r\n        return 'GostSign';\r\n    } else\r\n        throw new NotSupportedError('Algorithm ' + name + '-' + mode + ' is not valid for ' + method);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Object enables usage GOST cryptographic algorithms in the main JS thread.\r\n *\r\n * Object provide interface to GOST low-level cryptogric classes:\r\n *  <ul>\r\n *      <li>GostCipher - implementation of GOST 28147, GOST R 34.12, GOST R 34.13 Encryption algorithms. Reference {@link http://tools.ietf.org/html/rfc5830}</li>\r\n *      <li>GostDigest - implementation of GOST R 34.11 Hash Function algorithms. References {@link http://tools.ietf.org/html/rfc5831} and {@link http://tools.ietf.org/html/rfc6986}</li>\r\n *      <li>GostSign - implementation of GOST R 34.10 Digital Signature algorithms. References {@link http://tools.ietf.org/html/rfc5832} and {@link http://tools.ietf.org/html/rfc7091}</li>\r\n *  </ul>\r\n * @namespace gostEngine\r\n */\r\nconst gostEngine = {\r\n    /**\r\n     * gostEngine.execute(algorithm, method, args) Entry point to execution\r\n     * all low-level GOST cryptographic methods\r\n     *\r\n     *  <ul>\r\n     *      <li>Determine the appropriate engine for a given execution method</li>\r\n     *      <li>Create cipher object for determineted engine</li>\r\n     *      <li>Execute method of cipher with given args</li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @param {string} method Crypto method for execution\r\n     * @param {Array} args Method arguments (keys, data, additional parameters)\r\n     * @returns {(CryptoOperationData|Key|KeyPair|boolean)} Result of method execution\r\n     */\r\n    execute: function (algorithm, method, args) {\r\n        // Define engine for GOST algorithms\r\n        var engine = defineEngine(method, algorithm);\r\n        // Create cipher\r\n        var cipher = this['get' + engine](algorithm);\r\n        // Execute method\r\n        return cipher[method].apply(cipher, args);\r\n    },\r\n    /**\r\n     * gostEngine.getGostCipher(algorithm) returns GOST 28147 / GOST R 34.12 cipher instance<br><br>\r\n     *\r\n     * GOST 28147-89 / GOST R 34.12-15 Encryption Algorithm<br><br>\r\n     * When keys and initialization vectors are converted to/from byte arrays,\r\n     * little-endian byte order is assumed.<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\r\n     *      <li><b>version</b> Algorithm version, number\r\n     *          <ul>\r\n     *              <li><b>1989</b> Current version of standard</li>\r\n     *              <li><b>2015</b> New draft version of standard</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Block length\r\n     *          <ul>\r\n     *              <li><b>64</b> 64 bits length (default)</li>\r\n     *              <li><b>128</b> 128 bits length (only for version 2015)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode, string\r\n     *          <ul>\r\n     *              <li><b>ES</b> Encryption mode (default)</li>\r\n     *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\r\n     *              <li><b>KW</b> Key wrapping mode</li>\r\n     *              <li><b>MASK</b> Key mask mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Encript/Decrypt mode (ES)\r\n     *          <ul>\r\n     *              <li><b>block</b> Block mode, string. Default ECB</li>\r\n     *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\r\n     *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\r\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Sign/Verify mode (MAC)\r\n     *          <ul>\r\n     *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\r\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrap/Unwrap key mode (KW)\r\n     *          <ul>\r\n     *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\r\n     *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrap/Unwrap key mode (MASK)</li>\r\n     *  </ul>\r\n     *\r\n     * Supported paramters values:\r\n     *\r\n     *  <ul>\r\n     *      <li>Block modes (parameter 'block')\r\n     *          <ul>\r\n     *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n     *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu\" (64-bit CFB) mode</li>\r\n     *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\r\n     *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Key meshing modes (parameter 'keyMeshing')\r\n     *          <ul>\r\n     *              <li><b>NO</b> No key wrapping (default)</li>\r\n     *              <li><b>CP</b> CryptoPor Key key meshing</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Padding modes (parameter 'padding')\r\n     *          <ul>\r\n     *              <li><b>NO</b> No padding only for CFB and CTR modes</li>\r\n     *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\r\n     *              <li><b>ZERO</b> Zero bits padding mode</li>\r\n     *              <li><b>RANDOM</b> Random bits padding mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrapping key modes (parameter 'keyWrapping')\r\n     *          <ul>\r\n     *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\r\n     *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\r\n     *              <li><b>SC</b> SignalCom Key wrapping mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostCipher} Instance of GostCipher\r\n     */\r\n    getGostCipher: function (algorithm) {\r\n        return new GostCipher(algorithm);\r\n    },\r\n    /**\r\n     * gostEngine.getGostDigest(algorithm) returns GOST R 34.11 cipher instance<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\r\n     *      <li><b>version</b> Algorithm version\r\n     *          <ul>\r\n     *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\r\n     *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Digest length\r\n     *          <ul>\r\n     *              <li><b>256</b> 256 bits digest</li>\r\n     *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode\r\n     *          <ul>\r\n     *              <li><b>HASH</b> simple digest mode (default)</li>\r\n     *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\r\n     *              <li><b>KDF</b> Derive bits for KEK deversification</li>\r\n     *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\r\n     *              <li><b>PFXKDF</b> PFX key dirivation algorithms PFXKDF</li>\r\n     *              <li><b>CPKDF</b> CryptoPro Password based key dirivation algorithms</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Digest HASH mode (default)</li>\r\n     *      <li>Sign/Verify HMAC modes parameters depends on version and length\r\n     *          <ul>\r\n     *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\r\n     *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\r\n     *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey KDF mode\r\n     *          <ul>\r\n     *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\r\n     *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey PBKDF2 mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey PFXKDF mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\r\n     *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey CPKDF mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostDigest} Instance of GostDigest\r\n     */\r\n    getGostDigest: function (algorithm) {\r\n        return new GostDigest(algorithm);\r\n    },\r\n    /**\r\n     * gostEngine.getGostSign(algorithm) returns GOST R 34.10 cipher instance<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\r\n     *      <li><b>version</b> Algorithm version\r\n     *          <ul>\r\n     *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\r\n     *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\r\n     *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\r\n     *          <ul>\r\n     *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\r\n     *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode\r\n     *          <ul>\r\n     *              <li><b>SIGN</b> Digital signature mode (default)</li>\r\n     *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\r\n     *              <li><b>MASK</b> Key mask mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Sign/Verify mode (SIGN)</li>\r\n     *      <li>Wrap/Unwrap mode (MASK)</li>\r\n     *      <li>DeriveKey/DeriveBits mode (DH)\r\n     *          <ul>\r\n     *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\r\n     *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 1994\r\n     *          <ul>\r\n     *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n     *          </ul>\r\n     *          Additional parameters, if namedParam not specified\r\n     *          <ul>\r\n     *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\r\n     *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\r\n     *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\r\n     *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 2001 or 2012\r\n     *          <ul>\r\n     *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n     *          </ul>\r\n     *          Additional EC parameters, if namedCurve not specified\r\n     *          <ul>\r\n     *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\r\n     *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\r\n     *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\r\n     *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\r\n     *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\r\n     *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostSign} Instance of GostSign\r\n     */\r\n    getGostSign: function (algorithm) {\r\n        return new GostSign(algorithm);\r\n    }\r\n};\r\n\r\nexport { gostEngine };\r\n","import { gostEngine } from '../engine/gostEngineSync';\r\nimport { getCryptoModule } from '../utils/environment';\r\nimport { DataError, NotSupportedError } from '../utils/errors';\r\nimport { gostASN1Instance } from './gostASN1';\r\n\r\n\r\nclass InvalidStateError extends Error {\r\n}\r\n\r\nclass InvalidAccessError extends Error {\r\n}\r\n\r\n/*\r\n * Algorithm normalization\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nconst rootCrypto = getCryptoModule();\r\n\r\n// Normalize algorithm\r\nfunction normalize(algorithm, method) {\r\n    if (typeof algorithm === 'string' || algorithm instanceof String)\r\n        algorithm = { name: algorithm };\r\n    var name = algorithm.name;\r\n    if (!name)\r\n        throw new SyntaxError('Algorithm name not defined');\r\n    // Extract algorithm modes from name\r\n    var modes = name.split('/'), modes = modes[0].split('-').concat(modes.slice(1));\r\n    // Normalize the name with default modes\r\n    var na = {};\r\n    name = modes[0].replace(/[\\.\\s]/g, '');\r\n    modes = modes.slice(1);\r\n    if (name.indexOf('28147') >= 0) {\r\n        na = {\r\n            name: 'GOST 28147',\r\n            version: 1989,\r\n            mode: (algorithm.mode || (// ES, MAC, KW\r\n              (method === 'sign' || method === 'verify') ? 'MAC' :\r\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\r\n            length: algorithm.length || 64\r\n        };\r\n    } else if (name.indexOf('3412') >= 0) {\r\n        na = {\r\n            name: 'GOST R 34.12',\r\n            version: 2015,\r\n            mode: (algorithm.mode || (// ES, MAC, KW\r\n              (method === 'sign' || method === 'verify') ? 'MAC' :\r\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\r\n            length: algorithm.length || 64 // 128\r\n        };\r\n    } else if (name.indexOf('3411') >= 0) {\r\n        na = {\r\n            name: 'GOST R 34.11',\r\n            version: 2012, // 1994\r\n            mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF, CPKDF\r\n              (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\r\n                (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\r\n            length: algorithm.length || 256 // 512\r\n        };\r\n    } else if (name.indexOf('3410') >= 0) {\r\n        na = {\r\n            name: 'GOST R 34.10',\r\n            version: 2012, // 1994, 2001\r\n            mode: (algorithm.mode || (// SIGN, DH, MASK\r\n              (method === 'deriveKey' || method === 'deriveBits') ? 'DH' : 'SIGN')).toUpperCase(),\r\n            length: algorithm.length || 256 // 512\r\n        };\r\n    } else if (name.indexOf('SHA') >= 0) {\r\n        na = {\r\n            name: 'SHA',\r\n            version: (algorithm.length || 160) === 160 ? 1 : 2, // 1, 2\r\n            mode: (algorithm.mode || (// HASH, KDF, HMAC, PBKDF2, PFXKDF\r\n              (method === 'deriveKey' || method === 'deriveBits') ? 'KDF' :\r\n                (method === 'sign' || method === 'verify') ? 'HMAC' : 'HASH')).toUpperCase(),\r\n            length: algorithm.length || 160\r\n        };\r\n    } else if (name.indexOf('RC2') >= 0) {\r\n        na = {\r\n            name: 'RC2',\r\n            version: 1,\r\n            mode: (algorithm.mode || (// ES, MAC, KW\r\n              (method === 'sign' || method === 'verify') ? 'MAC' :\r\n                (method === 'wrapKey' || method === 'unwrapKey') ? 'KW' : 'ES')).toUpperCase(),\r\n            length: algorithm.length || 32 // 1 - 1024\r\n        };\r\n    } else if (name.indexOf('PBKDF2') >= 0) {\r\n        na = normalize(algorithm.hash, 'digest');\r\n        na.mode = 'PBKDF2';\r\n    } else if (name.indexOf('PFXKDF') >= 0) {\r\n        na = normalize(algorithm.hash, 'digest');\r\n        na.mode = 'PFXKDF';\r\n    } else if (name.indexOf('CPKDF') >= 0) {\r\n        na = normalize(algorithm.hash, 'digest');\r\n        na.mode = 'CPKDF';\r\n    } else if (name.indexOf('HMAC') >= 0) {\r\n        na = normalize(algorithm.hash, 'digest');\r\n        na.mode = 'HMAC';\r\n    } else\r\n        throw new NotSupportedError('Algorithm not supported');\r\n\r\n    // Compile modes\r\n    modes.forEach(function (mode) {\r\n        mode = mode.toUpperCase();\r\n        if (/^[0-9]+$/.test(mode)) {\r\n            if ((['8', '16', '32'].indexOf(mode) >= 0) || (na.length === '128' && mode === '64')) { // Shift bits\r\n                if (na.mode === 'ES')\r\n                    na.shiftBits = parseInt(mode);\r\n                else if (na.mode === 'MAC')\r\n                    na.macLength = parseInt(mode);\r\n                else\r\n                    throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\r\n            } else if (['89', '94', '01', '12', '15', '1989', '1994', '2001', '2012', '2015'].indexOf(mode) >= 0) { // GOST Year\r\n                var version = parseInt(mode);\r\n                version = version < 1900 ? (version < 80 ? 2000 + version : 1900 + version) : version;\r\n                na.version = version;\r\n            } else if (['1'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-1\r\n                na.version = 1;\r\n                na.length = 160;\r\n            } else if (['256', '384', '512'].indexOf(mode) >= 0 && na.name === 'SHA') { // SHA-2\r\n                na.version = 2;\r\n                na.length = parseInt(mode);\r\n            } else if (['40', '128'].indexOf(mode) >= 0 && na.name === 'RC2') { // RC2\r\n                na.version = 1;\r\n                na.length = parseInt(mode); // key size\r\n            } else if (['64', '128', '256', '512'].indexOf(mode) >= 0) // block size\r\n                na.length = parseInt(mode);\r\n            else if (['1000', '2000'].indexOf(mode) >= 0) // Iterations\r\n                na.iterations = parseInt(mode);\r\n            // Named Paramsets\r\n        } else if (['E-TEST', 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC', 'E-Z', 'D-TEST', 'D-A', 'D-SC'].indexOf(mode) >= 0) {\r\n            na.sBox = mode;\r\n        } else if (['S-TEST', 'S-A', 'S-B', 'S-C', 'S-D', 'X-A', 'X-B', 'X-C'].indexOf(mode) >= 0) {\r\n            na.namedParam = mode;\r\n        } else if (['S-256-TEST', 'S-256-A', 'S-256-B', 'S-256-C', 'P-256', 'T-512-TEST', 'T-512-A',\r\n            'T-512-B', 'X-256-A', 'X-256-B', 'T-256-TEST', 'T-256-A', 'T-256-B', 'S-256-B', 'T-256-C', 'S-256-C'].indexOf(mode) >= 0) {\r\n            na.namedCurve = mode;\r\n        } else if (['SC', 'CP', 'VN'].indexOf(mode) >= 0) {\r\n            na.procreator = mode;\r\n\r\n            // Encription GOST 28147 or GOST R 34.12\r\n        } else if (na.name === 'GOST 28147' || na.name === 'GOST R 34.12' || na.name === 'RC2') {\r\n            if (['ES', 'MAC', 'KW', 'MASK'].indexOf(mode) >= 0) {\r\n                na.mode = mode;\r\n            } else if (['ECB', 'CFB', 'OFB', 'CTR', 'CBC'].indexOf(mode) >= 0) {\r\n                na.mode = 'ES';\r\n                na.block = mode;\r\n            } else if (['CPKW', 'NOKW', 'SCKW'].indexOf(mode) >= 0) {\r\n                na.mode = 'KW';\r\n                na.keyWrapping = mode.replace('KW', '');\r\n            } else if (['ZEROPADDING', 'PKCS5PADDING', 'NOPADDING', 'RANDOMPADDING', 'BITPADDING'].indexOf(mode) >= 0) {\r\n                na.padding = mode.replace('PADDING', '');\r\n            } else if (['NOKM', 'CPKM'].indexOf(mode) >= 0) {\r\n                na.keyMeshing = mode.replace('KM', '');\r\n            } else\r\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\r\n\r\n            // Digesting GOST 34.11\r\n        } else if (na.name === 'GOST R 34.11' || na.name === 'SHA') {\r\n            if (['HASH', 'KDF', 'HMAC', 'PBKDF2', 'PFXKDF', 'CPKDF'].indexOf(mode) >= 0)\r\n                na.mode = mode;\r\n            else\r\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\r\n\r\n            // Signing GOST 34.10\r\n        } else if (na.name === 'GOST R 34.10') {\r\n            var hash = mode.replace(/[\\.\\s]/g, '');\r\n            if (hash.indexOf('GOST') >= 0 && hash.indexOf('3411') >= 0)\r\n                na.hash = mode;\r\n            else if (['SIGN', 'DH', 'MASK'].indexOf(mode))\r\n                na.mode = mode;\r\n            else\r\n                throw new NotSupportedError('Algorithm ' + na.name + ' mode ' + mode + ' not supported');\r\n        }\r\n    });\r\n\r\n    // Procreator\r\n    na.procreator = algorithm.procreator || na.procreator || 'CP';\r\n\r\n    // Key size\r\n    switch (na.name) {\r\n        case 'GOST R 34.10':\r\n            na.keySize = na.length / (na.version === 1994 ? 4 : 8);\r\n            break;\r\n        case 'GOST R 34.11':\r\n            na.keySize = 32;\r\n            break;\r\n        case 'GOST 28147':\r\n        case 'GOST R 34.12':\r\n            na.keySize = 32;\r\n            break;\r\n        case 'RC2':\r\n            na.keySize = Math.ceil(na.length / 8);\r\n            break;\r\n        case 'SHA':\r\n            na.keySize = na.length / 8;\r\n            break;\r\n    }\r\n\r\n    // Encrypt additional modes\r\n    if (na.mode === 'ES') {\r\n        if (algorithm.block)\r\n            na.block = algorithm.block; // ECB, CFB, OFB, CTR, CBC\r\n        if (na.block)\r\n            na.block = na.block.toUpperCase();\r\n        if (algorithm.padding)\r\n            na.padding = algorithm.padding; // NO, ZERO, PKCS5, RANDOM, BIT\r\n        if (na.padding)\r\n            na.padding = na.padding.toUpperCase();\r\n        if (algorithm.shiftBits)\r\n            na.shiftBits = algorithm.shiftBits; // 8, 16, 32, 64\r\n        if (algorithm.keyMeshing)\r\n            na.keyMeshing = algorithm.keyMeshing; // NO, CP\r\n        if (na.keyMeshing)\r\n            na.keyMeshing = na.keyMeshing.toUpperCase();\r\n        // Default values\r\n        if (method !== 'importKey' && method !== 'generateKey') {\r\n            na.block = na.block || 'ECB';\r\n            na.padding = na.padding || (na.block === 'CBC' || na.block === 'ECB' ? 'ZERO' : 'NO');\r\n            if (na.block === 'CFB' || na.block === 'OFB')\r\n                na.shiftBits = na.shiftBits || na.length;\r\n            na.keyMeshing = na.keyMeshing || 'NO';\r\n        }\r\n    }\r\n    if (na.mode === 'KW') {\r\n        if (algorithm.keyWrapping)\r\n            na.keyWrapping = algorithm.keyWrapping; // NO, CP, SC\r\n        if (na.keyWrapping)\r\n            na.keyWrapping = na.keyWrapping.toUpperCase();\r\n        if (method !== 'importKey' && method !== 'generateKey')\r\n            na.keyWrapping = na.keyWrapping || 'NO';\r\n    }\r\n\r\n    // Paramsets\r\n    ['sBox', 'namedParam', 'namedCurve', 'curve', 'param', 'modulusLength'].forEach(function (name) {\r\n        algorithm[name] && (na[name] = algorithm[name]);\r\n    });\r\n    // Default values\r\n    if (method !== 'importKey' && method !== 'generateKey') {\r\n        if (na.name === 'GOST 28147') {\r\n            na.sBox = na.sBox || (na.procreator === 'SC' ? 'E-SC' : 'E-A'); // 'E-A', 'E-B', 'E-C', 'E-D', 'E-SC'\r\n        } else if (na.name === 'GOST R 34.12' && na.length === 64) {\r\n            na.sBox = 'E-Z';\r\n        } else if (na.name === 'GOST R 34.11' && na.version === 1994) {\r\n            na.sBox = na.sBox || (na.procreator === 'SC' ? 'D-SC' : 'D-A'); // 'D-SC'\r\n        } else if (na.name === 'GOST R 34.10' && na.version === 1994) {\r\n            na.namedParam = na.namedParam || (na.mode === 'DH' ? 'X-A' : 'S-A'); // 'S-B', 'S-C', 'S-D', 'X-B', 'X-C'\r\n        } else if (na.name === 'GOST R 34.10' && na.version === 2001) {\r\n            na.namedCurve = na.namedCurve || (na.length === 256 ?\r\n              na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\r\n              na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\r\n        } else if (na.name === 'GOST R 34.10' && na.version === 2012) {\r\n            na.namedCurve = na.namedCurve || (na.length === 256 ?\r\n              na.procreator === 'SC' ? 'P-256' : (na.mode === 'DH' ? 'X-256-A' : 'S-256-A') : // 'S-256-B', 'S-256-C', 'X-256-B', 'T-256-A', 'T-256-B', 'T-256-C', 'P-256'\r\n              na.mode === 'T-512-A'); // 'T-512-B', 'T-512-C'\r\n        }\r\n    }\r\n\r\n    // Vectors\r\n    switch (na.mode) {\r\n        case 'DH':\r\n            algorithm.ukm && (na.ukm = algorithm.ukm);\r\n            algorithm['public'] && (na['public'] = algorithm['public']);\r\n            break;\r\n        case 'SIGN':\r\n        case 'KW':\r\n            algorithm.ukm && (na.ukm = algorithm.ukm);\r\n            break;\r\n        case 'ES':\r\n        case 'MAC':\r\n            algorithm.iv && (na.iv = algorithm.iv);\r\n            break;\r\n        case 'KDF':\r\n            algorithm.label && (na.label = algorithm.label);\r\n            algorithm.contex && (na.context = algorithm.contex);\r\n            break;\r\n        case 'PBKDF2':\r\n            algorithm.salt && (na.salt = algorithm.salt);\r\n            algorithm.iterations && (na.iterations = algorithm.iterations);\r\n            algorithm.diversifier && (na.diversifier = algorithm.diversifier);\r\n            break;\r\n        case 'PFXKDF':\r\n            algorithm.salt && (na.salt = algorithm.salt);\r\n            algorithm.iterations && (na.iterations = algorithm.iterations);\r\n            algorithm.diversifier && (na.diversifier = algorithm.diversifier);\r\n            break;\r\n        case 'CPKDF':\r\n            algorithm.salt && (na.salt = algorithm.salt);\r\n            algorithm.iterations && (na.iterations = algorithm.iterations);\r\n            break;\r\n    }\r\n\r\n    // Verification method and modes\r\n    if (method && (\r\n      ((na.mode !== 'ES' && na.mode !== 'SIGN' && na.mode !== 'MAC' &&\r\n        na.mode !== 'HMAC' && na.mode !== 'KW' && na.mode !== 'DH'\r\n        && na.mode !== 'MASK') &&\r\n        (method === 'generateKey')) ||\r\n      ((na.mode !== 'ES') &&\r\n        (method === 'encrypt' || method === 'decrypt')) ||\r\n      ((na.mode !== 'SIGN' && na.mode !== 'MAC' && na.mode !== 'HMAC') &&\r\n        (method === 'sign' || method === 'verify')) ||\r\n      ((na.mode !== 'HASH') &&\r\n        (method === 'digest')) ||\r\n      ((na.mode !== 'KW' && na.mode !== 'MASK') &&\r\n        (method === 'wrapKey' || method === 'unwrapKey')) ||\r\n      ((na.mode !== 'DH' && na.mode !== 'PBKDF2' && na.mode !== 'PFXKDF' &&\r\n        na.mode !== 'CPKDF' && na.mode !== 'KDF') &&\r\n        (method === 'deriveKey' || method === 'deriveBits'))))\r\n        throw new NotSupportedError('Algorithm mode ' + na.mode + ' not valid for method ' + method);\r\n\r\n    // Normalize hash algorithm\r\n    algorithm.hash && (na.hash = algorithm.hash);\r\n    if (na.hash) {\r\n        if ((typeof na.hash === 'string' || na.hash instanceof String)\r\n          && na.procreator)\r\n            na.hash = na.hash + '/' + na.procreator;\r\n        na.hash = normalize(na.hash, 'digest');\r\n    }\r\n\r\n    // Algorithm object identirifer\r\n    algorithm.id && (na.id = algorithm.id);\r\n\r\n    return na;\r\n}\r\n\r\n// Check for possibility use native crypto.subtle\r\nfunction checkNative(algorithm) {\r\n    if (!rootCrypto || !rootCrypto.subtle || !algorithm)\r\n        return false;\r\n    // Prepare name\r\n    var name = (typeof algorithm === 'string' || algorithm instanceof String) ?\r\n      name = algorithm : algorithm.name;\r\n    if (!name)\r\n        return false;\r\n    name = name.toUpperCase();\r\n    // Digest algorithm for key derivation\r\n    if ((name.indexOf('KDF') >= 0 || name.indexOf('HMAC') >= 0) && algorithm.hash)\r\n        return checkNative(algorithm.hash);\r\n    // True if no supported names\r\n    return name.indexOf('GOST') === -1 &&\r\n      name.indexOf('SHA-1') === -1 &&\r\n      name.indexOf('RC2') === -1 &&\r\n      name.indexOf('?DES') === -1;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n * Key conversion methods\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Check key parameter\r\nfunction checkKey(key, method) {\r\n    if (!key.algorithm)\r\n        throw new SyntaxError('Key algorithm not defined');\r\n\r\n    if (!key.algorithm.name)\r\n        throw new SyntaxError('Key algorithm name not defined');\r\n\r\n    var name = key.algorithm.name,\r\n      gostCipher = name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2',\r\n      gostDigest = name === 'GOST R 34.11' || name === 'SHA',\r\n      gostSign = name === 'GOST R 34.10';\r\n\r\n    if (!gostCipher && !gostSign && !gostDigest)\r\n        throw new NotSupportedError('Key algorithm ' + name + ' is unsupproted');\r\n\r\n    if (!key.type)\r\n        throw new SyntaxError('Key type not defined');\r\n\r\n    if (((gostCipher || gostDigest) && key.type !== 'secret') ||\r\n      (gostSign && !(key.type === 'public' || key.type === 'private')))\r\n        throw new DataError('Key type ' + key.type + ' is not valid for algorithm ' + name);\r\n\r\n    if (!key.usages || !key.usages.indexOf)\r\n        throw new SyntaxError('Key usages not defined');\r\n\r\n    for (var i = 0, n = key.usages.length; i < n; i++) {\r\n        var md = key.usages[i];\r\n        if (((md === 'encrypt' || md === 'decrypt') && key.type !== 'secret') ||\r\n          (md === 'sign' && key.type === 'public') ||\r\n          (md === 'verify' && key.type === 'private'))\r\n            throw new InvalidStateError('Key type ' + key.type + ' is not valid for ' + md);\r\n    }\r\n\r\n    if (method)\r\n        if (key.usages.indexOf(method) === -1)\r\n            throw new InvalidAccessError('Key usages is not contain method ' + method);\r\n\r\n    if (!key.buffer)\r\n        throw new SyntaxError('Key buffer is not defined');\r\n\r\n    var size = key.buffer.byteLength * 8, keySize = 8 * key.algorithm.keySize;\r\n    if ((key.type === 'secret' && size !== (keySize || 256) &&\r\n      (key.usages.indexOf('encrypt') >= 0 || key.usages.indexOf('decrypt') >= 0)) ||\r\n      (key.type === 'private' && !(size === 256 || size === 512)) ||\r\n      (key.type === 'public' && !(size === 512 || size === 1024)))\r\n        throw new SyntaxError('Key buffer has wrong size ' + size + ' bit');\r\n}\r\n\r\n// Extract key and enrich cipher algorithm\r\nfunction extractKey(method, algorithm, key) {\r\n    checkKey(key, method);\r\n    if (algorithm) {\r\n        var params;\r\n        switch (algorithm.mode) {\r\n            case 'ES':\r\n                params = ['sBox', 'keyMeshing', 'padding', 'block'];\r\n                break;\r\n            case 'SIGN':\r\n                params = ['namedCurve', 'namedParam', 'sBox', 'curve', 'param', 'modulusLength'];\r\n                break;\r\n            case 'MAC':\r\n                params = ['sBox'];\r\n                break;\r\n            case 'KW':\r\n                params = ['keyWrapping', 'ukm'];\r\n                break;\r\n            case 'DH':\r\n                params = ['namedCurve', 'namedParam', 'sBox', 'ukm', 'curve', 'param', 'modulusLength'];\r\n                break;\r\n            case 'KDF':\r\n                params = ['context', 'label'];\r\n                break;\r\n            case 'PBKDF2':\r\n                params = ['sBox', 'iterations', 'salt'];\r\n                break;\r\n            case 'PFXKDF':\r\n                params = ['sBox', 'iterations', 'salt', 'diversifier'];\r\n                break;\r\n            case 'CPKDF':\r\n                params = ['sBox', 'salt'];\r\n                break;\r\n        }\r\n        if (params)\r\n            params.forEach(function (name) {\r\n                key.algorithm[name] && (algorithm[name] = key.algorithm[name]);\r\n            });\r\n    }\r\n    return key.buffer;\r\n}\r\n\r\n// Make key definition\r\nfunction convertKey(algorithm, extractable, keyUsages, keyData, keyType) {\r\n    var key = {\r\n        type: keyType || (algorithm.name === 'GOST R 34.10' ? 'private' : 'secret'),\r\n        extractable: extractable || 'false',\r\n        algorithm: algorithm,\r\n        usages: keyUsages || [],\r\n        buffer: keyData\r\n    };\r\n    checkKey(key);\r\n    return key;\r\n}\r\n\r\nfunction convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, publicBuffer, privateBuffer) {\r\n\r\n    if (!keyUsages || !keyUsages.indexOf)\r\n        throw new SyntaxError('Key usages not defined');\r\n\r\n    var publicUsages = keyUsages.filter(function (value) {\r\n        return value !== 'sign';\r\n    });\r\n    var privateUsages = keyUsages.filter(function (value) {\r\n        return value !== 'verify';\r\n    });\r\n\r\n    return {\r\n        publicKey: convertKey(publicAlgorithm, extractable, publicUsages, publicBuffer, 'public'),\r\n        privateKey: convertKey(privateAlgorithm, extractable, privateUsages, privateBuffer, 'private')\r\n    };\r\n}\r\n\r\n// Swap bytes in buffer\r\nfunction swapBytes(src) {\r\n    if (src instanceof CryptoOperationData)\r\n        src = new Uint8Array(src);\r\n    var dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n// Executor for any method\r\nfunction execute(algorithm, method, args) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            resolve(gostEngine.execute(algorithm, method, args));\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n\r\n// Self resolver\r\nfunction call(callback) {\r\n    try {\r\n        callback();\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n * WebCrypto common class references\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n/**\r\n * The Algorithm object is a dictionary object [WebIDL] which is used to\r\n * specify an algorithm and any additional parameters required to fully\r\n * specify the desired operation.<br>\r\n * <pre>\r\n *  dictionary Algorithm {\r\n     *      DOMString name;\r\n     *  };\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\r\n * @class Algorithm\r\n * @param {DOMString} name The name of the registered algorithm to use.\r\n */\r\n\r\n/**\r\n * AlgorithmIdentifier - Algorithm or DOMString name of algorithm<br>\r\n * <pre>\r\n *  typedef (Algorithm or DOMString) AlgorithmIdentifier;\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary}\r\n * @class AlgorithmIdentifier\r\n */\r\n\r\n/**\r\n * The KeyAlgorithm interface represents information about the contents of a\r\n * given Key object.\r\n * <pre>\r\n *  interface KeyAlgorithm {\r\n     *      readonly attribute DOMString name\r\n     *  };\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-algorithm-interface}\r\n * @class KeyAlgorithm\r\n * @param {DOMString} name The name of the algorithm used to generate the Key\r\n */\r\n\r\n/**\r\n * The type of a key. The recognized key type values are \"public\", \"private\"\r\n * and \"secret\". Opaque keying material, including that used for symmetric\r\n * algorithms, is represented by \"secret\", while keys used as part of asymmetric\r\n * algorithms composed of public/private keypairs will be either \"public\" or \"private\".\r\n * <pre>\r\n *  typedef DOMString KeyType;\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\r\n * @class KeyType\r\n */\r\n\r\n/**\r\n * Sequence of operation type that may be performed using a key. The recognized\r\n * key usage values are \"encrypt\", \"decrypt\", \"sign\", \"verify\", \"deriveKey\",\r\n * \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\r\n * <pre>\r\n *  typedef DOMString[] KeyUsages;\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\r\n * @class KeyUsages\r\n */\r\n\r\n/**\r\n * The Key object represents an opaque reference to keying material that is\r\n * managed by the user agent.<br>\r\n * This specification provides a uniform interface for many different kinds of\r\n * keying material managed by the user agent. This may include keys that have\r\n * been generated by the user agent, derived from other keys by the user agent,\r\n * imported to the user agent through user actions or using this API,\r\n * pre-provisioned within software or hardware to which the user agent has\r\n * access or made available to the user agent in other ways. The term key refers\r\n * broadly to any keying material including actual keys for cryptographic\r\n * operations and secret values obtained within key derivation or exchange operations.<br>\r\n * The Key object is not required to directly interface with the underlying key\r\n * storage mechanism, and may instead simply be a reference for the user agent\r\n * to understand how to obtain the keying material when needed, eg. when performing\r\n * a cryptographic operation.\r\n * <pre>\r\n *  interface Key {\r\n     *      readonly attribute KeyType type;\r\n     *      readonly attribute boolean extractable;\r\n     *      readonly attribute KeyAlgorithm algorithm;\r\n     *      readonly attribute KeyUsages usages;\r\n     *  };\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\r\n * @class Key\r\n * @param {KeyType} type The type of a key. The recognized key type values are \"public\", \"private\" and \"secret\".\r\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application.\r\n * @param {KeyAlgorithm} algorithm The Algorithm used to generate the key.\r\n * @param {KeyUsages} usages Key usage array: type of operation that may be performed using a key.\r\n */\r\n\r\n/**\r\n * The KeyPair interface represents an asymmetric key pair that is comprised of both public and private keys.\r\n * <pre>\r\n *  interface KeyPair {\r\n     *      readonly attribute Key publicKey;\r\n     *      readonly attribute Key privateKey;\r\n     *  };\r\n * </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#keypair}\r\n * @class KeyPair\r\n * @param {Key} privateKey Private key\r\n * @param {Key} publicKey Public key\r\n */\r\n\r\n/**\r\n * Specifies a serialization format for a key. The recognized key format values are:\r\n *  <ul>\r\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\r\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\r\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\r\n *      <li>'jwk' - The key is represented as JSON according to the JSON Web Key format.</li>\r\n *  </ul>\r\n *  <pre>\r\n *  typedef DOMString KeyFormat;\r\n *  </pre>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#key-interface}\r\n *  @class KeyFormat\r\n */\r\n\r\n/**\r\n * Binary data\r\n *  <pre>\r\n *  typedef (ArrayBuffer or ArrayBufferView) CryptoOperationData;\r\n *  </pre>\r\n * @class CryptoOperationData\r\n */\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n/**\r\n * DER-encoded ArrayBuffer or PEM-encoded DOMString constains ASN.1 object<br>\r\n * <pre>\r\n *  typedef (ArrayBuffer or DOMString) FormatedData;\r\n * </pre>\r\n * @class FormatedData\r\n */\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * The SubtleCrypto class provides low-level cryptographic primitives and algorithms.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface}\r\n *\r\n * @class SubtleCrypto\r\n */ // <editor-fold>\r\nexport function SubtleCrypto() {\r\n}\r\n\r\n/**\r\n * The encrypt method returns a new Promise object that will encrypt data\r\n * using the specified algorithm identifier with the supplied Key.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-encrypt}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *  </ul>\r\n *  For more information see {@link GostCipher}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method encrypt\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} key Key object\r\n * @param {CryptoOperationData} data Operation data\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.encrypt = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.encrypt(algorithm, key, data);\r\n\r\n        algorithm = normalize(algorithm, 'encrypt');\r\n        return execute(algorithm, 'encrypt',\r\n          [extractKey('encrypt', algorithm, key), data]);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The decrypt method returns a new Promise object that will decrypt data\r\n * using the specified algorithm identifier with the supplied Key.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-decrypt}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST 28147-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *      <li><b>GOST 28147-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *      <li><b>GOST 28147-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *      <li><b>GOST 28147-CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *      <li><b>GOST 28147-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *      <li><b>GOST R 34.12-ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *      <li><b>GOST R 34.12-CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *      <li><b>GOST R 34.12-OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *      <li><b>GOST R 34.12-CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *      <li><b>GOST R 34.12-CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostCipher}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method decrypt\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} key Key object\r\n * @param {CryptoOperationData} data Operation data\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.decrypt = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.decrypt(algorithm, key, data);\r\n\r\n        algorithm = normalize(algorithm, 'decrypt');\r\n        return execute(algorithm, 'decrypt',\r\n          [extractKey('decrypt', algorithm, key), data]);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The sign method returns a new Promise object that will sign data using\r\n * the specified algorithm identifier with the supplied Key.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-sign}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\r\n *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\r\n *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\r\n *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\r\n *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\r\n *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\r\n *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 43.12</li>\r\n *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\r\n *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method sign\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} key Key object\r\n * @param {CryptoOperationData} data Operation data\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.sign = function (algorithm, key, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.sign(algorithm, key, data);\r\n\r\n        algorithm = normalize(algorithm, 'sign');\r\n        var value = execute(algorithm, 'sign',\r\n          [extractKey('sign', algorithm, key), data]).then(function (data) {\r\n            if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\r\n                data = gostASN1Instance.GostSignature.encode(data);\r\n            }\r\n            return data;\r\n        });\r\n        return value;\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The verify method returns a new Promise object that will verify data\r\n * using the specified algorithm identifier with the supplied Key.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-verify}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-94</b> GOST Signature</li>\r\n *      <li><b>GOST R 34.10-94/GOST R 34.11-94</b> GOST Signature with Hash</li>\r\n *      <li><b>GOST R 34.10</b> ECGOST Signature</li>\r\n *      <li><b>GOST R 34.10/GOST R 34.11-94</b> ECGOST Signature with Old-Style Hash</li>\r\n *      <li><b>GOST R 34.10/GOST R 34.11</b> ECGOST Signature with Streebog Hash</li>\r\n *      <li><b>GOST 28147-MAC</b> MAC base on GOST 28147</li>\r\n *      <li><b>GOST R 34.12-MAC</b> MAC base on GOST R 34.12</li>\r\n *      <li><b>GOST R 34.11-HMAC</b> HMAC base on GOST 34.11</li>\r\n *      <li><b>SHA-HMAC</b> HMAC base on SHA</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method verify\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} key Key object\r\n * @param {CryptoOperationData} signature Signature data\r\n * @param {CryptoOperationData} data Operation data\r\n * @returns {Promise} Promise that resolves with boolean value of verification result\r\n */\r\nSubtleCrypto.prototype.verify = function (algorithm, key, signature, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.verify(algorithm, key, signature, data);\r\n\r\n        algorithm = normalize(algorithm, 'verify');\r\n        if (algorithm.procreator === 'SC' && algorithm.mode === 'SIGN') {\r\n            var obj = gostASN1Instance.GostSignature.decode(signature);\r\n            signature = { r: obj.r, s: obj.s };\r\n        }\r\n        return execute(algorithm, 'verify',\r\n          [extractKey('verify', algorithm, key), signature, data]);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The digest method returns a new Promise object that will digest data\r\n * using the specified algorithm identifier.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-digest}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.11-94</b> Old-Style GOST Hash</li>\r\n *      <li><b>GOST R 34.11</b> GOST Streebog Hash</li>\r\n *      <li><b>SHA</b> SHA Hash</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostDigest}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method digest\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {CryptoOperationData} data Operation data\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.digest = function (algorithm, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.digest(algorithm, data);\r\n\r\n        algorithm = normalize(algorithm, 'digest');\r\n        return execute(algorithm, 'digest', [data]);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The generateKey method returns a new Promise object that will key(s) using\r\n * the specified algorithm identifier. Key can be used in according with\r\n * KeyUsages sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\r\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-generateKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10</b> ECGOST Key Pairs</li>\r\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\r\n *      <li><b>GOST 28147-KW</b> Key for wrapping GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.12-KW</b> Key for wrapping GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\r\n *  Note: Generation key for GOST R 34.10-94 not supported.\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method generateKey\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\r\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\r\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\r\n * @returns {Promise} Promise that resolves with {@link Key} or {@link KeyPair} in according to key algorithm\r\n */\r\nSubtleCrypto.prototype.generateKey = function (algorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.generateKey(algorithm, extractable, keyUsages);\r\n\r\n        var privateAlgorithm = algorithm.privateKey,\r\n          publicAlgorithm = algorithm.publicKey;\r\n        algorithm = normalize(algorithm, 'generateKey');\r\n        if (privateAlgorithm)\r\n            privateAlgorithm = normalize(privateAlgorithm, 'generateKey');\r\n        else\r\n            privateAlgorithm = algorithm;\r\n        if (publicAlgorithm)\r\n            publicAlgorithm = normalize(publicAlgorithm, 'generateKey');\r\n        else\r\n            publicAlgorithm = algorithm;\r\n        return execute(algorithm, 'generateKey', []).then(function (data) {\r\n            if (data.publicKey && data.privateKey)\r\n                return convertKeyPair(publicAlgorithm, privateAlgorithm, extractable, keyUsages, data.publicKey, data.privateKey);\r\n            else\r\n                return convertKey(algorithm, extractable, keyUsages, data);\r\n        });\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The deriveKey method returns a new Promise object that will key(s) using\r\n * the specified algorithm identifier. Key can be used in according with\r\n * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\r\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\r\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\r\n *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\r\n *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign} and {@link GostDigest}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method deriveKey\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} baseKey Derivation key object\r\n * @param {AlgorithmIdentifier} derivedKeyType Derived key algorithm identifier\r\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\r\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\r\n * @returns {Promise} Promise that resolves with {@link Key}\r\n */\r\nSubtleCrypto.prototype.deriveKey = function (algorithm, baseKey,\r\n                                             derivedKeyType, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.deriveKey(algorithm, baseKey,\r\n              derivedKeyType, extractable, keyUsages);\r\n\r\n        algorithm = normalize(algorithm, 'deriveKey');\r\n        derivedKeyType = normalize(derivedKeyType, 'generateKey');\r\n        algorithm.keySize = derivedKeyType.keySize;\r\n        if (algorithm['public']) {\r\n            algorithm['public'].algorithm = normalize(algorithm['public'].algorithm);\r\n            algorithm['public'] = extractKey('deriveKey', algorithm, algorithm['public']);\r\n        }\r\n        return execute(algorithm, 'deriveKey', [extractKey('deriveKey', algorithm, baseKey)]).then(function (data) {\r\n            return convertKey(derivedKeyType, extractable, keyUsages, data);\r\n        });\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The deriveBits method returns length bits on baseKey using the\r\n * specified algorithm identifier.\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-deriveBits}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-DH</b> ECDH Key Agreement mode</li>\r\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PFXKDF</b> PFX Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-CPKDF</b> Password Based Key for CryptoPro Derivation Algorithm</li>\r\n *      <li><b>SHA-PBKDF2</b> Password Based Key for Derivation Algorithm</li>\r\n *      <li><b>SHA-PFXKDF</b> PFX Key for Derivation Algorithm</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign} and {@link GostDigest}\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method deriveBits\r\n * @instance\r\n * @param {AlgorithmIdentifier} algorithm Algorithm identifier\r\n * @param {Key} baseKey Derivation key object\r\n * @param {number} length Length bits\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.deriveBits = function (algorithm, baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.deriveBits(algorithm, baseKey, length);\r\n\r\n        algorithm = normalize(algorithm, 'deriveBits');\r\n        if (algorithm['public'])\r\n            algorithm['public'] = extractKey('deriveBits', algorithm, algorithm['public']);\r\n        return execute(algorithm, 'deriveBits', [extractKey('deriveBits', algorithm, baseKey), length]);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The importKey method returns a new Promise object that will key(s) using\r\n * the specified algorithm identifier. Key can be used in according with\r\n * KeyUsage sequence. The recognized key usage values are \"encrypt\", \"decrypt\",\r\n * \"sign\", \"verify\", \"deriveKey\", \"deriveBits\", \"wrapKey\" and \"unwrapKey\".<br><br>\r\n * Parameter keyData contains data in defined format.\r\n * The suppored key format values are:\r\n *  <ul>\r\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\r\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\r\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\r\n *  </ul>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-importKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\r\n *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\r\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\r\n *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12</b> Key for encryption GOST 34.12 modes</li>\r\n *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST 34.12 modes</li>\r\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method importKey\r\n * @instance\r\n * @param {KeyFormat} format Key format Format specifies a serialization format for a key\r\n * @param {CryptoOperationData} keyData\r\n * @param {AlgorithmIdentifier} algorithm Key algorithm identifier\r\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\r\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\r\n * @returns {Promise} Promise that resolves with {@link Key}\r\n */\r\nSubtleCrypto.prototype.importKey = function (format, keyData, algorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var type;\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(algorithm))\r\n            return rootCrypto.subtle.importKey(format, keyData, algorithm, extractable, keyUsages);\r\n\r\n        if (format === 'raw') {\r\n            algorithm = normalize(algorithm, 'importKey');\r\n            if (keyUsages && keyUsages.indexOf) {\r\n                var name = algorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\r\n                if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\r\n                    type = 'private';\r\n                else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\r\n                    type = 'public';\r\n            }\r\n            return keyData;\r\n        } else {\r\n            var key;\r\n            if (format === 'pkcs8')\r\n                key = gostASN1Instance.GostPrivateKeyInfo.decode(keyData).object;\r\n            else if (format === 'spki')\r\n                key = gostASN1Instance.GostSubjectPublicKeyInfo.decode(keyData).object;\r\n            else\r\n                throw new NotSupportedError('Key format not supported');\r\n\r\n            algorithm = normalize(key.algorithm, 'importKey');\r\n            type = key.type;\r\n            if (extractable !== false)\r\n                extractable = extractable || key.extractable;\r\n            if (keyUsages) {\r\n                for (var i = 0; i < keyUsages.length; i++) {\r\n                    if (key.usages.indexOf(keyUsages[i]) < 0)\r\n                        throw DataError('Key usage not valid for this key');\r\n                }\r\n            } else\r\n                keyUsages = key.usages;\r\n            var data = key.buffer, keySize = algorithm.keySize, dataLen = data.byteLength;\r\n            if (type === 'public' || keySize === dataLen)\r\n                return data;\r\n            else {\r\n                // Remove private key masks\r\n                if (dataLen % keySize > 0)\r\n                    throw new DataError('Invalid key size');\r\n                algorithm.mode = 'MASK';\r\n                algorithm.procreator = 'VN';\r\n                var chain = [];\r\n                for (var i = keySize; i < dataLen; i += keySize) {\r\n                    chain.push((function (mask) {\r\n                        return function (data) {\r\n                            return execute(algorithm, 'unwrapKey', [mask, data]).then(function (data) {\r\n                                var next = chain.pop();\r\n                                if (next)\r\n                                    return next(data);\r\n                                else {\r\n                                    delete algorithm.mode;\r\n                                    return data;\r\n                                }\r\n                            });\r\n                        };\r\n                    })(new Uint8Array(data, i, keySize)));\r\n                }\r\n                return chain.pop()(new Uint8Array(data, 0, keySize));\r\n            }\r\n        }\r\n    }).then(function (data) {\r\n        return convertKey(algorithm, extractable, keyUsages, data, type);\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The exportKey method returns a new Promise object that will key data in\r\n * defined format. <br><br>\r\n * The suppored key format values are:\r\n *  <ul>\r\n *      <li>'raw' - An unformatted sequence of bytes. Intended for secret keys.</li>\r\n *      <li>'pkcs8' - The DER encoding of the PrivateKeyInfo structure from RFC 5208.</li>\r\n *      <li>'spki' - The DER encoding of the SubjectPublicKeyInfo structure from RFC 5280.</li>\r\n *  </ul>\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-exportKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST R 34.10-94</b> GOST Private and Public keys</li>\r\n *      <li><b>GOST R 34.10</b> ECGOST Private and Public keys</li>\r\n *      <li><b>GOST 28147</b> Key for encryption GOST 28147 modes</li>\r\n *      <li><b>GOST 28147-KW</b> Key for key wrapping GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12</b> Key for encryption GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.12-KW</b> Key for key wrapping GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.11-KDF</b> Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\r\n *      <li><b>GOST R 34.11-CPKDF</b> Import Password Key for CryptoPro Derivation Algorithm</li>\r\n *      <li><b>SHA-PBKDF2</b> Import Password for Key for Derivation Algorithm</li>\r\n *      <li><b>SHA-PFXKDF</b> Import PFX Key for Derivation Algorithm</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostSign}, {@link GostDigest} and {@link GostCipher}<br>\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method exportKey\r\n * @instance\r\n * @param {KeyFormat} format Format specifies a serialization format for a key\r\n * @param {Key} key Key object\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.exportKey = function (format, key) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (key && checkNative(key.algorithm))\r\n            return rootCrypto.subtle.exportKey(format, key);\r\n\r\n        if (!key.extractable)\r\n            throw new InvalidAccessError('Key not extractable');\r\n\r\n        var raw = extractKey(null, null, key);\r\n        if (format === 'raw')\r\n            return raw;\r\n        else if (format === 'pkcs8' && key.algorithm && key.algorithm.id) {\r\n            if (key.algorithm.procreator === 'VN') {\r\n                // Add masks for ViPNet\r\n                var algorithm = key.algorithm, mask;\r\n                algorithm.mode = 'MASK';\r\n                return execute(algorithm, 'generateKey').then(function (data) {\r\n                    mask = data;\r\n                    return execute(algorithm, 'wrapKey', [mask, key.buffer]);\r\n                }).then(function (data) {\r\n                    delete algorithm.mode;\r\n                    var d = new Uint8Array(data.byteLength + mask.byteLength);\r\n                    d.set(new Uint8Array(data, 0, data.byteLength));\r\n                    d.set(new Uint8Array(mask, 0, mask.byteLength), data.byteLength);\r\n                    var buffer = d.buffer;\r\n                    buffer.enclosed = true;\r\n                    return gostASN1Instance.GostPrivateKeyInfo.encode({\r\n                        algorithm: algorithm,\r\n                        buffer: buffer\r\n                    });\r\n                });\r\n            } else\r\n                return gostASN1Instance.GostPrivateKeyInfo.encode(key);\r\n        } else if (format === 'spki' && key.algorithm && key.algorithm.id)\r\n            return gostASN1Instance.GostSubjectPublicKeyInfo.encode(key);\r\n        else\r\n            throw new NotSupportedError('Key format not supported');\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The wrapKey method returns a new Promise object that will wrapped key(s).\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-wrapKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\r\n *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostCipher}<br>\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method wrapKey\r\n * @instance\r\n * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\r\n * @param {Key} key Key object\r\n * @param {Key} wrappingKey Wrapping key object\r\n * @param {AlgorithmIdentifier} wrapAlgorithm Algorithm identifier\r\n * @returns {Promise} Promise that resolves with {@link CryptoOperationData}\r\n */\r\nSubtleCrypto.prototype.wrapKey = function (format, key, wrappingKey, wrapAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(wrapAlgorithm))\r\n            return rootCrypto.subtle.wrapKey(format, key, wrappingKey, wrapAlgorithm);\r\n\r\n        wrapAlgorithm = normalize(wrapAlgorithm, 'wrapKey');\r\n        var keyData = extractKey(null, null, key);\r\n        if (wrapAlgorithm.procreator === 'SC' && key.type === 'private')\r\n            keyData = swapBytes(keyData);\r\n        return execute(wrapAlgorithm, 'wrapKey',\r\n          [extractKey('wrapKey', wrapAlgorithm, wrappingKey), keyData]).then(function (data) {\r\n            if (format === 'raw')\r\n                return data;\r\n            else\r\n                throw new NotSupportedError('Key format not supported');\r\n        });\r\n    });\r\n}; // </editor-fold>\r\n\r\n/**\r\n * The unwrapKey method returns a new Promise object that will unwrapped key(s).\r\n * WebCrypto API reference {@link http://www.w3.org/TR/WebCryptoAPI/#SubtleCrypto-method-unwrapKey}<br><br>\r\n *\r\n * Supported algorithm names:\r\n *  <ul>\r\n *      <li><b>GOST 28147-KW</b> Key Wrapping GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12-KW</b> Key Wrapping GOST R 34.12 modes</li>\r\n *      <li><b>GOST 28147-MASK</b> Key Mask GOST 28147 modes</li>\r\n *      <li><b>GOST R 34.12-MASK</b> Key Mask GOST R 34.12 modes</li>\r\n *      <li><b>GOST R 34.10-MASK</b> Key Mask GOST R 34.10 modes</li>\r\n *  </ul>\r\n *  For additional modes see {@link GostCipher}<br>\r\n *\r\n * @memberOf SubtleCrypto\r\n * @method unwrapKey\r\n * @instance\r\n * @param {KeyFormat} format Format specifies a serialization format for a key. Now suppored only 'raw' key format.\r\n * @param {CryptoOperationData} wrappedKey Wrapped key data\r\n * @param {Key} unwrappingKey Unwrapping key object\r\n * @param {AlgorithmIdentifier} unwrapAlgorithm Algorithm identifier\r\n * @param {AlgorithmIdentifier} unwrappedKeyAlgorithm Key algorithm identifier\r\n * @param {boolean} extractable Whether or not the raw keying material may be exported by the application\r\n * @param {KeyUsages} keyUsages Key usage array: type of operation that may be performed using a key\r\n * @returns {Promise} Promise that resolves with {@link Key}\r\n */\r\nSubtleCrypto.prototype.unwrapKey = function (format, wrappedKey, unwrappingKey,\r\n                                             unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Promise(call).then(function () {\r\n        if (checkNative(unwrapAlgorithm))\r\n            return rootCrypto.subtle.unwrapKey(format, wrappedKey, unwrappingKey,\r\n              unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages);\r\n\r\n        unwrapAlgorithm = normalize(unwrapAlgorithm, 'unwrapKey');\r\n        unwrappedKeyAlgorithm = normalize(unwrappedKeyAlgorithm, 'importKey');\r\n        if (format !== 'raw')\r\n            throw new NotSupportedError('Key format not supported');\r\n\r\n        return execute(unwrapAlgorithm, 'unwrapKey', [extractKey('unwrapKey', unwrapAlgorithm, unwrappingKey), wrappedKey]).then(function (data) {\r\n            var type;\r\n            if (unwrappedKeyAlgorithm && unwrappedKeyAlgorithm.name) {\r\n                var name = unwrappedKeyAlgorithm.name.toUpperCase().replace(/[\\.\\s]/g, '');\r\n                if (name.indexOf('3410') >= 0 && keyUsages.indexOf('sign') >= 0)\r\n                    type = 'private';\r\n                else if (name.indexOf('3410') >= 0 && keyUsages.indexOf('verify') >= 0)\r\n                    type = 'public';\r\n            }\r\n            if (unwrapAlgorithm.procreator === 'SC' && type === 'private')\r\n                data = swapBytes(data);\r\n            return convertKey(unwrappedKeyAlgorithm, extractable, keyUsages, data, type);\r\n        });\r\n    });\r\n}; // </editor-fold>\r\n\r\nexport const gostSubtleInstance = new SubtleCrypto();\r\n","module.exports = require(\"crypto\");","/**\r\n * @file Provides facilities for handling certificates, CRLs, etc.\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { gostCrypto } from './gostCrypto';\r\nimport { gostSecurityInstance } from './gostSecurity';\r\nimport { gostCodingInstance } from './gostCoding';\r\nimport { gostASN1Instance } from './gostASN1';\r\nimport { gostSubtleInstance } from './gostSubtle';\r\n\r\n/*\r\n * Common algorithms\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n// Coding\r\nvar coding = gostCodingInstance;\r\n\r\n// Providers\r\nvar providers = gostSecurityInstance.providers;\r\n\r\n// ASN.1 syntax\r\nvar asn1 = gostASN1Instance;\r\n\r\n// Crypto subtle\r\nvar subtle = gostSubtleInstance;\r\n\r\n// Expand javascript object\r\nfunction expand(r) {\r\n    for (var i = 1, n = arguments.length; i < n; i++) {\r\n        var item = arguments[i];\r\n        if (typeof item === 'object')\r\n            for (var name in item)\r\n                if (item.hasOwnProperty(name))\r\n                    r[name] = item[name];\r\n    }\r\n    return r;\r\n}\r\n\r\n// Extend javascript class\r\nfunction extend(Class) {\r\n    var F = function () {\r\n    };\r\n    F.prototype = Class.prototype;\r\n    var r = new F, args = [r];\r\n    for (var i = 1; i < arguments.length; i++)\r\n        args.push(arguments[i]);\r\n    return expand.apply(this, args);\r\n}\r\n\r\n// Today date + n days\r\nfunction today(n) {\r\n    var date = new Date();\r\n    date.setHours(0, 0, 0, 0);\r\n    if (n)\r\n        date.setDate(date.getDate() + n);\r\n    return date;\r\n}\r\n\r\n// Self resolver\r\nfunction call(callback) {\r\n    try {\r\n        callback();\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n// Serial number\r\nfunction genSerialNumber() {\r\n    var seed = new Uint8Array(4);\r\n    gostCrypto.getRandomValues(seed);\r\n    seed[0] = seed[0] & 0x7f;\r\n    return coding.Int16.encode(seed);\r\n}\r\n\r\n// True if equal numbers\r\nvar equalNumbers = (function () {\r\n    // Convert number to bigendian hex string\r\n    var hex = function (s) {\r\n        var t = typeof s;\r\n        return t === 'undefined' || s === '' ? '0' :\r\n          t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\r\n            s.replace('0x', '').toLowerCase();\r\n    };\r\n    // Zero left padding\r\n    var lpad = function (s, size) {\r\n        return (new Array(size + 1).join('0') + s).slice(-size);\r\n    };\r\n    return function (s1, s2) {\r\n        s1 = hex(s1);\r\n        s2 = hex(s2);\r\n        var len = Math.max(s1.length, s2.length);\r\n        return lpad(s1, len) === lpad(s2, len);\r\n    };\r\n})();\r\n\r\n// Check equal names\r\nfunction equalNames(name1, name2) {\r\n    for (var key in name1)\r\n        if (name1[key] !== name2[key])\r\n            return false;\r\n    for (var key in name2)\r\n        if (name1[key] !== name2[key])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n// Check the buffers to equal\r\nfunction equalBuffers(r1, r2) {\r\n    var s1 = new Uint8Array(r1),\r\n      s2 = new Uint8Array(r2);\r\n    if (s1.length !== s2.length)\r\n        return false;\r\n    for (var i = 0, n = s1.length; i < n; i++)\r\n        if (s1[i] !== s2[i])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n// Match certificate\r\nfunction matchCertificate(cert, selector) {\r\n    var skid = cert.extensions && cert.extensions.subjectKeyIdentifier;\r\n    return (cert && selector &&\r\n      (!selector.issuer || equalNames(cert.issuer, selector.issuer)) &&\r\n      (!selector.serialNumber || equalNumbers(cert.serialNumber, selector.serialNumber)) &&\r\n      (!selector.subjectKeyIdentifier || equalBuffers(skid, selector.subjectKeyIdentifier)) &&\r\n      (!selector.subject || equalNames(cert.subject, selector.subject)) &&\r\n      (!selector.date || (cert.notBefore.getTime() <= selector.date.getTime() &&\r\n        cert.notAfter.getTime() > selector.date.getTime())));\r\n}\r\n\r\n// Create authority certificate selector\r\nfunction authoritySelector(cert, extensions, date) {\r\n    var selector = { subject: cert.issuer, date: date },\r\n      akid = extensions && extensions.authorityKeyIdentifier;\r\n    if (akid) {\r\n        selector.subjectKeyIdentifier = akid.keyIdentifier;\r\n        if (akid.authorityCertIssuer && akid.authorityCertIssuer[0] &&\r\n          akid.authorityCertSerialNumber) {\r\n            selector.issuer = akid.authorityCertIssuer[0];\r\n            selector.serialNumber = akid.authorityCertSerialNumber;\r\n        }\r\n    }\r\n    return selector;\r\n}\r\n\r\n// Find certificates\r\nfunction selectCertificates(certs, selector) {\r\n    var result = [];\r\n    for (var i = 0, n = certs.length; i < n; i++)\r\n        if (matchCertificate(certs[i], selector))\r\n            result.push(certs[i]);\r\n    return result;\r\n}\r\n\r\n// Match CRL\r\nfunction matchCRL(crl, selector) {\r\n    return ((!selector.issuer || equalNames(crl.issuer, selector.issuer)) &&\r\n      (!selector.date || (crl.thisUpdate.getTime() < selector.date.getTime())));\r\n}\r\n\r\n// Find certificates\r\nfunction selectCRLs(crls, selector) {\r\n    var result = [];\r\n    for (var i = 0, n = crls.length; i < n; i++)\r\n        if (matchCRL(crls[i], selector))\r\n            result.push(crls[i]);\r\n    return result;\r\n}\r\n\r\n// Define provider for key algorithm\r\nfunction keyProvider(algorithm) {\r\n    var id = algorithm.id;\r\n    for (var name in providers) {\r\n        var provider = providers[name];\r\n        if (provider.publicKey.id === id)\r\n            return provider;\r\n    }\r\n}\r\n\r\nfunction defineProperty(object, name, descriptor, enumerable) {\r\n    if (typeof descriptor !== 'object')\r\n        descriptor = { value: descriptor };\r\n    if (enumerable !== undefined)\r\n        descriptor.enumerable = enumerable;\r\n    Object.defineProperty(object, name, descriptor);\r\n}\r\n\r\nfunction defineProperties(object, properties, enumerable) {\r\n    for (var name in properties)\r\n        defineProperty(object, name, properties[name], enumerable);\r\n}\r\n\r\n// Extend javascript class\r\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\r\n    // If constructor not defined\r\n    if (typeof Class !== 'function') {\r\n        propertiesClass = propertiesObject;\r\n        propertiesObject = Class;\r\n        Class = function () {\r\n            Super.apply(this, arguments);\r\n        };\r\n    }\r\n    // Create prototype properties\r\n    Class.prototype = Object.create(Super.prototype, {\r\n        constructor: {\r\n            value: Class\r\n        },\r\n        superclass: {\r\n            value: Super.prototype\r\n        }\r\n    });\r\n    if (propertiesObject)\r\n        defineProperties(Class.prototype, propertiesObject, true);\r\n    // Inherites super class properties\r\n    if (Super !== Object)\r\n        for (var name in Super)\r\n            Class[name] = Super[name];\r\n    Class.super = Super;\r\n    if (propertiesClass)\r\n        defineProperties(Class, propertiesClass, true);\r\n    return Class;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Provides facilities for handling certificates, CRLs, etc.\r\n *\r\n * @class GostCert\r\n */\r\nexport function GostCert() {\r\n}\r\n\r\n/**\r\n * Certificate templates\r\n * <ul>\r\n *      <li>providerName - provider name for key generation, default 'CP-01'</li>\r\n *      <li>subject - template of subject name {countryName: 'RU', commonName: 'Anonymous'}</li>\r\n *      <li>caKeyUsage - default key usages for a CA certificates\r\n *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\r\n *          'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign']</li>\r\n *      <li>caExtKeyUsage - default extended key usages for a CA certificates\r\n *          ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\r\n *          'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning']</li>\r\n *      <li>userKeyUsage - default key usages for a user certificate\r\n *          ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\r\n *      <li>userExtKeyUsage - default extended key usages for user certificate\r\n *          ['clientAuth', 'emailProtection']</li>\r\n *      <li>days - validity of the certificate in days, default 7305</li>\r\n * </ul>\r\n *\r\n * @memberOf GostCert\r\n * @instance\r\n */\r\nvar options = {// <editor-fold defaultstate=\"collapsed\">\r\n    providerName: 'CP-01',\r\n    subject: { countryName: 'RU', commonName: 'Anonymous' },\r\n    caKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment',\r\n        'dataEncipherment', 'keyAgreement', 'keyCertSign', 'cRLSign'],\r\n    caExtKeyUsage: ['serverAuth', 'clientAuth', 'codeSigning', 'emailProtection', 'ipsecEndSystem',\r\n        'ipsecTunnel', 'ipsecUser', 'timeStamping', 'OCSPSigning'],\r\n    userKeyUsage: ['digitalSignature', 'nonRepudiation', 'keyEncipherment', 'dataEncipherment', 'keyAgreement'],\r\n    userExtKeyUsage: ['clientAuth', 'emailProtection'],\r\n    days: 7305 // </editor-fold>\r\n};\r\n\r\nGostCert.prototype.options = options;\r\n\r\n/**\r\n * This class encapsulates X.509 Version 3 certificates.<br><br>\r\n *\r\n * Constructs an X.509 certificate from the given DER encoding or ASN.1 Certificate object.\r\n *\r\n * @class GostCert.X509\r\n * @extends GostASN1.Certificate\r\n * @param {(FormatedData|GostASN1.Certificate)} cert The certificate\r\n */\r\nvar X509 = function (cert) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    try {\r\n        // Try to use decode X.509 certificate\r\n        asn1.Certificate.call(this, cert, true);\r\n    } catch (e) {\r\n        try {\r\n            // Try to decode certification request\r\n            cert = new asn1.CertificationRequest(cert, true);\r\n        } catch (e) {\r\n        }\r\n        // Create new certificate structure\r\n        cert = cert || {};\r\n        asn1.Certificate.call(this, {\r\n            version: 2,\r\n            serialNumber: cert.serialNumber || genSerialNumber(),\r\n            signature: cert.signature || { id: 'noSignature' },\r\n            issuer: cert.subject || options.subject,\r\n            notBefore: cert.notBefore || today(),\r\n            notAfter: cert.notAfter ||\r\n            today(cert.days || options.days),\r\n            subject: cert.subject || options.subject,\r\n            subjectPublicKeyInfo: cert.subjectPublicKeyInfo || {\r\n                algorithm: { id: 'noSignature' },\r\n                subjectPublicKey: new CryptoOperationData(0)\r\n            },\r\n            extensions: (cert.attributes && (cert.attributes.extensionRequest ||\r\n              cert.attributes.msCertExtensions)) || cert.extensions,\r\n            signatureAlgorithm: { id: 'noSignature' },\r\n            signatureValue: new CryptoOperationData(0)\r\n        });\r\n    }\r\n}; // </editor-fold>\r\n\r\nextend(asn1.Certificate, X509, {\r\n    /**\r\n     * Generate the contents of this certificate and sign it.<br><br>\r\n     *\r\n     * If issuerCertificate is not defined self signed certificate generated\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey The issuer's private key\r\n     * @param {GostCert.X509} issuerCertificate The issuer's certificate or undefined for self-signed certificate\r\n     * @returns {Promise} Promise to return self object after sign the certificate\r\n     */\r\n    sign: function (issuerPrivateKey, issuerCertificate) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n\r\n        var self = this, spki = self.subjectPublicKeyInfo;\r\n        return new Promise(call).then(function () {\r\n\r\n            // Need generated key\r\n            if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\r\n                throw new Error('Key pair was not generated for the certificate');\r\n            // Check issuer private key\r\n            if (!issuerPrivateKey)\r\n                throw new Error('The private key of the issuer is not defined');\r\n\r\n            // Certificate can be self signed\r\n            issuerCertificate = issuerCertificate || self;\r\n\r\n            // Calculate subject key indentifier\r\n            return subtle.digest('SHA-1', spki.subjectPublicKey);\r\n        }).then(function (digest) {\r\n\r\n            // Signature algorithm\r\n            var provider = issuerCertificate.getProvider() || providers[options.providerName];\r\n            if (!self.signature || self.signature.id === 'noSignature')\r\n                self.signature = provider.signature;\r\n            self.signatureAlgorithm = self.signature;\r\n\r\n            // Set issuer\r\n            self.issuer = issuerCertificate.subject;\r\n            // Set default extensions\r\n            if (!self.extensions)\r\n                self.extensions = {};\r\n            var exts = self.extensions, ae = issuerCertificate.extensions;\r\n            if (self === issuerCertificate) { // Self-signed CA certificate\r\n                // Set key usage\r\n                exts.keyUsage = exts.keyUsage || options.caKeyUsage;\r\n                exts.extKeyUsage = exts.extKeyUsage || options.caExtKeyUsage;\r\n                // Set basic constraints\r\n                exts.basicConstraints = exts.basicConstraints || { cA: true };\r\n            } else {\r\n                // Check key usage and validity\r\n                if (!issuerCertificate.checkUsage('keyCertSign', self.notBefore))\r\n                    throw new Error('The issuer\\'s certificate is not valid for signing a certificate');\r\n\r\n                // Set key usage\r\n                exts.keyUsage = exts.keyUsage || options.userKeyUsage;\r\n                exts.extKeyUsage = exts.extKeyUsage || options.userExtKeyUsage;\r\n                // Set basic constraints\r\n                exts.basicConstraints = exts.basicConstraints || {\r\n                    cA: exts.keyUsage.indexOf('keyCertSign') >= 0\r\n                };\r\n                // Check path length constraint\r\n                if (exts.basicConstraints.cA) {\r\n                    var pathLen = ae && ae.basicConstraints && ae.pathLenConstraint;\r\n                    if (pathLen !== undefined) {\r\n                        if (pathLen > 0)\r\n                            exts.basicConstraints.pathLenConstraint = pathLen - 1;\r\n                        else\r\n                            throw new Error('Path length constraint exceeded');\r\n                    }\r\n                }\r\n            }\r\n            // Subject key identifier 160 bit from public key hash\r\n            exts.subjectKeyIdentifier = digest;\r\n            // Authority key identifier\r\n            if (ae && ae.subjectKeyIdentifier)\r\n                exts.authorityKeyIdentifier = {\r\n                    keyIdentifier: ae.subjectKeyIdentifier,\r\n                    authorityCertIssuer: [issuerCertificate.issuer],\r\n                    authorityCertSerialNumber: issuerCertificate.serialNumber\r\n                };\r\n\r\n            // Import the private key\r\n            return subtle.importKey('pkcs8', issuerPrivateKey.encode(), issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\r\n        }).then(function (key) {\r\n\r\n            // Sign certificate\r\n            return subtle.sign(self.signatureAlgorithm, key, self.tbsCertificate.encode());\r\n        }).then(function (signatureValue) {\r\n            // Siganture value\r\n            self.signatureValue = signatureValue;\r\n\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate key pair for certificate\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The key algorithm or name of provider\r\n     * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after self-signed certificate generation\r\n     */\r\n    generate: function (keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, privateKey, provider;\r\n        if (keyAlgorithm)\r\n            provider = providers[keyAlgorithm];\r\n        else\r\n            provider = this.getProvider() || providers[options.providerName];\r\n        if (provider)\r\n            keyAlgorithm = expand(provider.publicKey, { privateKey: provider.privateKey });\r\n\r\n        return new Promise(call).then(function () {\r\n\r\n            // Generate key pair\r\n            return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\r\n        }).then(function (keyPair) {\r\n            privateKey = keyPair.privateKey;\r\n\r\n            // Export public key\r\n            return subtle.exportKey('spki', keyPair.publicKey);\r\n        }).then(function (spki) {\r\n            self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\r\n\r\n            return subtle.exportKey('pkcs8', privateKey);\r\n        }).then(function (pkcs8) {\r\n\r\n            return new asn1.PrivateKeyInfo(pkcs8);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Gets the public key.\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @returns {Promise} Promise to return {@link Key}\r\n     */\r\n    getPublicKey: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var spki = this.subjectPublicKeyInfo,\r\n          keyUsages = (spki.algorithm.id === 'rsaEncryption') ? ['verify'] :\r\n            ['verify', 'deriveKey', 'deriveBits'];\r\n        return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', keyUsages);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get appropriate crypto provider for public key\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @returns Object Set of crypto provider algorithms\r\n     */\r\n    getProvider: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return keyProvider(this.subjectPublicKeyInfo.algorithm);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Verifies this certificate.<br><br>\r\n     *\r\n     * More precisely:<br><br>\r\n     * <ul>\r\n     *      <li>Verifies that the current VM date/time is within the validity period of the certificate.</li>\r\n     *      <li>If an unrecognized critical extension is present, the certificate is rejected.</li>\r\n     *      <li>If the issuer certificate has been set, verifies that the signing certificate is a\r\n     *          CA certificate, and that the signature is correct. The signing certificate is considered\r\n     *          to be a CA certificate unless one of the following two conditions hold: The signing\r\n     *          certificate contains a basicConstraints extension, and the CA flag is false; or the\r\n     *          signing certificate contains a keyUsage extension, the keyUsage extension is marked\r\n     *          critical, and the keyCertSign bit is false.</li>\r\n     *      <li>If the issuer CRL has been set, verifies that the certificate has not been revoked.</li>\r\n     * </ul>\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @param {GostCert.X509} issuerCertificate The issuer X.509 certificate\r\n     * @param {GostCert.CRL} issuerCRL The issuer CRL\r\n     * @param {Date} date Validation date. Default current date\r\n     * @returns {Promise} Promise to return self object if the certificate is valid\r\n     */\r\n    verify: function (issuerCertificate, issuerCRL, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, exts = self.extensions;\r\n        return new Promise(call).then(function () {\r\n            // Current date\r\n            date = date || today();\r\n            if (self.notBefore.getTime() > date.getTime() ||\r\n              self.notAfter.getTime() <= date.getTime())\r\n                throw new Error('The certificate has not yet started or expired');\r\n            // A unrecognized critical extensions\r\n            for (var name in exts) {\r\n                var value = exts[name];\r\n                if (value.critical &&\r\n                  ['authorityKeyIdentifier', 'subjectKeyIdentifier', 'keyUsage', 'certificatePolicies',\r\n                      'policyMappings', 'basicConstraints', 'nameConstraints', 'policyConstraints',\r\n                      'extKeyUsage'].indexOf(name) < 0)\r\n                    throw new Error('The critical extension \\'' + name + '\\' is unrecognized');\r\n            }\r\n            // The certificate can be self-signed\r\n            var selector = authoritySelector(self, exts, self.notBefore);\r\n            if (!issuerCertificate && matchCertificate(self, selector))\r\n                issuerCertificate = self;\r\n            // Check issuer\r\n            if (issuerCertificate) {\r\n                if (!matchCertificate(issuerCertificate, selector) ||\r\n                  !issuerCertificate.checkUsage('keyCertSign', self.notBefore))\r\n                    throw new Error('The issuer\\'s certificate is not valid');\r\n                // Check certificate signature\r\n                return issuerCertificate.verifySignature(self.tbsCertificate.encode(),\r\n                  self.signatureValue, self.signatureAlgorithm);\r\n            }\r\n            return true;\r\n        }).then(function (result) {\r\n            if (!result)\r\n                throw new Error('The certificate has invalid signature');\r\n            // Check CRL\r\n            if (issuerCRL) {\r\n                if (!matchCRL(issuerCRL, { issuer: self.issuer, date: date }))\r\n                    throw new Error('The issuer\\'s CRL is not valid');\r\n                if (issuerCRL.isRevoked(self.serialNumber))\r\n                    throw new Error('The certificate is revoked');\r\n            }\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Verify a signature made with this certificate's public key.\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @param {CryptoOperationData} data The signed document.\r\n     * @param {CryptoOperationData} signature The signature\r\n     * @param {AlgorithmIdentifier} algorithm The algorithm ID used for the signature.\r\n     * @returns {Promise} Promise to return true if the signature is verified, and false otherwise\r\n     */\r\n    verifySignature: function (data, signature, algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return this.getPublicKey().then(function (publicKey) {\r\n            return subtle.verify(algorithm, publicKey, signature, data);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Check key usage and date validation\r\n     *\r\n     * @memberOf GostCert.X509\r\n     * @instance\r\n     * @param {DOMString} operation The operation\r\n     * @param {Date} date Operation date. Default current date\r\n     * @returns {boolean}\r\n     */\r\n    checkUsage: function (operation, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, exts = self.extensions;\r\n        date = date || today();\r\n        return (self.notBefore.getTime() <= date.getTime() && self.notAfter.getTime() > date.getTime()) &&\r\n          (!exts || !((['keyCertSign', 'cRLSign'].indexOf(operation) > 0 && exts.basicConstraints && !exts.basicConstraints.cA) ||\r\n            ((exts.keyUsage && exts.keyUsage.indexOf(operation) < 0) && (exts.extKeyUsage && exts.extKeyUsage.indexOf(operation) < 0))));\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates X.509 Version 3 certificates.\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.X509\r\n */\r\nGostCert.prototype.X509 = X509;\r\n\r\n/**\r\n * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.<br><br>\r\n *\r\n * Note: the methods and constructors that input a CRL do not automatically verify it.\r\n * You need to explicitly call the verify method.\r\n *\r\n * @class GostCert.CRL\r\n * @extends GostASN1.CertificateList\r\n * @param {(FormatedData|GostASN1.CertificateList)} crl\r\n */\r\nvar CRL = function (crl) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // Call super\r\n    CRL.super.call(this, crl);\r\n    // Initialize defaults\r\n    if (!this.version)\r\n        this.version = 1;\r\n    if (!this.revokedCertificates)\r\n        this.revokedCertificates = [];\r\n    if (!this.thisUpdate)\r\n        this.thisUpdate = today();\r\n}; // </editor-fold>\r\n\r\nextend(asn1.CertificateList, CRL, {\r\n    /**\r\n     * Signs this CRL. The issuer's private key has to be set. The default random number generator is used, if needed.<br><br>\r\n     *\r\n     * Note: Making any modifications to the contents of the CRL after signing invalidates the signature.\r\n     * The sign method must be invoked again after any modifications for a valid signature to be computed.\r\n     *\r\n     * @memberOf GostCert.CRL\r\n     * @instance\r\n     * @param {GostASN1.PrivateKeyInfo} issuerPrivateKey the issuer's private signing key\r\n     * @param {GostCert.X509} issuerCertificate the issuer's certificate\r\n     * @returns {Promise} Promise to return self object after sign the CRL\r\n     */\r\n    sign: function (issuerPrivateKey, issuerCertificate) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Check issuer private key\r\n            if (!issuerPrivateKey)\r\n                throw new Error('The issuer\\'s private key is not defined');\r\n            // Check issuer certificate\r\n            if (!issuerCertificate)\r\n                throw new Error('The issuer\\'s certificate is not defined');\r\n            // Check issuer name\r\n            if (!self.issuer)\r\n                self.issuer = issuerCertificate.issuer;\r\n            else if (!equalNames(self.issuer, issuerCertificate.issuer))\r\n                throw new Error('The CRL prototype and authority certificate have different issuers');\r\n            // Check key usage and validity\r\n            if (!issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\r\n                throw new Error('The issuer\\'s certificate is not valid for signing a CRL');\r\n\r\n            // Signature algorithm\r\n            var provider = issuerCertificate.getProvider() || providers[options.providerName];\r\n            if (!self.signature)\r\n                self.signature = provider.signature;\r\n            self.signatureAlgorithm = self.signature;\r\n\r\n            // Set issuer\r\n            self.issuer = issuerCertificate.subject;\r\n            // Set default extensions\r\n            if (!self.crlExtensions)\r\n                self.crlExtensions = {};\r\n            var exts = self.crlExtensions,\r\n              ae = issuerCertificate.extensions;\r\n            if (ae && ae.subjectKeyIdentifier)\r\n                exts.authorityKeyIdentifier = {\r\n                    keyIdentifier: ae.subjectKeyIdentifier,\r\n                    authorityCertIssuer: [issuerCertificate.issuer],\r\n                    authorityCertSerialNumber: issuerCertificate.serialNumber\r\n                };\r\n            exts.cRLNumber = exts.cRLNumber || 0;\r\n\r\n            // Import the private key\r\n            return subtle.importKey('pkcs8', issuerPrivateKey.encode(),\r\n              issuerPrivateKey.privateKeyAlgorithm, false, ['sign']);\r\n        }).then(function (key) {\r\n\r\n            // Sign CRL\r\n            return subtle.sign(self.signatureAlgorithm, key, self.tbsCertList.encode());\r\n        }).then(function (signatureValue) {\r\n\r\n            // Siganture value\r\n            self.signatureValue = signatureValue;\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Verify the CRL. Checks the date and signature if issuer's certifiate has been defined.\r\n     *\r\n     * @memberOf GostCert.CRL\r\n     * @instance\r\n     * @param {GostCert.X509} issuerCertificate the issuer's certificate\r\n     * @param {Date} date Validation date. Default current date\r\n     * @returns {Promise} Promise to return self object if the certificate is valid\r\n     */\r\n    verify: function (issuerCertificate, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, exts = self.crlExtensions;\r\n        return new Promise(call).then(function () {\r\n            // Current date\r\n            date = date || today();\r\n            if (!self.thisUpdate.getTime() > date.getTime())\r\n                throw new Error('The CRL has not yet started');\r\n            // Check issuer\r\n            if (issuerCertificate) {\r\n                if (!matchCertificate(issuerCertificate, authoritySelector(self, exts, self.thisUpdate)) ||\r\n                  !issuerCertificate.checkUsage('cRLSign', self.thisUpdate))\r\n                    throw new Error('The issuer\\'s certificate is not valid');\r\n                if (!self.signatureValue || !self.signatureAlgorithm)\r\n                    throw new Error('The has no signature');\r\n                // Check CRL signature\r\n                return issuerCertificate.verifySignature(self.tbsCertList.encode(),\r\n                  self.signatureValue, self.signatureAlgorithm);\r\n            }\r\n        }).then(function (result) {\r\n            if (!result)\r\n                throw new Error('The CRL has invalid signature');\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Checks whether this certificate serial number is on the list.\r\n     *\r\n     * @memberOf GostCert.CRL\r\n     * @instance\r\n     * @param {Number} serialNumber the issuer's certificate\r\n     * @param {Date} date Validation date. Default current date\r\n     * @returns {boolean} True if the certificate is valid, and false otherwise\r\n     */\r\n    isRevoked: function (serialNumber, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var rc = this.revokedCertificates;\r\n        date = date || today();\r\n        for (var i = 0; i < rc.length; i++) {\r\n            // Check date and serial number\r\n            if (date.getTime() >= rc[i].revocationDate.getTime() &&\r\n              equalNumbers(rc[i].userCertificate, serialNumber))\r\n                return true;\r\n        }\r\n        return false;\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a X.509 certificate revocation list (CRL) of RevokedCertificate objects.\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.CRL\r\n */\r\nGostCert.prototype.CRL = CRL;\r\n\r\n/**\r\n * A class that encapsulates a DER-encoded PKCS #10 certificate request. The request contains\r\n * the subject's name and public key, and it is signed with the subject's private key.\r\n * The public key contained in the request is used to verify the signature.\r\n * The signature on the request is verified automatically when the request is read.\r\n * Note that the subject's private key is used only to produce a signature when the request is output,\r\n * and is not actually stored with the request.\r\n *\r\n * @class GostCert.Request\r\n * @extends GostASN1.CertificationRequest\r\n * @param {(FormatedData|GostASN1.CertificationRequest)} req\r\n */\r\nfunction Request(req) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    try {\r\n        // Try to use encode\r\n        asn1.CertificationRequest.call(this, req, true);\r\n    } catch (e) {\r\n        // Create new certificate structure\r\n        req = req || {};\r\n        asn1.CertificationRequest.call(this, {\r\n            version: 0,\r\n            subject: req.subject || options.subject,\r\n            subjectPublicKeyInfo: req.subjectPublicKeyInfo || {\r\n                algorithm: { id: 'noSignature' },\r\n                subjectPublicKey: new CryptoOperationData(0)\r\n            },\r\n            attributes: req.attributes || {\r\n                extensionRequest: {\r\n                    keyUsage: options.userKeyUsage,\r\n                    extKeyUsage: options.userExtKeyUsage\r\n                }\r\n            },\r\n            signatureAlgorithm: { id: 'noSignature' },\r\n            signatureValue: new CryptoOperationData(0)\r\n        });\r\n    }\r\n} // </editor-fold>\r\n\r\nextend(asn1.CertificationRequest, Request, {\r\n    /**\r\n     * Generate key pair and sign request\r\n     *\r\n     * @memberOf GostCert.Request\r\n     * @instance\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\r\n     * @returns {Promise} Promise to return {@link GostASN1.PrivateKeyInfo} after request generation\r\n     */\r\n    generate: function (keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, privateKey, provider;\r\n        if (keyAlgorithm)\r\n            provider = providers[keyAlgorithm];\r\n        else\r\n            provider = this.getProvider() || providers[options.providerName];\r\n        if (provider)\r\n            keyAlgorithm = expand(provider.publicKey, { privateKey: provider.privateKey });\r\n\r\n        return new Promise(call).then(function () {\r\n\r\n            // Generate key pair\r\n            return subtle.generateKey(keyAlgorithm, 'true', ['sign', 'verify']);\r\n        }).then(function (keyPair) {\r\n            privateKey = keyPair.privateKey;\r\n\r\n            // Export public key\r\n            return subtle.exportKey('spki', keyPair.publicKey);\r\n        }).then(function (spki) {\r\n            self.subjectPublicKeyInfo = new asn1.SubjectPublicKeyInfo(spki);\r\n\r\n            return subtle.exportKey('pkcs8', privateKey);\r\n        }).then(function (pkcs8) {\r\n            privateKey = new asn1.PrivateKeyInfo(pkcs8);\r\n\r\n            // Sign request\r\n            return self.sign(privateKey);\r\n        }).then(function () {\r\n\r\n            return privateKey;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get appropriate crypto provider for public key\r\n     *\r\n     * @memberOf GostCert.Request\r\n     * @instance\r\n     * @returns Object Set of crypto provider algorithms\r\n     */\r\n    getProvider: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return keyProvider(this.subjectPublicKeyInfo.algorithm);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate the contents of this request and sign it.<br><br>\r\n     *\r\n     * @memberOf GostCert.Request\r\n     * @instance\r\n     * @param {GostASN1.PrivateKeyInfo} privateKey The subject's private key\r\n     * @returns Promise to return self object after sign the request\r\n     */\r\n    sign: function (privateKey) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n\r\n        var self = this, spki = self.subjectPublicKeyInfo;\r\n        return new Promise(call).then(function () {\r\n\r\n            // Need generated key\r\n            if (!spki || !spki.algorithm || spki.algorithm === 'noSignature')\r\n                throw new Error('Key pair was not generated for the certificate');\r\n            // Check issuer private key\r\n            if (!privateKey)\r\n                throw new Error('The private key is not defined');\r\n\r\n            // Signature algorithm\r\n            var provider = keyProvider(spki.algorithm) || providers[options.providerName];\r\n            self.signatureAlgorithm = provider.signature;\r\n\r\n            // Import the private key\r\n            return subtle.importKey('pkcs8', privateKey.encode(),\r\n              privateKey.privateKeyAlgorithm, false, ['sign']);\r\n        }).then(function (key) {\r\n\r\n            // Sign the certification request\r\n            return subtle.sign(self.signatureAlgorithm, key, self.requestInfo.encode());\r\n        }).then(function (signatureValue) {\r\n\r\n            // Siganture value\r\n            self.signatureValue = signatureValue;\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Verify the Certification Request. Checks the signature on the public key in the request.\r\n     *\r\n     * @memberOf GostCert.Request\r\n     * @instance\r\n     * @returns {Promise} Promise to return self object  if the certificate is valid\r\n     */\r\n    verify: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, spki = self.subjectPublicKeyInfo;\r\n        return new Promise(call).then(function () {\r\n\r\n            // Import key\r\n            return subtle.importKey('spki', spki.encode(), spki.algorithm, 'false', ['verify']);\r\n        }).then(function (publicKey) {\r\n\r\n            // Verify signature\r\n            return subtle.verify(self.signatureAlgorithm, publicKey, self.signatureValue,\r\n              self.requestInfo.encode());\r\n        }).then(function (result) {\r\n            if (!result)\r\n                throw new Error('The certification request has invalid signature');\r\n            return self;\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class that encapsulates a DER-encoded PKCS #10 certificate request.\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.Request\r\n */\r\nGostCert.prototype.Request = Request;\r\n\r\n/**\r\n * A class for retrieving Certificates and CRLs from a repository.<br><br>\r\n *\r\n * Once the CertStore has been created, it can be used to retrieve Certificates\r\n * and CRLs by calling its getCertificates and getCRLs methods. Unlike a KeyStore,\r\n * which provides access to a cache of private keys and trusted certificates,\r\n * a CertStore is designed to provide access to a potentially vast repository\r\n * of untrusted certificates and CRLs.\r\n *\r\n * @class GostCert.CertStore\r\n * @param {GostCert.X509[]} certificates Certificates\r\n * @param {GostCert.CRL[]} crls CLRs\r\n */\r\nfunction CertStore(certificates, crls) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    this.certificates = certificates || [];\r\n    this.crls = crls || [];\r\n} // </editor-fold>\r\n\r\nextend(Object, CertStore, {\r\n    /**\r\n     * Returns a Array of Certificates that match the specified selector.\r\n     *\r\n     * @memberOf GostCert.CertStore\r\n     * @instance\r\n     * @param {GostCert.CertSelector} selector Certificate filter selector\r\n     * @returns {GostCert.X509[]} Selected certificates\r\n     */\r\n    getCertificates: function (selector) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return selectCertificates(this.certificates, selector);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Returns a Collection of CRLs that match the specified selector.\r\n     *\r\n     * @memberOf GostCert.CertStore\r\n     * @instance\r\n     * @param {GostCert.CertSelector} selector CRL filter selector\r\n     * @returns {GostCert.CRL[]} selected CRLs\r\n     */\r\n    getCRLs: function (selector) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return selectCRLs(this.certificates, selector);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Loads this CertStore from the given PKCS#7 formated input stream.\r\n     *\r\n     * @memberOf GostCert.CertStore\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} store The input stream from which the certstore is loaded\r\n     * @returns {GostCert.CertStore} Self object after store loaded\r\n     */\r\n    load: function (store) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var info = new asn1.ContentInfo(store),\r\n          certs = info.certificates, crls = info.crls;\r\n        for (var i = 0; i < certs.length; i++)\r\n            this.certificates.push(new X509(certs[i]));\r\n        for (var i = 0; i < crls.length; i++)\r\n            this.crls.push(new CRL(crls[i]));\r\n        return this;\r\n    }, // </editor-fold>\r\n    /**\r\n     * Stores this CertStore to the given output stream in PKCS#7 format.\r\n     *\r\n     * @memberOf GostCert.CertStore\r\n     * @instance\r\n     * @returns {GostASN1.ContentInfo} PKCS#7 content info with certificates and crls from CertStore\r\n     */\r\n    store: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return new asn1.ContentInfo({\r\n            contentType: 'signedData',\r\n            version: 0,\r\n            digestAlgorithms: [],\r\n            encapContentInfo: { contentType: 'data' },\r\n            certificates: this.certs,\r\n            crls: this.crls,\r\n            signerInfos: []\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for retrieving Certificates and CRLs from a repository.\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.Request\r\n */\r\nGostCert.prototype.CertStore = CertStore;\r\n\r\n/**\r\n * A class for building and validating certification paths (also known as certificate chains).\r\n *\r\n * @class GostCert.CertPath\r\n * @param {GostCert.CertStore} certStore\r\n */\r\nfunction CertPath(certStore) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    this.certStore = certStore;\r\n} // </editor-fold>\r\n\r\nextend(Object, CertPath, {\r\n    /**\r\n     * Attempts to build a certification path using the specified algorithm parameter set.\r\n     *\r\n     * @memberOf GostCert.CertPath\r\n     * @instance\r\n     * @param {GostCert.X509} certificate Starting path certificate\r\n     * @param {Date} date Validation date. Default today\r\n     * @returns {Promise} Promise to return array of {@link GostCert.X509} with certification path\r\n     */\r\n    build: function (certificate, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Build certification path\r\n            var current = new X509(certificate), certPath = [], success = false, verifiers = [];\r\n            while (current) {\r\n                var foundCRLs = [], founds = [];\r\n                certPath.push(current);\r\n                if (!success) {\r\n                    // Select issuer CRL\r\n                    foundCRLs = self.certStore.getCRLs({ issuer: current.issuer, date: date });\r\n                    // Create issuer's selection criteria\r\n                    var selector = authoritySelector(current, current.extensions,\r\n                      current.notBefore);\r\n                    // Self-signed certificate?\r\n                    if (!matchCertificate(current, selector))\r\n                    // Select issuer form trusted CA root list\r\n                        founds = self.certStore.getCertificates(selector);\r\n                    else\r\n                        success = true;\r\n                }\r\n                // Add verification tasks\r\n                var next = founds.length > 0 && new X509(founds[0]),\r\n                  crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\r\n                // Verify CRLs\r\n                if (crl)\r\n                    verifiers.push(crl.verify(next, date));\r\n\r\n                // Verify the certificate\r\n                verifiers.push(current.verify(next, crl, date));\r\n                current = next;\r\n            }\r\n            if (!success)\r\n                throw new Error('Root certificate is not found');\r\n            // Verify all certificates in path\r\n            return Promise.all(verifiers).then(function (results) {\r\n                for (var i = 0; i < results; i++)\r\n                    if (!results[i])\r\n                        throw new Error('Certification path is not validated');\r\n                return certPath;\r\n            });\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for building and validating certification paths (also known as certificate chains).\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.CertPath\r\n */\r\nGostCert.prototype.CertPath = CertPath;\r\n\r\n/**\r\n * A generic interface for implementing a particular certificate verification\r\n * scheme, such as constructing and verifying\r\n * certificate chains.\r\n *\r\n * @class GostCert.CertificateTrustPolicy\r\n */\r\nfunction CertificateTrustPolicy() {\r\n}\r\n\r\nextend(Object, CertificateTrustPolicy, {\r\n    /**\r\n     * Returns a certificate, known to be valid (according to criteria dependent\r\n     * on the verification scheme), which has the given selector, certificate and\r\n     * CRL lists to implement a particular certificate verification  scheme,\r\n     * such a forming valid certificate chains.<br>\r\n     * Second and third argument to this method may be undefined, and such a case\r\n     * must be treated exactly the same as if the particular argument was an empty array.\r\n     *\r\n     * @memberOf GostCert.CertificateTrustPolicy\r\n     * @instance\r\n     * @param {GostCert.CertificateSelector} selector Certificate selector\r\n     * @param {GostCert.X509[]} certificates Certificates\r\n     * @param {GostCert.CRL[]} crls CLRs\r\n     * @returns {Promise} Promise to return valid {@link GostCert.X509}\r\n     */\r\n    getValidCertificate: function (selector, certificates, crls) {\r\n    }\r\n});\r\n\r\n/**\r\n * A generic interface for implementing a particular certificate verification\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.CertificateTrustPolicy\r\n */\r\nGostCert.prototype.CertificateTrustPolicy = CertificateTrustPolicy;\r\n\r\n/**\r\n * A certificate trust policy based on a set of trusted root CAs.<br><br>\r\n *\r\n * In this policy, a certificate will be trusted if and only if it is part of a\r\n * valid certificate chain which terminates in one of the trusted root CAs. <br><br>\r\n *\r\n * This policy has two options for certificate chain verification:\r\n * <ul>\r\n *      <li>requireCRL - If true, then for every certificate in a chain\r\n *          (unless it is one of the trusted root CA certificates) a valid CRL\r\n *          must be provided to determine its revocation status. The default is false.</li>\r\n *      <li>requireCAFlag - If true, then every intermediate CA certificate (excluding\r\n *          the root CA or the end entity certificate) must contain a Basic Constraints\r\n *          extension, with the CA flag set. The default for this option is true.</li>\r\n * </ul>\r\n *\r\n * @class GostCert.TrustedCAPolicy\r\n * @extends GostCert.CertificateTrustPolicy\r\n * @param {GostCert.X509[]} trustedCACerts\r\n * @param {boolean} requireCRL\r\n * @param {boolean} requireCA\r\n */\r\nfunction TrustedCAPolicy(trustedCACerts, requireCRL, requireCA) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    this.trustedCACerts = trustedCACerts || [];\r\n    this.requireCRL = requireCRL || false;\r\n    this.requireCA = requireCA || true;\r\n} // </editor-fold>\r\n\r\nextend(CertificateTrustPolicy, TrustedCAPolicy, {\r\n    /**\r\n     * Returns a certificate, known to be valid (according to criteria dependent\r\n     * on the verification scheme), which has the given selector, certificate and\r\n     * CRL lists to implement a particular certificate verification  scheme,\r\n     * such a forming valid certificate chains.<br>\r\n     * Second and third argument to this method may be undefined, and such a case\r\n     * must be treated exactly the same as if the particular argument was an empty array.\r\n     *\r\n     * @memberOf GostCert.TrustedCAPolicy\r\n     * @instance\r\n     * @param {GostCert.CertificateSelector} selector Certificate selector\r\n     * @param {GostASN1.Certificate[]} certificates Certificates\r\n     * @param {GostASN1.CertificateList[]} crls CLRs\r\n     * @param {Date} date Validation date. Default today\r\n     * @returns {Promise} Promise to return valid {@link GostCert.X509}\r\n     */\r\n    getValidCertificate: function (selector, certificates, crls, date) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, certPath;\r\n        return new Promise(call).then(function () {\r\n            certificates = certificates || [];\r\n            crls = crls || [];\r\n            // Get certificates from the trusted list\r\n            var certs = selectCertificates(self.trustedCACerts, selector);\r\n            if (certs.length > 0)\r\n                return new X509(certs[0]);\r\n            // Get certificates from the list\r\n            certs = selectCertificates(certificates, selector);\r\n            if (certs.length === 0)\r\n                return;\r\n            // Build certification path\r\n            var current = new X509(certs[0]), success = false, verifiers = [];\r\n            certPath = [];\r\n            while (current) {\r\n                var foundCRLs = [], founds = [];\r\n                certPath.push(current);\r\n                if (!success) {\r\n                    // Select issuer CRL\r\n                    foundCRLs = selectCRLs(crls, { issuer: current.issuer, date: date });\r\n                    if (foundCRLs.length === 0 && self.requireCRL)\r\n                        return; // The issuer\\'s CRL is not found\r\n                    // Create issuer's selection criteria\r\n                    selector = authoritySelector(current, current.extensions,\r\n                      current.notBefore);\r\n                    // Select issuer form trusted CA root list\r\n                    founds = selectCertificates(self.trustedCACerts, selector);\r\n                    if (founds.length === 0) {\r\n                        // Non-trusted self-signed certificate?\r\n                        if (!matchCertificate(current, selector)) {\r\n                            // Select issuer from certificate list\r\n                            founds = selectCertificates(certificates, selector);\r\n                            if (founds.length > 0) {\r\n                                // Check basic contrains and CA flag\r\n                                var exts = founds[0].extensions;\r\n                                if (self.requireCA) {\r\n                                    if (!exts || !exts.basicConstraints || !exts.basicConstraints.cA)\r\n                                        return; // The issuer\\'s certificate is not valid\r\n                                    // Check path length limit\r\n                                    if (exts.basicConstraints.pathLenConstraint !== undefined &&\r\n                                      exts.basicConstraints.pathLenConstraint < certPath.length - 1)\r\n                                        return; // The issuer\\'s certificate path length constraint exceeded\r\n                                }\r\n                            } else\r\n                                return; // Certification path is not built\r\n                        }\r\n                    } else\r\n                        success = true;\r\n                }\r\n                // Add verification tasks\r\n                var next = founds.length > 0 && new X509(founds[0]),\r\n                  crl = foundCRLs.length > 0 && new CRL(foundCRLs[0]);\r\n                // Verify CRLs\r\n                if (crl)\r\n                    verifiers.push(crl.verify(next, date));\r\n\r\n                // Verify the certificate\r\n                verifiers.push(current.verify(next, crl, date));\r\n                current = next;\r\n            }\r\n            if (!success)\r\n                throw new Error('Trusted root certificate is not found');\r\n            // Verify all certificates in path\r\n            return Promise.all(verifiers).then(function (results) {\r\n                for (var i = 0; i < results; i++)\r\n                    if (!results[i])\r\n                        throw new Error('Certification path is not validated');\r\n                return certPath[0];\r\n            });\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A certificate trust policy based on a set of trusted root CAs.\r\n *\r\n * @memberOf GostCert\r\n * @type GostCert.TrustedCAPolicy\r\n */\r\nGostCert.prototype.TrustedCAPolicy = TrustedCAPolicy;\r\n\r\nexport const gostCertInstance = new GostCert();\r\n","/**\r\n * @file Implements the Cryptographic Message Syntax as specified in RFC-2630.\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { gostSubtleInstance } from './gostSubtle';\r\nimport { gostASN1Instance } from './gostASN1';\r\nimport { gostCodingInstance } from './gostCoding';\r\nimport { gostCertInstance } from './gostCert';\r\nimport { gostSecurityInstance } from './gostSecurity';\r\n\r\n/*\r\n * Common algorithms\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\nvar providers = gostSecurityInstance.providers;\r\nvar coding = gostCodingInstance;\r\nvar asn1 = gostASN1Instance;\r\nvar subtle = gostSubtleInstance;\r\nvar cert = gostCertInstance;\r\n\r\n// Expand javascript object\r\nfunction expand() {\r\n    var r = {};\r\n    for (var i = 0, n = arguments.length; i < n; i++) {\r\n        var item = arguments[i];\r\n        if (typeof item === 'object')\r\n            for (var name in item)\r\n                if (item.hasOwnProperty(name))\r\n                    r[name] = item[name];\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction defineProperty(object, name, descriptor, enumerable) {\r\n    if (typeof descriptor !== 'object')\r\n        descriptor = { value: descriptor };\r\n    if (enumerable !== undefined)\r\n        descriptor.enumerable = enumerable;\r\n    Object.defineProperty(object, name, descriptor);\r\n}\r\n\r\nfunction defineProperties(object, properties, enumerable) {\r\n    for (var name in properties)\r\n        defineProperty(object, name, properties[name], enumerable);\r\n}\r\n\r\n// Extend javascript class\r\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\r\n    // If constructor not defined\r\n    if (typeof Class !== 'function') {\r\n        propertiesClass = propertiesObject;\r\n        propertiesObject = Class;\r\n        Class = function () {\r\n            Super.apply(this, arguments);\r\n        };\r\n    }\r\n    // Create prototype properties\r\n    Class.prototype = Object.create(Super.prototype, {\r\n        constructor: {\r\n            value: Class\r\n        },\r\n        superclass: {\r\n            value: Super.prototype\r\n        }\r\n    });\r\n    if (propertiesObject)\r\n        defineProperties(Class.prototype, propertiesObject, true);\r\n    // Inherites super class properties\r\n    if (Super !== Object)\r\n        for (var name in Super)\r\n            Class[name] = Super[name];\r\n    Class.super = Super;\r\n    if (propertiesClass)\r\n        defineProperties(Class, propertiesClass, true);\r\n    return Class;\r\n}\r\n\r\n// Self resolver\r\nfunction call(callback) {\r\n    try {\r\n        callback();\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n// Check the buffers to equal\r\nfunction equalBuffers(r1, r2) {\r\n    var s1 = new Uint8Array(r1),\r\n      s2 = new Uint8Array(r2);\r\n    if (s1.length !== s2.length)\r\n        return false;\r\n    for (var i = 0, n = s1.length; i < n; i++)\r\n        if (s1[i] !== s2[i])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n// True if equal numbers\r\nvar equalNumbers = (function () {\r\n    // Convert number to bigendian hex string\r\n    var hex = function (s) {\r\n        var t = typeof s;\r\n        return t === 'undefined' || s === '' ? '0' :\r\n          t === 'number' || s instanceof Number ? s.toString(16).toLowerCase() :\r\n            s.replace('0x', '').toLowerCase();\r\n    };\r\n    // Zero left padding\r\n    var lpad = function (s, size) {\r\n        return (new Array(size + 1).join('0') + s).slice(-size);\r\n    };\r\n    return function (s1, s2) {\r\n        s1 = hex(s1);\r\n        s2 = hex(s2);\r\n        var len = Math.max(s1.length, s2.length);\r\n        return lpad(s1, len) === lpad(s2, len);\r\n    };\r\n})();\r\n\r\n// Check equal names\r\nfunction equalNames(name1, name2) {\r\n    for (var key in name1)\r\n        if (name1[key] !== name2[key])\r\n            return false;\r\n    for (var key in name2)\r\n        if (name1[key] !== name2[key])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n// Add unique value to array\r\nfunction addUnique(array, item, comparator) {\r\n    var found = false;\r\n    for (var i = 0, n = array.length; i < n; i++)\r\n        if (comparator(array[i], item)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    if (!found)\r\n        array.push(item);\r\n}\r\n\r\n// Set content data\r\nfunction setContentData(object, data) {\r\n    var content = object.content;\r\n    switch (object.contentType) {\r\n        case 'data':\r\n            object.content = data.content;\r\n            break;\r\n        case 'digestedData':\r\n        case 'signedData':\r\n        case 'authData':\r\n            content.encapContentInfo = {\r\n                eContentType: data.contentType,\r\n                eContent: data.content\r\n            };\r\n            break;\r\n        case 'envelopedData':\r\n        case 'encryptedData':\r\n            content.encryptedContentInfo = {\r\n                contentType: data.contentType,\r\n                encryptedContent: data.content\r\n            };\r\n            break;\r\n    }\r\n}\r\n\r\n// Get content data\r\nfunction getContentData(object) {\r\n    var content = object.content;\r\n    switch (object.contentType) {\r\n        case 'data':\r\n            return {\r\n                contentType: object.contentType,\r\n                content: object.content\r\n            };\r\n        case 'digestedData':\r\n        case 'signedData':\r\n        case 'authData':\r\n            var encap = content.encapContentInfo;\r\n            return {\r\n                contentType: encap.eContentType,\r\n                content: encap.eContent\r\n            };\r\n        case 'envelopedData':\r\n        case 'encryptedData':\r\n            var enc = content.encryptedContentInfo;\r\n            return {\r\n                contentType: enc.contentType,\r\n                content: enc.encryptedContent\r\n            };\r\n    }\r\n}\r\n\r\n// Check content info type\r\nfunction checkContentInfo(contentInfo) {\r\n    var content, contentType;\r\n    if (contentInfo) {\r\n        if (typeof contentInfo === 'string')\r\n            try {\r\n                contentInfo = coding.PEM.decode(contentInfo);\r\n            } catch (e1) {\r\n                contentInfo = coding.Chars.decode(contentInfo);\r\n            }\r\n        if (contentInfo instanceof CryptoOperationData)\r\n            try {\r\n                contentInfo = asn1.ContentInfo.decode(contentInfo);\r\n            } catch (e) {\r\n                contentInfo = { contentType: 'data', content: contentInfo };\r\n            }\r\n        contentType = contentInfo.contentType;\r\n        if (!contentType)\r\n            throw new Error('Invalid content object');\r\n        content = contentInfo.content;\r\n        if (!(content instanceof CryptoOperationData))\r\n            content = content.encode();\r\n        return { contentType: contentType, content: content };\r\n    } else\r\n        contentInfo = { contentType: 'data' };\r\n    return contentInfo;\r\n}\r\n\r\nfunction createContentInfo(contentInfo) {\r\n    try {\r\n        // Some provider has mistake to envelop ContentInfo enstead\r\n        // content field of ContentInfo\r\n        contentInfo = new asn1.ContentInfo(contentInfo.content, true);\r\n    } catch (e) {\r\n    }\r\n    // Create situable content info object\r\n    switch (contentInfo.contentType) {\r\n        case 'data':\r\n            return new DataContentInfo(contentInfo);\r\n        case 'digestedData':\r\n            return new DigestedDataContentInfo(contentInfo);\r\n        case 'signedData':\r\n            return new SignedDataContentInfo(contentInfo);\r\n        case 'encryptedData':\r\n            return new EncryptedDataContentInfo(contentInfo);\r\n        case 'envelopedData':\r\n            return new EnvelopedDataContentInfo(contentInfo);\r\n        default:\r\n            return new asn1.ContentInfo(contentInfo);\r\n    }\r\n}\r\n;\r\n\r\nfunction matchCert(id, cert) {\r\n    return (id instanceof CryptoOperationData ? cert.extensions &&\r\n      equalBuffers(id, cert.extensions.subjectKeyIdentifier) :\r\n      equalNames(cert.issuer, id.issuer) &&\r\n      equalNumbers(cert.serialNumber, id.serialNumber));\r\n}\r\n\r\n// Get random values\r\nfunction getSeed(length) {\r\n    var seed = new Uint8Array(length);\r\n    gostCrypto.getRandomValues(seed);\r\n    return seed.buffer;\r\n}\r\n\r\n// Salt size\r\nfunction saltSize(algorithm) {\r\n    switch (algorithm.id) {\r\n        case 'pbeWithSHAAnd40BitRC2-CBC':\r\n        case 'pbeWithSHAAnd128BitRC2-CBC':\r\n            return 8;\r\n        case 'pbeUnknownGost':\r\n            return 16;\r\n        case 'sha1':\r\n            return 20;\r\n        default:\r\n            return 32;\r\n    }\r\n}\r\n\r\n// Password to bytes\r\nfunction passwordData(derivation, password) {\r\n    if (!password)\r\n        return new CryptoOperationData(0);\r\n    if (password instanceof CryptoOperationData)\r\n        return password;\r\n    if (typeof password !== 'string')\r\n        throw new Error('The password must be string or raw data type');\r\n    if (derivation.name.indexOf('CPKDF') >= 0) {\r\n        // CryptoPro store password\r\n        var r = [];\r\n        for (var i = 0; i < password.length; i++) {\r\n            var c = password.charCodeAt(i);\r\n            r.push(c & 0xff);\r\n            r.push(c >>> 8 & 0xff);\r\n            r.push(0);\r\n            r.push(0);\r\n        }\r\n        return new Uint8Array(r).buffer;\r\n    } else if (derivation.name.indexOf('PFXKDF') >= 0)\r\n    // PKCS#12 unicode password\r\n        return coding.Chars.decode(password + '\\0', 'unicode');\r\n    else\r\n    // PKCS#5 password mode\r\n        return coding.Chars.decode(password, 'utf8');\r\n}\r\n\r\n// Define provider for encription algorithm\r\nfunction encryptionProvider(algorithm) {\r\n    var id = algorithm.id;\r\n    for (var name in providers) {\r\n        var provider = providers[name];\r\n        if (provider.encryption.id === id)\r\n            return provider;\r\n    }\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Provides facilities for handling certificates, CRLs, etc.\r\n * @class GostCMS\r\n */\r\nexport function GostCMS() {\r\n}\r\n\r\n/**\r\n * Message templates\r\n * <ul>\r\n *      <li>providerName - provider name for key generation, default 'CP-01'</li>\r\n *      <li>autoAddCert - automatic add signer certificate to signature, default false</li>\r\n *      <li>useKeyIdentifier - true to add Signer as the SignerIdentifier (v3), otherwise, as the IssuerAndSerialNumber (v1) (default false).</li>\r\n * </ul>\r\n *\r\n * @memberOf GostCMS\r\n * @instance\r\n */\r\nvar options = {// <editor-fold defaultstate=\"collapsed\">\r\n    providerName: 'CP-01',\r\n    autoAddCert: false,\r\n    useKeyIdentifier: false // </editor-fold>\r\n};\r\n\r\nGostCMS.prototype.options = options;\r\n\r\n/**\r\n * The base class for all CMS objects.<br><br>\r\n *\r\n * A CMS object consists of a content type, and content.<br><br>\r\n *\r\n * @class GostCMS.DataContentInfo\r\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content object.\r\n * @param {string} defaultSet The default object initialization set.\r\n * @extends GostASN1.ContentInfo\r\n */\r\nfunction DataContentInfo(contentInfo, defaultSet) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    asn1.ContentInfo.call(this, contentInfo || defaultSet || { contentType: 'data' });\r\n    if (defaultSet && this.contentType !== (defaultSet.contentType || 'data'))\r\n        throw new Error('Invalid content type');\r\n} // </editor-fold>\r\n\r\nextend(asn1.ContentInfo, DataContentInfo, {\r\n    /**\r\n     * Indicates if this is a detached CMS object.\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @returns {boolean} true if detached; false otherwise.\r\n     */\r\n    isDetached: {// <editor-fold defaultstate=\"collapsed\">\r\n        value: false,\r\n        enumerable: true,\r\n        writable: true // </editor-fold>\r\n    },\r\n    /**\r\n     * Indicates if an external (detached) signature must be created.\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @param {boolean} createDetached True if detached; false otherwise.\r\n     */\r\n    writeDetached: function (createDetached) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        // Define external signature mode\r\n        this.isDetached = createDetached;\r\n    }, // </editor-fold>\r\n    /**\r\n     * Encode the message to binary format 'DER' or 'PEM'\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @param {string} format\r\n     * @returns {FormatedData}\r\n     */ // <editor-fold defaultstate=\"collapsed\">\r\n    encode: function (format) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        if (this.isDetached) {\r\n            var data = getContentData(this);\r\n            setContentData(this, { contentType: data.contentType });\r\n            var result = asn1.ContentInfo.method('encode').call(this, format);\r\n            setContentData(this, data);\r\n            return result;\r\n        } else\r\n            return asn1.ContentInfo.method('encode').call(this, format);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Enclose content to document.\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo\r\n     * @returns {Promise} Promise to return self object after enclose content\r\n     */\r\n    encloseContent: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            self.setEnclosed(contentInfo);\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Sets the content of attached document.<br><br>\r\n     *\r\n     * This is necessary only in detached mode.\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The encapsulated CMS Object.\r\n     */\r\n    setEnclosed: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        setContentData(this, checkContentInfo(contentInfo));\r\n    }, // </editor-fold>\r\n    /**\r\n     * Returns the document which attached. If the content is not attached, the CMS object\r\n     * which is returned will be degenerate.\r\n     *\r\n     * @memberOf GostCMS.DataContentInfo\r\n     * @instance\r\n     * @returns {GostASN1.ContentInfo} The encapsulated CMS Object.\r\n     */\r\n    getEnclosed: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return createContentInfo(getContentData(this));\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type binary data.\r\n *\r\n * @memberOf GostCMS\r\n * @type GostCMS.DigestedDataContentInfo\r\n */\r\nGostCMS.prototype.DataContentInfo = DataContentInfo;\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type digested-data.\r\n *\r\n * @class GostCMS.DigestedDataContentInfo\r\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The content that is to be signed.\r\n * @extends GostCMS.DataContentInfo\r\n * @extends GostASN1.DigestedData\r\n */\r\nfunction DigestedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    DataContentInfo.call(this, contentInfo, {\r\n        contentType: 'digestedData',\r\n        version: 0,\r\n        digestAlgorithm: providers[options.providerName].digest,\r\n        encapContentInfo: {\r\n            eContentType: 'data'\r\n        },\r\n        digest: new CryptoOperationData(0)\r\n    });\r\n}  // </editor-fold>\r\n\r\nextend(DataContentInfo, DigestedDataContentInfo, {\r\n    /**\r\n     * Enclose the content and calculate the message digest with given digest algorithm\r\n     *\r\n     * @memberOf GostCMS.DigestedDataContentInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo Content data to be enclosed.\r\n     * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\r\n     * @returns {Promise}\r\n     */\r\n    encloseContent: function (contentInfo, digestAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Set enclosed data\r\n            self.setEnclosed(contentInfo);\r\n\r\n            // Define digest algorithm\r\n            if (digestAlgorithm) {\r\n                var digestProvider = providers[digestAlgorithm];\r\n                self.digestAlgorithm = (digestProvider && digestProvider.digest) || digestAlgorithm;\r\n            }\r\n\r\n            // Calculate digest\r\n            return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\r\n        }).then(function (digest) {\r\n\r\n            // Set digest attribute\r\n            self.digest = digest;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Verify the Message Digest. <br><br>\r\n     *\r\n     * @memberOf GostCMS.DigestedDataContentInfo\r\n     * @instance\r\n     * @param contentInfo Detached content (optional)\r\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if digest verified\r\n     */\r\n    verify: function (contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Append attached\r\n            if (contentInfo)\r\n                self.setEnclosed(contentInfo);\r\n\r\n            // Check data\r\n            var dataToVerify = self.encapContentInfo &&\r\n              self.encapContentInfo.eContent;\r\n            if (!dataToVerify)\r\n                throw new Error('Detached content is not found');\r\n\r\n            // Calculate digest\r\n            return subtle.digest(self.digestAlgorithm, self.encapContentInfo.eContent);\r\n        }).then(function (digest) {\r\n            if (!equalBuffers(digest, self.digest))\r\n                throw Error('Message digest is not verified');\r\n            // Return content\r\n            return createContentInfo({\r\n                contentType: self.encapContentInfo.eContentType,\r\n                content: self.encapContentInfo.eContent\r\n            });\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type digested-data.\r\n *\r\n * @memberOf GostCMS\r\n * @type GostCMS.DigestedDataContentInfo\r\n */\r\nGostCMS.prototype.DigestedDataContentInfo = DigestedDataContentInfo;\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type signed-data.\r\n *\r\n * Use encloseContent or setEnclosed methods to add a enclosed content before add signatures\r\n *\r\n * @class GostCMS.SignedDataContentInfo\r\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo - The signed content.\r\n * @extends GostCMS.DataContentInfo\r\n * @extends GostASN1.SignedData\r\n */\r\nfunction SignedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    DataContentInfo.call(this, contentInfo, {\r\n        contentType: 'signedData',\r\n        version: 1,\r\n        digestAlgorithms: [],\r\n        encapContentInfo: {\r\n            eContentType: 'data'\r\n        },\r\n        signerInfos: []\r\n    });\r\n}  // </editor-fold>\r\n\r\nextend(DataContentInfo, SignedDataContentInfo, {\r\n    /**\r\n     * Add a Signer using the the IssuerAndSerialNumber as the SignerIdentifier i.e a Version1 CMSSignerInfo\r\n     * or SubjectPublicKeyIdentifier as the SignerIdentifier i.e a Version3 CMSSignerInfo.\r\n     *\r\n     * @memberOf GostCMS.SignedDataContentInfo\r\n     * @instance\r\n     * @param {GostASN1.PrivateKeyInfo} signerKey Private Key of the signer.\r\n     * @param {GostCert.X509} signerCert Signer certificate or certificate chain\r\n     * @param {GostASN1.SignedAttributes} signedAttrs The set of signed attributes. Default undefined. If true or {} standard attributes will be appended: contentType and messageDigest\r\n     * @param {GostASN1.UnsignedAttributes} unsignedAttrs  The set of unsigned attributes. Default undefined.\r\n     * @returns {Promise} Promise to return self object after add signature\r\n     */\r\n    addSignature: function (signerKey, signerCert, signedAttrs, unsignedAttrs) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, signerInfo, dataToSign, signerCertChain;\r\n        return new Promise(call).then(function () {\r\n            // Check attribures\r\n            if (!signerKey || !signerCert)\r\n                throw new Error('Signer key or certificate is not defined');\r\n            // Cert chain\r\n            if (signerCert instanceof Array) {\r\n                signerCertChain = signerCert;\r\n                signerCert = signerCertChain[0];\r\n            } else\r\n                signerCertChain = [signerCert];\r\n            // Signature algorithm provider\r\n            var provider = signerCert.getProvider() ||\r\n              providers[options.providerName];\r\n            var useKeyIdentifier = options.useKeyIdentifier && signerCert.extensions &&\r\n              signerCert.extensions.subjectKeyIdentifier;\r\n            // Get enclosed data\r\n            dataToSign = self.encapContentInfo.eContent;\r\n            // Prepare signer info structure\r\n            signerInfo = {\r\n                version: useKeyIdentifier ? 2 : 0,\r\n                sid: useKeyIdentifier ? signerCert.extensions.subjectKeyIdentifier : {\r\n                    issuer: signerCert.issuer,\r\n                    serialNumber: signerCert.serialNumber\r\n                },\r\n                digestAlgorithm: provider.digest,\r\n                signatureAlgorithm: signerCert.subjectPublicKeyInfo.algorithm\r\n            };\r\n            // Set an unsigned attributes\r\n            if (unsignedAttrs)\r\n                signerInfo.unsignedAttrs = unsignedAttrs;\r\n            // For a signed attributes calculate digest\r\n            if (signedAttrs) {\r\n                if (typeof signedAttrs !== 'object')\r\n                    signedAttrs = {};\r\n                return subtle.digest(signerInfo.digestAlgorithm, dataToSign);\r\n            }\r\n        }).then(function (digest) {\r\n            if (digest) {\r\n                // Add standard signed attributes\r\n                signedAttrs.contentType = self.encapContentInfo.eContentType,\r\n                  signedAttrs.messageDigest = digest,\r\n                  signedAttrs.signingTime = new Date();\r\n                signerInfo.signedAttrs = signedAttrs,\r\n                  // Now data to sign = attributes\r\n                  dataToSign = asn1.SignedAttributes.encode(signerInfo.signedAttrs);\r\n            }\r\n\r\n            // Import the private key\r\n            return subtle.importKey('pkcs8', asn1.PrivateKeyInfo.encode(signerKey),\r\n              signerKey.privateKeyAlgorithm, false, ['sign']);\r\n        }).then(function (key) {\r\n\r\n            // Sign data\r\n            var algorithm = expand(signerInfo.signatureAlgorithm, { hash: signerInfo.digestAlgorithm });\r\n            return subtle.sign(algorithm, key, dataToSign);\r\n        }).then(function (signatureValue) {\r\n            signerInfo.signatureValue = signatureValue;\r\n\r\n            // Add digest algorithm\r\n            addUnique(self.digestAlgorithms, signerInfo.digestAlgorithm, function (algorithm1, algorithm2) {\r\n                return algorithm1.id === algorithm2.id;\r\n            });\r\n\r\n            // Add signer certificate\r\n            if (options.autoAddCert) {\r\n                if (!self.certificates)\r\n                    self.certificates = [];\r\n                for (var i = 0, n = signerCertChain.length; i < n; i++) {\r\n                    addUnique(self.certificates, signerCertChain[i], function (cert1, cert2) {\r\n                        return equalNames(cert1.issuer, cert2.issuer) &&\r\n                          equalNumbers(cert1.serialNumber, cert2.serialNumber);\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Add signer info\r\n            self.signerInfos.push(signerInfo);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Indicates if this object has any signers i.e. checks for the absence of any SignerInfo structures.\r\n     * CMS (RFC-2630) defines a degenerate object as one which has no signers.\r\n     *\r\n     * @memberOf GostCMS.SignedDataContentInfo\r\n     * @instance\r\n     * @returns {boolean} True if this object has no signers; false otherwise.\r\n     */\r\n    isDegenerate: {// <editor-fold defaultstate=\"collapsed\">\r\n        get: function () {\r\n            return !(this.signerInfos && this.signerInfos.length > 0);\r\n        } // </editor-fold>\r\n    },\r\n    /**\r\n     * Returns normally if this CMS signed data object contains at least one valid signature,\r\n     * according to the given trust policy; otherwise throws an Error.<br><br>\r\n     *\r\n     * In order to be considered valid, there must be at least one signature on this CMS\r\n     * message which is validated by one of the certificates included with it; furthermore,\r\n     * the validating certificate must itself be valid according to the given certificate\r\n     * trust policy. This latter validation process may involve examining the other certificates\r\n     * or CRLs included with this object, if called for by the trust policy.<br><br>\r\n     *\r\n     * If a signature is encountered for which a certification path can be found, but is\r\n     * invalid, an Error will be created, but will not be thrown until\r\n     * all other signatures have been checked. If another signature is found which is valid,\r\n     * then the method simply returns and no exception at all is thrown.\r\n     *\r\n     * @memberOf GostCMS.SignedDataContentInfo\r\n     * @instance\r\n     * @param {GostCert.CertificateTrustPolicy} trustPolicy The trust prolicy for verification\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\r\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\r\n     */\r\n    verify: function (trustPolicy, contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, result;\r\n        return new Promise(call).then(function () {\r\n            // Append attached\r\n            if (contentInfo)\r\n                self.setEnclosed(contentInfo);\r\n            if (!self.signerInfos || self.signerInfos.length === 0)\r\n                throw new Error('No signatures found');\r\n            // Validate certificate of signers\r\n            return Promise.all(self.signerInfos.map(function (signerInfo, i) {\r\n                var sid = signerInfo.sid, selector = sid instanceof CryptoOperationData ? {\r\n                    subjectKeyIdentifier: sid\r\n                } : {\r\n                    issuer: sid.issuer,\r\n                    serialNumber: sid.serialNumber\r\n                };\r\n                // Signing date\r\n                var date;\r\n                if (signerInfo.signedAttrs && signerInfo.signedAttrs.signingTime)\r\n                    date = signerInfo.signedAttrs.signingTime;\r\n                // Use certificate trust policy validation\r\n                return trustPolicy.getValidCertificate(selector,\r\n                  self.certificates, self.crls, date).catch(function () {\r\n                    return; // Ignore error\r\n                });\r\n            }));\r\n\r\n        }).then(function (certs) {\r\n            // Get encapsulated data\r\n            var verifiers = [];\r\n            // Verify signatures for each signers\r\n            certs.forEach(function (signerCert) {\r\n                if (signerCert)\r\n                    verifiers.push(self.verifySignature(signerCert).then(function (data) {\r\n                        result = data; // Enough one valid signature\r\n                    }, function () {\r\n                        return; // Ignore error\r\n                    }));\r\n            });\r\n            if (verifiers.length === 0)\r\n                throw new Error('Valid verification path not found');\r\n            return Promise.all(verifiers);\r\n        }).then(function () {\r\n            if (!result)\r\n                throw Error('Verification path found but no valid signature');\r\n            // Return content\r\n            return result;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Returns successfully if this CMS signed data object contains a signature which is\r\n     * validated by the given certificate and data; otherwise throws an Error.<br><br>\r\n     *\r\n     * This method verifies the specified signature directly and ignores any certificates\r\n     * or CRLs which may be contained in this CMS object. A more complex verification process,\r\n     * which does make use of attached certificates and CRLs, is provided by the verify method.\r\n     *\r\n     * @memberOf GostCMS.SignedDataContentInfo\r\n     * @instance\r\n     * @param {GostCert.X509} signerCert The signer certificate\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content that was signed (optional)\r\n     * @returns {Promise} Promise to return enclosed object {@link GostASN1.ContentInfo} if signature verified\r\n     */\r\n    verifySignature: function (signerCert, contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, signerInfo, dataToVerify, dataDigest;\r\n        return new Promise(call).then(function () {\r\n            // Append attached\r\n            if (contentInfo)\r\n                self.setEnclosed(contentInfo);\r\n            dataToVerify = self.encapContentInfo && self.encapContentInfo.eContent;\r\n            if (!dataToVerify)\r\n                throw new Error('Detached content is not found');\r\n            // Find signer\r\n            for (var i = 0; i < self.signerInfos.length; i++) {\r\n                var sid = self.signerInfos[i].sid;\r\n                if (matchCert(sid, signerCert)) {\r\n                    signerInfo = self.signerInfos[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!signerInfo)\r\n                throw new Error('Signature not found for the certificate');\r\n            // Choice data for verification\r\n            if (signerInfo.signedAttrs) {\r\n                dataDigest = signerInfo.signedAttrs.messageDigest;\r\n                if (!dataDigest)\r\n                    throw new Error('Message digest must present in signed attributes');\r\n\r\n                // To exclude implicit [0] need to reassemble signed attributes (auto on CTX object)\r\n                dataToVerify = signerInfo.signedAttrs.encode();\r\n            }\r\n            if (!dataToVerify)\r\n                throw new Error('Data for verification not found');\r\n            // Verify signature\r\n            var algorithm = expand(signerInfo.signatureAlgorithm, { hash: signerInfo.digestAlgorithm });\r\n            return signerCert.verifySignature(dataToVerify, signerInfo.signatureValue, algorithm);\r\n        }).then(function (result) {\r\n            if (!result)\r\n                throw new Error('Signature not verified');\r\n            // Verify digest\r\n            if (signerInfo.signedAttrs)\r\n                return subtle.digest(signerInfo.digestAlgorithm, self.encapContentInfo.eContent);\r\n        }).then(function (digest) {\r\n            if (digest && !equalBuffers(digest, dataDigest))\r\n                throw new Error('Message digest not verified');\r\n            // Return content\r\n            return createContentInfo({\r\n                contentType: self.encapContentInfo.eContentType,\r\n                content: self.encapContentInfo.eContent\r\n            });\r\n        });\r\n    }  // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type signed-data.\r\n *\r\n * @memberOf GostCMS\r\n * @type GostCMS.SignedDataContentInfo\r\n */\r\nGostCMS.prototype.SignedDataContentInfo = SignedDataContentInfo;\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type encrypted-data.\r\n *\r\n * @class GostCMS.EncryptedDataContentInfo\r\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\r\n * @extends GostCMS.DataContentInfo\r\n * @extends GostASN1.EncryptedData\r\n */\r\nfunction EncryptedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    DataContentInfo.call(this, contentInfo, {\r\n        contentType: 'encryptedData',\r\n        version: 0,\r\n        encryptedContentInfo: {\r\n            contentType: 'data',\r\n            contentEncryptionAlgorithm: providers[options.providerName].encryption\r\n        }\r\n    });\r\n}  // </editor-fold>\r\n\r\nextend(DataContentInfo, EncryptedDataContentInfo, {\r\n    /**\r\n     * Encrypt the content with given encryption algorithm, secret key or password\r\n     *\r\n     * @memberOf GostCMS.EncryptedDataContentInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\r\n     * @param {Key|string} contentEncryptionKey content The encryption key or password for derive key\r\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\r\n     * @returns {Promise} Promise to return self object after encrypt content\r\n     */\r\n    encloseContent: function (contentInfo, contentEncryptionKey, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, encryption, derivation;\r\n        return new Promise(call).then(function () {\r\n            // Check content info\r\n            contentInfo = checkContentInfo(contentInfo);\r\n            if (!contentInfo.content)\r\n                throw new Error('Content for encryption must be specified');\r\n\r\n            // Define encryption algorithm\r\n            var type = typeof contentEncryptionKey === 'string' ? 'pbes' : 'encryption';\r\n            if (encryptionAlgorithm) {\r\n                var provider = providers[encryptionAlgorithm];\r\n                encryptionAlgorithm = (provider && provider[type]) || encryptionAlgorithm;\r\n            } else\r\n                encryptionAlgorithm = providers[options.providerName][type];\r\n            // Prepare content encryption key\r\n            if (encryptionAlgorithm.derivation) {\r\n                // Encrypt with password\r\n                derivation = expand(encryptionAlgorithm.derivation);\r\n                encryption = expand(encryptionAlgorithm.encryption);\r\n                derivation.salt = getSeed(saltSize(encryptionAlgorithm));\r\n                // Import password for key generation\r\n                var integrityKey;\r\n                return subtle.importKey('raw', passwordData(derivation, contentEncryptionKey),\r\n                  derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\r\n                    integrityKey = key;\r\n                    // Derive IV\r\n                    if (derivation.name.indexOf('PFXKDF') >= 0) {\r\n                        derivation.diversifier = 2;\r\n                        return subtle.deriveBits(derivation, integrityKey, 64);\r\n                    }\r\n                }).then(function (iv) {\r\n                    if (iv)\r\n                        encryption.iv = iv;\r\n                    // Generate key from password\r\n                    derivation.diversifier = 1;\r\n                    return subtle.deriveKey(derivation, integrityKey, encryption, false, ['encrypt']);\r\n                }).then(function (encryptionKey) {\r\n                    // Content encryption with key\r\n                    return encryptionKey;\r\n                });\r\n            } else {\r\n                // Base encryption\r\n                encryption = expand(encryptionAlgorithm);\r\n                if (contentEncryptionKey instanceof CryptoOperationData) {\r\n                    // Import key\r\n                    return subtle.importKey('raw', contentEncryptionKey, encryption, false, ['encrypt']);\r\n                } else if (contentEncryptionKey.type === 'secret') {\r\n                    return contentEncryptionKey;\r\n                } else\r\n                    throw new Error('Content encryption key must be raw data or secret key type');\r\n            }\r\n        }).then(function (encryptionKey) {\r\n            // Initial vector\r\n            if (!encryption.iv)\r\n                encryption.iv = getSeed(8);\r\n\r\n            return subtle.encrypt(encryption, encryptionKey, contentInfo.content);\r\n        }).then(function (encryptedContent) {\r\n            if (encryptionAlgorithm.derivation) {\r\n                delete derivation.diversifier;\r\n                encryptionAlgorithm = expand(encryptionAlgorithm, {\r\n                    derivation: derivation,\r\n                    encryption: encryption\r\n                });\r\n            } else\r\n                encryptionAlgorithm = encryption;\r\n            // Set enclosed data\r\n            self.encryptedContentInfo = {\r\n                contentType: contentInfo.contentType,\r\n                contentEncryptionAlgorithm: encryptionAlgorithm,\r\n                encryptedContent: encryptedContent\r\n            };\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Returns the decrypted content.\r\n     *\r\n     * @memberOf GostCMS.EncryptedDataContentInfo\r\n     * @instance\r\n     * @param {Key|string} decryptionKey The decryption key or password for derive key\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\r\n     * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\r\n     */\r\n    getEnclosed: function (decryptionKey, contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, encryption, derivation, encryptedContent;\r\n        return new Promise(call).then(function () {\r\n            // Append attached\r\n            if (contentInfo)\r\n                self.setEnclosed(contentInfo);\r\n            encryptedContent = self.encryptedContentInfo.encryptedContent;\r\n            if (!encryptedContent)\r\n                throw new Error('Encrypted content must be specified');\r\n\r\n            encryption = expand(self.encryptedContentInfo.contentEncryptionAlgorithm);\r\n            if (encryption.derivation) {\r\n                // Decrypt with password\r\n                derivation = expand(encryption.derivation);\r\n                encryption = expand(encryption.encryption);\r\n                // Derive encryption key from password\r\n                var integrityKey;\r\n                return subtle.importKey('raw', passwordData(derivation, decryptionKey),\r\n                  derivation, false, ['deriveKey', 'deriveBits']).then(function (key) {\r\n                    integrityKey = key;\r\n                    // Derive iv for PFX\r\n                    if (derivation.name.indexOf('PFXKDF') >= 0) {\r\n                        derivation.diversifier = 2;\r\n                        return subtle.deriveBits(derivation, integrityKey, 64);\r\n                    }\r\n                }).then(function (iv) {\r\n                    if (iv)\r\n                        encryption.iv = iv;\r\n                    // Generate key from password\r\n                    derivation.diversifier = 1;\r\n                    return subtle.deriveKey(derivation, integrityKey, encryption, false, ['decrypt']);\r\n                });\r\n            } else {\r\n                // Base encryption. Password should be secret key\r\n                if (decryptionKey instanceof CryptoOperationData) {\r\n                    // Import key\r\n                    return subtle.importKey('raw', decryptionKey, encryption, false, ['decrypt']);\r\n                } else if (decryptionKey.type === 'secret') {\r\n                    return decryptionKey;\r\n                } else\r\n                    throw new Error('Decryption key must be raw data or secret key type');\r\n            }\r\n        }).then(function (encryptionKey) {\r\n            // Decrypt key with encryption key\r\n            return subtle.decrypt(encryption, encryptionKey, encryptedContent);\r\n        }).then(function (decryptedContent) {\r\n            // Create content info object\r\n            return createContentInfo({\r\n                contentType: self.encryptedContentInfo.contentType,\r\n                content: decryptedContent\r\n            });\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type encrypted-data.\r\n *\r\n * @memberOf GostCMS\r\n * @type GostCMS.EncryptedDataContentInfo\r\n */\r\nGostCMS.prototype.EncryptedDataContentInfo = EncryptedDataContentInfo;\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type enveloped-data.\r\n *\r\n * @class GostCMS.EnvelopedDataContentInfo\r\n * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The encrypted data content.\r\n * @extends GostCMS.DataContentInfo\r\n * @extends GostASN1.EnvelopedData\r\n */\r\nfunction EnvelopedDataContentInfo(contentInfo) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    DataContentInfo.call(this, contentInfo, {\r\n        contentType: 'envelopedData',\r\n        version: 0,\r\n        recipientInfos: [],\r\n        encryptedContentInfo: {\r\n            contentType: 'data',\r\n            contentEncryptionAlgorithm: providers[options.providerName].encryption\r\n        }\r\n    });\r\n}  // </editor-fold>\r\n\r\nextend(DataContentInfo, EnvelopedDataContentInfo, {\r\n    /**\r\n     * Generate content encryption key with given encryption algorithm and encrypt the content\r\n     *\r\n     * @memberOf GostCMS.EnvelopedDataContentInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The content data to be enclosed.\r\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\r\n     * @returns {Promise} Promise to return self object after encrypt content\r\n     */\r\n    encloseContent: function (contentInfo, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Check content info\r\n            contentInfo = checkContentInfo(contentInfo);\r\n            if (!contentInfo.content)\r\n                throw new Error('Content for encryption must be specified');\r\n            // Define encryption algorithm\r\n            if (encryptionAlgorithm) {\r\n                var provider = providers[encryptionAlgorithm];\r\n                encryptionAlgorithm = (provider && provider.encryption) || encryptionAlgorithm;\r\n            } else\r\n                encryptionAlgorithm = providers[options.providerName].encryption;\r\n            // Generate key for encryption content\r\n            return subtle.generateKey(encryptionAlgorithm, true, ['encrypt']);\r\n        }).then(function (encryptionKey) {\r\n            // Encrypt content\r\n            self.contentEncryptionKey = encryptionKey;\r\n            // Initial vector\r\n            if (!encryptionAlgorithm.iv)\r\n                encryptionAlgorithm.iv = getSeed(8);\r\n            return subtle.encrypt(encryptionAlgorithm, encryptionKey, contentInfo.content);\r\n        }).then(function (encryptedContent) {\r\n            self.encryptedContentInfo = {\r\n                contentType: contentInfo.contentType,\r\n                contentEncryptionAlgorithm: encryptionAlgorithm,\r\n                encryptedContent: encryptedContent\r\n            };\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Add a recipient. <br><br>\r\n     *\r\n     * Uses the Recipient Information with IssuerAndSerialNumber as the Recipient Identifier.\r\n     * Note: If senderCert specified uses the Key Agreement algorithm overwise Key Transport algorithm.\r\n     *\r\n     * @memberOf GostCMS.EnvelopedDataContentInfo\r\n     * @instance\r\n     * @param {GostCert.X509} recipientCert The certificate of recepient\r\n     * @param {(AlgorithmIdentifier|string)} keyEncryptionAlgorithm Key encryption algorithm or provider name\r\n     * @param {GostASN1.PrivateKeyInfo} senderKey The private key of sender for key agreement protocol\r\n     * @param {GostCert.X509} senderCert The certificate of sender for key agreement protocol\r\n     * @returns {Promise} Promise to return self object after add recipient\r\n     */\r\n    addRecipient: function (recipientCert, keyEncryptionAlgorithm, senderKey, senderCert) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, privateKey, encryptionProvider, derivation, wrapping;\r\n        return new Promise(call).then(function () {\r\n            // Check for recepient cert\r\n            recipientCert = new cert.X509(recipientCert);\r\n            if (keyEncryptionAlgorithm && typeof keyEncryptionAlgorithm !== 'string' &&\r\n              !keyEncryptionAlgorithm.algorithm) {\r\n                // Sender parameters\r\n                senderCert = senderKey;\r\n                senderKey = keyEncryptionAlgorithm;\r\n                keyEncryptionAlgorithm = undefined;\r\n            }\r\n            if (keyEncryptionAlgorithm) {\r\n                encryptionProvider = providers[keyEncryptionAlgorithm];\r\n            } else\r\n                encryptionProvider = recipientCert.getProvider();\r\n\r\n            // Check for content encryption key\r\n            if (!self.contentEncryptionKey)\r\n                throw new Error('The content encryption key is not assigned');\r\n\r\n            if (senderCert) {\r\n                // Sender certificate for agreement protocol\r\n                var senderCertChain;\r\n                if (senderCert instanceof Array) {\r\n                    senderCertChain = senderCert;\r\n                    senderCert = senderCertChain[0];\r\n                } else\r\n                    senderCertChain = [senderCert];\r\n\r\n                // Add sender certificate\r\n                if (options.autoAddCert) {\r\n                    if (!self.originatorInfo)\r\n                        self.originatorInfo = { certs: [] };\r\n                    else if (!self.originatorInfo.certs)\r\n                        self.originatorInfo.certs = [];\r\n                    for (var i = 0, n = senderCertChain.length; i < n; i++) {\r\n                        addUnique(self.originatorInfo.certs, senderCertChain[i], function (cert1, cert2) {\r\n                            return equalNames(cert1.issuer, cert2.issuer) &&\r\n                              equalNumbers(cert1.serialNumber, cert2.serialNumber);\r\n                        });\r\n                    }\r\n                }\r\n                // Key Agreement\r\n                if (encryptionProvider)\r\n                    keyEncryptionAlgorithm = expand(encryptionProvider.agreement);\r\n                else\r\n                    encryptionProvider = recipientCert.getProvider();\r\n                // Certificates must have similar curve parameters\r\n                if (recipientCert.subjectPublicKeyInfo.algorithm.namedCurve !==\r\n                  senderCert.subjectPublicKeyInfo.algorithm.namedCurve)\r\n                    throw new Error('The sender and the recipient have different public key algorithms');\r\n                // Get private sender key\r\n                return subtle.importKey('pkcs8', senderKey.encode(), senderKey.privateKeyAlgorithm,\r\n                  false, ['deriveKey']);\r\n            } else {\r\n                // Key Transport\r\n                if (encryptionProvider)\r\n                    keyEncryptionAlgorithm = expand(recipientCert.subjectPublicKeyInfo.algorithm);\r\n                else\r\n                    encryptionProvider = recipientCert.getProvider();\r\n                // Generate key pair\r\n                return subtle.generateKey(keyEncryptionAlgorithm, true, ['deriveKey']).then(function (keyPair) {\r\n                    keyEncryptionAlgorithm['public'] = keyPair.publicKey;\r\n                    return keyPair.privateKey;\r\n                });\r\n            }\r\n        }).then(function (key) {\r\n            privateKey = key;\r\n            // Get public key from recipient certificate\r\n            return subtle.importKey('spki', recipientCert.subjectPublicKeyInfo.encode(),\r\n              recipientCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\r\n        }).then(function (publicKey) {\r\n            // Derivate key encryption key\r\n            keyEncryptionAlgorithm.ukm = getSeed(8);\r\n            derivation = expand(encryptionProvider.agreement,\r\n              { sBox: keyEncryptionAlgorithm.sBox, ukm: keyEncryptionAlgorithm.ukm, 'public': publicKey });\r\n            wrapping = expand(keyEncryptionAlgorithm.wrapping || encryptionProvider.wrapping,\r\n              { ukm: keyEncryptionAlgorithm.ukm });\r\n            return subtle.deriveKey(derivation, privateKey, wrapping, true, ['wrapKey']);\r\n        }).then(function (wrappingKey) {\r\n            // Wrap content encryption key\r\n            keyEncryptionAlgorithm.wrapping = wrapping;\r\n            return subtle.wrapKey('raw', self.contentEncryptionKey, wrappingKey, wrapping);\r\n        }).then(function (wrappedKey) {\r\n            // Create recipient info\r\n            var recipientInfo;\r\n            var useKeyIdentifier = options.useKeyIdentifier && recipientCert.extensions &&\r\n              recipientCert.extensions.subjectKeyIdentifier,\r\n              rid = useKeyIdentifier ? recipientCert.extensions.subjectKeyIdentifier : {\r\n                  issuer: recipientCert.issuer,\r\n                  serialNumber: recipientCert.serialNumber\r\n              };\r\n            if (senderCert) {\r\n                var spki = senderCert.subjectPublicKeyInfo;\r\n                recipientInfo = {// KeyAgreeRecipientInfo\r\n                    version: 3, // always set to 3\r\n                    originator: {\r\n                        algorithm: spki.algorithm,\r\n                        publicKey: spki.subjectPublicKey\r\n                    },\r\n                    ukm: keyEncryptionAlgorithm.ukm,\r\n                    keyEncryptionAlgorithm: keyEncryptionAlgorithm,\r\n                    recipientEncryptedKeys: [{// use only one recipient in domain\r\n                        rid: rid,\r\n                        encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode(wrappedKey)\r\n                    }]\r\n                };\r\n            } else {\r\n                recipientInfo = {\r\n                    version: 0, // always set to 0 or 2\r\n                    rid: rid,\r\n                    keyEncryptionAlgorithm: keyEncryptionAlgorithm,\r\n                    encryptedKey: asn1.GostEncryptedKey(keyEncryptionAlgorithm).encode({\r\n                        algorithm: keyEncryptionAlgorithm,\r\n                        sessionEncryptedKey: wrappedKey\r\n                    })\r\n                };\r\n            }\r\n            self.recipientInfos.push(recipientInfo);\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Returns the decrypted content.\r\n     *\r\n     * @memberOf GostCMS.EnvelopedDataContentInfo\r\n     * @instance\r\n     * @param {GostASN1.PrivateKeyInfo} recipientKey The decryption key or password for derive key\r\n     * @param {GostCert.X509} recipientCert  The decryption key or password for derive key\r\n     * @param {(FormatedData|GostASN1.ContentInfo)} contentInfo The detached content (optional).\r\n     * @param {GostCert.X509} originatorCert The originator certificate (optional).\r\n     * @returns {Promise} Promise to return enclosed object {@ling GostASN1.ContentInfo} after decrypt content\r\n     */\r\n    getEnclosed: function (recipientKey, recipientCert, contentInfo, originatorCert) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, wrappedKey, encryptedContent, derivation, wrapping, encryption;\r\n        return new Promise(call).then(function () {\r\n            var encryptionProvider = recipientCert.getProvider();\r\n            // Append attached\r\n            if (contentInfo)\r\n                self.setEnclosed(contentInfo);\r\n            encryptedContent = self.encryptedContentInfo.encryptedContent;\r\n            if (!encryptedContent)\r\n                throw new Error('Encrypted content must be specified');\r\n\r\n            encryption = self.encryptedContentInfo.contentEncryptionAlgorithm;\r\n\r\n            // Find receiver\r\n            for (var i = 0; i < self.recipientInfos.length; i++) {\r\n                var recipientInfo = self.recipientInfos[i],\r\n                  algorithm = expand(recipientInfo.keyEncryptionAlgorithm);\r\n                if (recipientInfo.rid) {\r\n                    if (matchCert(recipientInfo.rid, recipientCert)) {\r\n                        // Algorithm and wrapped key\r\n                        var transportKey = asn1.GostEncryptedKey(algorithm).decode(recipientInfo.encryptedKey).object;\r\n                        wrappedKey = transportKey.sessionEncryptedKey;\r\n                        algorithm = expand(algorithm, transportKey.algorithm);\r\n                        derivation = expand(encryptionProvider.agreement, {\r\n                            ukm: algorithm.ukm,\r\n                            sBox: algorithm.sBox\r\n                        });\r\n                        wrapping = expand(encryptionProvider.wrapping, algorithm.wrapping, { ukm: algorithm.ukm });\r\n                        return algorithm['public'];\r\n                    }\r\n                } else {\r\n                    var keys = recipientInfo.recipientEncryptedKeys;\r\n                    if (keys) {\r\n                        for (var j = 0; j < keys.length; j++) {\r\n                            if (matchCert(keys[j].rid, recipientCert)) {\r\n                                // Algorithm and wrapped key\r\n                                algorithm = expand(encryptionProvider.agreement, algorithm, { ukm: recipientInfo.ukm });\r\n                                wrappedKey = asn1.GostEncryptedKey(algorithm).decode(keys[j].encryptedKey).object;\r\n                                derivation = algorithm;\r\n                                wrapping = expand(algorithm.wrapping || encryptionProvider.wrapping, { ukm: recipientInfo.ukm });\r\n                                // Check originator\r\n                                var originator = recipientInfo.originator;\r\n                                if (originator.algorithm) {\r\n                                    var spki = new asn1.SubjectPublicKeyInfo({\r\n                                        algorithm: originator.algorithm,\r\n                                        subjectPublicKey: originator.publicKey\r\n                                    });\r\n                                    return subtle.importKey('spki', spki.encode(), spki.algorithm, false, ['deriveKey', 'deriveBits']);\r\n                                } else if (originatorCert && matchCert(originator, originatorCert))\r\n                                    return importKey('pkcs', originatorCert.subjectPublicKeyInfo.encode(),\r\n                                      originatorCert.subjectPublicKeyInfo.algorithm, false, ['deriveKey', 'deriveBits']);\r\n                                else\r\n                                    throw Error('Originator certificate not specified or not valid');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            throw new Error('Recipient not found or format not supported');\r\n        }).then(function (publicKey) {\r\n            derivation['public'] = publicKey;\r\n            // Import private key\r\n            return subtle.importKey('pkcs8', recipientKey.encode(), recipientKey.privateKeyAlgorithm,\r\n              false, ['deriveKey', 'deriveBits']);\r\n        }).then(function (privateKey) {\r\n            // Derive key\r\n            return subtle.deriveKey(derivation, privateKey, wrapping, true, ['unwrapKey']);\r\n        }).then(function (unwrappingKey) {\r\n            // Unwrap key\r\n            return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\r\n              wrapping, encryption, false, ['decrypt']);\r\n        }).then(function (encryptionKey) {\r\n            // Decrypt content\r\n            return subtle.decrypt(encryption, encryptionKey, encryptedContent);\r\n        }).then(function (decryptedContent) {\r\n            return createContentInfo({\r\n                contentType: self.encryptedContentInfo.contentType,\r\n                content: decryptedContent\r\n            });\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class encapsulates a CMS object of content type enveloped-data.\r\n *\r\n * @memberOf GostCMS\r\n * @type GostCMS.EnvelopedDataContentInfo\r\n */\r\nGostCMS.prototype.EnvelopedDataContentInfo = EnvelopedDataContentInfo;\r\n\r\nexport const gostCMSInstance = new GostCMS();\r\n","/**\r\n * @file Implementation Web Crypto interfaces for GOST algorithms\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { GostRandom } from '../gostRandom';\r\nimport { gostCodingInstance } from './gostCoding';\r\nimport { gostSecurityInstance } from './gostSecurity';\r\nimport { gostASN1Instance } from './gostASN1';\r\nimport { gostSubtleInstance } from './gostSubtle';\r\nimport { gostCertInstance } from './gostCert';\r\nimport { gostCMSInstance } from './gostCMS';\r\nimport { gostKeysInstance } from './gostKeys';\r\n\r\n/**\r\n * The gostCrypto provide general purpose cryptographic functionality for\r\n * GOST standards including a cryptographically strong pseudo-random number\r\n * generator seeded with truly random values.\r\n *\r\n * @namespace gostCrypto\r\n */\r\nexport const gostCrypto = {\r\n    /**\r\n     * Coding algorithms: Base64, Hex, Int16, Chars, BER and PEM\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostCoding\r\n     */\r\n    coding: gostCodingInstance,\r\n\r\n    /**\r\n     * GOST and common ASN.1 Object and Algorithm Identifiers\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostSecurity\r\n     */\r\n    security: gostSecurityInstance,\r\n\r\n    /**\r\n     * PKCS ASN.1 message syntax and converters\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostASN1\r\n     */\r\n    asn1: gostASN1Instance,\r\n\r\n    /**\r\n     * The subtle attribute provides an instance of the SubtleCrypto\r\n     * interface which provides low-level cryptographic primitives and\r\n     * algorithms.\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type SubtleCrypto\r\n     */\r\n    subtle: gostSubtleInstance,\r\n\r\n    /**\r\n     * Provides facilities for handling certificates, CRLs, etc.\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostCert\r\n     */\r\n    cert: gostCertInstance,\r\n\r\n    /**\r\n     * Implements the Cryptographic Message Syntax as specified in RFC-2630.\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostCMS\r\n     */\r\n    cms: gostCMSInstance,\r\n\r\n    /**\r\n     * Implements the Key and Certificate Store methods\r\n     *\r\n     * @memberOf gostCrypto\r\n     * @type GostKeys\r\n     */\r\n    keys: gostKeysInstance\r\n};\r\n\r\n/**\r\n * The getRandomValues method generates cryptographically random values.\r\n *\r\n * First try to use Web Crypto random genereator. Next make random\r\n * bytes based on standart Math.random mixed with time and mouse pointer\r\n *\r\n * @memberOf gostCrypto\r\n * @param {(CryptoOperationData)} array Destination buffer for random data\r\n */\r\ngostCrypto.getRandomValues = function (array) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    try {\r\n        const gostRandom = new GostRandom();\r\n        return gostRandom.getRandomValues(array);\r\n    } catch (e) {\r\n        throw new Error('Error occurred during random values generation');\r\n    }\r\n}; // </editor-fold>\r\n// </editor-fold>\r\n","/**\r\n * @file Key and Certificate Store methods\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { gostSecurityInstance } from \"./gostSecurity\";\r\nimport { gostCodingInstance } from \"./gostCoding\";\r\nimport { gostASN1Instance } from \"./gostASN1\";\r\nimport { gostSubtleInstance } from \"./gostSubtle\";\r\nimport { gostCertInstance } from \"./gostCert\";\r\nimport { gostCMSInstance } from \"./gostCMS\";\r\n\r\n/*\r\n * Common tools and methods\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\nvar coding = gostCodingInstance;\r\nvar providers = gostSecurityInstance.providers;\r\nvar asn1 = gostASN1Instance;\r\nvar subtle = gostSubtleInstance;\r\nvar cert = gostCertInstance;\r\nvar cms = gostCMSInstance;\r\n\r\n// Expand javascript object\r\nfunction expand() {\r\n    var r = {};\r\n    for (var i = 0, n = arguments.length; i < n; i++) {\r\n        var item = arguments[i];\r\n        if (typeof item === 'object')\r\n            for (var name in item)\r\n                if (item.hasOwnProperty(name))\r\n                    r[name] = item[name];\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction defineProperty(object, name, descriptor, enumerable) {\r\n    if (typeof descriptor !== 'object')\r\n        descriptor = { value: descriptor };\r\n    if (enumerable !== undefined)\r\n        descriptor.enumerable = enumerable;\r\n    Object.defineProperty(object, name, descriptor);\r\n}\r\n\r\nfunction defineProperties(object, properties, enumerable) {\r\n    for (var name in properties)\r\n        defineProperty(object, name, properties[name], enumerable);\r\n}\r\n\r\n// Extend javascript class\r\nfunction extend(Super, Class, propertiesObject, propertiesClass) {\r\n    // If constructor not defined\r\n    if (typeof Class !== 'function') {\r\n        propertiesClass = propertiesObject;\r\n        propertiesObject = Class;\r\n        Class = function () {\r\n            Super.apply(this, arguments);\r\n        };\r\n    }\r\n    // Create prototype properties\r\n    Class.prototype = Object.create(Super.prototype, {\r\n        constructor: {\r\n            value: Class\r\n        },\r\n        superclass: {\r\n            value: Super.prototype\r\n        }\r\n    });\r\n    if (propertiesObject)\r\n        defineProperties(Class.prototype, propertiesObject, true);\r\n    // Inherites super class properties\r\n    if (Super !== Object)\r\n        for (var name in Super)\r\n            Class[name] = Super[name];\r\n    Class.super = Super;\r\n    if (propertiesClass)\r\n        defineProperties(Class, propertiesClass, true);\r\n    return Class;\r\n}\r\n\r\n// Get random values\r\nfunction getSeed(length) {\r\n    var seed = new Uint8Array(length);\r\n    gostCrypto.getRandomValues(seed);\r\n    return seed.buffer;\r\n}\r\n\r\n// Self resolver\r\nfunction call(callback) {\r\n    try {\r\n        callback();\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n\r\n// Get buffer\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData required');\r\n}\r\n\r\n// Today date + n days with time\r\nfunction now(n) {\r\n    var date = new Date();\r\n    if (n)\r\n        date.setDate(date.getDate() + n);\r\n    return date;\r\n}\r\n\r\n// Today date + n days\r\nfunction today(n) {\r\n    var date = now(n);\r\n    date.setHours(0, 0, 0, 0);\r\n    return date;\r\n}\r\n\r\n// Check the buffers to equal\r\nfunction equalBuffers(r1, r2) {\r\n    var s1 = new Uint8Array(r1),\r\n      s2 = new Uint8Array(r2);\r\n    if (s1.length !== s2.length)\r\n        return false;\r\n    for (var i = 0, n = s1.length; i < n; i++)\r\n        if (s1[i] !== s2[i])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n// Generate new alias\r\nfunction generateUUID() {\r\n    var r = new Uint8Array(getSeed(16)), s = '';\r\n    for (var i = 0; i < 16; i++)\r\n        s += ('00' + r[i].toString(16)).slice(-2);\r\n    return s.substr(0, 8) + '-' + s.substr(8, 4) + '-4' + s.substr(13, 3) +\r\n      '-9' + s.substr(17, 3) + '-' + s.substr(20, 12);\r\n}\r\n\r\n// Return get32 from buffer\r\nfunction get32(buffer, offset) {\r\n    var r = new Uint8Array(buffer, offset, 4);\r\n    return (r[3] << 24) | (r[2] << 16) | (r[1] << 8) | r[0];\r\n}\r\n\r\nfunction set32(buffer, offset, int) {\r\n    var r = new Uint8Array(buffer, offset, 4);\r\n    r[3] = int >>> 24;\r\n    r[2] = int >>> 16 & 0xff;\r\n    r[1] = int >>> 8 & 0xff;\r\n    r[0] = int & 0xff;\r\n    return r;\r\n}\r\n\r\n// Salt size\r\nfunction saltSize(algorithm) {\r\n    switch (algorithm.id) {\r\n        case 'pbeWithSHAAnd40BitRC2-CBC':\r\n        case 'pbeWithSHAAnd128BitRC2-CBC':\r\n            return 8;\r\n        case 'pbeUnknownGost':\r\n            return 16;\r\n        case 'sha1':\r\n            return 20;\r\n        default:\r\n            return 32;\r\n    }\r\n}\r\n\r\n// Password to bytes\r\nfunction passwordData(derivation, password) {\r\n    if (!password)\r\n        return new CryptoOperationData(0);\r\n    if (derivation.name.indexOf('CPKDF') >= 0) {\r\n        // CryptoPro store password\r\n        var r = [];\r\n        for (var i = 0; i < password.length; i++) {\r\n            var c = password.charCodeAt(i);\r\n            r.push(c & 0xff);\r\n            r.push(c >>> 8 & 0xff);\r\n            r.push(0);\r\n            r.push(0);\r\n        }\r\n        return new Uint8Array(r).buffer;\r\n    } else if (derivation.name.indexOf('PFXKDF') >= 0)\r\n    // PKCS#12 unicode password\r\n        return coding.Chars.decode(password + '\\0', 'unicode');\r\n    else\r\n    // PKCS#5 password mode\r\n        return coding.Chars.decode(password, 'utf8');\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Key and Certificate Store methods\r\n *\r\n * @class GostKeys\r\n */\r\nexport function GostKeys() {\r\n}\r\n\r\n/**\r\n * Key templates\r\n * <ul>\r\n *      <li>providerName - provider name for key encryption, default 'CP-01'</li>\r\n *      <li>days - validity of the key in days, default 7305</li>\r\n * </ul>\r\n *\r\n * @memberOf GostKeys\r\n * @instance\r\n */\r\nvar options = {// <editor-fold defaultstate=\"collapsed\">\r\n    providerName: 'CP-01',\r\n    days: 7305 // </editor-fold>\r\n};\r\n\r\nGostKeys.prototype.options = options;\r\n\r\n/**\r\n * A class for private keys in PKCS #8 format\r\n *\r\n * @class GostKeys.PKCS8\r\n * @extends GostASN1.PrivateKeyInfo\r\n * @param {(FormatedData|GostASN1.PrivateKeyInfo)} keyInfo\r\n */\r\nfunction PKCS8(keyInfo) {\r\n    asn1.PrivateKeyInfo.call(this, keyInfo);\r\n}\r\n\r\nextend(asn1.PrivateKeyInfo, PKCS8, {\r\n    /**\r\n     * Get the private key\r\n     *\r\n     * @memberOf GostKeys.PKCS8\r\n     * @instance\r\n     * @returns {Promise} Promise to return the {@link Key}\r\n     */\r\n    getPrivateKey: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var keyUsages = (this.privateKeyAlgorithm.id === 'rsaEncryption') ? ['sign'] :\r\n          ['sign', 'deriveKey', 'deriveBits'];\r\n        return subtle.importKey('pkcs8', this.encode(), this.privateKeyAlgorithm, 'true', keyUsages);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the private key\r\n     *\r\n     * @memberOf GostKeys.PKCS8\r\n     * @instance\r\n     * @param {Key} privateKey The Private Key\r\n     * @returns {Promise} Promise to return the self object after set the key\r\n     */\r\n    setPrivateKey: function (privateKey) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return subtle.exportKey('pkcs8', privateKey).then(function (keyInfo) {\r\n            asn1.PrivateKeyInfo.call(self, keyInfo);\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate private key and return certification request\r\n     *\r\n     * @memberOf GostKeys.PKCS8\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm identifier\r\n     * @returns {Promise} Promise to return the {@link GostCert.Request} after key generation\r\n     */\r\n    generate: function (req, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            if (!(req instanceof cert.Request))\r\n                req = new cert.Request(req);\r\n            // Generate request\r\n            return req.generate(keyAlgorithm);\r\n        }).then(function (key) {\r\n            asn1.PrivateKeyInfo.call(self, key);\r\n            ;\r\n            return req;\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for private keys in PKCS #8 format\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.PKCS8\r\n */\r\nGostKeys.prototype.PKCS8 = PKCS8;\r\n\r\n/**\r\n * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\r\n *\r\n * @class GostKeys.PKCS8Encrypted\r\n * @extends GostASN1.EncryptedPrivateKeyInfo\r\n * @param {(FormatedData|GostASN1.EncryptedPrivateKeyInfo)} encryptedKey\r\n */\r\nfunction PKCS8Encrypted(encryptedKey) {\r\n    asn1.EncryptedPrivateKeyInfo.call(this, encryptedKey);\r\n}\r\n\r\nextend(asn1.EncryptedPrivateKeyInfo, PKCS8Encrypted, {\r\n    /**\r\n     * Get the private key info\r\n     *\r\n     * @memberOf GostKeys.PKCS8Encrypted\r\n     * @instance\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @returns {Promise} Promise to return decrypted {@link GostKeys.PKCS8}\r\n     */\r\n    getKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, engine;\r\n        return new Promise(call).then(function () {\r\n            engine = new cms.EncryptedDataContentInfo({\r\n                contentType: 'encryptedData',\r\n                version: 0,\r\n                encryptedContentInfo: {\r\n                    contentType: 'data',\r\n                    contentEncryptionAlgorithm: self.encryptionAlgorithm,\r\n                    encryptedContent: self.encryptedData\r\n                }\r\n            });\r\n            return engine.getEnclosed(keyPassword);\r\n        }).then(function (contentInfo) {\r\n            // Create key object\r\n            return PKCS8.decode(contentInfo.content);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get the private key\r\n     *\r\n     * @memberOf GostKeys.PKCS8Encrypted\r\n     * @instance\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @returns {Promise} Promise to return decrypted {@link Key}\r\n     */\r\n    getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return this.getKey(keyPassword).then(function (keyInfo) {\r\n            return keyInfo.getPrivateKey();\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Sets and encrypt the private key info\r\n     *\r\n     * @memberOf GostKeys.PKCS8Encrypted\r\n     * @instance\r\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for encryption\r\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\r\n     * @returns {Promise} Promise to return self object after set key\r\n     */\r\n    setKey: function (keyInfo, keyPassword, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, engine;\r\n        return new Promise(call).then(function () {\r\n            keyInfo = new PKCS8(keyInfo);\r\n            engine = new cms.EncryptedDataContentInfo();\r\n            return engine.encloseContent(keyInfo.encode(), keyPassword, encryptionAlgorithm || options.providerName);\r\n        }).then(function () {\r\n            self.encryptionAlgorithm = engine.encryptedContentInfo.contentEncryptionAlgorithm;\r\n            self.encryptedData = engine.encryptedContentInfo.encryptedContent;\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the private key\r\n     *\r\n     * @memberOf GostKeys.PKCS8Encrypted\r\n     * @instance\r\n     * @param {Key} privateKey The private key\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\r\n     * @returns {Promise} Promise to return self object after set key\r\n     */\r\n    setPrivateKey: function (privateKey, keyPassword, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new PKCS8().setPrivateKey(privateKey).then(function (keyInfo) {\r\n            return self.setKey(keyInfo, keyPassword, encryptionAlgorithm);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate private key and return certification request\r\n     *\r\n     * @memberOf GostKeys.PKCS8Encrypted\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\r\n     * @param {(AlgorithmIdentifier|string)} encryptionAlgorithm The encryption algorithm or provider name\r\n     * @returns {Promise} Promise to return {@link GostCert.Request}\r\n     */\r\n    generate: function (req, keyPassword, keyAlgorithm, encryptionAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            if (!(req instanceof cert.Request))\r\n                req = new cert.Request(req);\r\n            // Generate request\r\n            return req.generate(keyAlgorithm);\r\n        }).then(function (key) {\r\n            return self.setKey(key, keyPassword, encryptionAlgorithm);\r\n        }).then(function () {\r\n            return req;\r\n        });\r\n    }  // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for PKCS #5 and PKCS #12 password-encrypted private keys in PKCS #8 format\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.PKCS8Encrypted\r\n */\r\nGostKeys.prototype.PKCS8Encrypted = PKCS8Encrypted;\r\n\r\n/**\r\n * A class for password-encrypted private keys in SignalCom container<br><br>\r\n *\r\n * The container file list:\r\n * <ul>\r\n *      <li>mk.db3 - master key data</li>\r\n *      <li>masks.db3 - encrypted or decrypted masks</li>\r\n *      <li>kek.opq - wrapped key encryption key</li>\r\n *      <li>rand.opq - wrapped random data</li>\r\n * </ul>\r\n *\r\n * @class GostKeys.SignalComKeyContainer\r\n * @param {SignalComKeyContainer} container\r\n */\r\nfunction SignalComKeyContainer(container) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (container) {\r\n        var self = this;\r\n        ['mk.db3', 'masks.db3', 'kek.opq', 'rand.opq'].forEach(function (name) {\r\n            self[name] = container[name];\r\n        });\r\n    }\r\n} // </editor-fold>\r\n\r\nextend(Object, SignalComKeyContainer, {\r\n    /**\r\n     * Get password-based encryption key\r\n     *\r\n     * @memberOf GostKeys.SignalComKeyContainer\r\n     * @instance\r\n     * @param {string} keyPassword\r\n     * @returns {Promise} Promise to return {@link Key}\r\n     */\r\n    getEncryptionKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, wrapping = providers['SC-01'].wrapping,\r\n          encryption = providers['SC-01'].encryption,\r\n          derivation = providers['SC-01'].derivation,\r\n          masks = self['masks.db3'], mk = self['mk.db3'], kek = self['kek.opq'];\r\n        // Decrypt key\r\n        return new Promise(call).then(function () {\r\n            if ((!masks || !mk || !kek))\r\n                throw new Error('Not enougth key container files');\r\n            // Check for encrypted key\r\n            if (masks.byteLength > 32) {\r\n                if (keyPassword) {\r\n                    // Extract password based encryption mask\r\n                    return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\r\n                      derivation, false, ['deriveKey', 'deriveBits']).then(function (integrityKey) {\r\n                        return subtle.deriveKey(expand(derivation,\r\n                          { salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]) }),\r\n                          integrityKey, encryption, false, ['decrypt']);\r\n                    }).then(function (encryptionKey) {\r\n                        var encrypted = new cms.EncryptedDataContentInfo(masks);\r\n                        return encrypted.getEnclosed(encryptionKey);\r\n                    }).then(function (digested) {\r\n                        return digested.verify();\r\n                    }).then(function (data) {\r\n                        return data.content;\r\n                    });\r\n                } else\r\n                    throw new Error('Key password is required');\r\n            } else if (keyPassword)\r\n                throw new Error('Key password is not required');\r\n            return masks;\r\n        }).then(function (decrypedMasks) {\r\n            // Combine masks\r\n            masks = decrypedMasks;\r\n            var mkm = new Uint8Array(mk.byteLength + masks.byteLength);\r\n            mkm.set(new Uint8Array(mk), 0);\r\n            mkm.set(new Uint8Array(masks), mk.byteLength);\r\n            // Import master key\r\n            return subtle.importKey('raw', mkm.buffer, wrapping, false, ['unwrapKey']);\r\n        }).then(function (unwrappingKey) {\r\n            // Unwrap kek\r\n            return subtle.unwrapKey('raw', kek, unwrappingKey, wrapping, encryption,\r\n              false, ['wrapKey', 'unwrapKey']);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate encryption key and container files\r\n     *\r\n     * @memberOf GostKeys.SignalComKeyContainer\r\n     * @instance\r\n     * @param {string} keyPassword\r\n     * @returns {Promise} Promise to return {@link Key}\r\n     */\r\n    generateContainer: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, wrapping = providers['SC-01'].wrapping,\r\n          encryption = providers['SC-01'].encryption,\r\n          derivation = providers['SC-01'].derivation,\r\n          digest = providers['SC-01'].digest,\r\n          encryptionKey, wrappingKey;\r\n        return new Promise(call).then(function () {\r\n            // Generate wrapping key\r\n            return subtle.generateKey(wrapping, true, ['wrapKey']);\r\n        }).then(function (key) {\r\n            wrappingKey = key;\r\n            // Split masks\r\n            var len = wrappingKey.buffer.byteLength;\r\n            self['mk.db3'] = new Uint8Array(new Uint8Array(wrappingKey.buffer, 0, len - 32)).buffer;\r\n            var masks = new Uint8Array(new Uint8Array(wrappingKey.buffer, len - 32, 32)).buffer;\r\n            if (keyPassword) {\r\n                // Encrypt masks\r\n                var encrypted = new cms.EncryptedDataContentInfo(),\r\n                  digested = new cms.DigestedDataContentInfo();\r\n                // Digest data\r\n                return digested.encloseContent(masks, digest).then(function () {\r\n                    digested = {// Double wrapping - SignalCom mistake\r\n                        contentType: 'digestedData',\r\n                        content: digested.encode()\r\n                    };\r\n                    return subtle.importKey('raw', coding.Chars.decode(keyPassword, 'utf8'),\r\n                      derivation, false, ['deriveKey', 'deriveBits']);\r\n                }).then(function (integrityKey) {\r\n                    return subtle.deriveKey(expand(derivation,\r\n                      { salt: new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]) }),\r\n                      integrityKey, encryption, false, ['encrypt']);\r\n                }).then(function (encryptionKey) {\r\n                    // Encrypt data with password\r\n                    return encrypted.encloseContent(digested, encryptionKey, encryption);\r\n                }).then(function () {\r\n                    return encrypted.encode();\r\n                });\r\n            }\r\n            return masks;\r\n        }).then(function (masks) {\r\n            self['masks.db3'] = masks;\r\n            // Generate encryption key\r\n            return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\r\n        }).then(function (key) {\r\n            encryptionKey = key;\r\n            // Wrap encryption key\r\n            return subtle.wrapKey('raw', key, wrappingKey, wrapping);\r\n        }).then(function (data) {\r\n            self['kek.opq'] = data;\r\n            // Generate random seed\r\n            return subtle.generateKey(encryption, false, ['wrapKey', 'unwrapKey']);\r\n        }).then(function (key) {\r\n            // Wrap random seed\r\n            return subtle.wrapKey('raw', key, wrappingKey, wrapping);\r\n        }).then(function (data) {\r\n            self['rand.opq'] = data;\r\n            return encryptionKey;\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for password-encrypted private keys in SignalCom container\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.SignalComKeyContainer\r\n */\r\nGostKeys.prototype.SignalComKeyContainer = SignalComKeyContainer;\r\n\r\n/**\r\n * A class for password-encrypted SignalCom private keys\r\n *\r\n * @class GostKeys.SignalComPrivateKeyInfo\r\n * @extends GostASN1.GostWrappedPrivateKey\r\n * @extends GostKeys.SignalComKeyContainer\r\n * @param {GostASN1.PrivateKeyInfo} keyInfo\r\n * @param {GostKeys.SignalComKeyContainer} container\r\n */\r\nfunction SignalComPrivateKeyInfo(keyInfo, container) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    asn1.GostWrappedPrivateKey.call(this, keyInfo);\r\n    SignalComKeyContainer.call(this, container);\r\n} // </editor-fold>\r\n\r\nextend(asn1.GostWrappedPrivateKey, SignalComPrivateKeyInfo, {\r\n    /**\r\n     * Get the private key info\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @param {string} keyPassword The password for decryption\r\n     * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\r\n     */\r\n    getKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return this.getPrivateKey(keyPassword).then(function (privateKey) {\r\n            return new PKCS8().setPrivateKey(privateKey);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get the private key\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @instance\r\n     * @param {string} keyPassword The password for decryption\r\n     * @returns {Promise} Promise to return the {@link Key}\r\n     */\r\n    getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, wrapping = providers['SC-01'].wrapping,\r\n          publicKeyData;\r\n        // Decrypt key\r\n        return new Promise(call).then(function () {\r\n            // Get password key\r\n            return self.getEncryptionKey(keyPassword, true);\r\n        }).then(function (encryptionKey) {\r\n            // Unwrap private key\r\n            return subtle.unwrapKey('raw', self.privateKeyWrapped, encryptionKey, wrapping,\r\n              self.privateKeyAlgorithm, true, ['sign', 'deriveKey', 'deriveBits']);\r\n        }).then(function (privateKey) {\r\n            publicKeyData = self.attributes && self.attributes['id-sc-gostR3410-2001-publicKey'];\r\n            // Generate key pair\r\n            if (publicKeyData)\r\n                return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }),\r\n                  privateKey.extractable, privateKey.usages);\r\n            else\r\n                return { privateKey: privateKey };\r\n        }).then(function (keyPair) {\r\n            // Compare public key\r\n            if (publicKeyData && !equalBuffers(keyPair.publicKey.buffer, publicKeyData))\r\n                throw new Error('Check public key failed');\r\n            return keyPair.privateKey;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Sets and encrypt the private key info\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\r\n     * @param {string} keyPassword The password for encryption\r\n     * @returns {Promise} Promise to return self object after set the key\r\n     */\r\n    setKey: function (keyInfo, keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\r\n            return self.setPrivateKey(privateKey, keyPassword);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the private key\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @instance\r\n     * @param {Key} privateKey The private key\r\n     * @param {string} keyPassword The secret key encryption\r\n     * @returns {Promise} Promise to return self object after set the key\r\n     */\r\n    setPrivateKey: function (privateKey, keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, wrapping = providers['SC-01'].wrapping, wrappedData;\r\n        return new Promise(call).then(function () {\r\n            // Get or generate encryption key\r\n            return self.getEncryptionKey(keyPassword)['catch'](function () {\r\n                return self.generateContainer(keyPassword);\r\n            });\r\n        }).then(function (encryptionKey) {\r\n            // Encrypt key buffer\r\n            return subtle.wrapKey('raw', privateKey, encryptionKey, wrapping);\r\n        }).then(function (data) {\r\n            wrappedData = data;\r\n            // Generate public key\r\n            return subtle.generateKey(expand(privateKey.algorithm,\r\n              { ukm: privateKey.buffer }), true, ['sign', 'verify']);\r\n        }).then(function (keyPair) {\r\n            self.object = {\r\n                version: 0,\r\n                privateKeyAlgorithm: privateKey.algorithm,\r\n                privateKeyWrapped: wrappedData,\r\n                attributes: {\r\n                    'id-sc-gostR3410-2001-publicKey': keyPair.publicKey.buffer\r\n                }\r\n            };\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Change key password\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @instance\r\n     * @param {string} oldKeyPassword Old key password\r\n     * @param {string} newKeyPassword New key password\r\n     * @returns {Promise} Promise to return self object after change password\r\n     */\r\n    changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\r\n            return self.setPrivateKey(privateKey, newKeyPassword);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate private key, certificate and return certification request\r\n     *\r\n     * @memberOf GostKeys.SignalComPrivateKeyInfo\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\r\n     * @returns {Promise} Promise to return {@link GostCert.Request}\r\n     */\r\n    generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, keyInfo;\r\n        return new Promise(call).then(function () {\r\n            if (!(req instanceof cert.Request))\r\n                req = new cert.Request(req);\r\n            // Generate request\r\n            return req.generate(keyAlgorithm);\r\n        }).then(function (key) {\r\n            keyInfo = key;\r\n            return self.setKey(keyInfo, keyPassword);\r\n        }).then(function () {\r\n            return req;\r\n        });\r\n    } // </editor-fold>\r\n});\r\ndefineProperties(SignalComPrivateKeyInfo.prototype, SignalComKeyContainer.prototype);\r\n\r\n/**\r\n * A class for password-encrypted SignalCom private keys\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.SignalComPrivateKeyInfo\r\n */\r\nGostKeys.prototype.SignalComPrivateKeyInfo = SignalComPrivateKeyInfo;\r\n\r\n/**\r\n * A class for password-encrypted private keys in CryptoPro container\r\n *\r\n * The container file list:\r\n * <ul>\r\n *      <li>header - container header @link GostASN1.GostKeyContainer</li>\r\n *      <li>name - container name @link GostASN1.GostKeyContainerName</li>\r\n *      <li>primary - private keys data @link GostASN1.GostPrivateKeys</li>\r\n *      <li>masks - private key masks @link GostASN1.GostPrivateMasks</li>\r\n *      <li>primary2 - reserve of private keys data @link GostASN1.GostPrivateKeys</li>\r\n *      <li>masks2 - reserve of private key masks @link GostASN1.GostPrivateMasks</li>\r\n * </ul>\r\n *\r\n * @class GostKeys.CryptoProKeyContainer\r\n * @param {Object} container\r\n */\r\nfunction CryptoProKeyContainer(container) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (container) {\r\n        this.header = asn1.GostKeyContainer.decode(container.header);\r\n        this.name = asn1.GostKeyContainerName.decode(container.name);\r\n        this.primary = asn1.GostPrivateKeys.decode(container.primary);\r\n        this.masks = asn1.GostPrivateMasks.decode(container.masks);\r\n        if (container.primary2 && container.masks2) {\r\n            this.primary2 = asn1.GostPrivateKeys.decode(container.primary2);\r\n            this.masks2 = asn1.GostPrivateMasks.decode(container.masks2);\r\n        }\r\n    }\r\n} // </editor-fold>\r\n\r\nextend(Object, CryptoProKeyContainer, (function () {\r\n\r\n    // <editor-fold defaultstate=\"collapsed\">\r\n    // True if 512 bit\r\n    function isKeySize512(algorithm) {\r\n        return algorithm.name.indexOf('-512') >= 0 || algorithm.length === 512;\r\n    }\r\n\r\n    // Test version 2012\r\n    function isVersion2012(algorithm) {\r\n        return !((algorithm.name.indexOf('-94') >= 0 || algorithm.name.indexOf('-2001') >= 0 ||\r\n          algorithm.version === 1994 || algorithm.version === 2001));\r\n    }\r\n\r\n    // Derive password key\r\n    function derivePasswordKey(algorithm, password, salt) {\r\n        var hash = isVersion2012(algorithm) ? 'GOST R 34.11-256' : 'GOST R 34.11-94/' + (algorithm.sBox || 'D-A'),\r\n          derivation = { name: 'CPKDF', hash: hash, salt: salt, iterations: password ? 2000 : 2 };\r\n\r\n        // Import password\r\n        return subtle.importKey('raw', passwordData(derivation, password),\r\n          derivation, false, ['deriveKey', 'deriveBits']).then(function (baseKey) {\r\n\r\n            // Derive key\r\n            return subtle.deriveKey(derivation, baseKey, 'GOST 28147',\r\n              false, ['sign', 'verify', 'encrypt', 'decrypt']);\r\n        });\r\n    }\r\n\r\n    // Compute password MAC\r\n    function computePasswordMAC(algorithm, password, salt) {\r\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams);\r\n\r\n        // Derive password\r\n        return derivePasswordKey(algorithm, password, salt).then(function (macKey) {\r\n\r\n            // Mac for 16 zero bytes\r\n            return subtle.sign(mac, macKey,\r\n              new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));\r\n        });\r\n    }\r\n\r\n    //        var lastBuffer;\r\n    // Compute container MAC\r\n    function computeContainerMAC(algorithm, content) {\r\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams),\r\n          keyData = new Uint8Array([// 32 zero bytes\r\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\r\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n        return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\r\n            //                var buffer = new Uint8Array(content.encode());\r\n            //                console.log(coding.Hex.encode(buffer));\r\n            //                if (lastBuffer && lastBuffer.length === buffer.length) {\r\n            //                    for (var i = 0; i < buffer.length; i++)\r\n            //                        if (lastBuffer[i] !== buffer[i])\r\n            //                            console.log('diff at ' + i);\r\n            //                } else\r\n            //                    console.log('diff length');\r\n            //                lastBuffer = buffer;\r\n            // Mac for content\r\n            return subtle.sign(mac, macKey, content.encode());\r\n        });\r\n    }\r\n\r\n    // Compute mask MAC\r\n    function computeMaskMAC(algorithm, mask, status) {\r\n        // Import mask as key for MAC\r\n        var mac = expand({ name: 'GOST 28147-MAC' }, algorithm.encParams),\r\n          keyData = mask.byteLength === 64 ?\r\n            new Uint8Array(new Uint8Array(mask, 32, 32)).buffer : mask;\r\n        return subtle.importKey('raw', keyData, mac, false, ['sign']).then(function (macKey) {\r\n\r\n            // Verify MAC for maskStatus\r\n            return subtle.sign(mac, macKey, status);\r\n        });\r\n    }\r\n\r\n    // Generate mask\r\n    function generateMasks(algorithm) {\r\n        var wrapAlgorithm = expand(algorithm, { mode: 'MASK' }),\r\n          mask, status = getSeed(12);\r\n        wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\r\n        return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']).then(function (key) {\r\n            return subtle.exportKey('raw', key);\r\n        }).then(function (data) {\r\n            mask = data;\r\n            return computeMaskMAC(algorithm, mask, status);\r\n        }).then(function (hmac) {\r\n            return new asn1.GostPrivateMasks({\r\n                mask: mask,\r\n                randomStatus: status,\r\n                hmacRandom: hmac\r\n            });\r\n        });\r\n    }\r\n\r\n    // Compute FP\r\n    function computeFP(privateKey) {\r\n        // Generate key pair with predefined ukm for check public key\r\n        return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }), true, ['sign', 'verify']).then(function (keyPair) {\r\n            return new Uint8Array(new Uint8Array(keyPair.publicKey.buffer, 0, 8)).buffer;\r\n        });\r\n    }\r\n\r\n    // Unwrap private key\r\n    function unwrapKey(algorithm, encryptionKey, key, mask, fp) {\r\n        var encryption = { name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox },\r\n          unwrapAlgorithm = expand(algorithm, { mode: 'MASK' }), privateKey;\r\n        unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\r\n        var wrappedKey;\r\n\r\n        // Encrypt ukm data for private key\r\n        return subtle.decrypt(encryption, encryptionKey, key).then(function (data) {\r\n            wrappedKey = data;\r\n            // Import mask key\r\n            return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']);\r\n        }).then(function (unwrappingKey) {\r\n\r\n            // Unwrap private key\r\n            return subtle.unwrapKey('raw', wrappedKey, unwrappingKey,\r\n              unwrapAlgorithm, algorithm, 'true', ['sign']);\r\n        }).then(function (key) {\r\n            privateKey = key;\r\n            return computeFP(privateKey);\r\n        }).then(function (computedFP) {\r\n            // Check public key buffer\r\n            if (!equalBuffers(computedFP, fp))\r\n                throw new Error('Incorrect fp');\r\n\r\n            return privateKey;\r\n        });\r\n\r\n    }\r\n\r\n    // Wrap private key\r\n    function wrapKey(algorithm, encryptionKey, privateKey, mask) {\r\n        var encryption = { name: 'GOST 28147-ECB', sBox: algorithm.encParams && algorithm.encParams.sBox },\r\n          wrapAlgorithm = expand(algorithm, { mode: 'MASK' });\r\n        wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\r\n\r\n        // Import mask key\r\n        return subtle.importKey('raw', mask, wrapAlgorithm, false,\r\n          ['sign', 'wrapKey']).then(function (wrappingKey) {\r\n            // Wrap private key\r\n            return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\r\n        }).then(function (wrappedKey) {\r\n            // Encrypt key\r\n            return subtle.encrypt(encryption, encryptionKey, wrappedKey);\r\n        });\r\n    }\r\n\r\n    // Decrypt private key\r\n    function decryptKey(content, primary, masks, keyPassword, secondary) {\r\n        var algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\r\n        return new Promise(call).then(function () {\r\n            // Check format\r\n            if (primary.hmacKey)\r\n                throw new Error('Old key format');\r\n\r\n            if (masks.randomStatus.byteLength < 12)\r\n                throw new Error(\"Invalid random status length\");\r\n\r\n            // Import mask as key for MAC\r\n            return computeMaskMAC(algorithm, masks.mask, masks.randomStatus);\r\n        }).then(function (hmac) {\r\n            if (!equalBuffers(hmac, masks.hmacRandom))\r\n                throw new Error(\"Imita for mask is invalid\");\r\n\r\n            // Derive key\r\n            return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12));\r\n        }).then(function (encryptionKey) {\r\n            // Unwrap keys\r\n            return secondary && primary.secondaryKey ?\r\n              unwrapKey(content.secondaryPrivateKeyParameters.privateKeyAlgorithm,\r\n                encryptionKey, primary.secondaryKey, masks.mask, content.secondaryFP) :\r\n              unwrapKey(algorithm, encryptionKey, primary.primaryKey, masks.mask, content.primaryFP);\r\n        });\r\n    }\r\n\r\n    // Encrypt private key\r\n    function encryptKey(algorithm, primary, masks, keyPassword, secondary, privateKey) {\r\n        // Derive key\r\n        return derivePasswordKey(algorithm, keyPassword, new Uint8Array(masks.randomStatus, 0, 12)).then(function (encryptionKey) {\r\n            // Wrap keys\r\n            return wrapKey(algorithm, encryptionKey, privateKey, masks.mask);\r\n        }).then(function (encryptedKey) {\r\n            if (!primary)\r\n                primary = new asn1.GostPrivateKeys();\r\n            if (secondary) {\r\n                primary.secondaryKey = encryptedKey;\r\n            } else {\r\n                primary.primaryKey = encryptedKey;\r\n            }\r\n            return primary;\r\n        });\r\n    }\r\n\r\n    // </editor-fold>\r\n\r\n    return {\r\n        /**\r\n         * Get the private key info\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} keyPassword The password for decryption\r\n         * @param {boolean} secondary True if required secondary key\r\n         * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\r\n         */\r\n        getKey: function (keyPassword, secondary) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            return this.getPrivateKey(keyPassword, secondary).then(function (privateKey) {\r\n                return new PKCS8().setPrivateKey(privateKey);\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Get the private key\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} keyPassword Rhe password for decryption\r\n         * @param {boolean} secondary True if required secondary key\r\n         * @returns {Promise} Promise to return the {@link Key}\r\n         */\r\n        getPrivateKey: function (keyPassword, secondary) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content = self.header.keyContainerContent;\r\n            // Decrypt key\r\n            return decryptKey(content, self.primary, self.masks, keyPassword, secondary)['catch'](function (e) {\r\n                if (self.primary2 && self.masks2)\r\n                    return decryptKey(content, self.primary2, self.masks2, keyPassword, secondary);\r\n                else\r\n                    throw e;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Get the certificate from the key container\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {boolean} secondary True for set secondary certificate\r\n         * @returns {Promise} Promise to return {@link GostCert.X509}\r\n         */\r\n        getCertificate: function (secondary) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content = self.header.keyContainerContent;\r\n            return new Promise(call).then(function () {\r\n                if (secondary)\r\n                    return new cert.X509(content.secondaryCertificate);\r\n                else\r\n                    return new cert.X509(content.primaryCertificate);\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Get the container name\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @returns {string} Container name\r\n         */\r\n        getContainerName: function () // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            return this.name.containerName;\r\n        }, // </editor-fold>\r\n        /**\r\n         * Sets and encrypt the private key info\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The private key info\r\n         * @param {string} keyPassword The assword for encryption\r\n         * @param {boolean} secondary True for set secondary key\r\n         * @param {number} days Validity days. Default 7305 days (20 years)\r\n         * @returns {Promise} Promise to return self object after set key\r\n         */\r\n        setKey: function (keyInfo, keyPassword, secondary, days) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this;\r\n            return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\r\n                return self.setPrivateKey(privateKey, keyPassword, secondary, days);\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Set the private key\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {Key} privateKey The private key\r\n         * @param {string} keyPassword The secret key encryption\r\n         * @param {boolean} secondary True for set secondary key\r\n         * @param {number} days Validity days. Default 7305 days (20 years)\r\n         * @returns {Promise} Promise to return self object after set key\r\n         */\r\n        setPrivateKey: function (privateKey, keyPassword, secondary, days) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content, algorithm;\r\n            return new Promise(call).then(function () {\r\n                self.header = self.header || new asn1.GostKeyContainer({\r\n                    keyContainerContent: {\r\n                        containerAlgoritmIdentifier: {\r\n                            algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\r\n                        },\r\n                        attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\r\n                        extensions: {\r\n                            keyValidity: {\r\n                                notAfter: now(days || options.days)\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                content = self.header.keyContainerContent;\r\n                // Set private key\r\n                var keyParameters = secondary ? content.secondaryPrivateKeyParameters :\r\n                  content.primaryPrivateKeyParameters;\r\n                if (!keyParameters) {\r\n                    algorithm = expand(privateKey.algorithm, {\r\n                        sBox: \"D-A\",\r\n                        encParams: {\r\n                            block: \"CFB\",\r\n                            sBox: \"E-A\",\r\n                            keyMeshing: \"CP\"\r\n                        }\r\n                    });\r\n                    keyParameters = {\r\n                        attributes: [\"pkaExportable\", \"pkaExchange\", \"pkaDhAllowed\"],\r\n                        privateKeyAlgorithm: algorithm\r\n                    };\r\n                    if (secondary) {\r\n                        if (!content.primaryPrivateKeyParameters)\r\n                            throw new Error('Primary key must be defined first');\r\n                        content.secondaryPrivateKeyParameters = keyParameters;\r\n                    } else {\r\n                        content.primaryPrivateKeyParameters = keyParameters;\r\n                        var absent = content.attributes.indexOf('kccaPrimaryKeyAbsent');\r\n                        if (absent >= 0)\r\n                            content.attributes.splice(absent, 1);\r\n                    }\r\n                } else\r\n                    algorithm = keyParameters.privateKeyAlgorithm;\r\n                // Generate masks\r\n                var promises = [];\r\n                [0, 1].forEach(function (i) {\r\n                    var name = 'masks' + (i > 0 ? '2' : '');\r\n                    if (!self[name])\r\n                        promises.push(generateMasks(algorithm).then(function (masks) {\r\n                            self[name] = masks;\r\n                        }));\r\n                });\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                // Encrypt key\r\n                var promises = [];\r\n                [0, 1].forEach(function (i) {\r\n                    var name = 'primary' + (i > 0 ? '2' : ''),\r\n                      maskname = 'masks' + (i > 0 ? '2' : '');\r\n                    promises.push(encryptKey(algorithm, self[name], self[maskname], keyPassword, secondary, privateKey).then(function (primary) {\r\n                        self[name] = primary;\r\n                    }));\r\n                });\r\n                return Promise.all(promises);\r\n            }).then(function () {\r\n                // Compute FP for a private key\r\n                return computeFP(privateKey).then(function (FP) {\r\n                    if (secondary)\r\n                        content.secondaryFP = FP;\r\n                    else\r\n                        content.primaryFP = FP;\r\n                });\r\n            }).then(function () {\r\n                // Compute password MAC\r\n                var softPassword = content.attributes.indexOf('kccaSoftPassword');\r\n                if (keyPassword) {\r\n                    if (softPassword < 0)\r\n                        content.attributes.push('kccaSoftPassword');\r\n                    return computePasswordMAC(algorithm, keyPassword, content.primaryFP);\r\n                } else {\r\n                    if (softPassword >= 0)\r\n                        content.attributes.splice(softPassword, 1);\r\n                }\r\n            }).then(function (hmac) {\r\n                if (hmac)\r\n                    content.hmacPassword = hmac;\r\n                // Calculate container MAC\r\n                return computeContainerMAC(algorithm, content);\r\n            }).then(function (hmac) {\r\n                self.header.hmacKeyContainerContent = hmac;\r\n                return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Set the certificate to the key container\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {(FormatedData|GostCert.X509)} certificate The certificate\r\n         * @param {boolean} secondary True for set secondary certificate\r\n         * @param {number} days Validity days. Default 7305 days (20 years)\r\n         * @returns {Promise} Promise to return self object after set certificate\r\n         */\r\n        setCertificate: function (certificate, secondary, days) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content, algorithm;\r\n            return new Promise(call).then(function () {\r\n                self.header = self.header || new asn1.GostKeyContainer({\r\n                    keyContainerContent: {\r\n                        containerAlgoritmIdentifier: {\r\n                            algorithm: 'id-CryptoPro-GostPrivateKeys-V2-Full'\r\n                        },\r\n                        attributes: ['kccaReservePrimary', 'kccaPrimaryKeyAbsent'],\r\n                        extensions: {\r\n                            keyValidity: {\r\n                                notAfter: now(days || options.days)\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                content = self.header.keyContainerContent;\r\n                certificate = new cert.X509(certificate);\r\n                algorithm = (content.primaryPrivateKeyParameters &&\r\n                  content.primaryPrivateKeyParameters.privateKeyAlgorithm) ||\r\n                  expand(certificate.subjectPublicKeyInfo.algorithm, {\r\n                      sBox: \"D-A\",\r\n                      encParams: {\r\n                          block: \"CFB\",\r\n                          sBox: \"E-A\",\r\n                          keyMeshing: \"CP\"\r\n                      }\r\n                  });\r\n                return certificate.getPublicKey();\r\n            }).then(function (publicKey) {\r\n                if (secondary) {\r\n                    if (content.secondaryFP && !equalBuffers(content.secondaryFP,\r\n                      new Uint8Array(publicKey.buffer, 0, content.secondaryFP.byteLength)))\r\n                        throw new Error('The public key of the certificate does not match the private key');\r\n                    content.secondaryCertificate = certificate;\r\n                } else {\r\n                    if (content.primaryFP && !equalBuffers(content.primaryFP,\r\n                      new Uint8Array(publicKey.buffer, 0, content.primaryFP.byteLength)))\r\n                        throw new Error('The public key of the certificate does not match the private key');\r\n                    content.primaryCertificate = certificate;\r\n                }\r\n                // Calculate container MAC\r\n                return computeContainerMAC(algorithm, content);\r\n            }).then(function (hmac) {\r\n                self.header.hmacKeyContainerContent = hmac;\r\n                return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Set the container name\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} name Container name\r\n         */\r\n        setContainerName: function (name) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            this.name = new asn1.GostKeyContainerName({ containerName: name });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Verify key container with password\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} keyPassword the secret key or password for decryption\r\n         * @returns {Promise} Promise to return self object after verify\r\n         */\r\n        verify: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content, algorithm;\r\n            return new Promise(call).then(function () {\r\n                content = self.header.keyContainerContent;\r\n                algorithm = content.primaryPrivateKeyParameters.privateKeyAlgorithm;\r\n                // Verify container MAC\r\n                return computeContainerMAC(algorithm, content);\r\n            }).then(function (hmac) {\r\n                if (!equalBuffers(hmac, self.header.hmacKeyContainerContent))\r\n                    throw new Error(\"Container is not valid.\");\r\n                // Verify key password MAC\r\n                var needPassword = content.attributes.indexOf('kccaSoftPassword') >= 0;\r\n                if (!keyPassword && needPassword)\r\n                    throw new Error(\"Password is required\");\r\n                if (keyPassword && !needPassword)\r\n                    throw new Error(\"Password is not reqiured.\");\r\n                if (keyPassword)\r\n                // Derive password\r\n                    return computePasswordMAC(algorithm, keyPassword, content.primaryFP).then(function (hmac) {\r\n                        if (!equalBuffers(hmac, content.hmacPassword))\r\n                            throw new Error(\"Password is not valid.\");\r\n                        return self;\r\n                    });\r\n                return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Change key password\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} oldKeyPassword Old key password\r\n         * @param {string} newKeyPassword New key password\r\n         * @returns {Promise} Promise to return self object after change password\r\n         */\r\n        changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, content;\r\n            return new Promise(call).then(function () {\r\n                content = self.header.keyContainerContent;\r\n                if (!content.primaryPrivateKeyParameters)\r\n                    throw new Error('Private key not yet defined');\r\n                return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\r\n                    return self.setPrivateKey(privateKey, newKeyPassword);\r\n                });\r\n            }).then(function () {\r\n                if (content.secondaryPrivateKeyParameters)\r\n                    return self.getPrivateKey(oldKeyPassword, true).then(function (privateKey) {\r\n                        return self.setPrivateKey(privateKey, newKeyPassword, true);\r\n                    });\r\n                return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Generate private key, certificate and return certification request\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\r\n         * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n         * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\r\n         * @returns {Promise} Promise to return {@link GostCert.Request}\r\n         */\r\n        generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, certificate, keyInfo;\r\n            return new Promise(call).then(function () {\r\n                if (!(req instanceof cert.Request))\r\n                    req = new cert.Request(req);\r\n                // Generate request\r\n                return req.generate(keyAlgorithm);\r\n            }).then(function (key) {\r\n                keyInfo = key;\r\n                return self.setKey(keyInfo, keyPassword);\r\n            }).then(function () {\r\n                // Create the new certificate\r\n                certificate = new cert.X509(req);\r\n                return certificate.sign(keyInfo);\r\n            }).then(function () {\r\n                return self.setCertificate(certificate);\r\n            }).then(function () {\r\n                return req;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Encode key container\r\n         *\r\n         * @memberOf GostKeys.CryptoProKeyContainer\r\n         * @instance\r\n         * @param {string} format Encode format 'DER', 'CER', 'PEM'\r\n         * @returns {Object} container Object contains encoded files\r\n         */\r\n        encode: function (format) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            return {\r\n                header: this.header.encode(format),\r\n                name: this.name.encode(format),\r\n                masks: this.masks.encode(format),\r\n                primary: this.primary.encode(format),\r\n                masks2: this.masks2.encode(format),\r\n                primary2: this.primary2.encode(format)\r\n            };\r\n        } // </editor-fold>\r\n    };\r\n})());\r\n\r\n/**\r\n * A class for password-encrypted private keys in CryptoPro container\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.SignalComPrivateKeyInfo\r\n */\r\nGostKeys.prototype.CryptoProKeyContainer = CryptoProKeyContainer;\r\n\r\n/**\r\n * A class for password-encrypted private keys in ViPNet container entry\r\n *\r\n * @class GostKeys.ViPNetContainerEntry\r\n * @extends GostASN1.ViPNetInfo\r\n * @param {(FormatedData|GostKeys.ViPNetContainerEntry)} entry\r\n */\r\nfunction ViPNetContainerEntry(entry) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    asn1.ViPNetInfo.call(this, entry || {\r\n        version: 3,\r\n        keyInfo: {\r\n            keyClass: 1,\r\n            keyType: 43556,\r\n            flags: 1\r\n        },\r\n        defenceKeyInfo: {\r\n            keyClass: 1024,\r\n            keyType: 24622,\r\n            keyUID: getSeed(32),\r\n            flags: -2147483648\r\n        }\r\n    });\r\n} // </editor-fold>\r\n\r\nextend(asn1.ViPNetInfo, ViPNetContainerEntry, (function () {\r\n\r\n    function getKeyPassword(keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        if (keyPassword === undefined)\r\n            keyPassword = '';\r\n        // Generate key data\r\n        var passwordData = coding.Chars.decode(keyPassword, 'win1251'), keyData;\r\n        return subtle.digest('GOST R 34.11-94', passwordData).then(function (data) {\r\n            keyData = data;\r\n            // Generate mask data\r\n            var secodeData = new Uint8Array(passwordData.byteLength + keyData.byteLength);\r\n            secodeData.set(new Uint8Array(passwordData), 0);\r\n            secodeData.set(new Uint8Array(keyData), passwordData.byteLength);\r\n            return subtle.digest('GOST R 34.11-94', secodeData);\r\n        }).then(function (data) {\r\n            // Remove mask\r\n            return subtle.importKey('raw', data, 'GOST 28147', false, ['unwrapKey']);\r\n        }).then(function (unwrappingKey) {\r\n            // Unwrap secret key\r\n            return subtle.unwrapKey('raw', keyData, unwrappingKey,\r\n              'GOST 28147-MASK/VN', 'GOST 28147-89',\r\n              'false', ['encrypt', 'decrypt', 'sign', 'verify']);\r\n        });\r\n    } // </editor-fold>\r\n\r\n    return {\r\n        /**\r\n         * Get the private key\r\n         *\r\n         * @memberOf GostKeys.ViPNetContainerEntry\r\n         * @instance\r\n         * @param {string} keyPassword The password of secrect key for decryption\r\n         * @returns {Promise} Promise to return the {@link Key}\r\n         */\r\n        getPrivateKey: function (keyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, keyPart, encryptedKey;\r\n            // Decrypt key\r\n            return new Promise(call).then(function () {\r\n                return !keyPassword || typeof keyPassword === 'string' ?\r\n                  getKeyPassword(keyPassword) : keyPassword;\r\n            }).then(function (key) {\r\n                keyPassword = key;\r\n                // Verify password\r\n                keyPart = self.keyPart;\r\n                encryptedKey = new Uint8Array(keyPart, 0, keyPart.byteLength - 4 - 8);\r\n                var macKey = new Uint8Array(keyPart, encryptedKey.byteLength, 4),\r\n                  encodedKeyInfo = self.keyInfo.encode(),\r\n                  data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\r\n                data.set(new Uint8Array(encryptedKey), 0);\r\n                data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\r\n                return subtle.verify({ name: 'GOST 28147-89-MAC' }, keyPassword, macKey, data);\r\n            }).then(function (result) {\r\n                if (!result)\r\n                    throw new Error('Invalid key password');\r\n                var iv = new Uint8Array(keyPart, keyPart.byteLength - 8, 8);\r\n                // Decrypt key data\r\n                return subtle.decrypt({ name: 'GOST 28147-89-CFB', iv: iv }, keyPassword, encryptedKey);\r\n            }).then(function (keyData) {\r\n                var l2 = keyData.byteLength / 2;\r\n                if (self.keyInfo.keyClass & 0x3 === 0) {\r\n                    // Secret key. Remove mask and import\r\n                    return subtle.importKey('raw', new Int32Array(keyData, l2, l2), 'GOST 28147', false,\r\n                      ['unwrapKey']).then(function (unwrappingKey) {\r\n                        // Unwrap secret key\r\n                        return subtle.unwrapKey('raw', new Int32Array(keyData, 0, l2), unwrappingKey,\r\n                          'GOST 28147-MASK/VN', 'GOST 28147-89',\r\n                          'false', ['encrypt', 'decrypt', 'sign', 'verify']);\r\n                    });\r\n                } else {\r\n                    // Private key\r\n                    var algorithm = self.keyInfo.algorithm ||\r\n                      (self.certificate && self.certificate.subjectPublicKeyInfo.algorithm);\r\n                    if (!algorithm)\r\n                        throw new Error('Algorithm is not specified');\r\n                    var unwrapAlgorithm = expand(algorithm, { mode: 'MASK', procreator: 'VN' });\r\n                    unwrapAlgorithm.name = unwrapAlgorithm.name.replace('-DH', '');\r\n                    var wrapped = new Uint8Array(keyData, 0, l2),\r\n                      mask = new Uint8Array(keyData, l2, l2);\r\n                    // Import mask key\r\n                    return subtle.importKey('raw', mask, unwrapAlgorithm, 'false', ['sign', 'unwrapKey']).then(function (unwrappingKey) {\r\n                        // Unwrap private key\r\n                        return subtle.unwrapKey('raw', wrapped, unwrappingKey, unwrapAlgorithm, algorithm, 'true', ['sign', 'deriveBits', 'deriveKey']);\r\n                    }).then(function (privateKey) {\r\n                        // Generate key pair\r\n                        if (self.publicKey)\r\n                            return subtle.generateKey(expand(privateKey.algorithm, { ukm: privateKey.buffer }),\r\n                              privateKey.extractable, privateKey.usages);\r\n                        else\r\n                            return { privateKey: privateKey };\r\n                    }).then(function (keyPair) {\r\n                        // Compare public key\r\n                        if (self.publicKey && !equalBuffers(keyPair.publicKey.buffer, self.publicKey))\r\n                            throw new Error('Check public key failed');\r\n                        return keyPair.privateKey;\r\n                    });\r\n                }\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Set the private key\r\n         *\r\n         * @memberOf GostKeys.ViPNetContainerEntry\r\n         * @instance\r\n         * @param {Key} privateKey The private key\r\n         * @param {string} keyPassword The secret key encryption\r\n         * @param {number} days Validity days. Default 7305 days (20 years)\r\n         * @returns {Promise} Promise to return the self object after set the key\r\n         */\r\n        setPrivateKey: function (privateKey, keyPassword, days) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, wrapAlgorithm, wrappingKey, keyData, keyPart;\r\n            // Decrypt key\r\n            return new Promise(call).then(function () {\r\n                return !keyPassword || typeof keyPassword === 'string' ?\r\n                  getKeyPassword(keyPassword) : keyPassword;\r\n            }).then(function (key) {\r\n                keyPassword = key;\r\n                var algorithm = privateKey.algorithm;\r\n                self.keyInfo.algorithm = algorithm;\r\n                self.keyInfo.serialNumber = getSeed(16);\r\n                self.keyInfo.keyUID = getSeed(8);\r\n                self.keyInfo.validity = {\r\n                    notBefore: today(),\r\n                    notAfter: today(days || options.days)\r\n                };\r\n                if (privateKey.type === 'private') {\r\n                    // Generate mask\r\n                    wrapAlgorithm = expand(algorithm, { mode: 'MASK', procreator: 'VN' });\r\n                    wrapAlgorithm.name = wrapAlgorithm.name.replace('-DH', '');\r\n                    self.keyInfo.keyClass = 1;\r\n                    self.keyInfo.keyType = 43556;\r\n                    // Generate public key\r\n                    return subtle.generateKey(expand(algorithm, { ukm: privateKey.buffer }), true,\r\n                      ['sign', 'verify']).then(function (keyPair) {\r\n                        self.publicKey = keyPair.publicKey.buffer;\r\n                        // Check certificate\r\n                        if (self.certificate) {\r\n                            var spki = self.certificate.subjectPublicKeyInfo;\r\n                            return subtle.importKey('spki', spki.encode(), spki.algorithm, true, ['verify']);\r\n                        }\r\n                    }).then(function (publicKey) {\r\n                        if (publicKey && !equalBuffers(publicKey.buffer, self.publicKey))\r\n                            delete self.certificate; // Remove not valid certificate\r\n                    });\r\n                } else if (privateKey.type === 'secret') {\r\n                    wrapAlgorithm = 'GOST 28147/MASK/VN';\r\n                    delete self.certificate;\r\n                    delete self.publicKey;\r\n                    self.keyInfo.keyClass = 64;\r\n                    self.keyInfo.keyType = 24622;\r\n                } else\r\n                    throw new Error('Invalid key type');\r\n            }).then(function () {\r\n                // Generate mask\r\n                return subtle.generateKey(wrapAlgorithm, true, ['wrapKey', 'unwrapKey']);\r\n            }).then(function (key) {\r\n                wrappingKey = key;\r\n                // Wrap private key with mask\r\n                return subtle.wrapKey('raw', privateKey, wrappingKey, wrapAlgorithm);\r\n            }).then(function (data) {\r\n                keyData = new Uint8Array(data.byteLength * 2);\r\n                keyData.set(new Uint8Array(data));\r\n                return subtle.exportKey('raw', wrappingKey);\r\n            }).then(function (data) {\r\n                keyData.set(new Uint8Array(data), data.byteLength);\r\n                keyPart = new Uint8Array(keyData.byteLength + 12);\r\n                // Encrypt key\r\n                var encyption = { name: 'GOST 28147-CFB', iv: getSeed(8) };\r\n                keyPart.set(new Uint8Array(encyption.iv), keyPart.byteLength - 8);\r\n                return subtle.encrypt(encyption, keyPassword, keyData);\r\n            }).then(function (encryptedKey) {\r\n                keyPart.set(new Uint8Array(encryptedKey));\r\n                // Calculate MAC\r\n                var encodedKeyInfo = self.keyInfo.encode(),\r\n                  data = new Uint8Array(encryptedKey.byteLength + encodedKeyInfo.byteLength);\r\n                data.set(new Uint8Array(encryptedKey), 0);\r\n                data.set(new Uint8Array(encodedKeyInfo), encryptedKey.byteLength);\r\n                return subtle.sign({ name: 'GOST 28147-89-MAC' }, keyPassword, data);\r\n            }).then(function (macKey) {\r\n                keyPart.set(new Uint8Array(macKey), keyPart.byteLength - 12);\r\n                self.keyPart = keyPart.buffer;\r\n                return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Encode container entry\r\n         *\r\n         * @memberOf GostKeys.ViPNetContainerEntry\r\n         * @instance\r\n         * @param {string} format The encoded data format\r\n         * @returns {CryptoOperationData}\r\n         */\r\n        encode: function (format) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var header = asn1.ViPNetInfo.method('encode').call(this),\r\n              result = new Uint8Array(8 + header.byteLength + this.keyPart.byteLength);\r\n            set32(result.buffer, 0, 4 + header.byteLength + this.keyPart.byteLength);\r\n            result.set(new Uint8Array(header), 4);\r\n            set32(result.buffer, 4 + header.byteLength, this.keyPart.byteLength);\r\n            result.set(new Uint8Array(this.keyPart), 8 + header.byteLength);\r\n            if (format === 'PEM')\r\n                return coding.Base64.encode(result.buffer);\r\n            return result.buffer;\r\n        } // </editor-fold>\r\n    };\r\n})(), {\r\n    /**\r\n     * Decode container entry\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainerEntry\r\n     * @param {FormatedData} entry\r\n     * @returns {GostKeys.ViPNetContainer}\r\n     */\r\n    decode: function (entry) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        if (typeof entry === 'string')\r\n            entry = coding.Base64.decode(entry);\r\n        entry = buffer(entry);\r\n        // Entry size\r\n        var entrySize = get32(entry, 0);\r\n        if (entry.byteLength !== entrySize + 4)\r\n            throw new Error('Invalid container entry size');\r\n        // Decode header info\r\n        var source = coding.BER.decode(new Uint8Array(entry, 4, entrySize));\r\n        var result = asn1.ViPNetInfo.decode.call(this, source);\r\n        // Decode key info\r\n        var headerSize = source.header.byteLength + source.content.byteLength,\r\n          keyPartSize = get32(entry, 4 + headerSize);\r\n        if (entry.byteLength !== headerSize + keyPartSize + 8)\r\n            throw new Error('Invalid container key part size');\r\n        result.keyPart = new Uint8Array(new Uint8Array(entry, headerSize + 8, keyPartSize)).buffer;\r\n        // Key Info buffer - can be used in case error of format encoding\r\n        // var keyInfoSource = source.object[1];\r\n        // result.encodedKeyInfo = new Uint8Array(new Uint8Array(keyInfoSource.header.buffer,\r\n        //    keyInfoSource.header.byteOffset, keyInfoSource.header.byteLength + keyInfoSource.content.byteLength)).buffer;\r\n        return result;\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for password-encrypted private keys in CryptoPro container\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.SignalComPrivateKeyInfo\r\n */\r\nGostKeys.prototype.ViPNetContainerEntry = ViPNetContainerEntry;\r\n\r\n/**\r\n * A class for password-encrypted private keys in ViPNet container\r\n *\r\n * @class GostKeys.ViPNetContainer\r\n * @param {(FormatedData|GostKeys.ViPNetContainer)} container\r\n */\r\nfunction ViPNetContainer(container) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (container && (container instanceof CryptoOperationData ||\r\n      container.buffer instanceof CryptoOperationData ||\r\n      typeof container === 'string'))\r\n        this.decode(container);\r\n    else {\r\n        container = container || {};\r\n        this.fileType = container.fileType || 'ITCS';\r\n        this.fileVersion = container.fileVersion || 0x10;\r\n        if (container.applicationHeader)\r\n            this.applicationHeader = container.applicationHeader;\r\n        this.entries = container.entries || [];\r\n    }\r\n} // </editor-fold>\r\n\r\n\r\nextend(Object, ViPNetContainer, {\r\n    /**\r\n     * Get the certificate from the container\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @returns {Promise} Promise to return {@link GostCert.X509}\r\n     */\r\n    getCertificate: function (index) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            var entry = self.entries[index || 0];\r\n            if (!entry)\r\n                throw new Error('Entry not defined');\r\n            if (entry.certificate)\r\n                return new cert.X509(entry.certificate);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get the private key info\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {string} keyPassword The password for decryption\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @returns {Promise} Promise to return {@link GostKeys.PKCS8}\r\n     */\r\n    getKey: function (keyPassword, index) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return this.getPrivateKey(keyPassword, index).then(function (privateKey) {\r\n            return new PKCS8().setPrivateKey(privateKey);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Get the private key\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {string} keyPassword The password of secrect key for decryption\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @returns {Promise} Promise to return the {@link Key}\r\n     */\r\n    getPrivateKey: function (keyPassword, index) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            var entry = self.entries[index || 0];\r\n            if (!entry)\r\n                throw new Error('Entry not defined');\r\n            return entry.getPrivateKey(keyPassword);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the certificate to the container\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {(FormatedData|GostCert.X509)} certificate The certificate\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @returns {Promise} Promise to return self object after set certificate\r\n     */\r\n    setCertificate: function (certificate, index) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, entry, certificate;\r\n        return new Promise(call).then(function () {\r\n            entry = self.entries[index || 0] ||\r\n              (self.entries[index || 0] = new ViPNetContainerEntry());\r\n            certificate = new cert.X509(certificate);\r\n            if (entry.publicKey)\r\n                return certificate.getPublicKey();\r\n        }).then(function (publicKey) {\r\n            if (publicKey && !equalBuffers(entry.publicKey, publicKey.buffer))\r\n                throw new Error('Invalid certificate for private key');\r\n            entry.certificate = certificate;\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the key to the container\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {(FormatedData|GostKeys.PKCS8)} keyInfo The key\r\n     * @param {string} keyPassword The password for decryption\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @param {number} days Validity days. Default 7305 days (20 years)\r\n     * @returns {Promise} Promise to return self object after set the key\r\n     */\r\n    setKey: function (keyInfo, keyPassword, index, days) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new PKCS8(keyInfo).getPrivateKey().then(function (privateKey) {\r\n            return self.setPrivateKey(privateKey, keyPassword, index, days);\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Set the private key\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainerEntry\r\n     * @instance\r\n     * @param {Key} privateKey The private key\r\n     * @param {string} keyPassword The secret key encryption\r\n     * @param {number} index Index of the entriy. Default 0\r\n     * @param {number} days Validity days. Default 7305 days (20 years)\r\n     * @returns {Promise} Promise to return the self object after set the key\r\n     */\r\n    setPrivateKey: function (privateKey, keyPassword, index, days) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            var entry = self.entries[index || 0] ||\r\n              (self.entries[index || 0] = new ViPNetContainerEntry());\r\n            return entry.setPrivateKey(privateKey, keyPassword, days);\r\n        }).then(function () {\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Change key password\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainerEntry\r\n     * @instance\r\n     * @param {string} oldKeyPassword Old key password\r\n     * @param {string} newKeyPassword New key password\r\n     * @returns {Promise} Promise to return self object after change password\r\n     */\r\n    changePassword: function (oldKeyPassword, newKeyPassword) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            return self.getPrivateKey(oldKeyPassword).then(function (privateKey) {\r\n                return self.setPrivateKey(privateKey, newKeyPassword);\r\n            });\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Generate private key, certificate and return certification request\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainerEntry\r\n     * @instance\r\n     * @param {(FormatedData|GostASN1.CertificationRequest)} req The request templates\r\n     * @param {(Key|CryptoOperationData|string)} keyPassword The secret key or password for decryption\r\n     * @param {(AlgorithmIdentifier|string)} keyAlgorithm The name of provider or algorithm\r\n     * @returns {Promise} Promise to return {@link GostCert.Request}\r\n     */\r\n    generate: function (req, keyPassword, keyAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, certificate, keyInfo;\r\n        return new Promise(call).then(function () {\r\n            if (!(req instanceof cert.Request))\r\n                req = new cert.Request(req);\r\n            // Generate request\r\n            return req.generate(keyAlgorithm);\r\n        }).then(function (key) {\r\n            keyInfo = key;\r\n            return self.setKey(keyInfo, keyPassword);\r\n        }).then(function () {\r\n            // Create the new certificate\r\n            certificate = new cert.X509(req);\r\n            return certificate.sign(keyInfo);\r\n        }).then(function () {\r\n            return self.setCertificate(certificate);\r\n        }).then(function () {\r\n            return req;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Encode objet to container\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {string} format The encoded data format\r\n     * @returns {CryptoOperationData}\r\n     */\r\n    encode: function (format) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        // Encode entries\r\n        var entries = [], entriesSize = 0;\r\n        this.entries.forEach(function (entry) {\r\n            var encoded = entry.encode();\r\n            entriesSize += encoded.byteLength;\r\n            entries.push(encoded);\r\n        });\r\n        var headerSize = this.applicationHeader ? this.applicationHeader.byteLength : 0,\r\n          result = new Uint8Array(12 + headerSize + entriesSize);\r\n        result.set(new Uint8Array(coding.Chars.decode(this.fileType, 'ascii')));\r\n        set32(result.buffer, 4, this.fileVersion);\r\n        set32(result.buffer, 8, headerSize);\r\n        if (headerSize > 0)\r\n            result.set(new Uint8Array(this.applicationHeader), 12);\r\n        var offset = 12 + headerSize;\r\n        entries.forEach(function (entry) {\r\n            result.set(new Uint8Array(entry), offset);\r\n            offset += entry.byteLength;\r\n        });\r\n        if (format === 'PEM')\r\n            return coding.Base64.encode(result.buffer);\r\n        return result.buffer;\r\n    }, // </editor-fold>\r\n    /**\r\n     * Decode container to the object\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {FormatedData} container\r\n     * @returns {GostKeys.ViPNetContainer}\r\n     */\r\n    decode: function (container) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        container = this.constructor.decode(container);\r\n        this.fileType = container.fileType;\r\n        this.fileVersion = container.fileVersion;\r\n        if (container.applicationHeader)\r\n            this.applicationHeader = container.applicationHeader;\r\n        this.entries = container.entries;\r\n    } // </editor-fold>\r\n}, {\r\n    /**\r\n     * Encode object\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {GostKeys.ViPNetContainer} object\r\n     * @param {string} format The encoded data format\r\n     * @returns {CryptoOperationData}\r\n     */\r\n    encode: function (object, format) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return new this(object).encode(format);\r\n    }, // </editor-fold>\r\n    /**\r\n     * Decode container\r\n     *\r\n     * @memberOf GostKeys.ViPNetContainer\r\n     * @instance\r\n     * @param {FormatedData} container\r\n     * @returns {GostKeys.ViPNetContainer}\r\n     */\r\n    decode: function (container) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        if (typeof container === 'string')\r\n            container = coding.Base64.decode(container);\r\n        container = buffer(container);\r\n        // File type\r\n        var fileType = coding.Chars.encode(new Uint8Array(container, 0, 4), 'ascii');\r\n        if (fileType !== 'ITCS' && fileType !== 'PKEY' && fileType !== '_CCK' && fileType !== '_LCK')\r\n            throw new Error('Unsupported ViPNet container type');\r\n        // File version\r\n        var fileVersion = get32(container, 4),\r\n          i = fileVersion >>> 16, j = fileVersion & 0xffff;\r\n        if ((i !== 0 && i !== 1) || j > 0xff)\r\n            throw new Error('Unsupported ViPNet container version');\r\n        // File header\r\n        var headerSize = get32(container, 8), applicationHeader;\r\n        if (headerSize > 0)\r\n            applicationHeader = buffer(new Uint8Array(container, 12, headerSize));\r\n        // Read entries\r\n        var offset = 12 + headerSize, entries = [];\r\n        while (offset < container.byteLength) {\r\n            // Entry size\r\n            var entrySize = get32(container, offset);\r\n            // Decode entry\r\n            entries.push(ViPNetContainerEntry.decode(\r\n              new Uint8Array(container, offset, entrySize + 4)));\r\n            offset = offset + entrySize + 4;\r\n        }\r\n        return new ViPNetContainer({\r\n            fileType: fileType,\r\n            fileVersion: fileVersion,\r\n            applicationHeader: applicationHeader,\r\n            entries: entries\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * A class for password-encrypted private keys in CryptoPro container\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.SignalComPrivateKeyInfo\r\n */\r\nGostKeys.prototype.ViPNetContainer = ViPNetContainer;\r\n\r\n/**\r\n * An implementation of PKCS #12 password encryption/integrity modes. Both input and output are implemented.<br><br>\r\n *\r\n * A PFX object may contain multiple authenticated safes (represented as GostASN1.SafeContents objects).\r\n * Each authenticated safe may have its own encryption method, and contains a number of bags\r\n * (represented as instances of GostASN1.SafeBag). <br>\r\n * Note: the methods and constructors that input a PFX object do not automatically check the validity of the MAC.\r\n * You need to explicitly call verify() to make this check.\r\n *\r\n * @class GostKeys.PKCS12\r\n * @extends GostASN1.PFX\r\n * @param {(FormatedData|GostASN1.PFX)} store\r\n */\r\nfunction PKCS12(store) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    asn1.PFX.call(this, store || {\r\n        version: 3,\r\n        authSafe: {\r\n            contentType: 'data'\r\n        }\r\n    });\r\n} // </editor-fold>\r\n\r\nextend(asn1.PFX, PKCS12, (function () {\r\n\r\n    // <editor-fold defaultstate=\"collapsed\">\r\n    function calcHMAC(derivation, password, content) {\r\n        var hmac = { name: 'HMAC', hash: derivation.hash };\r\n        // Import password for key generation\r\n        return subtle.importKey('raw', passwordData(derivation, password),\r\n          derivation, false, ['deriveKey']).then(function (passwordKey) {\r\n            // Generate key from password.\r\n            return subtle.deriveKey(derivation, passwordKey, hmac, false, ['sign']);\r\n        }).then(function (integrityKey) {\r\n            // Sign MAC\r\n            return subtle.sign(hmac, integrityKey, content);\r\n        });\r\n    }\r\n\r\n    function verifyHMAC(derivation, password, digest, content) {\r\n        return calcHMAC(derivation, password, content).then(function (test) {\r\n            if (!equalBuffers(digest, test))\r\n                throw new Error('Invalid password, MAC is not verified');\r\n        });\r\n    }\r\n\r\n    // </editor-fold>\r\n    return {\r\n        /**\r\n         * Sign the enclosed content with given digest algorithm\r\n         *\r\n         * @memberOf GostKeys.PKCS12\r\n         * @instance\r\n         * @param {string} password The password\r\n         * @param {(AlgorithmIdentifier|string)} digestAlgorithm Digest algorithm or provider name\r\n         * @returns {Promise} Promise to return self object after enclose content\r\n         */\r\n        sign: function (password, digestAlgorithm) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this;\r\n            return new Promise(call).then(function () {\r\n                // Calculate mac for password integrity\r\n                if (password) {\r\n                    // Define digeset algorithm\r\n                    var hash, derivation, digestProvider;\r\n                    if (digestAlgorithm)\r\n                        digestProvider = providers[digestAlgorithm];\r\n                    else\r\n                        digestAlgorithm = providers[options.providerName].digest;\r\n                    if (digestProvider) {\r\n                        hash = digestProvider.digest;\r\n                        derivation = digestProvider.derivation;\r\n                    } else {\r\n                        hash = digestAlgorithm;\r\n                        derivation = { name: 'PFXKDF', hash: hash, iterations: 2000 };\r\n                    }\r\n                    // Add salt\r\n                    derivation = expand(derivation, { salt: getSeed(saltSize(hash)), diversifier: 3 });\r\n                    // Sign HMAC\r\n                    var content = self.authSafe.content;\r\n                    return calcHMAC(derivation, password, content).then(function (digest) {\r\n                        self.macData = {\r\n                            mac: {\r\n                                digestAlgorithm: hash,\r\n                                digest: digest\r\n                            },\r\n                            macSalt: derivation.salt,\r\n                            iterations: derivation.iterations\r\n                        };\r\n                        return self;\r\n                    });\r\n                } else\r\n                    return self;\r\n            });\r\n        }, // </editor-fold>\r\n        /**\r\n         * Verifies the MAC.\r\n         *\r\n         * @memberOf GostKeys.PKCS12\r\n         * @instance\r\n         * @param password The password for mac verification\r\n         * @returns {Promise} Promise to return self object after verification\r\n         */\r\n        verify: function (password) // <editor-fold defaultstate=\"collapsed\">\r\n        {\r\n            var self = this, authSafe = self.authSafe, derivation;\r\n            return new Promise(call).then(function () {\r\n                // Indirectly verification\r\n                if (authSafe.contentType === 'data') {\r\n                    // Check MAC\r\n                    if (self.macData) {\r\n                        if (!password)\r\n                            throw new Error('Password must be defined for the MAC verification');\r\n                        derivation = {\r\n                            name: 'PFXKDF',\r\n                            hash: self.macData.mac.digestAlgorithm,\r\n                            salt: self.macData.macSalt,\r\n                            iterations: self.macData.iterations,\r\n                            diversifier: 3\r\n                        };\r\n                        var content = self.authSafe.content, digest = self.macData.mac.digest;\r\n                        // Verify HMAC with PFXKDF (PKCS#12)\r\n                        return verifyHMAC(derivation, password, digest, content)['catch'](function () {\r\n                            // Verify HMAC with PBKDF2 (TC 26, PKCS#5)\r\n                            derivation.name = 'PBKDF2';\r\n                            return verifyHMAC(derivation, password, digest, content);\r\n                        });\r\n                    } // No check with MAC\r\n                } else\r\n                    throw new Error('Unsupported format');\r\n            }).then(function () {\r\n                return self;\r\n            });\r\n        } // </editor-fold>\r\n    };\r\n})());\r\n\r\n/**\r\n * An implementation of PKCS #12 password encryption/integrity modes.\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.PKCS12\r\n */\r\nGostKeys.prototype.PKCS12 = PKCS12;\r\n\r\n/**\r\n * This type of entry holds a cryptographic PrivateKey, which is optionally stored\r\n * in a protected format to prevent unauthorized access. It is also accompanied by\r\n * a certificate chain for the corresponding public key.\r\n *\r\n * @class GostKeys.KeyEntry\r\n * @property {(GostKeys.PKCS8|GostKeys.PKCS8Encrypted)} key The Private Key\r\n * @property {GostCert.X509[]} certs The X.509 Certificates chain\r\n * @property {GostCert.CRL[]} crls The X.509 CRLs for certificate chain\r\n */\r\n\r\n/**\r\n * This class represents a storage facility for cryptographic keys and certificates.\r\n *\r\n * @class GostKeys.KeyStore\r\n * @param {Object} entries Object contains aliased {@link KeyEntry} objects\r\n */\r\nfunction KeyStore(entries) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    this.entries = {};\r\n    if (entries)\r\n        for (var name in entries)\r\n            this.setEntry(name, entries[name]);\r\n} // </editor-fold>\r\n\r\nextend(Object, KeyStore, {\r\n    /**\r\n     * Lists all the alias names of this keystore.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @returns {string[]}\r\n     */\r\n    aliases: function () // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var result = [];\r\n        for (var name in this.entries)\r\n            result.push(name);\r\n        return result;\r\n    }, // </editor-fold>\r\n    /**\r\n     * Checks if the given alias exists in this keystore.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {string} alias The alias name\r\n     * @returns {boolean} True if the alias exists, false otherwise\r\n     */\r\n    containsAlias: function (alias) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return !!this.entries[alias];\r\n    }, // </editor-fold>\r\n    /**\r\n     * Deletes the entry identified by the given alias from this keystore.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {string} alias The alias name\r\n     */\r\n    deleteEntry: function (alias) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        delete this.entries[alias];\r\n    }, // </editor-fold>\r\n    /**\r\n     * Saves a keystore Entry under the specified alias.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {string} alias The alias name\r\n     * @param {GostKeys.KeyEntry} entry The entry\r\n     */\r\n    setEntry: function (alias, entry)  // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var r = {};\r\n        // Keys\r\n        if (entry.key) {\r\n            try {\r\n                r.key = new PKCS8(entry.key, true); // Private key\r\n            } catch (e) {\r\n                try {\r\n                    r.key = new PKCS8Encrypted(entry.key, true); // Encrypted private key\r\n                } catch (e1) {\r\n                    if (entry.key instanceof CryptoOperationData)\r\n                        r.key = entry.key; // Secret key\r\n                    else\r\n                        throw new Error('Unknown Key format');\r\n                }\r\n            }\r\n        }\r\n        // Certs\r\n        if (entry.certs) {\r\n            var certs = entry.certs instanceof Array ? entry.certs : [entry.certs];\r\n            for (var i = 0; i < certs.length; i++) {\r\n                try {\r\n                    certs[i] = new cert.X509(certs[i]);\r\n                } catch (e) {\r\n                }\r\n            }\r\n            r.certs = certs;\r\n        }\r\n        // CRLs\r\n        if (entry.crls) {\r\n            var crls = entry.crls instanceof Array ? entry.crls : [entry.crls];\r\n            for (var i = 0; i < crls.length; i++) {\r\n                try {\r\n                    crls[i] = new cert.CRL(crls[i]);\r\n                } catch (e) {\r\n                }\r\n            }\r\n            r.crls = crls;\r\n        }\r\n        this.entries[alias] = r;\r\n    }, // </editor-fold>\r\n    /**\r\n     * Gets a keystore Entry for the specified alias\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {string} alias The alias name\r\n     * @returns {GostKeys.KeyEntry} The entry\r\n     */\r\n    getEntry: function (alias) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        return this.entries[alias];\r\n    }, // </editor-fold>\r\n    /**\r\n     * Loads this KeyStore from the given input stream.<br><br>\r\n     * A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device),\r\n     * or to check the integrity of the keystore data. If a password is not given for integrity checking,\r\n     * then integrity checking is not performed.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {(FormatedData|GostKeys.PKSC12)} store The input stream from which the keystore is loaded\r\n     * @param {string} password The password used to check the integrity of the keystore, the password used to unlock the keystore\r\n     * @returns {Promise} Promise to return self object after store loaded\r\n     */\r\n    load: function (store, password) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this;\r\n        return new Promise(call).then(function () {\r\n            // Verify store file\r\n            store = new PKCS12(store);\r\n            return store.verify(password);\r\n        }).then(function () {\r\n            if (store.authSafe.contentType !== 'data')\r\n                throw new Error('Unsupported PFX format');\r\n            var authSafe = asn1.AuthenticatedSafe.decode(store.authSafe.content).object,\r\n              promises = [];\r\n            // Decrypt encrypted content\r\n            authSafe.forEach(function (info) {\r\n                if (info.contentType === 'data')\r\n                    promises.push(new cms.DataContentInfo(info));\r\n                else if (info.contentType === 'encryptedData')\r\n                    promises.push(new cms.EncryptedDataContentInfo(info).getEnclosed(password));\r\n                else\r\n                    throw new Error('Unsupported PFX format');\r\n            });\r\n            return Promise.all(promises);\r\n        }).then(function (contents) {\r\n            // Read bags\r\n            var entries = {};\r\n            contents.forEach(function (info) {\r\n                var bags = asn1.SafeContents.decode(info.content).object;\r\n                bags.forEach(function (bag) {\r\n                    var keyId = coding.Hex.encode((bag.bagAttributes && bag.bagAttributes.localKeyId)\r\n                      || getSeed(4), true), entry = entries[keyId] || (entries[keyId] = {});\r\n                    switch (bag.bagId) {\r\n                        case 'keyBag':\r\n                            entry.key = new PKCS8(bag.bagValue);\r\n                            break;\r\n                        case 'pkcs8ShroudedKeyBag':\r\n                            entry.key = new PKCS8Encrypted(bag.bagValue);\r\n                            break;\r\n                        case 'secretBag':\r\n                            if (bag.bagValue.secretTypeId === 'secret')\r\n                                entry.key = bag.bagValue.secretValue;\r\n                            break;\r\n                        case 'certBag':\r\n                            var certs = entry.certs || (entry.certs = []);\r\n                            if (bag.bagValue.certId === 'x509Certificate')\r\n                                certs.push(new cert.X509(bag.bagValue.certValue));\r\n                            break;\r\n                        case 'crlBag':\r\n                            var crls = entry.crls || (entry.crls = []);\r\n                            if (bag.bagValue.crlId === 'x509CRL')\r\n                                crls.push(new cert.CRL(bag.bagValue.crlValue));\r\n                            break;\r\n                    }\r\n                    if (bag.bagAttributes && bag.bagAttributes.friendlyName)\r\n                        entry.friendlyName = bag.bagAttributes.friendlyName;\r\n                });\r\n            });\r\n            // Decrypt keys\r\n            var promises = [];\r\n            for (var name in entries)\r\n                promises.push((function (entry) {\r\n                    // Try to decrypt private key\r\n                    if (entry.key instanceof PKCS8Encrypted)\r\n                        return entry.key.getKey(password).then(function (key) {\r\n                            // Return entry with decrypted key\r\n                            entry.key = key;\r\n                            return entry;\r\n                        })['catch'](function () {\r\n                            // Return entry with encrypted key\r\n                            return entry;\r\n                        });\r\n                    else\r\n                        return entry;\r\n                })(entries[name]));\r\n            return Promise.all(promises);\r\n        }).then(function (entries) {\r\n            // Set alias names\r\n            entries.forEach(function (entry) {\r\n                var friendlyName = entry.friendlyName;\r\n                if (friendlyName) {\r\n                    delete entry.friendlyName;\r\n                    self.entries[friendlyName] = entry;\r\n                } else\r\n                    self.entries[generateUUID()] = entry;\r\n            });\r\n            return self;\r\n        });\r\n    }, // </editor-fold>\r\n    /**\r\n     * Stores this keystore to the given output stream, and protects its integrity with the given password.\r\n     *\r\n     * @memberOf GostKeys.KeyStore\r\n     * @instance\r\n     * @param {string} password The password to generate the keystore integrity check\r\n     * @param {string} digestAlgortihm The digest algorithm or provider name for integrity check\r\n     * @param {string} encryptionAlgortihm The encryption algorithm or provider name for encrypt certificates\r\n     * @returns {Promise} Promise to return {@link GostKeyst.PKCS12}\r\n     */\r\n    store: function (password, digestAlgortihm, encryptionAlgortihm) // <editor-fold defaultstate=\"collapsed\">\r\n    {\r\n        var self = this, keys = [], contents = [], authSafe = [];\r\n        return new Promise(call).then(function () {\r\n            // Define encryption algorithm\r\n            if (encryptionAlgortihm)\r\n                encryptionAlgortihm = providers[encryptionAlgortihm] ?\r\n                  providers[encryptionAlgortihm].pbes : encryptionAlgortihm;\r\n            else if (digestAlgortihm)\r\n                encryptionAlgortihm = providers[digestAlgortihm] ?\r\n                  providers[digestAlgortihm].pbes : providers[options.providerName].pbes;\r\n            else\r\n                encryptionAlgortihm = providers[options.providerName].pbes;\r\n            // Prepare keys and certs\r\n            var index = 1;\r\n            for (var name in self.entries) {\r\n                var keyId = new Uint32Array([index]), entry = self.entries[name];\r\n                if (entry.key) {\r\n                    (function (key, attributes) {\r\n                        if (key instanceof CryptoOperationData)\r\n                            contents.push({\r\n                                bagId: 'secretBag',\r\n                                bagValue: {\r\n                                    secretTypeId: 'secret',\r\n                                    secretValue: key,\r\n                                    bagAttributes: attributes\r\n                                }\r\n                            });\r\n                        else if (key instanceof PKCS8) {\r\n                            if (encryptionAlgortihm && password)\r\n                                keys.push(new PKCS8Encrypted().setKey(key, password, encryptionAlgortihm).then(function (encryptedKey) {\r\n                                    return {\r\n                                        bagId: 'pkcs8ShroudedKeyBag',\r\n                                        bagValue: encryptedKey,\r\n                                        bagAttributes: attributes\r\n                                    };\r\n                                }));\r\n                            else\r\n                                keys.push({\r\n                                    bagId: 'keyBag',\r\n                                    bagValue: key,\r\n                                    bagAttributes: attributes\r\n                                });\r\n                        } else if (key instanceof PKCS8Encrypted)\r\n                            keys.push({\r\n                                bagId: 'pkcs8ShroudedKeyBag',\r\n                                bagValue: key,\r\n                                bagAttributes: attributes\r\n                            });\r\n                    })(entry.key, {\r\n                        localKeyId: keyId,\r\n                        friendlyName: name\r\n                    });\r\n                }\r\n                if (entry.certs) {\r\n                    entry.certs.forEach(function (certificate) {\r\n                        var attributes = { localKeyId: keyId };\r\n                        if (certificate instanceof cert.X509)\r\n                            contents.push({\r\n                                bagId: 'certBag',\r\n                                bagValue: {\r\n                                    certId: 'x509Certificate',\r\n                                    certValue: certificate\r\n                                },\r\n                                bagAttributes: attributes\r\n                            });\r\n                    });\r\n                }\r\n                if (entry.crls) {\r\n                    entry.crls.forEach(function (crl) {\r\n                        var attributes = { localKeyId: keyId };\r\n                        if (crl instanceof cert.CRL)\r\n                            contents.push({\r\n                                bagId: 'crlBag',\r\n                                bagValue: {\r\n                                    crlId: 'x509CRL',\r\n                                    crlValue: crl\r\n                                },\r\n                                bagAttributes: attributes\r\n                            });\r\n                    });\r\n                }\r\n            }\r\n            // Encrypt keys\r\n            if (keys.length > 0)\r\n                return Promise.all(keys);\r\n        }).then(function (bags) {\r\n            if (bags) {\r\n                var keyContents = asn1.SafeContents.encode(bags);\r\n                authSafe.push(new cms.DataContentInfo({\r\n                    contentType: 'data',\r\n                    content: keyContents\r\n                }));\r\n            }\r\n\r\n            // Encrypt certificates and crls\r\n            if (contents.length > 0) {\r\n                contents = asn1.SafeContents.encode(contents);\r\n                if (encryptionAlgortihm && password)\r\n                    return new cms.EncryptedDataContentInfo().encloseContent(\r\n                      contents, password, encryptionAlgortihm);\r\n                else\r\n                    return new cms.DataContentInfo().encloseContent(contents);\r\n            }\r\n        }).then(function (contents) {\r\n            authSafe.push(contents);\r\n            // Set enclosed data\r\n            authSafe = new asn1.AuthenticatedSafe(authSafe);\r\n            var store = new PKCS12();\r\n            store.authSafe = {\r\n                contentType: 'data',\r\n                content: authSafe.encode()\r\n            };\r\n            // Return new PKCS12 with enclosed authenificated content\r\n            return store.sign(password, digestAlgortihm);\r\n        });\r\n    } // </editor-fold>\r\n});\r\n\r\n/**\r\n * This class represents a storage facility for cryptographic keys and certificates.\r\n *\r\n * @memberOf GostKeys\r\n * @type GostKeys.KeyStore\r\n */\r\nGostKeys.prototype.KeyStore = KeyStore;\r\n\r\nexport const gostKeysInstance = new GostKeys();\r\n","// Expand javascript object\r\nexport function expand() {\r\n    var r = {};\r\n    for (var i = 0, n = arguments.length; i < n; i++) {\r\n        var item = arguments[i];\r\n        if (typeof item === 'object')\r\n            for (var name in item)\r\n                r[name] = item[name];\r\n    }\r\n    return r;\r\n}\r\n","import { gostCrypto as CryptoGost } from './crypto/gostCrypto';\r\nimport { gostEngine as GostEngine } from './engine/gostEngineSync';\r\n\r\nexport { CryptoGost, GostEngine }\r\n"],"sourceRoot":""}