{"version":3,"sources":["webpack://crypto-gost-js/webpack/universalModuleDefinition","webpack://crypto-gost-js/webpack/bootstrap","webpack://crypto-gost-js/./src/utils/errors.js","webpack://crypto-gost-js/./src/utils/seeds.js","webpack://crypto-gost-js/./src/engine/gostDigest.js","webpack://crypto-gost-js/./src/engine/gostCipher.js","webpack://crypto-gost-js/./src/utils/environment.js","webpack://crypto-gost-js/./src/gostRandom.js","webpack://crypto-gost-js/./src/engine/gostSign.js","webpack://crypto-gost-js/./src/engine/gostEngineSync.js","webpack://crypto-gost-js/external \"crypto\"","webpack://crypto-gost-js/./src/crypto-gost-wrapper.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","NotSupportedError","Error","DataError","OperationError","getSeed","randomSeed","_gostRandom","length","gostRandom","GostRandom","Uint8Array","Math","ceil","getRandomValues","e","GostDigest","_seeds","_gostCipher","_errors","arraycopy","sOfs","dOfs","len","swap","src","dst","buffer","b64decode","k","m3","m4","u24","j","charCodeAt","ArrayBuffer","byteOffset","byteLength","digest2012","buffer0","Int32Array","buffer512","C","h","Array","Ax","sigma","N","get8","x","add512","y","CF","w0","w1","get512","copy512","new512","xor512","XLPS","z0","z1","data","Ki","g","stage2","stage3","b0","b","m0","this","bitLength","q","digest","procreator","digest94","H","M","Sum","P","K","A","a","fw","wS","Uint16Array","wS15","encrypt","sOff","dOff","cipher","process","S","U","V","W","tmpA","summing","carry","sum","C2","L","n8","floor","digestSHA1","state","block","Uint32Array","common","w","f","f1","f2","f3","f4","cycle","fn","swap32","dlen","ofs","signHMAC","k0","set","s0","s1","verifyHMAC","signature","hmac","sign","test","generateKey","deriveBitsPFXKDF","baseKey","u","v","iterations","ID","diversifier","D","S0","salt","slen","P0","plen","I","B","cf","R","deriveBitsKDF","rlen","label","context","blen","result","deriveBitsPBKDF1","hLen","dkLen","T","DK","deriveBitsPBKDF2","Z","min","rLen","deriveBitsCP","deriveKey","deriveBits","keySize","algorithm","version","sBox","toUpperCase","GostCipher","verify","CryptoOperationData","littleEndian","DataView","setInt16","Int16Array","defaultIV","sBoxes","E-TEST","E-A","E-B","E-C","E-D","E-SC","E-Z","D-TEST","D-A","D-SC","signed","unsigned","byteArray","cloneArray","intArray","defaultIV128","multTable","gmul","counter","kB","funcR","funcReverseR","tmp","kPi","kReversePi","funcS","funcReverseS","funcX","funcL","funcReverseL","funcLSX","funcReverseLSX","funcF","inputKey","inputKeySecond","iterationConst","funcC","number","keySchedule128","keys","j0","j1","process128","round","cm","om","process89","process15","keySchedule89","sch","keySchedule15","keyScheduleRC2","PITABLE","T1","effectiveLength","T8","TM","pow","processRC2","reverse","rol","ror","mix","mash","perform","method","count","encryptECB","pad","blockSize","keySchedule","decryptECB","unpad","encryptCFB","iv","shiftBits","cb","keyMeshing","decryptCFB","processOFB","processCTR89","Int8Array","syn","processCTR15","encryptCBC","decryptCBC","next","processMAC89","zeroPad","processKeyMAC15","t1","processMAC15","bitPad","signMAC","macLength","processMAC","mac","verifyMAC","wrapKeyGOST","kek","cek","ukm","enc","unwrapKeyGOST","check","diversifyKEK","wrapKeyCP","dek","unwrapKeyCP","packKeySC","unpacked","mcount","zero32","mask","unpackKeySC","packed","magic","names","wrapKeySC","unwrapKeySC","generateWrappingKeySC","maskKey","inverse","m32","k32","r32","wrapKeyMask","unwrapKeyMask","keyMeshingCP","noKeyMeshing","noPad","pkcs5Pad","nb","pkcs5Unpad","bitUnpad","randomPad","blockLength","keyWrapping","padding","decrypt","wrapKey","unwrapKey","sBoxName","SyntaxError","getRoot","getCryptoModule","isInNode","isBrowser","isInWebWorker","self","crypto","msCrypto","undefined","_typeof","window","importScripts","_environment","randomRing","seed","getIndex","setIndex","document","addEventListener","Date","getTime","clientX","pageX","clientY","pageY","keyCode","TypeMismatchError","QuotaExceededError","rootCryptoModule","array","u8","random","GostSign","_gostDigest","ECGostParams","S-256-TEST","S-256-A","S-256-B","S-256-C","P-256","T-512-TEST","T-512-A","T-512-B","GostParams","S-TEST","modulusLength","S-A","S-B","S-C","S-D","X-A","X-B","X-C","DB","DM","DV","FV","F1","F2","am","xl","xh","nbi","words","copyTo","copy","setInt","nbv","ZERO","ONE","THREE","clamp","subTo","sub","addTo","add","negTo","neg","absTo","abs","compare","equals","max","nbits","dshlTo","dshrTo","shlTo","bs","cbs","bm","ds","shrTo","shl","shr","mulTo","mul","sqrTo","sqr","divRemTo","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","qd","modTo","mod","div","isEven","isZero","sig","invMod","ac","subtract","testBit","nothing","extend","Classic","convert","revert","reduce","invDig","Montgomery","mp","mpl","mph","um","mt2","u0","dAddOffset","mulLowerTo","mulUpperTo","Barrett","r2","q3","mu","expMod","z","k1","km","g2","is1","newFE","copyFE","negFE","addFE","subFE","mulFE","sqrFE","shlFE","invFE","newEC","curve","getX","point","zinv","getY","isInfinity","getInfinity","infinity","equalsEC","negEC","addEC","twiceEC","x1","y1","v2","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","mulEC","hBit","eBit","mul2AndAddEC","Q","mulTwoEC","both","newCurve","atobi","sh","bitoa","push","r8","htobi","Number","replace","mi","charAt","parseInt","bitoh","toString","bitoi","itobi","hash","to2","from2","privateKey","alpha","zetta","publicKey","z2","k2","generateMaskKey","derive","peer_Q","peer_y","namedParam","namedCurve","param","hashLen","keyLen","keyLength","String","_gostSign","defineEngine","gostEngine","execute","args","engine","apply","getGostCipher","getGostDigest","getGostSign","require","_gostEngineSync","defaultGostSignAlgorithm","id","CryptoGostAPI","GostEngine","message"],"mappings":"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,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAE/EC,OACI,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAE/EC,OACI,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,IAE/EC,OACI,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAE/EC,OACI,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,IAE/EC,QACI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,IAE/EC,OACI,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAC3E,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,GAG/EC,UACI,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,GAAK,GAAK,EAAK,GAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,IAE/EC,OACI,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAC3E,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,GAAK,EAC3E,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAC3E,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,IAE/EC,QACI,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAAK,GAC3E,GAAK,EAAK,GAAK,EAAK,EAAK,GAAK,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,GAAK,EAC3E,EAAK,GAAK,GAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,EAAK,GAAK,EAAK,EAAK,EAAK,EAC3E,EAAK,EAAK,EAAK,GAAK,EAAK,EAAK,EAAK,GAAK,GA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","file":"CryptoGost-light.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"crypto-gost-js\"] = factory();\n\telse\n\t\troot[\"crypto-gost-js\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","export class NotSupportedError extends Error {\r\n}\r\n\r\nexport class DataError extends Error {\r\n}\r\n\r\nexport class OperationError extends Error {\r\n}\r\n","import { GostRandom } from '../gostRandom';\r\n\r\n// Get random values\r\nexport function getSeed(length) {\r\n    const gostRandom = new GostRandom();\r\n    try {\r\n        const d = new Uint8Array(Math.ceil(length / 8));\r\n        gostRandom.getRandomValues(d);\r\n        return d;\r\n    } catch (e) {\r\n        throw new Error('Error occurred during random values generation');\r\n    }\r\n}\r\n\r\n// Set random values into Uint8Arry\r\n// Random generator\r\nexport function randomSeed(e) {\r\n    try {\r\n        const gostRandom = new GostRandom();\r\n        return gostRandom.getRandomValues(e);\r\n    } catch (e) {\r\n        throw new Error('Error occurred during random values generation');\r\n    }\r\n}\r\n","/**\r\n * @file GOST R 34.11-94 / GOST R 34.11-12 implementation\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { getSeed } from '../utils/seeds';\r\nimport { GostCipher } from './gostCipher';\r\nimport { NotSupportedError, DataError } from '../utils/errors';\r\n\r\n/*\r\n * GOST R 34.11\r\n * Common methods\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Copy len values from s[sOfs] to d[dOfs]\r\nfunction arraycopy(s, sOfs, d, dOfs, len) {\r\n    for (var i = 0; i < len; i++)\r\n        d[dOfs + i] = s[sOfs + i];\r\n}\r\n\r\n// Swap bytes in buffer\r\nfunction swap(s) {\r\n    var src = new Uint8Array(s),\r\n      dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\n// Convert BASE64 string to Uint8Array\r\n// for decompression of constants and precalc values\r\nfunction b64decode(s) {\r\n    // s = s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\r\n    var n = s.length,\r\n      k = n * 3 + 1 >> 2, r = new Uint8Array(k);\r\n\r\n    for (var m3, m4, u24 = 0, j = 0, i = 0; i < n; i++) {\r\n        m4 = i & 3;\r\n        var c = s.charCodeAt(i);\r\n\r\n        c = c > 64 && c < 91 ?\r\n          c - 65 : c > 96 && c < 123 ?\r\n            c - 71 : c > 47 && c < 58 ?\r\n              c + 4 : c === 43 ?\r\n                62 : c === 47 ?\r\n                  63 : 0;\r\n\r\n        u24 |= c << 18 - 6 * m4;\r\n        if (m4 === 3 || n - i === 1) {\r\n            for (m3 = 0; m3 < 3 && j < k; m3++, j++) {\r\n                r[j] = u24 >>> (16 >>> m3 & 24) & 255;\r\n            }\r\n            u24 = 0;\r\n\r\n        }\r\n    }\r\n    return r.buffer;\r\n}\r\n\r\n// Check buffer\r\nfunction buffer(d) {\r\n    if (d instanceof ArrayBuffer)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof ArrayBuffer)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('ArrayBuffer or ArrayBufferView required');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11 or GOST R 34.11-12<br><br>\r\n *\r\n * http://tools.ietf.org/html/rfc6986\r\n *\r\n * The digest method returns digest data in according to GOST R 4311-2012.<br>\r\n * Size of digest also defines in algorithm name.\r\n *  <ul>\r\n *      <li>GOST R 34.11-256-12 - 256 bits digest</li>\r\n *      <li>GOST R 34.11-512-12 - 512 bits digest</li>\r\n *  </ul>\r\n *\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digest2012 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      // Constants\r\n      var buffer0 = new Int32Array(16); // [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      var buffer512 = new Int32Array(16); // [512, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n      buffer512[0] = 512;\r\n\r\n      // Constant C\r\n      var C = (function (s) {\r\n          var h = new Int32Array(b64decode(s)),\r\n            r = new Array(12);\r\n          for (var i = 0; i < 12; i++)\r\n              r[i] = new Int32Array(h.buffer, i * 64, 16);\r\n          return r;\r\n      })(\r\n        'B0Wm8lllgN0jTXTMNnR2BRXTYKQIKkKiAWlnkpHgfEv8xIV1jbhOcRbQRS5DdmovH3xlwIEvy+vp2soe2lsIsbebsSFwBHnmVs3L1xui3VXKpwrbwmG1XFiZ1hJrF7WaMQG1Fg9e1WGYKyMKcur+89e1cA9GneNPGi+dqYq1o2+yCroK9ZYemTHbeoZD9LbCCdtiYDc6ycGxnjWQ5A/i03t7KbEUderyix+cUl9e8QY1hD1qKPw5Cscvzius3HT1LtHjhLy+DCLxN+iToepTNL4DUpMzE7fYddYD7YIs16k/NV5orRxynX08XDN+hY5I3eRxXaDhSPnSZhXos98f71f+bHz9WBdg9WPqqX6iVnoWGicjtwD/36P1OiVHF82/vf8PgNc1njVKEIYWHxwVf2MjqWwMQT+amUdHraxr6ktufWRGekBo+jVPkDZyxXG/tsa+wmYf8gq0t5oct6b6z8aO8Jq0mn8YbKRCUfnEZi3AOTB6O8Okb9nTOh2urk+uk9QUOk1WhojzSjyiTEUXNQQFSiiDaUcGNyyCLcWrkgnJk3oZMz5H08mHv+bHxp45VAkkv/6GrFHsxaruFg7H9B7nAr/UDX+k' +\r\n        '2ahRWTXCrDYvxKXRK43RaZAGm5LLK4n0msTbTTtEtIke3jaccfi3TkFBbgwCqucDp8mTTUJbH5vbWiODUURhcmAqH8uS3DgOVJwHppqKK3uxzrLbC0QKgIQJDeC3Vdk8JEKJJRs6fTreXxbs2JpMlJsiMRZUWo837ZxFmPvHtHTDtjsV0fqYNvRSdjswbB56SzNprwJn558DYTMbiuH/H9t4iv8c50GJ8/PkskjlKjhSbwWApt6+qxst84HNpMprXdhvwEpZot6Ybkd9Hc2678q5SOrvcR2KeWaEFCGAASBhB6vru2v62JT+WmPNxgIw+4nI79CezXsg1xvxSpK8SJkbstnVF/T6UijhiKqkHeeGzJEYne+AXZufITDUEiD4dx3fvDI8pM16sUkEsIAT0roxFvFn5443');\r\n\r\n      // Precalc Ax\r\n      var Ax = (function (s) {\r\n          return new Int32Array(b64decode(s));\r\n      })(\r\n        '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'); //==\r\n\r\n      // Variables\r\n      var sigma, N, h;\r\n\r\n      // 64bit tools\r\n      function get8(x, i) {\r\n          return (x[i >> 2] >> ((i & 3) << 3)) & 0xff;\r\n      }\r\n\r\n      // 512bit tools\r\n      function add512(x, y) {\r\n          var CF = 0, w0, w1;\r\n          for (var i = 0; i < 16; i++) {\r\n              w0 = (x[i] & 0xffff) + (y[i] & 0xffff) + (CF || 0);\r\n              w1 = (x[i] >>> 16) + (y[i] >>> 16) + (w0 >>> 16);\r\n              x[i] = (w0 & 0xffff) | (w1 << 16);\r\n              CF = (w1 >>> 16);\r\n          }\r\n      }\r\n\r\n      function get512(d) {\r\n          return new Int32Array(d.buffer, d.byteOffset, 16);\r\n      }\r\n\r\n\r\n      function copy512(r, d) {\r\n          for (var i = 0; i < 16; i++)\r\n              r[i] = d[i];\r\n      }\r\n\r\n      function new512() {\r\n          return new Int32Array(16);\r\n      }\r\n\r\n      // Core private algorithms\r\n      function xor512(x, y) {\r\n          for (var i = 0; i < 16; i++)\r\n              x[i] = x[i] ^ y[i];\r\n      }\r\n\r\n\r\n      var r = new512();\r\n\r\n      function XLPS(x, y) {\r\n          copy512(r, x);\r\n          xor512(r, y);\r\n          for (var i = 0; i < 8; i++) {\r\n              var z0, z1, k = get8(r, i) << 1;\r\n              z0 = Ax[k];\r\n              z1 = Ax[k + 1];\r\n              for (var j = 1; j < 8; j++) {\r\n                  k = (j << 9) + (get8(r, (j << 3) + i) << 1);\r\n                  z0 = z0 ^ Ax[k];\r\n                  z1 = z1 ^ Ax[k + 1];\r\n              }\r\n              x[i << 1] = z0;\r\n              x[(i << 1) + 1] = z1;\r\n          }\r\n      }\r\n\r\n      var data = new512(), Ki = new512();\r\n\r\n      function g(h, N, m) {\r\n          var i;\r\n\r\n          copy512(data, h);\r\n          XLPS(data, N);\r\n\r\n          /* Starting E() */\r\n          copy512(Ki, data);\r\n          XLPS(data, m);\r\n\r\n          for (i = 0; i < 11; i++) {\r\n              XLPS(Ki, C[i]);\r\n              XLPS(data, Ki);\r\n          }\r\n\r\n          XLPS(Ki, C[11]);\r\n          xor512(data, Ki);\r\n          /* E() done */\r\n\r\n          xor512(h, data);\r\n          xor512(h, m);\r\n      }\r\n\r\n      // Stages\r\n      function stage2(d) {\r\n          var m = get512(d);\r\n          g(h, N, m);\r\n\r\n          add512(N, buffer512);\r\n          add512(sigma, m);\r\n      }\r\n\r\n      function stage3(d) {\r\n          var n = d.length;\r\n          if (n > 63)\r\n              return;\r\n\r\n          var b0 = new Int32Array(16);\r\n          b0[0] = n << 3;\r\n\r\n          var b = new Uint8Array(64);\r\n          for (var i = 0; i < n; i++)\r\n              b[i] = d[i];\r\n          b[n] = 0x01;\r\n\r\n          var m = get512(b), m0 = get512(b0);\r\n          g(h, N, m);\r\n\r\n          add512(N, m0);\r\n          add512(sigma, m);\r\n\r\n          g(h, buffer0, N);\r\n          g(h, buffer0, sigma);\r\n      }\r\n\r\n      return function (data) {\r\n\r\n          // Cleanup\r\n          sigma = new512();\r\n          N = new512();\r\n\r\n          // Initial vector\r\n          h = new512();\r\n          for (var i = 0; i < 16; i++)\r\n              if (this.bitLength === 256)\r\n                  h[i] = 0x01010101;\r\n\r\n          // Make data\r\n          var d = new Uint8Array(buffer(data));\r\n\r\n          var n = d.length;\r\n          var r = n % 64, q = (n - r) / 64;\r\n\r\n          for (var i = 0; i < q; i++)\r\n              stage2.call(this, new Uint8Array(d.buffer, i * 64, 64));\r\n\r\n          stage3.call(this, new Uint8Array(d.buffer, q * 64, r));\r\n\r\n          var digest;\r\n          if (this.bitLength === 256) {\r\n              digest = new Int32Array(8);\r\n              for (var i = 0; i < 8; i++)\r\n                  digest[i] = h[8 + i];\r\n          } else {\r\n              digest = new Int32Array(16);\r\n              for (var i = 0; i < 16; i++)\r\n                  digest[i] = h[i];\r\n          }\r\n          // Swap hash for SignalCom\r\n          if (this.procreator === 'SC' || this.procreator === 'VN')\r\n              return swap(digest.buffer);\r\n          else\r\n              return digest.buffer;\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-94<br><br>\r\n *\r\n * http://tools.ietf.org/html/rfc5831\r\n *\r\n * The digest method returns digest data in according to GOST R 34.11-94.\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digest94 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      var C, H, M, Sum;\r\n\r\n      // (i + 1 + 4(k - 1)) = 8i + k      i = 0-3, k = 1-8\r\n      function P(d) {\r\n          var K = new Uint8Array(32);\r\n\r\n          for (var k = 0; k < 8; k++) {\r\n              K[4 * k] = d[k];\r\n              K[1 + 4 * k] = d[8 + k];\r\n              K[2 + 4 * k] = d[16 + k];\r\n              K[3 + 4 * k] = d[24 + k];\r\n          }\r\n\r\n          return K;\r\n      }\r\n\r\n      //A (x) = (x0 ^ x1) || x3 || x2 || x1\r\n      function A(d) {\r\n          var a = new Uint8Array(8);\r\n\r\n          for (var j = 0; j < 8; j++) {\r\n              a[j] = (d[j] ^ d[j + 8]);\r\n          }\r\n\r\n          arraycopy(d, 8, d, 0, 24);\r\n          arraycopy(a, 0, d, 24, 8);\r\n\r\n          return d;\r\n      }\r\n\r\n      // (in:) n16||..||n1 ==> (out:) n1^n2^n3^n4^n13^n16||n16||..||n2\r\n      function fw(d) {\r\n          var wS = new Uint16Array(d.buffer, 0, 16);\r\n          var wS15 = wS[0] ^ wS[1] ^ wS[2] ^ wS[3] ^ wS[12] ^ wS[15];\r\n          arraycopy(wS, 1, wS, 0, 15);\r\n          wS[15] = wS15;\r\n      }\r\n\r\n      //Encrypt function, ECB mode\r\n      function encrypt(key, s, sOff, d, dOff) {\r\n          var t = new Uint8Array(8);\r\n          arraycopy(d, dOff, t, 0, 8);\r\n          var r = new Uint8Array(this.cipher.encrypt(key, t));\r\n          arraycopy(r, 0, s, sOff, 8);\r\n      }\r\n\r\n      // block processing\r\n      function process(d, dOff) {\r\n          var S = new Uint8Array(32), U = new Uint8Array(32),\r\n            V = new Uint8Array(32), W = new Uint8Array(32);\r\n\r\n          arraycopy(d, dOff, M, 0, 32);\r\n\r\n          //key step 1\r\n\r\n          // H = h3 || h2 || h1 || h0\r\n          // S = s3 || s2 || s1 || s0\r\n          arraycopy(H, 0, U, 0, 32);\r\n          arraycopy(M, 0, V, 0, 32);\r\n          for (var j = 0; j < 32; j++) {\r\n              W[j] = (U[j] ^ V[j]);\r\n          }\r\n          // Encrypt GOST 28147-ECB\r\n          encrypt.call(this, P(W), S, 0, H, 0); // s0 = EK0 [h0]\r\n\r\n          //keys step 2,3,4\r\n          for (var i = 1; i < 4; i++) {\r\n              var tmpA = A(U);\r\n              for (var j = 0; j < 32; j++) {\r\n                  U[j] = (tmpA[j] ^ C[i][j]);\r\n              }\r\n              V = A(A(V));\r\n              for (var j = 0; j < 32; j++) {\r\n                  W[j] = (U[j] ^ V[j]);\r\n              }\r\n              // Encrypt GOST 28147-ECB\r\n              encrypt.call(this, P(W), S, i * 8, H, i * 8); // si = EKi [hi]\r\n          }\r\n\r\n          // x(M, H) = y61(H^y(M^y12(S)))\r\n          for (var n = 0; n < 12; n++) {\r\n              fw(S);\r\n          }\r\n          for (var n = 0; n < 32; n++) {\r\n              S[n] = (S[n] ^ M[n]);\r\n          }\r\n\r\n          fw(S);\r\n\r\n          for (var n = 0; n < 32; n++) {\r\n              S[n] = (H[n] ^ S[n]);\r\n          }\r\n          for (var n = 0; n < 61; n++) {\r\n              fw(S);\r\n          }\r\n          arraycopy(S, 0, H, 0, H.length);\r\n      }\r\n\r\n\r\n      //  256 bitsblock modul -> (Sum + a mod (2^256))\r\n      function summing(d) {\r\n          var carry = 0;\r\n          for (var i = 0; i < Sum.length; i++) {\r\n              var sum = (Sum[i] & 0xff) + (d[i] & 0xff) + carry;\r\n\r\n              Sum[i] = sum;\r\n\r\n              carry = sum >>> 8;\r\n          }\r\n      }\r\n\r\n      // reset the chaining variables to the IV values.\r\n      var C2 = new Uint8Array([\r\n          0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF,\r\n          0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00,\r\n          0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF,\r\n          0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF\r\n      ]);\r\n\r\n      return function (data) {\r\n\r\n          // Reset buffers\r\n          H = new Uint8Array(32);\r\n          M = new Uint8Array(32);\r\n          Sum = new Uint8Array(32);\r\n\r\n          // Reset IV value\r\n          C = new Array(4);\r\n          for (var i = 0; i < 4; i++)\r\n              C[i] = new Uint8Array(32);\r\n          arraycopy(C2, 0, C[2], 0, C2.length);\r\n\r\n          // Make data\r\n          var d = new Uint8Array(buffer(data));\r\n\r\n          var n = d.length;\r\n          var r = n % 32, q = (n - r) / 32;\r\n\r\n          // Proccess full blocks\r\n          for (var i = 0; i < q; i++) {\r\n              var b = new Uint8Array(d.buffer, i * 32, 32);\r\n\r\n              summing.call(this, b); // calc sum M\r\n              process.call(this, b, 0);\r\n          }\r\n\r\n          // load d the remadder with padding zero;\r\n          if (r > 0) {\r\n              var b = new Uint8Array(d.buffer, q * 32),\r\n                c = new Uint8Array(32);\r\n              arraycopy(b, 0, c, 0, r);\r\n              summing.call(this, c); // calc sum M\r\n              process.call(this, c, 0);\r\n\r\n          }\r\n\r\n          // get length into L (byteCount * 8 = bitCount) in little endian.\r\n          var L = new Uint8Array(32), n8 = n * 8, k = 0;\r\n          while (n8 > 0) {\r\n              L[k++] = n8 & 0xff;\r\n              n8 = Math.floor(n8 / 256);\r\n          }\r\n          process.call(this, L, 0);\r\n          process.call(this, Sum, 0);\r\n\r\n          var h = H.buffer;\r\n\r\n          // Swap hash for SignalCom\r\n          if (this.procreator === 'SC')\r\n              h = swap(h);\r\n\r\n          return h;\r\n      };\r\n\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name SHA-1<br><br>\r\n *\r\n * https://tools.ietf.org/html/rfc3174\r\n *\r\n * The digest method returns digest data in according to SHA-1.<br>\r\n *\r\n * @memberOf GostDigest\r\n * @method digest\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {ArrayBuffer} Digest of data\r\n */\r\nvar digestSHA1 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n\r\n      // Create a buffer for each 80 word block.\r\n      var state, block = new Uint32Array(80);\r\n\r\n      function common(a, e, w, k, f) {\r\n          return (f + e + w + k + ((a << 5) | (a >>> 27))) >>> 0;\r\n      }\r\n\r\n      function f1(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x5A827999, d ^ (b & (c ^ d)));\r\n      }\r\n\r\n      function f2(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x6ED9EBA1, b ^ c ^ d);\r\n      }\r\n\r\n      function f3(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0x8F1BBCDC, (b & c) | (d & (b | c)));\r\n      }\r\n\r\n      function f4(a, b, c, d, e, w) {\r\n          return common(a, e, w, 0xCA62C1D6, b ^ c ^ d);\r\n      }\r\n\r\n      function cycle(state, block) {\r\n          var a = state[0],\r\n            b = state[1],\r\n            c = state[2],\r\n            d = state[3],\r\n            e = state[4];\r\n\r\n          // Partially unroll loops so we don't have to shift variables.\r\n          var fn = f1;\r\n          for (var i = 0; i < 80; i += 5) {\r\n              if (i === 20) {\r\n                  fn = f2;\r\n              }\r\n              else if (i === 40) {\r\n                  fn = f3;\r\n              }\r\n              else if (i === 60) {\r\n                  fn = f4;\r\n              }\r\n              e = fn(a, b, c, d, e, block[i]);\r\n              b = ((b << 30) | (b >>> 2)) >>> 0;\r\n              d = fn(e, a, b, c, d, block[i + 1]);\r\n              a = ((a << 30) | (a >>> 2)) >>> 0;\r\n              c = fn(d, e, a, b, c, block[i + 2]);\r\n              e = ((e << 30) | (e >>> 2)) >>> 0;\r\n              b = fn(c, d, e, a, b, block[i + 3]);\r\n              d = ((d << 30) | (d >>> 2)) >>> 0;\r\n              a = fn(b, c, d, e, a, block[i + 4]);\r\n              c = ((c << 30) | (c >>> 2)) >>> 0;\r\n          }\r\n          state[0] += a;\r\n          state[1] += b;\r\n          state[2] += c;\r\n          state[3] += d;\r\n          state[4] += e;\r\n      }\r\n\r\n      // Swap bytes for 32bits word\r\n      function swap32(b) {\r\n          return ((b & 0xff) << 24)\r\n            | ((b & 0xff00) << 8)\r\n            | ((b >> 8) & 0xff00)\r\n            | ((b >> 24) & 0xff);\r\n      }\r\n\r\n      // input is a Uint8Array bitstream of the data\r\n      return function (data) {\r\n          var d = new Uint8Array(buffer(data)), dlen = d.length;\r\n\r\n          // Pad the input string length.\r\n          var len = dlen + 9;\r\n          if (len % 64) {\r\n              len += 64 - (len % 64);\r\n          }\r\n\r\n          state = new Uint32Array(5);\r\n          state[0] = 0x67452301;\r\n          state[1] = 0xefcdab89;\r\n          state[2] = 0x98badcfe;\r\n          state[3] = 0x10325476;\r\n          state[4] = 0xc3d2e1f0;\r\n\r\n          for (var ofs = 0; ofs < len; ofs += 64) {\r\n\r\n              // Copy input to block and write padding as needed\r\n              for (var i = 0; i < 64; i++) {\r\n                  var b = 0,\r\n                    o = ofs + i;\r\n                  if (o < dlen) {\r\n                      b = d[o];\r\n                  }\r\n                  else if (o === dlen) {\r\n                      b = 0x80;\r\n                  }\r\n                  else {\r\n                      // Write original bit length as a 64bit big-endian integer to the end.\r\n                      var x = len - o - 1;\r\n                      if (x >= 0 && x < 4) {\r\n                          b = (dlen << 3 >>> (x * 8)) & 0xff;\r\n                      }\r\n                  }\r\n\r\n                  // Interpret the input bytes as big-endian per the spec\r\n                  if (i % 4 === 0) {\r\n                      block[i >> 2] = b << 24;\r\n                  }\r\n                  else {\r\n                      block[i >> 2] |= b << ((3 - (i % 4)) * 8);\r\n                  }\r\n              }\r\n\r\n              // Extend the block\r\n              for (var i = 16; i < 80; i++) {\r\n                  var w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\r\n                  block[i] = (w << 1) | (w >>> 31);\r\n              }\r\n\r\n              cycle(state, block);\r\n\r\n          }\r\n\r\n          // Swap the bytes around since they are big endian internally\r\n          for (var i = 0; i < 5; i++)\r\n              state[i] = swap32(state[i]);\r\n          return state.buffer;\r\n      };\r\n\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-HMAC<br><br>\r\n *\r\n * HMAC with the specified hash function.\r\n * @memberOf GostDigest\r\n * @method sign\r\n * @instance\r\n * @param {ArrayBuffer} key The key for HMAC.\r\n * @param {Hash} data Data\r\n */\r\nfunction signHMAC(key, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // GOST R 34.11-94 - B=32b, L=32b\r\n    // GOST R 34.11-256 - B=64b, L=32b\r\n    // GOST R 34.11-512 - B=64b, L=64b\r\n    var b = (this.digest === digest94) ? 32 : 64,\r\n      l = this.bitLength / 8,\r\n      k = buffer(key),\r\n      d = buffer(data), k0;\r\n    if (k.byteLength === b)\r\n        k0 = new Uint8Array(k);\r\n    else {\r\n        var k0 = new Uint8Array(b);\r\n        if (k.byteLength > b) {\r\n            k0.set(new Uint8Array(this.digest(k)));\r\n        } else {\r\n            k0.set(new Uint8Array(k));\r\n        }\r\n    }\r\n    var s0 = new Uint8Array(b + d.byteLength),\r\n      s1 = new Uint8Array(b + l);\r\n    for (var i = 0; i < b; i++) {\r\n        s0[i] = k0[i] ^ 0x36;\r\n        s1[i] = k0[i] ^ 0x5C;\r\n    }\r\n    s0.set(new Uint8Array(d), b);\r\n    s1.set(new Uint8Array(this.digest(s0)), b);\r\n    return this.digest(s1);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-HMAC<br><br>\r\n *\r\n * Verify HMAC based on GOST R 34.11 hash\r\n *\r\n * @memberOf GostDigest\r\n * @method verify\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} key Key which used for HMAC generation\r\n * @param {(ArrayBuffer|TypedArray)} signature generated HMAC\r\n * @param {(ArrayBuffer|TypedArray)} data Data\r\n * @returns {boolean} HMAC verified = true\r\n */\r\nfunction verifyHMAC(key, signature, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var hmac = new Uint8Array(this.sign(key, data)),\r\n      test = new Uint8Array(signature);\r\n    if (hmac.length !== test.length)\r\n        return false;\r\n    for (var i = 0, n = hmac.length; i < n; i++)\r\n        if (hmac[i] !== test[i])\r\n            return false;\r\n    return true;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF<br><br>\r\n *\r\n * Simple generate key 256/512 bit random seed for derivation algorithms\r\n *\r\n * @memberOf GostDigest\r\n * @method generateKey\r\n * @instance\r\n * @returns {ArrayBuffer} Generated key\r\n */\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return getSeed(this.bitLength).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PFXKDF<br><br>\r\n *\r\n * Derive bits from password (PKCS12 mode)\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPFXKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length % 8 > 0)\r\n        throw new DataError('Length must multiple of 8');\r\n    var u = this.bitLength / 8, v = (this.digest === digest94) ? 32 : 64,\r\n      n = length / 8, r = this.iterations;\r\n    //   1.  Construct a string, D (the \"diversifier\"), by concatenating v/8\r\n    //       copies of ID.\r\n    var ID = this.diversifier, D = new Uint8Array(v);\r\n    for (var i = 0; i < v; i++)\r\n        D[i] = ID;\r\n    //   2.  Concatenate copies of the salt together to create a string S of\r\n    //       length v(ceiling(s/v)) bits (the final copy of the salt may be\r\n    //       truncated to create S).  Note that if the salt is the empty\r\n    //       string, then so is S.\r\n    var S0 = new Uint8Array(buffer(this.salt)), s = S0.length,\r\n      slen = v * Math.ceil(s / v), S = new Uint8Array(slen);\r\n    for (var i = 0; i < slen; i++)\r\n        S[i] = S0[i % s];\r\n    //   3.  Concatenate copies of the password together to create a string P\r\n    //       of length v(ceiling(p/v)) bits (the final copy of the password\r\n    //       may be truncated to create P).  Note that if the password is the\r\n    //       empty string, then so is P.\r\n    var P0 = new Uint8Array(buffer(baseKey)), p = P0.length,\r\n      plen = v * Math.ceil(p / v), P = new Uint8Array(plen);\r\n    for (var i = 0; i < plen; i++)\r\n        P[i] = P0[i % p];\r\n    //   4.  Set I=S||P to be the concatenation of S and P.\r\n    var I = new Uint8Array(slen + plen);\r\n    arraycopy(S, 0, I, 0, slen);\r\n    arraycopy(P, 0, I, slen, plen);\r\n    //   5.  Set c=ceiling(n/u).\r\n    var c = Math.ceil(n / u);\r\n    //   6.  For i=1, 2, ..., c, do the following:\r\n    var A = new Uint8Array(c * u);\r\n    for (var i = 0; i < c; i++) {\r\n        //  A.  Set A2=H^r(D||I). (i.e., the r-th hash of D||1,\r\n        //      H(H(H(... H(D||I))))\r\n        var H = new Uint8Array(v + slen + plen);\r\n        arraycopy(D, 0, H, 0, v);\r\n        arraycopy(I, 0, H, v, slen + plen);\r\n        for (var j = 0; j < r; j++)\r\n            H = new Uint8Array(this.digest(H));\r\n        arraycopy(H, 0, A, i * u, u);\r\n        //  B.  Concatenate copies of Ai to create a string B of length v\r\n        //      bits (the final copy of Ai may be truncated to create B).\r\n        var B = new Uint8Array(v);\r\n        for (var j = 0; j < v; j++)\r\n            B[j] = H[j % u];\r\n        //  C.  Treating I as a concatenation I_0, I_1, ..., I_(k-1) of v-bit\r\n        //      blocks, where k=ceiling(s/v)+ceiling(p/v), modify I by\r\n        //      setting I_j=(I_j+B+1) mod 2^v for each j.\r\n        var k = (slen + plen) / v;\r\n        for (j = 0; j < k; j++) {\r\n            var cf = 1, w;\r\n            for (var l = v - 1; l >= 0; --l) {\r\n                w = I[v * j + l] + B[l] + cf;\r\n                cf = w >>> 8;\r\n                I[v * j + l] = w & 0xff;\r\n            }\r\n        }\r\n    }\r\n    //   7.  Concatenate A_1, A_2, ..., A_c together to form a pseudorandom\r\n    //       bit string, A.\r\n    //   8.  Use the first n bits of A as the output of this entire process.\r\n    var R = new Uint8Array(n);\r\n    arraycopy(A, 0, R, 0, n);\r\n    return R.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF<br><br>\r\n *\r\n * Derive bits for KEK deversification in 34.10-2012 algorithm\r\n * KDF(KEK, UKM, label) = HMAC256 (KEK,  0x01|label|0x00|UKM|0x01|0x00)\r\n * Default label = 0x26|0xBD|0xB8|0x78\r\n *\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {(ArrayBuffer|TypedArray)} baseKey base key for deriviation\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsKDF(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length % 8 > 0)\r\n        throw new DataError('Length must be multiple of 8');\r\n    var rlen = length / 8, label, context = new Uint8Array(buffer(this.context)),\r\n      blen = this.bitLength / 8, n = Math.ceil(rlen / blen);\r\n    if (this.label)\r\n        label = new Uint8Array(buffer(this.label));\r\n    else\r\n        label = new Uint8Array([0x26, 0xBD, 0xB8, 0x78]);\r\n    var result = new Uint8Array(rlen);\r\n    for (var i = 0; i < n; i++) {\r\n        var data = new Uint8Array(label.length + context.length + 4);\r\n        data[0] = i + 1;\r\n        data.set(label, 1);\r\n        data[label.length + 1] = 0x00;\r\n        data.set(context, label.length + 2);\r\n        data[data.length - 2] = length >>> 8;\r\n        data[data.length - 1] = length & 0xff;\r\n        result.set(new Uint8Array(signHMAC.call(this, baseKey, data), 0,\r\n          i < n - 1 ? blen : rlen - i * blen), i * blen);\r\n    }\r\n    return result.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PBKDF1<br><br>\r\n *\r\n * Derive bits from password\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPBKDF1(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length < this.bitLength / 2 || length % 8 > 0)\r\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\r\n    var hLen = this.bitLength / 8, dkLen = length / 8,\r\n      c = this.iterations,\r\n      P = new Uint8Array(buffer(baseKey)),\r\n      S = new Uint8Array(buffer(this.salt)),\r\n      slen = S.length, plen = P.length,\r\n      T = new Uint8Array(plen + slen),\r\n      DK = new Uint8Array(dkLen);\r\n    if (dkLen > hLen)\r\n        throw new DataError('Invalid parameters: Length value');\r\n    arraycopy(P, 0, T, 0, plen);\r\n    arraycopy(S, 0, T, plen, slen);\r\n    for (var i = 0; i < c; i++)\r\n        T = new Uint8Array(this.digest(T));\r\n    arraycopy(T, 0, DK, 0, dkLen);\r\n    return DK.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-PBKDF2<br><br>\r\n *\r\n * Derive bits from password\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsPBKDF2(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var diversifier = this.diversifier || 1; // For PKCS12 MAC required 3*length\r\n    length = length * diversifier;\r\n    if (length < this.bitLength / 2 || length % 8 > 0)\r\n        throw new DataError('Length must be more than ' + this.bitLength / 2 + ' bits and multiple of 8');\r\n    var hLen = this.bitLength / 8, dkLen = length / 8,\r\n      c = this.iterations,\r\n      P = new Uint8Array(buffer(baseKey)),\r\n      S = new Uint8Array(buffer(this.salt));\r\n    var slen = S.byteLength,\r\n      data = new Uint8Array(slen + 4);\r\n    arraycopy(S, 0, data, 0, slen);\r\n\r\n    if (dkLen > (0xffffffff - 1) * 32)\r\n        throw new DataError('Invalid parameters: Length value');\r\n    var n = Math.ceil(dkLen / hLen),\r\n      DK = new Uint8Array(dkLen);\r\n    for (var i = 1; i <= n; i++) {\r\n        data[slen] = i >>> 24 & 0xff;\r\n        data[slen + 1] = i >>> 16 & 0xff;\r\n        data[slen + 2] = i >>> 8 & 0xff;\r\n        data[slen + 3] = i & 0xff;\r\n\r\n        var U = new Uint8Array(signHMAC.call(this, P, data)), Z = U;\r\n        for (var j = 1; j < c; j++) {\r\n            U = new Uint8Array(signHMAC.call(this, P, U));\r\n            for (var k = 0; k < hLen; k++)\r\n                Z[k] = U[k] ^ Z[k];\r\n        }\r\n        var ofs = (i - 1) * hLen;\r\n        arraycopy(Z, 0, DK, ofs, Math.min(hLen, dkLen - ofs));\r\n    }\r\n    if (diversifier > 1) {\r\n        var rLen = dkLen / diversifier, R = new Uint8Array(rLen);\r\n        arraycopy(DK, dkLen - rLen, R, 0, rLen);\r\n        return R.buffer;\r\n    } else\r\n        return DK.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-CPKDF<br><br>\r\n *\r\n * Derive bits from password. CryptoPro algorithm\r\n *  <ul>\r\n *      <li>algorithm.salt - random value, salt</li>\r\n *      <li>algorithm.iterations - number of iterations</li>\r\n *  </ul>\r\n * @memberOf GostDigest\r\n * @method deriveBits\r\n * @instance\r\n * @param {ArrayBuffer} baseKey - password after UTF-8 decoding\r\n * @param {number} length output bit-length\r\n * @returns {ArrayBuffer} result\r\n */\r\nfunction deriveBitsCP(baseKey, length) {\r\n    if (length > this.bitLength || length % 8 > 0)\r\n        throw new DataError('Length can\\'t be more than ' + this.bitLength + ' bits and multiple of 8');\r\n    // GOST R 34.11-94 - B=32b, L=32b\r\n    // GOST R 34.11-256 - B=64b, L=32b\r\n    // GOST R 34.11-512 - B=64b, L=64b\r\n    var b = (this.digest === digest94) ? 32 : 64,\r\n      l = this.bitLength / 8,\r\n      p = baseKey && baseKey.byteLength > 0 ? new Uint8Array(buffer(baseKey)) : false,\r\n      plen = p ? p.length : 0,\r\n      iterations = this.iterations,\r\n      salt = new Uint8Array(buffer(this.salt)),\r\n      slen = salt.length,\r\n      d = new Uint8Array(slen + plen);\r\n    arraycopy(salt, 0, d, 0, slen);\r\n    if (p)\r\n        arraycopy(p, 0, d, slen, plen);\r\n\r\n    var h = new Uint8Array(this.digest(d)),\r\n      k = new Uint8Array(b),\r\n      s0 = new Uint8Array(b),\r\n      s1 = new Uint8Array(b);\r\n    var c = 'DENEFH028.760246785.IUEFHWUIO.EF';\r\n    for (var i = 0; i < c.length; i++)\r\n        k[i] = c.charCodeAt(i);\r\n\r\n    d = new Uint8Array(2 * (b + l));\r\n    for (var j = 0; j < iterations; j++) {\r\n        for (var i = 0; i < b; i++) {\r\n            s0[i] = k[i] ^ 0x36;\r\n            s1[i] = k[i] ^ 0x5C;\r\n            k[i] = 0;\r\n        }\r\n        arraycopy(s0, 0, d, 0, b);\r\n        arraycopy(h, 0, d, b, l);\r\n        arraycopy(s1, 0, d, b + l, b);\r\n        arraycopy(h, 0, d, b + l + b, l);\r\n        arraycopy(new Uint8Array(this.digest(d)), 0, k, 0, l);\r\n    }\r\n    for (var i = 0; i < l; i++) {\r\n        s0[i] = k[i] ^ 0x36;\r\n        s1[i] = k[i] ^ 0x5C;\r\n        k[i] = 0;\r\n    }\r\n    d = new Uint8Array(2 * l + slen + plen);\r\n    arraycopy(s0, 0, d, 0, l);\r\n    arraycopy(salt, 0, d, l, slen);\r\n    arraycopy(s1, 0, d, l + slen, l);\r\n    if (p)\r\n        arraycopy(p, 0, d, l + slen + l, plen);\r\n    h = this.digest(this.digest(d));\r\n    if (length === this.bitLength)\r\n        return h;\r\n    else {\r\n        var rlen = length / 8, r = new Uint8Array(rlen);\r\n        arraycopy(h, 0, r, 0, rlen);\r\n        return r.buffer;\r\n    }\r\n}\r\n\r\n/**\r\n * Algorithm name GOST R 34.11-KDF or GOST R 34.11-PBKDF2 or other<br><br>\r\n *\r\n * Derive key from derive bits subset\r\n *\r\n * @memberOf GostDigest\r\n * @method deriveKey\r\n * @instance\r\n * @param {ArrayBuffer} baseKey\r\n * @returns {ArrayBuffer}\r\n */\r\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return this.deriveBits(baseKey, this.keySize * 8);\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST R 34.11 Algorithm<br><br>\r\n *\r\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\r\n *      <li><b>version</b> Algorithm version\r\n *          <ul>\r\n *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\r\n *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Digest length\r\n *          <ul>\r\n *              <li><b>256</b> 256 bits digest</li>\r\n *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode\r\n *          <ul>\r\n *              <li><b>HASH</b> simple digest mode (default)</li>\r\n *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\r\n *              <li><b>KDF</b> Derive bits for KEK deversification</li>\r\n *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\r\n *              <li><b>PFXKDF</b> Password based PFX key dirivation algorithms</li>\r\n *              <li><b>CPKDF</b> CpyptoPro Password based key dirivation algorithms</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Digest HASH mode (default)</li>\r\n *      <li>Sign/Verify HMAC modes parameters depends on version and length\r\n *          <ul>\r\n *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\r\n *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\r\n *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey KDF mode\r\n *          <ul>\r\n *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\r\n *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey PBKDF2 mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption, ID=3 - integrity key for MACing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey PFXKDF mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\r\n *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>DeriveBits/DeriveKey CPKDF mode\r\n *          <ul>\r\n *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostDigest\r\n * @param {AlgorithmIdentifier} algorithm WebCryptoAPI algorithm identifier\r\n */\r\nexport function GostDigest(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    algorithm = algorithm || {};\r\n\r\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' + ((algorithm.version || 2012) % 100) +\r\n      ((algorithm.version || 2012) > 1 ? '-' + (algorithm.length || 256) : '') +\r\n      (((algorithm.mode || 'HASH') !== 'HASH') ? '-' + algorithm.mode : '') +\r\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    // Algorithm procreator\r\n    this.procreator = algorithm.procreator;\r\n\r\n    // Bit length\r\n    this.bitLength = algorithm.length || 256;\r\n\r\n    switch (algorithm.version || 2012) {\r\n        case 1: // SHA-1\r\n            this.digest = digestSHA1;\r\n            this.bitLength = 160;\r\n            break;\r\n        case 1994:\r\n            this.digest = digest94;\r\n            // Define chiper algorithm\r\n            this.sBox = (algorithm.sBox || (algorithm.procreator === 'SC' ? 'D-SC' : 'D-A')).toUpperCase();\r\n\r\n            this.cipher = new GostCipher({\r\n                name: 'GOST 28147',\r\n                block: 'ECB',\r\n                sBox: this.sBox,\r\n                procreator: this.procreator\r\n            });\r\n\r\n            break;\r\n        case 2012:\r\n            this.digest = digest2012;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\r\n    }\r\n\r\n    // Key size\r\n    this.keySize = algorithm.keySize || (algorithm.version <= 2 ? this.bitLength / 8 : 32);\r\n\r\n    switch (algorithm.mode || 'HASH') {\r\n        case 'HASH':\r\n            break;\r\n        case 'HMAC':\r\n            this.sign = signHMAC;\r\n            this.verify = verifyHMAC;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'KDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsKDF;\r\n            this.label = algorithm.label;\r\n            this.context = algorithm.context;\r\n            break;\r\n        case 'PBKDF2':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsPBKDF2;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            this.diversifier = algorithm.diversifier || 1;\r\n            break;\r\n        case 'PFXKDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsPFXKDF;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            this.diversifier = algorithm.diversifier || 1;\r\n            break;\r\n        case 'CPKDF':\r\n            this.deriveKey = deriveKey;\r\n            this.deriveBits = deriveBitsCP;\r\n            this.generateKey = generateKey;\r\n            this.salt = algorithm.salt;\r\n            this.iterations = algorithm.iterations || 2000;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm mode ' + algorithm.mode + ' not supported');\r\n    }\r\n} // </editor-fold>\r\n","/**\r\n * @file GOST 28147-89/GOST R 34.12-2015/GOST R 32.13-2015 Encryption Algorithm\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { NotSupportedError, DataError } from '../utils/errors';\r\nimport { randomSeed } from '../utils/seeds';\r\n\r\n/*\r\n * Initial parameters and common algortithms of GOST 28147-89\r\n *\r\n * http://tools.ietf.org/html/rfc5830\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n/*\r\n * Check supported\r\n * This implementation support only Little Endian arhitecture\r\n */\r\n\r\nvar littleEndian = (function () {\r\n    var buffer = new CryptoOperationData(2);\r\n    new DataView(buffer).setInt16(0, 256, true);\r\n    return new Int16Array(buffer)[0] === 256;\r\n})();\r\n\r\n// Default initial vector\r\nvar defaultIV = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n// Predefined sBox collection\r\nvar sBoxes = {\r\n    'E-TEST': [\r\n        0x4, 0x2, 0xF, 0x5, 0x9, 0x1, 0x0, 0x8, 0xE, 0x3, 0xB, 0xC, 0xD, 0x7, 0xA, 0x6,\r\n        0xC, 0x9, 0xF, 0xE, 0x8, 0x1, 0x3, 0xA, 0x2, 0x7, 0x4, 0xD, 0x6, 0x0, 0xB, 0x5,\r\n        0xD, 0x8, 0xE, 0xC, 0x7, 0x3, 0x9, 0xA, 0x1, 0x5, 0x2, 0x4, 0x6, 0xF, 0x0, 0xB,\r\n        0xE, 0x9, 0xB, 0x2, 0x5, 0xF, 0x7, 0x1, 0x0, 0xD, 0xC, 0x6, 0xA, 0x4, 0x3, 0x8,\r\n        0x3, 0xE, 0x5, 0x9, 0x6, 0x8, 0x0, 0xD, 0xA, 0xB, 0x7, 0xC, 0x2, 0x1, 0xF, 0x4,\r\n        0x8, 0xF, 0x6, 0xB, 0x1, 0x9, 0xC, 0x5, 0xD, 0x3, 0x7, 0xA, 0x0, 0xE, 0x2, 0x4,\r\n        0x9, 0xB, 0xC, 0x0, 0x3, 0x6, 0x7, 0x5, 0x4, 0x8, 0xE, 0xF, 0x1, 0xA, 0x2, 0xD,\r\n        0xC, 0x6, 0x5, 0x2, 0xB, 0x0, 0x9, 0xD, 0x3, 0xE, 0x7, 0xA, 0xF, 0x4, 0x1, 0x8\r\n    ],\r\n    'E-A': [\r\n        0x9, 0x6, 0x3, 0x2, 0x8, 0xB, 0x1, 0x7, 0xA, 0x4, 0xE, 0xF, 0xC, 0x0, 0xD, 0x5,\r\n        0x3, 0x7, 0xE, 0x9, 0x8, 0xA, 0xF, 0x0, 0x5, 0x2, 0x6, 0xC, 0xB, 0x4, 0xD, 0x1,\r\n        0xE, 0x4, 0x6, 0x2, 0xB, 0x3, 0xD, 0x8, 0xC, 0xF, 0x5, 0xA, 0x0, 0x7, 0x1, 0x9,\r\n        0xE, 0x7, 0xA, 0xC, 0xD, 0x1, 0x3, 0x9, 0x0, 0x2, 0xB, 0x4, 0xF, 0x8, 0x5, 0x6,\r\n        0xB, 0x5, 0x1, 0x9, 0x8, 0xD, 0xF, 0x0, 0xE, 0x4, 0x2, 0x3, 0xC, 0x7, 0xA, 0x6,\r\n        0x3, 0xA, 0xD, 0xC, 0x1, 0x2, 0x0, 0xB, 0x7, 0x5, 0x9, 0x4, 0x8, 0xF, 0xE, 0x6,\r\n        0x1, 0xD, 0x2, 0x9, 0x7, 0xA, 0x6, 0x0, 0x8, 0xC, 0x4, 0x5, 0xF, 0x3, 0xB, 0xE,\r\n        0xB, 0xA, 0xF, 0x5, 0x0, 0xC, 0xE, 0x8, 0x6, 0x2, 0x3, 0x9, 0x1, 0x7, 0xD, 0x4\r\n    ],\r\n    'E-B': [\r\n        0x8, 0x4, 0xB, 0x1, 0x3, 0x5, 0x0, 0x9, 0x2, 0xE, 0xA, 0xC, 0xD, 0x6, 0x7, 0xF,\r\n        0x0, 0x1, 0x2, 0xA, 0x4, 0xD, 0x5, 0xC, 0x9, 0x7, 0x3, 0xF, 0xB, 0x8, 0x6, 0xE,\r\n        0xE, 0xC, 0x0, 0xA, 0x9, 0x2, 0xD, 0xB, 0x7, 0x5, 0x8, 0xF, 0x3, 0x6, 0x1, 0x4,\r\n        0x7, 0x5, 0x0, 0xD, 0xB, 0x6, 0x1, 0x2, 0x3, 0xA, 0xC, 0xF, 0x4, 0xE, 0x9, 0x8,\r\n        0x2, 0x7, 0xC, 0xF, 0x9, 0x5, 0xA, 0xB, 0x1, 0x4, 0x0, 0xD, 0x6, 0x8, 0xE, 0x3,\r\n        0x8, 0x3, 0x2, 0x6, 0x4, 0xD, 0xE, 0xB, 0xC, 0x1, 0x7, 0xF, 0xA, 0x0, 0x9, 0x5,\r\n        0x5, 0x2, 0xA, 0xB, 0x9, 0x1, 0xC, 0x3, 0x7, 0x4, 0xD, 0x0, 0x6, 0xF, 0x8, 0xE,\r\n        0x0, 0x4, 0xB, 0xE, 0x8, 0x3, 0x7, 0x1, 0xA, 0x2, 0x9, 0x6, 0xF, 0xD, 0x5, 0xC\r\n    ],\r\n    'E-C': [\r\n        0x1, 0xB, 0xC, 0x2, 0x9, 0xD, 0x0, 0xF, 0x4, 0x5, 0x8, 0xE, 0xA, 0x7, 0x6, 0x3,\r\n        0x0, 0x1, 0x7, 0xD, 0xB, 0x4, 0x5, 0x2, 0x8, 0xE, 0xF, 0xC, 0x9, 0xA, 0x6, 0x3,\r\n        0x8, 0x2, 0x5, 0x0, 0x4, 0x9, 0xF, 0xA, 0x3, 0x7, 0xC, 0xD, 0x6, 0xE, 0x1, 0xB,\r\n        0x3, 0x6, 0x0, 0x1, 0x5, 0xD, 0xA, 0x8, 0xB, 0x2, 0x9, 0x7, 0xE, 0xF, 0xC, 0x4,\r\n        0x8, 0xD, 0xB, 0x0, 0x4, 0x5, 0x1, 0x2, 0x9, 0x3, 0xC, 0xE, 0x6, 0xF, 0xA, 0x7,\r\n        0xC, 0x9, 0xB, 0x1, 0x8, 0xE, 0x2, 0x4, 0x7, 0x3, 0x6, 0x5, 0xA, 0x0, 0xF, 0xD,\r\n        0xA, 0x9, 0x6, 0x8, 0xD, 0xE, 0x2, 0x0, 0xF, 0x3, 0x5, 0xB, 0x4, 0x1, 0xC, 0x7,\r\n        0x7, 0x4, 0x0, 0x5, 0xA, 0x2, 0xF, 0xE, 0xC, 0x6, 0x1, 0xB, 0xD, 0x9, 0x3, 0x8\r\n    ],\r\n    'E-D': [\r\n        0xF, 0xC, 0x2, 0xA, 0x6, 0x4, 0x5, 0x0, 0x7, 0x9, 0xE, 0xD, 0x1, 0xB, 0x8, 0x3,\r\n        0xB, 0x6, 0x3, 0x4, 0xC, 0xF, 0xE, 0x2, 0x7, 0xD, 0x8, 0x0, 0x5, 0xA, 0x9, 0x1,\r\n        0x1, 0xC, 0xB, 0x0, 0xF, 0xE, 0x6, 0x5, 0xA, 0xD, 0x4, 0x8, 0x9, 0x3, 0x7, 0x2,\r\n        0x1, 0x5, 0xE, 0xC, 0xA, 0x7, 0x0, 0xD, 0x6, 0x2, 0xB, 0x4, 0x9, 0x3, 0xF, 0x8,\r\n        0x0, 0xC, 0x8, 0x9, 0xD, 0x2, 0xA, 0xB, 0x7, 0x3, 0x6, 0x5, 0x4, 0xE, 0xF, 0x1,\r\n        0x8, 0x0, 0xF, 0x3, 0x2, 0x5, 0xE, 0xB, 0x1, 0xA, 0x4, 0x7, 0xC, 0x9, 0xD, 0x6,\r\n        0x3, 0x0, 0x6, 0xF, 0x1, 0xE, 0x9, 0x2, 0xD, 0x8, 0xC, 0x4, 0xB, 0xA, 0x5, 0x7,\r\n        0x1, 0xA, 0x6, 0x8, 0xF, 0xB, 0x0, 0x4, 0xC, 0x3, 0x5, 0x9, 0x7, 0xD, 0x2, 0xE\r\n    ],\r\n    'E-SC': [\r\n        0x3, 0x6, 0x1, 0x0, 0x5, 0x7, 0xd, 0x9, 0x4, 0xb, 0x8, 0xc, 0xe, 0xf, 0x2, 0xa,\r\n        0x7, 0x1, 0x5, 0x2, 0x8, 0xb, 0x9, 0xc, 0xd, 0x0, 0x3, 0xa, 0xf, 0xe, 0x4, 0x6,\r\n        0xf, 0x1, 0x4, 0x6, 0xc, 0x8, 0x9, 0x2, 0xe, 0x3, 0x7, 0xa, 0xb, 0xd, 0x5, 0x0,\r\n        0x3, 0x4, 0xf, 0xc, 0x5, 0x9, 0xe, 0x0, 0x6, 0x8, 0x7, 0xa, 0x1, 0xb, 0xd, 0x2,\r\n        0x6, 0x9, 0x0, 0x7, 0xb, 0x8, 0x4, 0xc, 0x2, 0xe, 0xa, 0xf, 0x1, 0xd, 0x5, 0x3,\r\n        0x6, 0x1, 0x2, 0xf, 0x0, 0xb, 0x9, 0xc, 0x7, 0xd, 0xa, 0x5, 0x8, 0x4, 0xe, 0x3,\r\n        0x0, 0x2, 0xe, 0xc, 0x9, 0x1, 0x4, 0x7, 0x3, 0xf, 0x6, 0x8, 0xa, 0xd, 0xb, 0x5,\r\n        0x5, 0x2, 0xb, 0x8, 0x4, 0xc, 0x7, 0x1, 0xa, 0x6, 0xe, 0x0, 0x9, 0x3, 0xd, 0xf\r\n    ],\r\n    'E-Z': [// This is default S-box in according to draft of new standard\r\n        0xc, 0x4, 0x6, 0x2, 0xa, 0x5, 0xb, 0x9, 0xe, 0x8, 0xd, 0x7, 0x0, 0x3, 0xf, 0x1,\r\n        0x6, 0x8, 0x2, 0x3, 0x9, 0xa, 0x5, 0xc, 0x1, 0xe, 0x4, 0x7, 0xb, 0xd, 0x0, 0xf,\r\n        0xb, 0x3, 0x5, 0x8, 0x2, 0xf, 0xa, 0xd, 0xe, 0x1, 0x7, 0x4, 0xc, 0x9, 0x6, 0x0,\r\n        0xc, 0x8, 0x2, 0x1, 0xd, 0x4, 0xf, 0x6, 0x7, 0x0, 0xa, 0x5, 0x3, 0xe, 0x9, 0xb,\r\n        0x7, 0xf, 0x5, 0xa, 0x8, 0x1, 0x6, 0xd, 0x0, 0x9, 0x3, 0xe, 0xb, 0x4, 0x2, 0xc,\r\n        0x5, 0xd, 0xf, 0x6, 0x9, 0x2, 0xc, 0xa, 0xb, 0x7, 0x8, 0x1, 0x4, 0x3, 0xe, 0x0,\r\n        0x8, 0xe, 0x2, 0x5, 0x6, 0x9, 0x1, 0xc, 0xf, 0x4, 0xb, 0x0, 0xd, 0xa, 0x3, 0x7,\r\n        0x1, 0x7, 0xe, 0xd, 0x0, 0x5, 0x8, 0x3, 0x4, 0xf, 0xa, 0x6, 0x9, 0xc, 0xb, 0x2\r\n    ],\r\n    //S-box for digest\r\n    'D-TEST': [\r\n        0x4, 0xA, 0x9, 0x2, 0xD, 0x8, 0x0, 0xE, 0x6, 0xB, 0x1, 0xC, 0x7, 0xF, 0x5, 0x3,\r\n        0xE, 0xB, 0x4, 0xC, 0x6, 0xD, 0xF, 0xA, 0x2, 0x3, 0x8, 0x1, 0x0, 0x7, 0x5, 0x9,\r\n        0x5, 0x8, 0x1, 0xD, 0xA, 0x3, 0x4, 0x2, 0xE, 0xF, 0xC, 0x7, 0x6, 0x0, 0x9, 0xB,\r\n        0x7, 0xD, 0xA, 0x1, 0x0, 0x8, 0x9, 0xF, 0xE, 0x4, 0x6, 0xC, 0xB, 0x2, 0x5, 0x3,\r\n        0x6, 0xC, 0x7, 0x1, 0x5, 0xF, 0xD, 0x8, 0x4, 0xA, 0x9, 0xE, 0x0, 0x3, 0xB, 0x2,\r\n        0x4, 0xB, 0xA, 0x0, 0x7, 0x2, 0x1, 0xD, 0x3, 0x6, 0x8, 0x5, 0x9, 0xC, 0xF, 0xE,\r\n        0xD, 0xB, 0x4, 0x1, 0x3, 0xF, 0x5, 0x9, 0x0, 0xA, 0xE, 0x7, 0x6, 0x8, 0x2, 0xC,\r\n        0x1, 0xF, 0xD, 0x0, 0x5, 0x7, 0xA, 0x4, 0x9, 0x2, 0x3, 0xE, 0x6, 0xB, 0x8, 0xC\r\n    ],\r\n    'D-A': [\r\n        0xA, 0x4, 0x5, 0x6, 0x8, 0x1, 0x3, 0x7, 0xD, 0xC, 0xE, 0x0, 0x9, 0x2, 0xB, 0xF,\r\n        0x5, 0xF, 0x4, 0x0, 0x2, 0xD, 0xB, 0x9, 0x1, 0x7, 0x6, 0x3, 0xC, 0xE, 0xA, 0x8,\r\n        0x7, 0xF, 0xC, 0xE, 0x9, 0x4, 0x1, 0x0, 0x3, 0xB, 0x5, 0x2, 0x6, 0xA, 0x8, 0xD,\r\n        0x4, 0xA, 0x7, 0xC, 0x0, 0xF, 0x2, 0x8, 0xE, 0x1, 0x6, 0x5, 0xD, 0xB, 0x9, 0x3,\r\n        0x7, 0x6, 0x4, 0xB, 0x9, 0xC, 0x2, 0xA, 0x1, 0x8, 0x0, 0xE, 0xF, 0xD, 0x3, 0x5,\r\n        0x7, 0x6, 0x2, 0x4, 0xD, 0x9, 0xF, 0x0, 0xA, 0x1, 0x5, 0xB, 0x8, 0xE, 0xC, 0x3,\r\n        0xD, 0xE, 0x4, 0x1, 0x7, 0x0, 0x5, 0xA, 0x3, 0xC, 0x8, 0xF, 0x6, 0x2, 0x9, 0xB,\r\n        0x1, 0x3, 0xA, 0x9, 0x5, 0xB, 0x4, 0xF, 0x8, 0x6, 0x7, 0xE, 0xD, 0x0, 0x2, 0xC\r\n    ],\r\n    'D-SC': [\r\n        0xb, 0xd, 0x7, 0x0, 0x5, 0x4, 0x1, 0xf, 0x9, 0xe, 0x6, 0xa, 0x3, 0xc, 0x8, 0x2,\r\n        0x1, 0x2, 0x7, 0x9, 0xd, 0xb, 0xf, 0x8, 0xe, 0xc, 0x4, 0x0, 0x5, 0x6, 0xa, 0x3,\r\n        0x5, 0x1, 0xd, 0x3, 0xf, 0x6, 0xc, 0x7, 0x9, 0x8, 0xb, 0x2, 0x4, 0xe, 0x0, 0xa,\r\n        0xd, 0x1, 0xb, 0x4, 0x9, 0xc, 0xe, 0x0, 0x7, 0x5, 0x8, 0xf, 0x6, 0x2, 0xa, 0x3,\r\n        0x2, 0xd, 0xa, 0xf, 0x9, 0xb, 0x3, 0x7, 0x8, 0xc, 0x5, 0xe, 0x6, 0x0, 0x1, 0x4,\r\n        0x0, 0x4, 0x6, 0xc, 0x5, 0x3, 0x8, 0xd, 0xa, 0xb, 0xf, 0x2, 0x1, 0x9, 0x7, 0xe,\r\n        0x1, 0x3, 0xc, 0x8, 0xa, 0x6, 0xb, 0x0, 0x2, 0xe, 0x7, 0x9, 0xf, 0x4, 0x5, 0xd,\r\n        0xa, 0xb, 0x6, 0x0, 0x1, 0x3, 0x4, 0x7, 0xe, 0xd, 0x5, 0xf, 0x8, 0x2, 0x9, 0xc\r\n    ]\r\n};\r\n\r\nvar C = new Uint8Array([\r\n    0x69, 0x00, 0x72, 0x22, 0x64, 0xC9, 0x04, 0x23,\r\n    0x8D, 0x3A, 0xDB, 0x96, 0x46, 0xE9, 0x2A, 0xC4,\r\n    0x18, 0xFE, 0xAC, 0x94, 0x00, 0xED, 0x07, 0x12,\r\n    0xC0, 0x86, 0xDC, 0xC2, 0xEF, 0x4C, 0xA9, 0x2B\r\n]);\r\n\r\nfunction signed(x) {\r\n    return x >= 0x80000000 ? x - 0x100000000 : x;\r\n}\r\n\r\nfunction unsigned(x) {\r\n    return x < 0 ? x + 0x100000000 : x;\r\n}\r\n\r\n// Get buffer\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData required');\r\n}\r\n\r\n// Get byte array\r\nfunction byteArray(d) {\r\n    return new Uint8Array(buffer(d));\r\n}\r\n\r\n// Clone byte array\r\nfunction cloneArray(d) {\r\n    return new Uint8Array(byteArray(d));\r\n}\r\n\r\n// Get int32 array\r\nfunction intArray(d) {\r\n    return new Int32Array(buffer(d));\r\n}\r\n\r\n// Swap bytes for version 2015\r\nfunction swap32(b) {\r\n    return ((b & 0xff) << 24)\r\n      | ((b & 0xff00) << 8)\r\n      | ((b >> 8) & 0xff00)\r\n      | ((b >> 24) & 0xff);\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/*\r\n * Initial parameters and common algortithms of GOST R 34.12-15\r\n * Algorithm \"Kuznechik\" 128bit\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Default initial vector\r\nvar defaultIV128 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n\r\n// Mult table for R function\r\nvar multTable = (function () {\r\n\r\n    // Multiply two numbers in the GF(2^8) finite field defined\r\n    // by the polynomial x^8 + x^7 + x^6 + x + 1 = 0 */\r\n    function gmul(a, b) {\r\n        var p = 0, counter, carry;\r\n        for (counter = 0; counter < 8; counter++) {\r\n            if (b & 1)\r\n                p ^= a;\r\n            carry = a & 0x80; // detect if x^8 term is about to be generated\r\n            a = (a << 1) & 0xff;\r\n            if (carry)\r\n                a ^= 0xc3; // replace x^8 with x^7 + x^6 + x + 1\r\n            b >>= 1;\r\n        }\r\n        return p & 0xff;\r\n    }\r\n\r\n    // It is required only this values for R function\r\n    //       0   1   2    3    4    5    6    7\r\n    var x = [1, 16, 32, 133, 148, 192, 194, 251];\r\n    var m = [];\r\n    for (var i = 0; i < 8; i++) {\r\n        m[i] = [];\r\n        for (var j = 0; j < 256; j++)\r\n            m[i][j] = gmul(x[i], j);\r\n    }\r\n    return m;\r\n})();\r\n\r\n// 148, 32, 133, 16, 194, 192, 1, 251, 1, 192, 194, 16, 133, 32, 148, 1\r\nvar kB = [4, 2, 3, 1, 6, 5, 0, 7, 0, 5, 6, 1, 3, 2, 4, 0];\r\n\r\n// R - function\r\nfunction funcR(d) {\r\n    var sum = 0;\r\n    for (var i = 0; i < 16; i++)\r\n        sum ^= multTable[kB[i]][d[i]];\r\n\r\n    for (var i = 16; i > 0; --i)\r\n        d[i] = d[i - 1];\r\n    d[0] = sum;\r\n}\r\n\r\nfunction funcReverseR(d) {\r\n    var tmp = d[0];\r\n    for (var i = 0; i < 15; i++)\r\n        d[i] = d[i + 1];\r\n    d[15] = tmp;\r\n\r\n    var sum = 0;\r\n    for (i = 0; i < 16; i++)\r\n        sum ^= multTable[kB[i]][d[i]];\r\n    d[15] = sum;\r\n}\r\n\r\n// Nonlinear transformation\r\nvar kPi = [\r\n    252, 238, 221, 17, 207, 110, 49, 22, 251, 196, 250, 218, 35, 197, 4, 77,\r\n    233, 119, 240, 219, 147, 46, 153, 186, 23, 54, 241, 187, 20, 205, 95, 193,\r\n    249, 24, 101, 90, 226, 92, 239, 33, 129, 28, 60, 66, 139, 1, 142, 79,\r\n    5, 132, 2, 174, 227, 106, 143, 160, 6, 11, 237, 152, 127, 212, 211, 31,\r\n    235, 52, 44, 81, 234, 200, 72, 171, 242, 42, 104, 162, 253, 58, 206, 204,\r\n    181, 112, 14, 86, 8, 12, 118, 18, 191, 114, 19, 71, 156, 183, 93, 135,\r\n    21, 161, 150, 41, 16, 123, 154, 199, 243, 145, 120, 111, 157, 158, 178, 177,\r\n    50, 117, 25, 61, 255, 53, 138, 126, 109, 84, 198, 128, 195, 189, 13, 87,\r\n    223, 245, 36, 169, 62, 168, 67, 201, 215, 121, 214, 246, 124, 34, 185, 3,\r\n    224, 15, 236, 222, 122, 148, 176, 188, 220, 232, 40, 80, 78, 51, 10, 74,\r\n    167, 151, 96, 115, 30, 0, 98, 68, 26, 184, 56, 130, 100, 159, 38, 65,\r\n    173, 69, 70, 146, 39, 94, 85, 47, 140, 163, 165, 125, 105, 213, 149, 59,\r\n    7, 88, 179, 64, 134, 172, 29, 247, 48, 55, 107, 228, 136, 217, 231, 137,\r\n    225, 27, 131, 73, 76, 63, 248, 254, 141, 83, 170, 144, 202, 216, 133, 97,\r\n    32, 113, 103, 164, 45, 43, 9, 91, 203, 155, 37, 208, 190, 229, 108, 82,\r\n    89, 166, 116, 210, 230, 244, 180, 192, 209, 102, 175, 194, 57, 75, 99, 182\r\n];\r\n\r\nvar kReversePi = (function () {\r\n    var m = [];\r\n    for (var i = 0, n = kPi.length; i < n; i++)\r\n        m[kPi[i]] = i;\r\n    return m;\r\n})();\r\n\r\nfunction funcS(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        d[i] = kPi[d[i]];\r\n}\r\n\r\nfunction funcReverseS(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        d[i] = kReversePi[d[i]];\r\n}\r\n\r\nfunction funcX(a, b) {\r\n    for (var i = 0; i < 16; ++i)\r\n        a[i] ^= b[i];\r\n}\r\n\r\nfunction funcL(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        funcR(d);\r\n}\r\n\r\nfunction funcReverseL(d) {\r\n    for (var i = 0; i < 16; ++i)\r\n        funcReverseR(d);\r\n}\r\n\r\nfunction funcLSX(a, b) {\r\n    funcX(a, b);\r\n    funcS(a);\r\n    funcL(a);\r\n}\r\n\r\nfunction funcReverseLSX(a, b) {\r\n    funcX(a, b);\r\n    funcReverseL(a);\r\n    funcReverseS(a);\r\n}\r\n\r\nfunction funcF(inputKey, inputKeySecond, iterationConst) {\r\n    var tmp = new Uint8Array(inputKey);\r\n    funcLSX(inputKey, iterationConst);\r\n    funcX(inputKey, inputKeySecond);\r\n    inputKeySecond.set(tmp);\r\n}\r\n\r\nfunction funcC(number, d) {\r\n    for (var i = 0; i < 15; i++)\r\n        d[i] = 0;\r\n    d[15] = number;\r\n    funcL(d);\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Key schedule for GOST R 34.12-15 128bits\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method keySchedule\r\n * @param {type} k\r\n * @returns {Uint8Array}\r\n */\r\nfunction keySchedule128(k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var keys = new Uint8Array(160), c = new Uint8Array(16);\r\n    keys.set(byteArray(k));\r\n    for (var j = 0; j < 4; j++) {\r\n        var j0 = 32 * j, j1 = 32 * (j + 1);\r\n        keys.set(new Uint8Array(keys.buffer, j0, 32), j1);\r\n        for (var i = 1; i < 9; i++) {\r\n            funcC(j * 8 + i, c);\r\n            funcF(new Uint8Array(keys.buffer, j1, 16),\r\n              new Uint8Array(keys.buffer, j1 + 16, 16), c);\r\n        }\r\n    }\r\n    return keys;\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST R 34.12-15 128 bits encrypt/decrypt process\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {Uint8Array} k Scheduled key\r\n * @param {Uint8Array} d Data\r\n * @param {number} ofs Offsec\r\n * @param {number} e true - decrypt\r\n */\r\nfunction process128(k, d, ofs, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var r = new Uint8Array(d.buffer, ofs, 16);\r\n    if (e) {\r\n        for (var i = 0; i < 9; i++)\r\n            funcReverseLSX(r, new Uint8Array(k.buffer, (9 - i) * 16, 16));\r\n\r\n        funcX(r, new Uint8Array(k.buffer, 0, 16));\r\n    } else {\r\n        for (var i = 0; i < 9; i++)\r\n            funcLSX(r, new Uint8Array(k.buffer, 16 * i, 16));\r\n\r\n        funcX(r, new Uint8Array(k.buffer, 16 * 9, 16));\r\n    }\r\n} // </editor-fold>\r\n\r\n/**\r\n * One GOST encryption round\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {Int8Array} S sBox\r\n * @param {Int32Array} m 2x32 bits cipher block\r\n * @param {Int32Array} k 32 bits key[i]\r\n */\r\nfunction round(S, m, k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var cm = (m[0] + k) & 0xffffffff;\r\n\r\n    var om = S[0 + ((cm >> (0 * 4)) & 0xF)] << (0 * 4);\r\n    om |= S[16 + ((cm >> (1 * 4)) & 0xF)] << (1 * 4);\r\n    om |= S[32 + ((cm >> (2 * 4)) & 0xF)] << (2 * 4);\r\n    om |= S[48 + ((cm >> (3 * 4)) & 0xF)] << (3 * 4);\r\n    om |= S[64 + ((cm >> (4 * 4)) & 0xF)] << (4 * 4);\r\n    om |= S[80 + ((cm >> (5 * 4)) & 0xF)] << (5 * 4);\r\n    om |= S[96 + ((cm >> (6 * 4)) & 0xF)] << (6 * 4);\r\n    om |= S[112 + ((cm >> (7 * 4)) & 0xF)] << (7 * 4);\r\n    cm = om << 11 | om >>> (32 - 11);\r\n\r\n    cm ^= m[1];\r\n    m[1] = m[0];\r\n    m[0] = cm;\r\n\r\n} // </editor-fold>\r\n\r\n/**\r\n * Process encrypt/decrypt block with key K using GOST 28147-89\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Int32Array} 8x32 bits key\r\n * @param d {Int32Array} 8x8 bits cipher block\r\n * @param ofs {number} offset\r\n */\r\nfunction process89(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var s = this.sBox,\r\n      m = new Int32Array(d.buffer, ofs, 2);\r\n\r\n    for (var i = 0; i < 32; i++)\r\n        round(s, m, k[i]);\r\n\r\n    var r = m[0];\r\n    m[0] = m[1];\r\n    m[1] = r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Process encrypt/decrypt block with key K using GOST R 34.12-15 64bit block\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Int32Array} 8x32 bits key\r\n * @param d {Int32Array} 8x8 bits cipher block\r\n * @param ofs {number} offset\r\n */\r\nfunction process15(k, d, ofs) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    ofs = ofs || d.byteOffset;\r\n    var s = this.sBox,\r\n      m = new Int32Array(d.buffer, ofs, 2),\r\n      r = swap32(m[0]);\r\n    m[0] = swap32(m[1]);\r\n    m[1] = r;\r\n\r\n    for (var i = 0; i < 32; i++)\r\n        round(s, m, k[i]);\r\n\r\n    m[0] = swap32(m[0]);\r\n    m[1] = swap32(m[1]);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key keySchedule algorithm for GOST 28147-89 64bit cipher\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Uint8Array} 8 bit key array\r\n * @param e {boolean}  true - decrypt\r\n * @returns {Int32Array} keyScheduled 32-bit key\r\n */\r\nfunction keySchedule89(k, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var sch = new Int32Array(32),\r\n      key = new Int32Array(buffer(k));\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i] = key[i];\r\n\r\n    if (e) {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[7 - i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[7 - i];\r\n    } else {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[i];\r\n    }\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i + 24] = sch[7 - i];\r\n\r\n    return sch;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key keySchedule algorithm for GOST R 34.12-15 64bit cipher\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method process\r\n * @param k {Uint8Array} 8 bit key array\r\n * @param e {boolean}  true - decrypt\r\n * @returns {Int32Array} keyScheduled 32-bit key\r\n */\r\nfunction keySchedule15(k, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var sch = new Int32Array(32),\r\n      key = new Int32Array(buffer(k));\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i] = swap32(key[i]);\r\n\r\n    if (e) {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[7 - i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[7 - i];\r\n    } else {\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 8] = sch[i];\r\n\r\n        for (var i = 0; i < 8; i++)\r\n            sch[i + 16] = sch[i];\r\n    }\r\n\r\n    for (var i = 0; i < 8; i++)\r\n        sch[i + 24] = sch[7 - i];\r\n\r\n    return sch;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Key schedule for RC2\r\n *\r\n * https://tools.ietf.org/html/rfc2268\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method keySchedule\r\n * @param {Uint8Array} k\r\n * @returns {Uint16Array}\r\n */\r\nvar keyScheduleRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      // an array of \"random\" bytes based on the digits of PI = 3.14159...\r\n      var PITABLE = new Uint8Array([\r\n          0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\r\n          0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\r\n          0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\r\n          0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\r\n          0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\r\n          0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\r\n          0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\r\n          0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\r\n          0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\r\n          0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\r\n          0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\r\n          0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\r\n          0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\r\n          0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\r\n          0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\r\n          0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\r\n      ]);\r\n\r\n      return function (k) {\r\n          var key = new Uint8Array(buffer(k)),\r\n            T = Math.min(key.length, 128),\r\n            T1 = this.effectiveLength,\r\n            T8 = Math.floor((T1 + 7) / 8),\r\n            TM = 0xff % Math.pow(2, 8 + T1 - 8 * T8);\r\n\r\n          var L = new Uint8Array(128), K = new Uint16Array(L.buffer);\r\n          for (var i = 0; i < T; i++)\r\n              L[i] = key[i];\r\n          for (var i = T; i < 128; i++)\r\n              L[i] = PITABLE[(L[i - 1] + L[i - T]) % 256];\r\n          L[128 - T8] = PITABLE[L[128 - T8] & TM];\r\n          for (var i = 127 - T8; i >= 0; --i)\r\n              L[i] = PITABLE[L[i + 1] ^ L[i + T8]];\r\n          return K;\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * RC2 encrypt/decrypt process\r\n *\r\n * https://tools.ietf.org/html/rfc2268\r\n *\r\n * @memberOf GostCipher\r\n * @private\r\n * @instance\r\n * @method round\r\n * @param {CryptoOperationData} k Scheduled key\r\n * @param {CryptoOperationData} d Data\r\n * @param {number} ofs Offsec\r\n * @param {number} e true - decrypt\r\n */\r\nvar processRC2 = (function () // <editor-fold defaultstate=\"collapsed\">\r\n  {\r\n      var K, j, R = new Uint16Array(4),\r\n        s = new Uint16Array([1, 2, 3, 5]), reverse;\r\n\r\n      function rol(R, s) {\r\n          return (R << s | R >>> (16 - s)) & 0xffff;\r\n      }\r\n\r\n      function ror(R, s) {\r\n          return (R >>> s | R << (16 - s)) & 0xffff;\r\n      }\r\n\r\n      function mix(i) {\r\n          if (reverse) {\r\n              R[i] = ror(R[i], s[i]);\r\n              R[i] = R[i] - K[j] - (R[(i + 3) % 4] & R[(i + 2) % 4]) - ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\r\n              j = j - 1;\r\n          } else {\r\n              R[i] = R[i] + K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) + ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\r\n              j = j + 1;\r\n              R[i] = rol(R[i], s[i]);\r\n          }\r\n      }\r\n\r\n      function mash(i) {\r\n          if (reverse) {\r\n              R[i] = R[i] - K[R[(i + 3) % 4] & 63];\r\n          } else {\r\n              R[i] = R[i] + K[R[(i + 3) % 4] & 63];\r\n          }\r\n      }\r\n\r\n      function perform(method, count) {\r\n          count = count || 1;\r\n          for (var j = 0; j < count; j++) {\r\n              if (reverse) {\r\n                  for (var i = 3; i >= 0; --i)\r\n                      method(i);\r\n              } else {\r\n                  for (var i = 0; i < 4; i++)\r\n                      method(i);\r\n              }\r\n          }\r\n      }\r\n\r\n      return function (k, d, ofs, e) {\r\n          reverse = e;\r\n          //  1. Initialize words R[0], ..., R[3] to contain the 64-bit\r\n          //     ciphertext value.\r\n          R = new Uint16Array(d.buffer, ofs || d.byteOffset, 4);\r\n          //  2. Expand the key, so that words K[0], ..., K[63] become\r\n          //     defined.\r\n          K = k;\r\n          //  3. Initialize j to zero (enc) j to 63 (dec).\r\n          j = e ? 63 : 0;\r\n          //  4. Perform five mixing rounds.\r\n          perform(mix, 5);\r\n          //  5. Perform one mashing round.\r\n          perform(mash);\r\n          //  6. Perform six mixing rounds.\r\n          perform(mix, 6);\r\n          //  7. Perform one mashing round.\r\n          perform(mash);\r\n          //  8. Perform five mixing rounds.\r\n          perform(mix, 5);\r\n      };\r\n  } // </editor-fold>\r\n)();\r\n\r\n/**\r\n * Algorithm name GOST 28147-ECB<br><br>\r\n *\r\n * encryptECB (K, D) is D, encrypted with key k using GOST 28147/GOST R 34.13 in\r\n * \"prostaya zamena\" (Electronic Codebook, ECB) mode.\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param k {CryptoOperationData} 8x32 bit key\r\n * @param d {CryptoOperationData} 8 bits message\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var p = this.pad(byteArray(d)),\r\n      n = this.blockSize,\r\n      b = p.byteLength / n,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < b; i++)\r\n        this.process(key, p, n * i);\r\n\r\n    return p.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-ECB<br><br>\r\n *\r\n * decryptECB (K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13 in\r\n * \"prostaya zamena\"  (Electronic Codebook, ECB) mode.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param k {CryptoOperationData} 8x32 bits key\r\n * @param d {CryptoOperationData} 8 bits message\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptECB(k, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var p = cloneArray(d),\r\n      n = this.blockSize,\r\n      b = p.byteLength / n,\r\n      key = this.keySchedule(k, 1);\r\n\r\n    for (var i = 0; i < b; i++)\r\n        this.process(key, p, n * i, 1);\r\n\r\n    return this.unpad(p).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CFB<br><br>\r\n *\r\n * encryptCFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu\" (Cipher Feedback, CFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = c[i * b + j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CFB<br><br>\r\n *\r\n * decryptCFB (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (Cipher Feedback, CFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptCFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++) {\r\n            t[j] = c[i * b + j];\r\n            c[i * b + j] ^= s[j];\r\n        }\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = t[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-OFB<br><br>\r\n *\r\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\n/**\r\n * Algorithm name GOST 28147-OFB<br><br>\r\n *\r\n * encryptOFB/decryptOFB (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie s obratnoj svyaziyu po vyhodu\" (Output Feedback, OFB) mode, and IV is\r\n * used as the initialization vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction processOFB(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      m = s.length,\r\n      t = new Uint8Array(m),\r\n      b = this.shiftBits >> 3,\r\n      p = new Uint8Array(b),\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < m; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            p[j] = s[j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < m - b; j++)\r\n            s[j] = t[b + j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[m - b + j] = p[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CTR<br><br>\r\n *\r\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\r\n * initialization vector.\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\n/**\r\n * Algorithm name GOST 28147-CTR<br><br>\r\n *\r\n * encryptCTR/decryptCTR (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"gammirovanie\" (Counter Mode-CTR) mode, and IV is used as the\r\n * initialization vector.\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction processCTR89(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      c = cloneArray(d),\r\n      b = this.blockSize,\r\n      t = new Int8Array(b),\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      key = this.keySchedule(k),\r\n      syn = new Int32Array(s.buffer);\r\n\r\n    this.process(key, s);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\r\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\r\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\r\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, syn);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[i * b + j] ^= s[j];\r\n\r\n        for (var j = 0; j < b; j++)\r\n            s[j] = t[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n    if (r > 0) {\r\n        syn[0] = (syn[0] + 0x1010101) & 0xffffffff;\r\n        // syn[1] = signed(unsigned((syn[1] + 0x1010104) & 0xffffffff) % 0xffffffff);\r\n        var tmp = unsigned(syn[1]) + 0x1010104; // Special thanks to Ilya Matveychikov\r\n        syn[1] = signed(tmp < 0x100000000 ? tmp : tmp - 0xffffffff);\r\n\r\n        this.process(key, syn);\r\n\r\n        for (var i = 0; i < r; i++)\r\n            c[q * b + i] ^= s[i];\r\n    }\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\nfunction processCTR15(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var c = cloneArray(d),\r\n      n = this.blockSize,\r\n      b = this.shiftBits >> 3,\r\n      cb = c.length, r = cb % b, q = (cb - r) / b,\r\n      s = new Uint8Array(n),\r\n      t = new Int32Array(n),\r\n      key = this.keySchedule(k);\r\n\r\n    s.set(iv || this.iv);\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            t[j] = s[j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < b; j++)\r\n            c[b * i + j] ^= s[j];\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] = t[j];\r\n\r\n        for (var j = n - 1; i >= 0; --i) {\r\n            if (s[j] > 0xfe) {\r\n                s[j] -= 0xfe;\r\n            } else {\r\n                s[j]++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (r > 0) {\r\n        this.process(key, s);\r\n        for (var j = 0; j < r; j++)\r\n            c[b * q + j] ^= s[j];\r\n    }\r\n\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CBC<br><br>\r\n *\r\n * encryptCBC (IV, K, D) is D, encrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\r\n * vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method encrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction encryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      n = this.blockSize,\r\n      m = s.length,\r\n      c = this.pad(byteArray(d)),\r\n      key = this.keySchedule(k);\r\n\r\n    for (var i = 0, b = c.length / n; i < b; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        this.process(key, s);\r\n\r\n        for (var j = 0; j < n; j++)\r\n            c[i * n + j] = s[j];\r\n\r\n        if (m !== n) {\r\n            for (var j = 0; j < m - n; j++)\r\n                s[j] = s[n + j];\r\n\r\n            for (var j = 0; j < n; j++)\r\n                s[j + m - n] = c[i * n + j];\r\n        }\r\n\r\n        k = this.keyMeshing(k, s, i, key);\r\n    }\r\n\r\n    return c.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CBC<br><br>\r\n *\r\n * decryptCBC (IV, K, D) is D, decrypted with key K using GOST 28147/GOST R 34.13\r\n * in \"Prostaya zamena s zatsepleniem\" (Cipher-Block-Chaining, CBC) mode and IV is used as the initialization\r\n * vector.\r\n *\r\n * @memberOf GostCipher\r\n * @method decrypt\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction decryptCBC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var s = new Uint8Array(iv || this.iv),\r\n      n = this.blockSize,\r\n      m = s.length,\r\n      c = cloneArray(d),\r\n      next = new Uint8Array(n),\r\n      key = this.keySchedule(k, 1);\r\n\r\n    for (var i = 0, b = c.length / n; i < b; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            next[j] = c[i * n + j];\r\n\r\n        this.process(key, c, i * n, 1);\r\n\r\n        for (var j = 0; j < n; j++)\r\n            c[i * n + j] ^= s[j];\r\n\r\n        if (m !== n) {\r\n            for (var j = 0; j < m - n; j++)\r\n                s[j] = s[n + j];\r\n        }\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j + m - n] = next[j];\r\n\r\n        k = this.keyMeshing(k, s, i, key, 1);\r\n    }\r\n\r\n    return this.unpad(c).buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * The generateKey method returns a new generated key.\r\n *\r\n * @memberOf GostCipher\r\n * @method generateKey\r\n * @instance\r\n * @return {CryptoOperationData} result\r\n */\r\n\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // Simple generate 256 bit random seed\r\n    var k = new Uint8Array(this.keySize);\r\n    randomSeed(k);\r\n    return k.buffer;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * makeIMIT (K, D) is the 32-bit result of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method processMAC\r\n * @private\r\n * @instance\r\n * @param {Int32Array} key 8x32 bits key\r\n * @param {Int32Array} s 8x8 sum array\r\n * @param {Uint8Array} d 8 bits array with data\r\n * @return {Uint8Array} result\r\n */\r\nfunction processMAC89(key, s, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var c = zeroPad.call(this, byteArray(d)),\r\n      n = this.blockSize,\r\n      q = c.length / n,\r\n      sBox = this.sBox,\r\n      sum = new Int32Array(s.buffer);\r\n\r\n    for (var i = 0; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        for (var j = 0; j < 16; j++) // 1-16 steps\r\n            round(sBox, sum, key[j]);\r\n    }\r\n} // </editor-fold>\r\n\r\nfunction processKeyMAC15(s) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var t = 0, n = s.length;\r\n    for (var i = n - 1; i >= 0; --i) {\r\n        var t1 = s[i] >>> 7;\r\n        s[i] = (s[i] << 1) & 0xff | t;\r\n        t = t1;\r\n    }\r\n    if (t !== 0) {\r\n        if (n === 16)\r\n            s[15] ^= 0x87;\r\n        else\r\n            s[7] ^= 0x1b;\r\n    }\r\n} // </editor-fold>\r\n\r\nfunction processMAC15(key, s, d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize,\r\n      sBox = this.sBox, c = byteArray(d),\r\n      r = new Uint8Array(n);\r\n    // R\r\n    this.process(key, r);\r\n    // K1\r\n    processKeyMAC15(r);\r\n    if (d.byteLength % n !== 0) {\r\n        c = bitPad.call(this, byteArray(d));\r\n        // K2\r\n        processKeyMAC15(r);\r\n    }\r\n\r\n    for (var i = 0, q = c.length / n; i < q; i++) {\r\n\r\n        for (var j = 0; j < n; j++)\r\n            s[j] ^= c[i * n + j];\r\n\r\n        if (i === q - 1) {// Last block\r\n            for (var j = 0; j < n; j++)\r\n                s[j] ^= r[j];\r\n        }\r\n\r\n        this.process(key, s);\r\n    }\r\n} // </editor-fold>\r\n\r\n/**\r\n * signMAC (K, D, IV) is the 32-bit result of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method sign\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv initial vector\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction signMAC(k, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var key = this.keySchedule(k),\r\n      s = new Uint8Array(iv || this.iv),\r\n      m = Math.ceil(this.macLength >> 3) || this.blockSize >> 1;\r\n\r\n    this.processMAC(key, s, d);\r\n\r\n    var mac = new Uint8Array(m); // mac size\r\n    mac.set(new Uint8Array(s.buffer, 0, m));\r\n    return mac.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * verifyMAC (K, M, D, IV) the 32-bit result verification of the GOST 28147/GOST R 34.13 in\r\n * \"imitovstavka\" (MAC) mode, used with D as plaintext, K as key and IV\r\n * as initialization vector.  Note that the standard specifies its use\r\n * in this mode only with an initialization vector of zero.\r\n *\r\n * @memberOf GostCipher\r\n * @method verify\r\n * @instance\r\n * @param {CryptoOperationData} k 8x32 bits key\r\n * @param {CryptoOperationData} m 8 bits array with signature\r\n * @param {CryptoOperationData} d 8 bits array with data\r\n * @param {CryptoOperationData} iv 8x8 optional bits initial vector\r\n * @return {boolen} MAC verified = true\r\n */\r\nfunction verifyMAC(k, m, d, iv) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var mac = new Uint8Array(signMAC.call(this, k, d, iv)),\r\n      test = byteArray(m);\r\n    if (mac.length !== test.length)\r\n        return false;\r\n    for (var i = 0, n = mac.length; i < n; i++)\r\n        if (mac[i] !== test[i])\r\n            return false;\r\n    return true;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-KW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147/GOST R 34.13 KEK.\r\n * Ref. rfc4357 6.1 GOST 28147-89 Key Wrap\r\n * Note: This algorithm MUST NOT be used with a KEK produced by VKO GOST\r\n * R 34.10-94, because such a KEK is constant for every sender-recipient\r\n * pair.  Encrypting many different content encryption keys on the same\r\n * constant KEK may reveal that KEK.\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} cek Content encryption key\r\n * @returns {CryptoOperationData} Encrypted cek\r\n */\r\nfunction wrapKeyGOST(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) For a unique symmetric KEK, generate 8 octets at random and call\r\n    // the result UKM.  For a KEK, produced by VKO GOST R 34.10-2001, use\r\n    // the UKM that was used for key derivation.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm);\r\n    // 2) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK).\r\n    // Call the result CEK_MAC.\r\n    var mac = signMAC.call(this, kek, cek, ukm);\r\n    // 3) Encrypt the CEK in ECB mode using the KEK.  Call the ciphertext CEK_ENC.\r\n    var enc = encryptECB.call(this, kek, cek);\r\n    // 4) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\r\n    var r = new Uint8Array(len);\r\n    r.set(new Uint8Array(enc), 0);\r\n    r.set(new Uint8Array(mac), k);\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-KW<br><br>\r\n *\r\n *  This algorithm decrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n *  Ref. rfc4357 6.2 GOST 28147-89 Key Unwrap\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {type} kek Key encryption key\r\n * @param {type} data Content encryption key\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction unwrapKeyGOST(kek, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\r\n    var d = buffer(data);\r\n    if (d.byteLength !== len)\r\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\r\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC, and CEK_MAC.\r\n    // UKM is the most significant (first) 8 octets. CEK_ENC is next 32 octets,\r\n    // and CEK_MAC is the least significant (last) 4 octets.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm),\r\n      enc = new Uint8Array(d, 0, k),\r\n      mac = new Uint8Array(d, k, n >> 1);\r\n    // 3) Decrypt CEK_ENC in ECB mode using the KEK.  Call the output CEK.\r\n    var cek = decryptECB.call(this, kek, enc);\r\n    // 4) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK, CEK),\r\n    // compare the result with CEK_MAC.  If they are not equal, then error.\r\n    var check = verifyMAC.call(this, kek, mac, cek, ukm);\r\n    if (!check)\r\n        throw new DataError('Error verify MAC of wrapping key');\r\n    return cek;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * Given a random 64-bit UKM and a GOST 28147 key K, this algorithm\r\n * creates a new GOST 28147-89 key K(UKM).\r\n * Ref. rfc4357 6.3 CryptoPro KEK Diversification Algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method diversify\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} ukm Random generated value\r\n * @returns {CryptoOperationData} Diversified kek\r\n */\r\nfunction diversifyKEK(kek, ukm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize;\r\n\r\n    // 1) Let K[0] = K;\r\n    var k = intArray(kek);\r\n    // 2) UKM is split into components a[i,j]:\r\n    //    UKM = a[0]|..|a[7] (a[i] - byte, a[i,0]..a[i,7] - it’s bits)\r\n    var a = [];\r\n    for (var i = 0; i < n; i++) {\r\n        a[i] = [];\r\n        for (var j = 0; j < 8; j++) {\r\n            a[i][j] = (ukm[i] >>> j) & 0x1;\r\n        }\r\n    }\r\n    // 3) Let i be 0.\r\n    // 4) K[1]..K[8] are calculated by repeating the following algorithm\r\n    //    eight times:\r\n    for (var i = 0; i < n; i++) {\r\n        //     A) K[i] is split into components k[i,j]:\r\n        //        K[i] = k[i,0]|k[i,1]|..|k[i,7] (k[i,j] - 32-bit integer)\r\n        //     B) Vector S[i] is calculated:\r\n        //        S[i] = ((a[i,0]*k[i,0] + ... + a[i,7]*k[i,7]) mod 2^32) |\r\n        //         (((~a[i,0])*k[i,0] + ... + (~a[i,7])*k[i,7]) mod 2^32);\r\n        var s = new Int32Array(2);\r\n        for (var j = 0; j < 8; j++) {\r\n            if (a[i][j])\r\n                s[0] = (s[0] + k[j]) & 0xffffffff;\r\n            else\r\n                s[1] = (s[1] + k[j]) & 0xffffffff;\r\n        }\r\n        //     C) K[i+1] = encryptCFB (S[i], K[i], K[i])\r\n        var iv = new Uint8Array(s.buffer);\r\n        k = new Int32Array(encryptCFB.call(this, k, k, iv));\r\n        //     D) i = i + 1\r\n    }\r\n    // 5) Let K(UKM) be K[8].\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n * It can be used with any KEK (e.g., produced by VKO GOST R 34.10-94 or\r\n * VKO GOST R 34.10-2001) because a unique UKM is used to diversify the KEK.\r\n * Ref. rfc4357 6.3  CryptoPro Key Wrap\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} cek Content encryption key\r\n * @returns {CryptoOperationData} Encrypted cek\r\n */\r\nfunction wrapKeyCP(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) For a unique symmetric KEK or a KEK produced by VKO GOST R\r\n    // 34.10-94, generate 8 octets at random.  Call the result UKM.  For\r\n    // a KEK, produced by VKO GOST R 34.10-2001, use the UKM that was\r\n    // used for key derivation.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm);\r\n    // 2) Diversify KEK, using the CryptoPro KEK Diversification Algorithm,\r\n    // described in Section 6.5.  Call the result KEK(UKM).\r\n    var dek = diversifyKEK.call(this, kek, ukm);\r\n    // 3) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\r\n    // CEK).  Call the result CEK_MAC.\r\n    var mac = signMAC.call(this, dek, cek, ukm);\r\n    // 4) Encrypt CEK in ECB mode using KEK(UKM).  Call the ciphertext\r\n    // CEK_ENC.\r\n    var enc = encryptECB.call(this, dek, cek);\r\n    // 5) The wrapped content-encryption key is (UKM | CEK_ENC | CEK_MAC).\r\n    var r = new Uint8Array(len);\r\n    r.set(new Uint8Array(enc), 0);\r\n    r.set(new Uint8Array(mac), k);\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm encrypts GOST 28147-89 CEK with a GOST 28147 KEK.\r\n * Ref. rfc4357 6.4 CryptoPro Key Unwrap\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek Key encryption key\r\n * @param {CryptoOperationData} data Encrypted content encryption keu\r\n * @return {CryptoOperationData} result Decrypted content encryption keu\r\n */\r\nfunction unwrapKeyCP(kek, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = this.blockSize, k = this.keySize, len = k + (n >> 1);\r\n    // 1) If the wrapped content-encryption key is not 44 octets, then error.\r\n    var d = buffer(data);\r\n    if (d.byteLength !== len)\r\n        throw new DataError('Wrapping key size must be ' + len + ' bytes');\r\n    // 2) Decompose the wrapped content-encryption key into UKM, CEK_ENC,\r\n    // and CEK_MAC.  UKM is the most significant (first) 8 octets.\r\n    // CEK_ENC is next 32 octets, and CEK_MAC is the least significant\r\n    // (last) 4 octets.\r\n    if (!this.ukm)\r\n        throw new DataError('UKM must be defined');\r\n    var ukm = new Uint8Array(this.ukm),\r\n      enc = new Uint8Array(d, 0, k),\r\n      mac = new Uint8Array(d, k, n >> 1);\r\n    // 3) Diversify KEK using the CryptoPro KEK Diversification Algorithm,\r\n    // described in section 6.5.  Call the result KEK(UKM).\r\n    var dek = diversifyKEK.call(this, kek, ukm);\r\n    // 4) Decrypt CEK_ENC in ECB mode using KEK(UKM).  Call the output CEK.\r\n    var cek = decryptECB.call(this, dek, enc);\r\n    // 5) Compute a 4-byte checksum value, GOST 28147IMIT (UKM, KEK(UKM),\r\n    // CEK), compare the result with CEK_MAC.  If they are not equal,\r\n    // then it is an error.\r\n    var check = verifyMAC.call(this, dek, mac, cek, ukm);\r\n    if (!check)\r\n        throw new DataError('Error verify MAC of wrapping key');\r\n    return cek;\r\n} // </editor-fold>\r\n\r\n/**\r\n * SignalCom master key packing algorithm\r\n *\r\n * kek stored in 3 files - kek.opq, mk.db3, masks.db3\r\n * kek.opq - always 36 bytes length = 32 bytes encrypted kek + 4 bytes mac of decrypted kek\r\n * mk.db3 - 6 bytes header (1 byte magic code 0x22 + 1 byte count of masks + 4 bytes mac of\r\n * xor summarizing masks value) + attached masks\r\n * masks.db3 - detached masks.\r\n * Total length  of attached + detached masks = 32 bits * count of masks\r\n * Default value of count 8 = (7 attached + 1 detached). But really no reason for such\r\n * separation - all masks xor summarizing - order is not matter.\r\n * Content of file rand.opq can used as ukm. Don't forget change file content after using.\r\n *\r\n * For usb-token files has names:\r\n * a001 - mk.db3, b001 - masks.db3, c001 - kek.opq, d001 - rand.opq\r\n * For windows registry\r\n * 00000001 - mk.db3, 00000002 - masks.db3, 00000003 - key.opq, 00000004 - rand.opq,\r\n * 00000006 - keys\\00000001.key, 0000000A - certificate\r\n *\r\n * @memberOf GostCipher\r\n * @method packKey\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} unpacked - clear main key 32 bytes\r\n * @param {CryptoOperationData} ukm - random vector for packing - 32 bytes * (count of masks - 1)\r\n * @returns {CryptoOperationData} packed master key - concatination of mk.db3 + masks.db3\r\n */\r\nfunction packKeySC(unpacked, ukm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, k = this.keySize;\r\n    var mcount = 8;\r\n    var key = new Uint8Array(buffer(unpacked));\r\n    if (key.byteLength !== k)\r\n        throw new DataError('Wrong cleartext size ' + key.byteLength + ' bytes');\r\n    // Check or generate UKM\r\n    ukm = ukm || this.ukm;\r\n    if (ukm) {\r\n        ukm = new Uint8Array(buffer(ukm));\r\n        if (ukm.byteLength > 0 && ukm.byteLength % k === 0)\r\n            mcount = ukm.byteLength / k + 1;\r\n        else\r\n            throw new DataError('Wrong rand size ' + ukm.byteLength + ' bytes');\r\n    } else\r\n        randomSeed(ukm = new Uint8Array((mcount - 1) * k));\r\n    // Output array\r\n    var d = new Uint8Array(mcount * k + m + 2), b = d.buffer;\r\n    // Calculate MAC\r\n    var zero32 = new Uint8Array(k);\r\n    var mac = signMAC.call(this, key, zero32);\r\n    d[0] = 0x22; // Magic code\r\n    d[1] = mcount; // Count of masks\r\n    d.set(new Uint8Array(mac), 2);\r\n    d.set(ukm, k + m + 2);\r\n    for (var i = 1; i < mcount; i++) {\r\n        var mask = new Uint8Array(b, 2 + m + k * i);\r\n        for (var j = 0; j < k; j++)\r\n            key[j] ^= mask[j];\r\n    }\r\n    d.set(key, m + 2);\r\n    return d.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom master key unpacking algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method unpackKey\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} packed - concatination of mk.db3 + masks.db3\r\n * @returns {CryptoOperationData} unpacked master key\r\n */\r\nfunction unpackKeySC(packed) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, k = this.keySize;\r\n    var b = buffer(packed);\r\n    // Unpack master key\r\n    var magic = new Uint8Array(b, 0, 1)[0];\r\n    if (magic !== 0x22)\r\n        throw new DataError('Invalid magic number');\r\n    var mcount = new Uint8Array(b, 1, 1)[0];\r\n    var mac = new Uint8Array(b, 2, m); // MAC for summarized mask\r\n    // Compute packKey xor summing for all masks\r\n    var key = new Uint8Array(k);\r\n    for (var i = 0; i < mcount; i++) {\r\n        var mask = new Uint8Array(b, 2 + m + k * i, k);\r\n        for (var j = 0; j < k; j++)\r\n            key[j] ^= mask[j];\r\n    }\r\n    // Test MAC for packKey with default sBox on zero 32 bytes array\r\n    var zero32 = new Uint8Array(k);\r\n    var test = verifyMAC.call(this, key, mac, zero32);\r\n    if (!test) {\r\n        // Try to use different sBoxes\r\n        var names = ['E-A', 'E-B', 'E-C', 'E-D', 'E-SC'];\r\n        for (var i = 0, n = names.length; i < n; i++) {\r\n            this.sBox = sBoxes[names[i]];\r\n            test = verifyMAC.call(this, key, mac, zero32);\r\n            if (test)\r\n                break;\r\n        }\r\n    }\r\n    if (!test)\r\n        throw new DataError('Invalid main key MAC');\r\n    return key.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom Key Wrapping algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek - clear kek or concatination of mk.db3 + masks.db3\r\n * @param {CryptoOperationData} cek - key for wrapping\r\n * @returns {CryptoOperationData} wrapped key - file kek.opq\r\n */\r\nfunction wrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, n = this.keySize;\r\n    var k = buffer(kek);\r\n    var c = buffer(cek);\r\n    if (k.byteLength !== n)\r\n        k = unpackKeySC.call(this, k);\r\n    var enc = encryptECB.call(this, k, c);\r\n    var mac = signMAC.call(this, k, c);\r\n    var d = new Uint8Array(m + n);\r\n    d.set(new Uint8Array(enc), 0);\r\n    d.set(new Uint8Array(mac), n);\r\n    return d.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom Key UnWrapping algorithm\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} kek - concatination of files mk.db3 + masks.db3 or clear kek\r\n * @param {CryptoOperationData} cek - wrapping key - file kek.opq\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction unwrapKeySC(kek, cek) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = this.blockSize >> 1, n = this.keySize;\r\n    var k = buffer(kek);\r\n    var c = buffer(cek);\r\n    if (k.byteLength !== n)\r\n        k = unpackKeySC.call(this, k);\r\n    var enc = new Uint8Array(c, 0, n); // Encrypted kek\r\n    var mac = new Uint8Array(c, n, m); // MAC for clear kek\r\n    var d = decryptECB.call(this, k, enc);\r\n    if (!verifyMAC.call(this, k, mac, d))\r\n        throw new DataError('Invalid key MAC');\r\n    return d;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-SCKW<br><br>\r\n *\r\n * SignalCom master key generation for wrapping\r\n *\r\n * @memberOf GostCipher\r\n * @method generateKey\r\n * @instance\r\n * @return {CryptoOperationData} result\r\n */\r\nfunction generateWrappingKeySC() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return packKeySC.call(this, generateKey.call(this));\r\n} // </editor-fold>\r\n\r\nfunction maskKey(mask, key, inverse, keySize) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var k = keySize / 4,\r\n      m32 = new Int32Array(buffer(mask)),\r\n      k32 = new Int32Array(buffer(key)),\r\n      r32 = new Int32Array(k);\r\n    if (inverse)\r\n        for (var i = 0; i < k; i++)\r\n            r32[i] = (k32[i] + m32[i]) & 0xffffffff;\r\n    else\r\n        for (var i = 0; i < k; i++)\r\n            r32[i] = (k32[i] - m32[i]) & 0xffffffff;\r\n    return r32.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-MASK<br><br>\r\n *\r\n * This algorithm wrap key mask\r\n *\r\n * @memberOf GostCipher\r\n * @method wrapKey\r\n * @instance\r\n * @param {CryptoOperationData} mask The mask\r\n * @param {CryptoOperationData} key The key\r\n * @returns {CryptoOperationData} The masked key\r\n */\r\nfunction wrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return maskKey(mask, key, this.procreator === 'VN', this.keySize);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKW<br><br>\r\n *\r\n * This algorithm unwrap key mask\r\n *\r\n * @memberOf GostCipher\r\n * @method unwrapKey\r\n * @instance\r\n * @param {CryptoOperationData} mask The mask\r\n * @param {CryptoOperationData} key The masked key\r\n * @return {CryptoOperationData} result The key\r\n */\r\nfunction unwrapKeyMask(mask, key) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return maskKey(mask, key, this.procreator !== 'VN', this.keySize);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-CPKM<br><br>\r\n *\r\n * Key meshing in according to rfc4357 2.3.2. CryptoPro Key Meshing\r\n *\r\n * @memberOf GostCipher\r\n * @method keyMeshing\r\n * @instance\r\n * @private\r\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\r\n * @param {Uint8Array} s 8x8 bit sync (iv)\r\n * @param {Integer} i block index\r\n * @param {Int32Array} key 8x32 bit key schedule\r\n * @param {boolean} e true - decrypt\r\n * @returns CryptoOperationData next 8x8 bit key\r\n */\r\nfunction keyMeshingCP(k, s, i, key, e) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if ((i + 1) * this.blockSize % 1024 === 0) { // every 1024 octets\r\n        // K[i+1] = decryptECB (K[i], C);\r\n        k = decryptECB.call(this, k, C);\r\n        // IV0[i+1] = encryptECB (K[i+1],IVn[i])\r\n        s.set(new Uint8Array(encryptECB.call(this, k, s)));\r\n        // restore key schedule\r\n        key.set(this.keySchedule(k, e));\r\n    }\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n *  Null Key Meshing in according to rfc4357 2.3.1\r\n *\r\n * @memberOf GostCipher\r\n * @method keyMeshing\r\n * @instance\r\n * @private\r\n * @param {(Uint8Array|CryptoOperationData)} k 8x8 bit key\r\n */\r\nfunction noKeyMeshing(k) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return k;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-NoPadding<br><br>\r\n *\r\n * No padding.\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction noPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    return new Uint8Array(d);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-PKCS5Padding<br><br>\r\n *\r\n *  PKCS#5 padding: 8-x remaining bytes are filled with the value of\r\n *  8-x.  If there’s no incomplete block, one extra block filled with\r\n *  value 8 is added\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction pkcs5Pad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = nb - n % nb,\r\n      m = Math.ceil((n + 1) / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    for (var i = n; i < m; i++)\r\n        r[i] = q;\r\n    return r;\r\n} // </editor-fold>\r\n\r\nfunction pkcs5Unpad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = d[m - 1],\r\n      n = m - q;\r\n    if (q > nb)\r\n        throw DataError('Invalid padding');\r\n    var r = new Uint8Array(n);\r\n    if (n > 0)\r\n        r.set(new Uint8Array(d.buffer, 0, n));\r\n    return r;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST 28147-ZeroPadding<br><br>\r\n *\r\n * Zero padding: 8-x remaining bytes are filled with zero\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction zeroPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      m = Math.ceil(n / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    for (var i = n; i < m; i++)\r\n        r[i] = 0;\r\n    return r;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Algorithm name GOST 28147-BitPadding<br><br>\r\n *\r\n * Bit padding: P* = P || 1 || 000...0 If there’s no incomplete block,\r\n * one extra block filled with 1 || 000...0\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction bitPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      m = Math.ceil((n + 1) / nb) * nb,\r\n      r = new Uint8Array(m);\r\n    r.set(d);\r\n    r[n] = 1;\r\n    for (var i = n + 1; i < m; i++)\r\n        r[i] = 0;\r\n    return r;\r\n} // </editor-fold>\r\n\r\nfunction bitUnpad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var m = d.byteLength,\r\n      n = m;\r\n    while (n > 1 && d[n - 1] === 0)\r\n        n--;\r\n    if (d[n - 1] !== 1)\r\n        throw DataError('Invalid padding');\r\n    n--;\r\n    var r = new Uint8Array(n);\r\n    if (n > 0)\r\n        r.set(new Uint8Array(d.buffer, 0, n));\r\n    return r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST 28147-RandomPadding<br><br>\r\n *\r\n * Random padding: 8-x remaining bytes of the last block are set to\r\n * random.\r\n *\r\n * @memberOf GostCipher\r\n * @method padding\r\n * @instance\r\n * @private\r\n * @param {Uint8Array} d array with source data\r\n * @returns {Uint8Array} result\r\n */\r\nfunction randomPad(d) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var n = d.byteLength,\r\n      nb = this.blockSize,\r\n      q = nb - n % nb,\r\n      m = Math.ceil(n / nb) * nb,\r\n      r = new Uint8Array(m), e = new Uint8Array(r.buffer, n, q);\r\n    r.set(d);\r\n    randomSeed(e);\r\n    return r;\r\n} // </editor-fold>\r\n\r\n/**\r\n * GOST 28147-89 Encryption Algorithm<br><br>\r\n *\r\n * References {@link http://tools.ietf.org/html/rfc5830}<br><br>\r\n *\r\n * When keys and initialization vectors are converted to/from byte arrays,\r\n * little-endian byte order is assumed.<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\r\n *      <li><b>version</b> Algorithm version, number\r\n *          <ul>\r\n *              <li><b>1989</b> Current version of standard</li>\r\n *              <li><b>2015</b> New draft version of standard</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Block length\r\n *          <ul>\r\n *              <li><b>64</b> 64 bits length (default)</li>\r\n *              <li><b>128</b> 128 bits length (only for version 2015)</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode, string\r\n *          <ul>\r\n *              <li><b>ES</b> Encryption mode (default)</li>\r\n *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\r\n *              <li><b>KW</b> Key wrapping mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Encript/Decrypt mode (ES)\r\n *          <ul>\r\n *              <li><b>block</b> Block mode, string. Default ECB</li>\r\n *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\r\n *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\r\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Sign/Verify mode (MAC)\r\n *          <ul>\r\n *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\r\n *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Wrap/Unwrap key mode (KW)\r\n *          <ul>\r\n *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\r\n *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * Supported paramters values:\r\n *\r\n *  <ul>\r\n *      <li>Block modes (parameter 'block')\r\n *          <ul>\r\n *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu po shifrotekstu\" (CFB) mode</li>\r\n *              <li><b>OFB</b> \"gammirovanie s obratnoj svyaziyu po vyhodu\" (OFB) mode</li>\r\n *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\r\n *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Key meshing modes (parameter 'keyMeshing')\r\n *          <ul>\r\n *              <li><b>NO</b> No key wrapping (default)</li>\r\n *              <li><b>CP</b> CryptoPor Key key meshing</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Padding modes (parameter 'padding')\r\n *          <ul>\r\n *              <li><b>NO</b> No padding only for CFB, OFB and CTR modes</li>\r\n *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\r\n *              <li><b>ZERO</b> Zero bits padding mode</li>\r\n *              <li><b>RANDOM</b> Random bits padding mode</li>\r\n *              <li><b>BIT</b> One bit padding mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>Wrapping key modes (parameter 'keyWrapping')\r\n *          <ul>\r\n *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\r\n *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\r\n *              <li><b>SC</b> SignalCom Key wrapping mode</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostCipher\r\n * @param {AlgorithmIndentifier} algorithm WebCryptoAPI algorithm identifier\r\n */\r\nexport function GostCipher(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    // Check little endian support\r\n    if (!littleEndian)\r\n        throw new NotSupportedError('Big endian platform not supported');\r\n    algorithm = algorithm || {};\r\n    this.keySize = 32;\r\n    this.blockLength = algorithm.length || 64;\r\n    this.blockSize = this.blockLength >> 3;\r\n\r\n    this.name = (algorithm.name || (algorithm.version === 1 ? 'RC2' :\r\n      algorithm.version === 1989 ? 'GOST 28147' : 'GOST R 34.12')) +\r\n      (algorithm.version > 4 ? '-' + ((algorithm.version || 1989) % 100) : '') + '-' +\r\n      (this.blockLength === 64 ? '' : this.blockLength + '-') +\r\n      ((algorithm.mode === 'MAC') ? 'MAC-' + (algorithm.macLength || this.blockLength >> 1) :\r\n        (algorithm.mode === 'KW' || algorithm.keyWrapping) ?\r\n          ((algorithm.keyWrapping || 'NO') !== 'NO' ? algorithm.keyWrapping : '') + 'KW' :\r\n          (algorithm.block || 'ECB') + ((algorithm.block === 'CFB' || algorithm.block === 'OFB' ||\r\n          (algorithm.block === 'CTR' && algorithm.version === 2015)) &&\r\n          algorithm.shiftBits && algorithm.shiftBits !== this.blockLength ? '-' + algorithm.shiftBits : '') +\r\n          (algorithm.padding ? '-' + (algorithm.padding || (algorithm.block === 'CTR' ||\r\n          algorithm.block === 'CFB' || algorithm.block === 'OFB' ? 'NO' : 'ZERO')) + 'PADDING' : '') +\r\n          ((algorithm.keyMeshing || 'NO') !== 'NO' ? '-CPKEYMESHING' : '')) +\r\n      (algorithm.procreator ? '/' + algorithm.procreator : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    // Algorithm procreator\r\n    this.procreator = algorithm.procreator;\r\n\r\n    switch (algorithm.version || 1989) {\r\n        case 1:\r\n            this.process = processRC2;\r\n            this.keySchedule = keyScheduleRC2;\r\n            this.blockLength = 64;\r\n            this.effectiveLength = algorithm.length || 32;\r\n            this.keySize = 8 * Math.ceil(this.effectiveLength / 8); // Max 128\r\n            this.blockSize = this.blockLength >> 3;\r\n            break;\r\n        case 2015:\r\n            this.version = 2015;\r\n            if (this.blockLength === 64) {\r\n                this.process = process15;\r\n                this.keySchedule = keySchedule15;\r\n            } else if (this.blockLength === 128) {\r\n                this.process = process128;\r\n                this.keySchedule = keySchedule128;\r\n            } else\r\n                throw new DataError('Invalid block length');\r\n            this.processMAC = processMAC15;\r\n            break;\r\n        case 1989:\r\n            this.version = 1989;\r\n            this.process = process89;\r\n            this.processMAC = processMAC89;\r\n            this.keySchedule = keySchedule89;\r\n            if (this.blockLength !== 64)\r\n                throw new DataError('Invalid block length');\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Algorithm version ' + algorithm.version + ' not supported');\r\n    }\r\n\r\n    switch (algorithm.mode || (algorithm.keyWrapping && 'KW') || 'ES') {\r\n\r\n        case 'ES':\r\n            switch (algorithm.block || 'ECB') {\r\n                case 'ECB':\r\n                    this.encrypt = encryptECB;\r\n                    this.decrypt = decryptECB;\r\n                    break;\r\n                case 'CTR':\r\n                    if (this.version === 1989) {\r\n                        this.encrypt = processCTR89;\r\n                        this.decrypt = processCTR89;\r\n                    } else {\r\n                        this.encrypt = processCTR15;\r\n                        this.decrypt = processCTR15;\r\n                        this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    }\r\n                    break;\r\n                case 'CBC':\r\n                    this.encrypt = encryptCBC;\r\n                    this.decrypt = decryptCBC;\r\n                    break;\r\n                case 'CFB':\r\n                    this.encrypt = encryptCFB;\r\n                    this.decrypt = decryptCFB;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                case 'OFB':\r\n                    this.encrypt = processOFB;\r\n                    this.decrypt = processOFB;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                default:\r\n                    throw new NotSupportedError('Block mode ' + algorithm.block + ' not supported');\r\n            }\r\n            switch (algorithm.keyMeshing) {\r\n                case 'CP':\r\n                    this.keyMeshing = keyMeshingCP;\r\n                    break;\r\n                default:\r\n                    this.keyMeshing = noKeyMeshing;\r\n            }\r\n            if (this.encrypt === encryptECB || this.encrypt === encryptCBC) {\r\n                switch (algorithm.padding) {\r\n                    case 'PKCS5P':\r\n                        this.pad = pkcs5Pad;\r\n                        this.unpad = pkcs5Unpad;\r\n                        break;\r\n                    case 'RANDOM':\r\n                        this.pad = randomPad;\r\n                        this.unpad = noPad;\r\n                        break;\r\n                    case 'BIT':\r\n                        this.pad = bitPad;\r\n                        this.unpad = bitUnpad;\r\n                        break;\r\n                    default:\r\n                        this.pad = zeroPad;\r\n                        this.unpad = noPad;\r\n                }\r\n            } else {\r\n                this.pad = noPad;\r\n                this.unpad = noPad;\r\n            }\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'MAC':\r\n            this.sign = signMAC;\r\n            this.verify = verifyMAC;\r\n            this.generateKey = generateKey;\r\n            this.macLength = algorithm.macLength || (this.blockLength >> 1);\r\n            this.pad = noPad;\r\n            this.unpad = noPad;\r\n            this.keyMeshing = noKeyMeshing;\r\n            break;\r\n        case 'KW':\r\n            this.pad = noPad;\r\n            this.unpad = noPad;\r\n            this.keyMeshing = noKeyMeshing;\r\n            switch (algorithm.keyWrapping) {\r\n                case 'CP':\r\n                    this.wrapKey = wrapKeyCP;\r\n                    this.unwrapKey = unwrapKeyCP;\r\n                    this.generateKey = generateKey;\r\n                    this.shiftBits = algorithm.shiftBits || this.blockLength;\r\n                    break;\r\n                case 'SC':\r\n                    this.wrapKey = wrapKeySC;\r\n                    this.unwrapKey = unwrapKeySC;\r\n                    this.generateKey = generateWrappingKeySC;\r\n                    break;\r\n                default:\r\n                    this.wrapKey = wrapKeyGOST;\r\n                    this.unwrapKey = unwrapKeyGOST;\r\n                    this.generateKey = generateKey;\r\n            }\r\n            break;\r\n        case 'MASK':\r\n            this.wrapKey = wrapKeyMask;\r\n            this.unwrapKey = unwrapKeyMask;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        default:\r\n            throw new NotSupportedError('Mode ' + algorithm.mode + ' not supported');\r\n    }\r\n\r\n    // Define sBox parameter\r\n    var sBox = algorithm.sBox, sBoxName;\r\n    if (!sBox)\r\n        sBox = this.version === 2015 ? sBoxes['E-Z'] : this.procreator === 'SC' ? sBoxes['E-SC'] : sBoxes['E-A'];\r\n    else if (typeof sBox === 'string') {\r\n        sBoxName = sBox.toUpperCase();\r\n        sBox = sBoxes[sBoxName];\r\n        if (!sBox)\r\n            throw new SyntaxError('Unknown sBox name: ' + algorithm.sBox);\r\n    } else if (!sBox.length || sBox.length !== sBoxes['E-Z'].length)\r\n        throw new SyntaxError('Length of sBox must be ' + sBoxes['E-Z'].length);\r\n    this.sBox = sBox;\r\n    // Initial vector\r\n    if (algorithm.iv) {\r\n        this.iv = new Uint8Array(algorithm.iv);\r\n        if (this.iv.byteLength !== this.blockSize && this.version === 1989)\r\n            throw new SyntaxError('Length of iv must be ' + this.blockLength + ' bits');\r\n        else if (this.iv.byteLength !== this.blockSize >> 1 && this.encrypt === processCTR15)\r\n            throw new SyntaxError('Length of iv must be ' + this.blockLength >> 1 + ' bits');\r\n        else if (this.iv.byteLength % this.blockSize !== 0 && this.encrypt !== processCTR15)\r\n            throw new SyntaxError('Length of iv must be a multiple of ' + this.blockLength + ' bits');\r\n    } else\r\n        this.iv = this.blockLength === 128 ? defaultIV128 : defaultIV;\r\n    // User key material\r\n    if (algorithm.ukm) {\r\n        this.ukm = new Uint8Array(algorithm.ukm);\r\n        if (this.ukm.byteLength * 8 !== this.blockLength)\r\n            throw new SyntaxError('Length of ukm must be ' + this.blockLength + ' bits');\r\n    }\r\n} // </editor-fold>\r\n","export function getRoot() {\r\n    return isInNode() ? global : self;\r\n}\r\n\r\nexport function getCryptoModule() {\r\n    const root = getRoot();\r\n    if (getRoot().hasOwnProperty('crypto')) {\r\n        return root.crypto;\r\n    } else if (root.hasOwnProperty('msCrypto')) {\r\n        return root.msCrypto;\r\n    } else if (isInNode()) {\r\n        return require('crypto');\r\n    }\r\n\r\n    throw new Error('Your environment does not have сrypto module');\r\n}\r\n\r\nexport function isInNode() {\r\n    return typeof exports === 'object' && typeof module !== 'undefined';\r\n}\r\n\r\nexport function isBrowser() {\r\n    return typeof window !== 'undefined';\r\n}\r\n\r\nexport function isInWebWorker() {\r\n    return typeof importScripts !== 'undefined';\r\n}\r\n","/**\r\n * @file Implementation Web Crypto random generatore for GOST algorithms\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { isBrowser, getCryptoModule } from './utils/environment';\r\n\r\n// Initialize mouse and time counters for random generator\r\nconst randomRing = {\r\n    seed: new Uint8Array(1024),\r\n    getIndex: 0,\r\n    setIndex: 0,\r\n    set: function (x) {\r\n        if (this.setIndex >= 1024)\r\n            this.setIndex = 0;\r\n        this.seed[this.setIndex++] = x;\r\n    },\r\n    get: function () {\r\n        if (this.getIndex >= 1024)\r\n            this.getIndex = 0;\r\n        return this.seed[this.getIndex++];\r\n    }\r\n};\r\n\r\nif (isBrowser()) {\r\n    try {\r\n        // Mouse move event to fill random array\r\n        document.addEventListener('mousemove', function (e) {\r\n            randomRing.set((new Date().getTime() & 255) ^\r\n              ((e.clientX || e.pageX) & 255) ^\r\n              ((e.clientY || e.pageY) & 255));\r\n        }, false);\r\n    } catch (e) {\r\n    }\r\n\r\n    try {\r\n        // Keypress event to fill random array\r\n        document.addEventListener('keydown', function (e) {\r\n            randomRing.set((new Date().getTime() & 255) ^\r\n              (e.keyCode & 255));\r\n        }, false);\r\n    } catch (e) {\r\n    }\r\n} // </editor-fold>\r\n\r\nclass TypeMismatchError extends Error {\r\n}\r\n\r\nclass QuotaExceededError extends Error {\r\n}\r\n\r\n/**\r\n * The gostCrypto provide general purpose cryptographic functionality for\r\n * GOST standards including a cryptographically strong pseudo-random number\r\n * generator seeded with truly random values.\r\n *\r\n * @Class GostRandom\r\n *\r\n */\r\nexport function GostRandom() {\r\n}\r\n\r\n/**\r\n * The getRandomValues method generates cryptographically random values. <br><br>\r\n *\r\n * Random generator based on JavaScript Web Crypto random genereator\r\n * (if it is possible) or  Math.random mixed with time and parameters of\r\n * mouse and keyboard events\r\n *\r\n * @memberOf GostRandom\r\n * @param {(ArrayBuffer|ArrayBufferView)} array Destination buffer for random data\r\n */\r\n\r\nconst rootCryptoModule = getCryptoModule();\r\n\r\nGostRandom.prototype.getRandomValues = function (array) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (!array.byteLength)\r\n        throw new TypeMismatchError('Array is not of an integer type (Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, or Uint32Array)');\r\n\r\n    if (array.byteLength > 65536)\r\n        throw new QuotaExceededError('Byte length of array can\\'t be greate then 65536');\r\n\r\n    var u8 = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\r\n    if (rootCryptoModule && rootCryptoModule.getRandomValues) {\r\n        // Native window cryptographic interface\r\n        rootCryptoModule.getRandomValues(u8);\r\n    } else {\r\n        // Standard Javascript method\r\n        for (var i = 0, n = u8.length; i < n; i++)\r\n            u8[i] = Math.floor(256 * Math.random()) & 255;\r\n    }\r\n\r\n    // Mix bio randomizator\r\n    for (var i = 0, n = u8.length; i < n; i++)\r\n        u8[i] = u8[i] ^ randomRing.get();\r\n    return array;\r\n}; // </editor-fold>\r\n","/**\r\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { GostDigest } from './gostDigest';\r\nimport { DataError, NotSupportedError } from '../utils/errors';\r\nimport { getSeed } from '../utils/seeds';\r\n\r\n/*\r\n * Predefined curves and params collection\r\n *\r\n * http://tools.ietf.org/html/rfc5832\r\n * http://tools.ietf.org/html/rfc7091\r\n * http://tools.ietf.org/html/rfc4357\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nvar CryptoOperationData = ArrayBuffer;\r\n\r\n// Predefined named curve collection\r\nvar ECGostParams = {\r\n    'S-256-TEST': {\r\n        a: 7,\r\n        b: '0x5FBFF498AA938CE739B8E022FBAFEF40563F6E6A3472FC2A514C0CE9DAE23B7E',\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000431',\r\n        q: '0x8000000000000000000000000000000150FE8A1892976154C59CFC193ACCF5B3',\r\n        x: 2,\r\n        y: '0x8E2A8A0E65147D4BD6316030E16D19C85C97F0A9CA267122B96ABBCEA7E8FC8'\r\n    },\r\n    'S-256-A': {\r\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94',\r\n        b: 166,\r\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97',\r\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893',\r\n        x: 1,\r\n        y: '0x8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14'\r\n    },\r\n    'S-256-B': {\r\n        a: '0x8000000000000000000000000000000000000000000000000000000000000C96',\r\n        b: '0x3E1AF419A269A5F866A7D3C25C3DF80AE979259373FF2B182F49D4CE7E1BBC8B',\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000C99',\r\n        q: '0x800000000000000000000000000000015F700CFFF1A624E5E497161BCC8A198F',\r\n        x: 1,\r\n        y: '0x3FA8124359F96680B83D1C3EB2C070E5C545C9858D03ECFB744BF8D717717EFC'\r\n    },\r\n    'S-256-C': {\r\n        a: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D7598',\r\n        b: 32858,\r\n        p: '0x9B9F605F5A858107AB1EC85E6B41C8AACF846E86789051D37998F7B9022D759B',\r\n        q: '0x9B9F605F5A858107AB1EC85E6B41C8AA582CA3511EDDFB74F02F3A6598980BB9',\r\n        x: 0,\r\n        y: '0x41ECE55743711A8C3CBF3783CD08C0EE4D4DC440D4641A8F366E550DFDB3BB67'\r\n    },\r\n    'P-256': {\r\n        p: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF',\r\n        a: '0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC',\r\n        b: '0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B',\r\n        x: '0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296',\r\n        y: '0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5',\r\n        q: '0xFFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551'\r\n    },\r\n    'T-512-TEST': {\r\n        a: 7,\r\n        b: '0x1CFF0806A31116DA29D8CFA54E57EB748BC5F377E49400FDD788B649ECA1AC4361834013B2AD7322480A89CA58E0CF74BC9E540C2ADD6897FAD0A3084F302ADC',\r\n        p: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DF1D852741AF4704A0458047E80E4546D35B8336FAC224DD81664BBF528BE6373',\r\n        q: '0x4531ACD1FE0023C7550D267B6B2FEE80922B14B2FFB90F04D4EB7C09B5D2D15DA82F2D7ECB1DBAC719905C5EECC423F1D86E25EDBE23C595D644AAF187E6E6DF',\r\n        x: '0x24D19CC64572EE30F396BF6EBBFD7A6C5213B3B3D7057CC825F91093A68CD762FD60611262CD838DC6B60AA7EEE804E28BC849977FAC33B4B530F1B120248A9A',\r\n        y: '0x2BB312A43BD2CE6E0D020613C857ACDDCFBF061E91E5F2C3F32447C259F39B2C83AB156D77F1496BF7EB3351E1EE4E43DC1A18B91B24640B6DBB92CB1ADD371E'\r\n    },\r\n    'T-512-A': {\r\n        p: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC7',\r\n        a: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC4',\r\n        b: '0xE8C2505DEDFC86DDC1BD0B2B6667F1DA34B82574761CB0E879BD081CFD0B6265EE3CB090F30D27614CB4574010DA90DD862EF9D4EBEE4761503190785A71C760',\r\n        q: '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27E69532F48D89116FF22B8D4E0560609B4B38ABFAD2B85DCACDB1411F10B275',\r\n        x: 3,\r\n        y: '0x7503CFE87A836AE3A61B8816E25450E6CE5E1C93ACF1ABC1778064FDCBEFA921DF1626BE4FD036E93D75E6A50E3A41E98028FE5FC235F5B889A589CB5215F2A4'\r\n    },\r\n    'T-512-B': {\r\n        p: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006F',\r\n        a: '0x8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006C',\r\n        b: '0x687D1B459DC841457E3E06CF6F5E2517B97C7D614AF138BCBF85DC806C4B289F3E965D2DB1416D217F8B276FAD1AB69C50F78BEE1FA3106EFB8CCBC7C5140116',\r\n        q: '0x800000000000000000000000000000000000000000000000000000000000000149A1EC142565A545ACFDB77BD9D40CFA8B996712101BEA0EC6346C54374F25BD',\r\n        x: 2,\r\n        y: '0x1A8F7EDA389B094C2C071E3647A8940F3C123B697578C213BE6DD9E6C8EC7335DCB228FD1EDF4A39152CBCAAF8C0398828041055F94CEEEC7E21340780FE41BD'\r\n    }\r\n};\r\nECGostParams['X-256-A'] = ECGostParams['S-256-A'];\r\nECGostParams['X-256-B'] = ECGostParams['S-256-C'];\r\nECGostParams['T-256-TEST'] = ECGostParams['S-256-TEST'];\r\nECGostParams['T-256-A'] = ECGostParams['S-256-A'];\r\nECGostParams['T-256-B'] = ECGostParams['S-256-B'];\r\nECGostParams['T-256-C'] = ECGostParams['S-256-C'];\r\n\r\n\r\nvar GostParams = {\r\n    'S-TEST': {\r\n        modulusLength: 512, // bit length of p (512 or 1024 bits)\r\n        p: '0xEE8172AE8996608FB69359B89EB82A69854510E2977A4D63BC97322CE5DC3386EA0A12B343E9190F23177539845839786BB0C345D165976EF2195EC9B1C379E3',\r\n        q: '0x98915E7EC8265EDFCDA31E88F24809DDB064BDC7285DD50D7289F0AC6F49DD2D',\r\n        a: '0x9e96031500c8774a869582d4afde2127afad2538b4b6270a6f7c8837b50d50f206755984a49e509304d648be2ab5aab18ebe2cd46ac3d8495b142aa6ce23e21c'\r\n    },\r\n    'S-A': {\r\n        modulusLength: 1024,\r\n        p: '0xB4E25EFB018E3C8B87505E2A67553C5EDC56C2914B7E4F89D23F03F03377E70A2903489DD60E78418D3D851EDB5317C4871E40B04228C3B7902963C4B7D85D52B9AA88F2AFDBEB28DA8869D6DF846A1D98924E925561BD69300B9DDD05D247B5922D967CBB02671881C57D10E5EF72D3E6DAD4223DC82AA1F7D0294651A480DF',\r\n        q: '0x972432A437178B30BD96195B773789AB2FFF15594B176DD175B63256EE5AF2CF',\r\n        a: '0x8FD36731237654BBE41F5F1F8453E71CA414FFC22C25D915309E5D2E62A2A26C7111F3FC79568DAFA028042FE1A52A0489805C0DE9A1A469C844C7CABBEE625C3078888C1D85EEA883F1AD5BC4E6776E8E1A0750912DF64F79956499F1E182475B0B60E2632ADCD8CF94E9C54FD1F3B109D81F00BF2AB8CB862ADF7D40B9369A'\r\n    },\r\n    'S-B': {\r\n        modulusLength: 1024,\r\n        p: '0xC6971FC57524B30C9018C5E621DE15499736854F56A6F8AEE65A7A404632B1BCF0349FFCAFCB0A103177971FC1612ADCDB8C8CC938C70225C8FD12AFF01B1D064E0AD6FDE6AB9159166CB9F2FC171D92F0CC7B6A6B2CD7FA342ACBE2C9315A42D576B1ECCE77A963157F3D0BD96A8EB0B0F3502AD238101B05116334F1E5B7AB',\r\n        q: '0xB09D634C10899CD7D4C3A7657403E05810B07C61A688BAB2C37F475E308B0607',\r\n        a: '0x3D26B467D94A3FFC9D71BF8DB8934084137264F3C2E9EB16DCA214B8BC7C872485336744934FD2EF5943F9ED0B745B90AA3EC8D70CDC91682478B664A2E1F8FB56CEF2972FEE7EDB084AF746419B854FAD02CC3E3646FF2E1A18DD4BEB3C44F7F2745588029649674546CC9187C207FB8F2CECE8E2293F68395C4704AF04BAB5'\r\n    },\r\n    'S-C': {\r\n        modulusLength: 1024,\r\n        p: '0x9D88E6D7FE3313BD2E745C7CDD2AB9EE4AF3C8899E847DE74A33783EA68BC30588BA1F738C6AAF8AB350531F1854C3837CC3C860FFD7E2E106C3F63B3D8A4C034CE73942A6C3D585B599CF695ED7A3C4A93B2B947B7157BB1A1C043AB41EC8566C6145E938A611906DE0D32E562494569D7E999A0DDA5C879BDD91FE124DF1E9',\r\n        q: '0xFADD197ABD19A1B4653EECF7ECA4D6A22B1F7F893B641F901641FBB555354FAF',\r\n        a: '0x7447ED7156310599070B12609947A5C8C8A8625CF1CF252B407B331F93D639DDD1BA392656DECA992DD035354329A1E95A6E32D6F47882D960B8F10ACAFF796D13CD9611F853DAB6D2623483E46788708493937A1A29442598AEC2E0742022563440FE9C18740ECE6765AC05FAF024A64B026E7E408840819E962E7E5F401AE3'\r\n    },\r\n    'S-D': {\r\n        modulusLength: 1024,\r\n        p: '0x80F102D32B0FD167D069C27A307ADAD2C466091904DBAA55D5B8CC7026F2F7A1919B890CB652C40E054E1E9306735B43D7B279EDDF9102001CD9E1A831FE8A163EED89AB07CF2ABE8242AC9DEDDDBF98D62CDDD1EA4F5F15D3A42A6677BDD293B24260C0F27C0F1D15948614D567B66FA902BAA11A69AE3BCEADBB83E399C9B5',\r\n        q: '0xF0F544C418AAC234F683F033511B65C21651A6078BDA2D69BB9F732867502149',\r\n        a: '0x6BCC0B4FADB3889C1E06ADD23CC09B8AB6ECDEDF73F04632595EE4250005D6AF5F5ADE44CB1E26E6263C672347CFA26F9E9393681E6B759733784CDE5DBD9A14A39369DFD99FA85CC0D10241C4010343F34A91393A706CF12677CBFA1F578D6B6CFBE8A1242CFCC94B3B653A476E145E3862C18CC3FED8257CFEF74CDB205BF1'\r\n    },\r\n    'X-A': {\r\n        modulusLength: 1024,\r\n        p: '0xCA3B3F2EEE9FD46317D49595A9E7518E6C63D8F4EB4D22D10D28AF0B8839F079F8289E603B03530784B9BB5A1E76859E4850C670C7B71C0DF84CA3E0D6C177FE9F78A9D8433230A883CD82A2B2B5C7A3306980278570CDB79BF01074A69C9623348824B0C53791D53C6A78CAB69E1CFB28368611A397F50F541E16DB348DBE5F',\r\n        q: '0xCAE4D85F80C147704B0CA48E85FB00A9057AA4ACC44668E17F1996D7152690D9',\r\n        a: '0xBE27D652F2F1E339DA734211B85B06AE4DE236AA8FBEEB3F1ADCC52CD43853777E834A6A518138678A8ADBD3A55C70A7EAB1BA7A0719548677AAF4E609FFB47F6B9D7E45B0D06D83D7ADC53310ABD85783E7317F7EC73268B6A9C08D260B85D8485696CA39C17B17F044D1E050489036ABD381C5E6BF82BA352A1AFF136601AF'\r\n    },\r\n    'X-B': {\r\n        modulusLength: 1024,\r\n        p: '0x9286DBDA91ECCFC3060AA5598318E2A639F5BA90A4CA656157B2673FB191CD0589EE05F4CEF1BD13508408271458C30851CE7A4EF534742BFB11F4743C8F787B11193BA304C0E6BCA25701BF88AF1CB9B8FD4711D89F88E32B37D95316541BF1E5DBB4989B3DF13659B88C0F97A3C1087B9F2D5317D557DCD4AFC6D0A754E279',\r\n        q: '0xC966E9B3B8B7CDD82FF0F83AF87036C38F42238EC50A876CD390E43D67B6013F',\r\n        a: '0x7E9C3096676F51E3B2F9884CF0AC2156779496F410E049CED7E53D8B7B5B366B1A6008E5196605A55E89C3190DABF80B9F1163C979FCD18328DAE5E9048811B370107BB7715F82091BB9DE0E33EE2FED6255474F8769FCE5EAFAEEF1CB5A32E0D5C6C2F0FC0B3447072947F5B4C387666993A333FC06568E534AD56D2338D729'\r\n    },\r\n    'X-C': {\r\n        modulusLength: 1024,\r\n        p: '0xB194036ACE14139D36D64295AE6C50FC4B7D65D8B340711366CA93F383653908EE637BE428051D86612670AD7B402C09B820FA77D9DA29C8111A8496DA6C261A53ED252E4D8A69A20376E6ADDB3BDCD331749A491A184B8FDA6D84C31CF05F9119B5ED35246EA4562D85928BA1136A8D0E5A7E5C764BA8902029A1336C631A1D',\r\n        q: '0x96120477DF0F3896628E6F4A88D83C93204C210FF262BCCB7DAE450355125259',\r\n        a: '0x3F1817052BAA7598FE3E4F4FC5C5F616E122CFF9EBD89EF81DC7CE8BF56CC64B43586C80F1C4F56DD5718FDD76300BE336784259CA25AADE5A483F64C02A20CF4A10F9C189C433DEFE31D263E6C9764660A731ECCAECB74C8279303731E8CF69205BC73E5A70BDF93E5BB681DAB4EEB9C733CAAB2F673C475E0ECA921D29782E'\r\n    }\r\n}; // </editor-fold>\r\n\r\n/*\r\n * BigInteger arithmetic tools\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Bits per one element\r\nvar DB = 28, DM = (1 << DB) - 1, DV = 1 << DB,\r\n  FV = Math.pow(2, 52), F1 = 52 - DB, F2 = 2 * DB - 52;\r\n\r\nfunction am(y, i, x, w, j, c, n) {\r\n    var xl = x & 0x3fff, xh = x >> 14;\r\n    while (--n >= 0) {\r\n        var l = y[i] & 0x3fff;\r\n        var h = y[i++] >> 14;\r\n        var m = xh * l + h * xl;\r\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\r\n        c = (l >> 28) + (m >> 14) + xh * h;\r\n        w[j++] = l & 0xfffffff;\r\n    }\r\n    return c;\r\n}\r\n\r\nfunction nbi(words) {\r\n    var r = new Array(Math.ceil(words));\r\n    r.s = 0;\r\n    r.t = 0;\r\n    return r;\r\n}\r\n\r\nfunction copyTo(x, r) {\r\n    for (var i = x.t - 1; i >= 0; --i)\r\n        r[i] = x[i];\r\n    r.t = x.t;\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction copy(x) {\r\n    return copyTo(x, nbi(x.t));\r\n}\r\n\r\nfunction setInt(x, i) {\r\n    x.t = 1;\r\n    x.s = (i < 0) ? -1 : 0;\r\n    if (i > 0)\r\n        x[0] = i;\r\n    else if (i < -1)\r\n        x[0] = i + DV;\r\n    else\r\n        x.t = 0;\r\n    return x;\r\n}\r\n\r\nfunction nbv(i) {\r\n    var r = nbi(1);\r\n    setInt(r, i);\r\n    return r;\r\n}\r\n\r\nvar ZERO = nbv(0), ONE = nbv(1), THREE = nbv(3);\r\n\r\nfunction clamp(x) {\r\n    var c = x.s & DM;\r\n    while (x.t > 0 && x[x.t - 1] === c)\r\n        --x.t;\r\n    return x;\r\n}\r\n\r\nfunction subTo(x, a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\r\n    while (i < m) {\r\n        c += x[i] - a[i];\r\n        r[i++] = c & DM;\r\n        c >>= DB;\r\n    }\r\n    if (a.t < x.t) {\r\n        c -= a.s;\r\n        while (i < x.t) {\r\n            c += x[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c += x.s;\r\n    }\r\n    else {\r\n        c += x.s;\r\n        while (i < a.t) {\r\n            c -= a[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c -= a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c < -1)\r\n        r[i++] = DV + c;\r\n    else if (c > 0)\r\n        r[i++] = c;\r\n    r.t = i;\r\n    return clamp(r);\r\n}\r\n\r\nfunction sub(x, y) {\r\n    return subTo(x, y, nbi(x.t));\r\n}\r\n\r\nfunction addTo(x, a, r) {\r\n    var i = 0, c = 0, m = Math.min(a.t, x.t);\r\n    while (i < m) {\r\n        c += x[i] + a[i];\r\n        r[i++] = c & DM;\r\n        c >>= DB;\r\n    }\r\n    if (a.t < x.t) {\r\n        c += a.s;\r\n        while (i < x.t) {\r\n            c += x[i];\r\n            r[i++] = c & DM;\r\n            c >>= DB;\r\n        }\r\n        c += x.s;\r\n    }\r\n    else {\r\n        c += x.s;\r\n        while (i < a.t) {\r\n            c += a[i];\r\n            r[i++] = c & DM;\r\n            c = c >> DB;\r\n        }\r\n        c += a.s;\r\n    }\r\n    r.s = (c < 0) ? -1 : 0;\r\n    if (c > 0)\r\n        r[i++] = c;\r\n    else if (c < -1)\r\n        r[i++] = DV + c;\r\n    r.t = i;\r\n    return clamp(r);\r\n}\r\n\r\nfunction add(x, y) {\r\n    return addTo(x, y, nbi(x.t));\r\n}\r\n\r\nfunction negTo(x, r) {\r\n    return subTo(ZERO, x, r);\r\n}\r\n\r\nfunction neg(x) {\r\n    return negTo(x, nbi(x.t));\r\n}\r\n\r\nfunction absTo(x, r) {\r\n    return (x.s < 0) ? negTo(r) : copyTo(r);\r\n}\r\n\r\nfunction abs(x) {\r\n    return (x.s < 0) ? neg(x) : x;\r\n}\r\n\r\nfunction compare(x, a) {\r\n    var r = x.s - a.s;\r\n    if (r !== 0)\r\n        return r;\r\n    var i = x.t;\r\n    r = i - a.t;\r\n    if (r !== 0)\r\n        return (x.s < 0) ? -r : r;\r\n    while (--i >= 0)\r\n        if ((r = x[i] - a[i]) !== 0)\r\n            return r;\r\n    return 0;\r\n}\r\n\r\nfunction equals(x, y) {\r\n    return (compare(x, y) === 0);\r\n}\r\n\r\nfunction min(x, y) {\r\n    return (compare(x, y) < 0) ? x : y;\r\n}\r\n\r\nfunction max(x, y) {\r\n    return (compare(x, y) > 0) ? x : y;\r\n}\r\n\r\nfunction nbits(x) {\r\n    var r = 1, t;\r\n    if ((t = x >>> 16) !== 0) {\r\n        x = t;\r\n        r += 16;\r\n    }\r\n    if ((t = x >> 8) !== 0) {\r\n        x = t;\r\n        r += 8;\r\n    }\r\n    if ((t = x >> 4) !== 0) {\r\n        x = t;\r\n        r += 4;\r\n    }\r\n    if ((t = x >> 2) !== 0) {\r\n        x = t;\r\n        r += 2;\r\n    }\r\n    if ((t = x >> 1) !== 0) {\r\n        x = t;\r\n        r += 1;\r\n    }\r\n    return r;\r\n}\r\n\r\nfunction dshlTo(x, n, r) {\r\n    var i;\r\n    for (i = x.t - 1; i >= 0; --i)\r\n        r[i + n] = x[i];\r\n    for (i = n - 1; i >= 0; --i)\r\n        r[i] = 0;\r\n    r.t = x.t + n;\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction dshrTo(x, n, r) {\r\n    for (var i = n; i < x.t; ++i)\r\n        r[i - n] = x[i];\r\n    r.t = Math.max(x.t - n, 0);\r\n    r.s = x.s;\r\n    return r;\r\n}\r\n\r\nfunction shlTo(x, n, r) {\r\n    var bs = n % DB;\r\n    var cbs = DB - bs;\r\n    var bm = (1 << cbs) - 1;\r\n    var ds = Math.floor(n / DB), c = (x.s << bs) & DM, i;\r\n    for (i = x.t - 1; i >= 0; --i) {\r\n        r[i + ds + 1] = (x[i] >> cbs) | c;\r\n        c = (x[i] & bm) << bs;\r\n    }\r\n    for (i = ds - 1; i >= 0; --i)\r\n        r[i] = 0;\r\n    r[ds] = c;\r\n    r.t = x.t + ds + 1;\r\n    r.s = x.s;\r\n    return clamp(r);\r\n}\r\n\r\nfunction shrTo(x, n, r) {\r\n    r.s = x.s;\r\n    var ds = Math.floor(n / DB);\r\n    if (ds >= x.t) {\r\n        r.t = 0;\r\n        return;\r\n    }\r\n    var bs = n % DB;\r\n    var cbs = DB - bs;\r\n    var bm = (1 << bs) - 1;\r\n    r[0] = x[ds] >> bs;\r\n    for (var i = ds + 1; i < x.t; ++i) {\r\n        r[i - ds - 1] |= (x[i] & bm) << cbs;\r\n        r[i - ds] = x[i] >> bs;\r\n    }\r\n    if (bs > 0)\r\n        r[x.t - ds - 1] |= (x.s & bm) << cbs;\r\n    r.t = x.t - ds;\r\n    return clamp(r);\r\n}\r\n\r\nfunction shl(x, n) {\r\n    var r = nbi(x.t);\r\n    if (n < 0)\r\n        shrTo(x, -n, r);\r\n    else\r\n        shlTo(x, n, r);\r\n    return r;\r\n}\r\n\r\nfunction shr(x, n) {\r\n    var r = nbi(x.t);\r\n    if (n < 0)\r\n        shlTo(x, -n, r);\r\n    else\r\n        shrTo(x, n, r);\r\n    return r;\r\n}\r\n\r\nfunction bitLength(x) {\r\n    if (x.t <= 0)\r\n        return 0;\r\n    return DB * (x.t - 1) + nbits(x[x.t - 1] ^ (x.s & DM));\r\n}\r\n\r\nfunction mulTo(b, a, r) {\r\n    var x = abs(b), y = abs(a);\r\n    var i = x.t;\r\n    r.t = i + y.t;\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = 0; i < y.t; ++i)\r\n        r[i + x.t] = am(x, 0, y[i], r, i, 0, x.t);\r\n    r.s = 0;\r\n    if (b.s !== a.s)\r\n        subTo(ZERO, r, r);\r\n    return clamp(r);\r\n}\r\n\r\nfunction mul(x, y) {\r\n    return mulTo(x, y, nbi(x.t + y.t));\r\n}\r\n\r\nfunction sqrTo(a, r) {\r\n    var x = abs(a);\r\n    var i = r.t = 2 * x.t;\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = 0; i < x.t - 1; ++i) {\r\n        var c = am(x, i, x[i], r, 2 * i, 0, 1);\r\n        if ((r[i + x.t] += am(x, i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\r\n            r[i + x.t] -= x.DV;\r\n            r[i + x.t + 1] = 1;\r\n        }\r\n    }\r\n    if (r.t > 0)\r\n        r[r.t - 1] += am(x, i, x[i], r, 2 * i, 0, 1);\r\n    r.s = 0;\r\n    return clamp(r);\r\n}\r\n\r\nfunction sqr(a) {\r\n    return sqrTo(a, nbi(a.t * 2));\r\n}\r\n\r\nfunction divRemTo(n, m, q, r) {\r\n    var pm = abs(m);\r\n    if (pm.t <= 0)\r\n        throw new OperationError('Division by zero');\r\n    var pt = abs(n);\r\n    if (pt.t < pm.t) {\r\n        if (q)\r\n            setInt(q, 0);\r\n        if (r)\r\n            copyTo(n, r);\r\n        return q;\r\n    }\r\n    if (!r)\r\n        r = nbi(m.t);\r\n    var y = nbi(m.t), ts = n.s, ms = m.s;\r\n    var nsh = DB - nbits(pm[pm.t - 1]);\r\n    if (nsh > 0) {\r\n        shlTo(pm, nsh, y);\r\n        shlTo(pt, nsh, r);\r\n    }\r\n    else {\r\n        copyTo(pm, y);\r\n        copyTo(pt, r);\r\n    }\r\n    var ys = y.t;\r\n    var y0 = y[ys - 1];\r\n    if (y0 === 0)\r\n        return q;\r\n    var yt = y0 * (1 << F1) + ((ys > 1) ? y[ys - 2] >> F2 : 0);\r\n    var d1 = FV / yt, d2 = (1 << F1) / yt, e = 1 << F2;\r\n    var i = r.t, j = i - ys, t = !q ? nbi(Math.max(n.t - m.t, 1)) : q;\r\n    dshlTo(y, j, t);\r\n    if (compare(r, t) >= 0) {\r\n        r[r.t++] = 1;\r\n        subTo(r, t, r);\r\n    }\r\n    dshlTo(ONE, ys, t);\r\n    subTo(t, y, y);\r\n    while (y.t < ys)\r\n        y[y.t++] = 0;\r\n    while (--j >= 0) {\r\n        var qd = (r[--i] === y0) ? DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\r\n        if ((r[i] += am(y, 0, qd, r, j, 0, ys)) < qd) {\r\n            dshlTo(y, j, t);\r\n            subTo(r, t, r);\r\n            while (r[i] < --qd)\r\n                subTo(r, t, r);\r\n        }\r\n    }\r\n    if (q) {\r\n        dshrTo(r, ys, q);\r\n        if (ts !== ms)\r\n            subTo(ZERO, q, q);\r\n    }\r\n    r.t = ys;\r\n    clamp(r);\r\n    if (nsh > 0)\r\n        shrTo(r, nsh, r);\r\n    if (ts < 0)\r\n        subTo(ZERO, r, r);\r\n    return q;\r\n}\r\n\r\nfunction modTo(b, a, r) {\r\n    divRemTo(abs(b), a, null, r);\r\n    if (b.s < 0 && compare(r, ZERO) > 0)\r\n        subTo(a, r, r);\r\n    return r;\r\n}\r\n\r\nfunction mod(b, a) {\r\n    return modTo(b, a, nbi(a.t));\r\n}\r\n\r\nfunction div(b, a) {\r\n    return divRemTo(b, a, nbi(Math.max(b.t - a.t, 1)), null);\r\n}\r\n\r\nfunction isEven(x) {\r\n\r\n    return ((x.t > 0) ? (x[0] & 1) : x.s) === 0;\r\n}\r\n\r\nfunction isZero(x) {\r\n    return equals(x, ZERO);\r\n}\r\n\r\nfunction sig(x) {\r\n    if (x.s < 0)\r\n        return -1;\r\n    else if (x.t <= 0 || (x.t === 1 && x[0] <= 0))\r\n        return 0;\r\n    else\r\n        return 1;\r\n}\r\n\r\nfunction invMod(x, m) {\r\n    var ac = isEven(m);\r\n    if ((isEven(x) && ac) || sig(m) === 0)\r\n        return ZERO;\r\n    var u = copy(m), v = copy(x);\r\n    var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\r\n    while (sig(u) !== 0) {\r\n        while (isEven(u)) {\r\n            shrTo(u, 1, u);\r\n            if (ac) {\r\n                if (!isEven(a) || !isEven(b)) {\r\n                    addTo(a, x, a);\r\n                    subTo(b, m, b);\r\n                }\r\n                shrTo(a, 1, a);\r\n            }\r\n            else if (!isEven(b))\r\n                subTo(b, m, b);\r\n            shrTo(b, 1, b);\r\n        }\r\n        while (isEven(v)) {\r\n            shrTo(v, 1, v);\r\n            if (ac) {\r\n                if (!isEven(c) || !isEven(d)) {\r\n                    addTo(c, x, c);\r\n                    subTo(d, m, d);\r\n                }\r\n                shrTo(c, 1, c);\r\n            }\r\n            else if (!isEven(d))\r\n                subTo(d, m, d);\r\n            shrTo(d, 1, d);\r\n        }\r\n        if (compare(u, v) >= 0) {\r\n            subTo(u, v, u);\r\n            if (ac)\r\n                subTo(a, c, a);\r\n            subTo(b, d, b);\r\n        }\r\n        else {\r\n            subTo(v, u, v);\r\n            if (ac)\r\n                subTo(c, a, c);\r\n            subTo(d, b, d);\r\n        }\r\n    }\r\n    if (compare(v, ONE) !== 0)\r\n        return ZERO;\r\n    if (compare(d, m) >= 0)\r\n        return subtract(d, m);\r\n    if (sig(d) < 0)\r\n        addTo(d, m, d);\r\n    else\r\n        return d;\r\n    if (sig(d) < 0)\r\n        return add(d, m);\r\n    else\r\n        return d;\r\n}\r\n\r\nfunction testBit(x, n) {\r\n    var j = Math.floor(n / DB);\r\n    if (j >= x.t)\r\n        return (x.s !== 0);\r\n    return ((x[j] & (1 << (n % DB))) !== 0);\r\n}\r\n\r\nfunction nothing(x) {\r\n    return x;\r\n}\r\n\r\nfunction extend(c, o) {\r\n    for (var i in o)\r\n        c.prototype[i] = o[i];\r\n} // </editor-fold>\r\n\r\n/*\r\n * Classic, Barret, Mongomery reductions, optimized ExpMod algorithms\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/jsbn2.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Classic reduction\r\nvar Classic = function (m) {\r\n    this.m = m;\r\n};\r\n\r\nextend(Classic, {\r\n    convert: function (x) {\r\n        if (x.s < 0 || compare(x, this.m) >= 0)\r\n            return mod(x, this.m);\r\n        else\r\n            return x;\r\n    },\r\n    revert: nothing,\r\n    reduce: function (x) {\r\n        modTo(x, this.m, x);\r\n    },\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n});\r\n\r\nfunction invDig(a) {\r\n    if (a.t < 1)\r\n        return 0;\r\n    var x = a[0];\r\n    if ((x & 1) === 0)\r\n        return 0;\r\n    var y = x & 3;\r\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\r\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\r\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\r\n    y = (y * (2 - x * y % DV)) % DV;\r\n    return (y > 0) ? DV - y : -y;\r\n}\r\n\r\n// Montgomery reduction\r\nvar Montgomery = function (m) {\r\n    this.m = m;\r\n    this.mp = invDig(m);\r\n    this.mpl = this.mp & 0x7fff;\r\n    this.mph = this.mp >> 15;\r\n    this.um = (1 << (DB - 15)) - 1;\r\n    this.mt2 = 2 * m.t;\r\n};\r\n\r\nextend(Montgomery, {\r\n    // xR mod m\r\n    convert: function (x) {\r\n        var r = nbi(x.t);\r\n        dshlTo(abs(x), this.m.t, r);\r\n        divRemTo(r, this.m, null, r);\r\n        if (x.s < 0 && compare(r, ZERO) > 0)\r\n            subTo(this.m, r, r);\r\n        return r;\r\n    },\r\n    // x/R mod m\r\n    revert: function (x) {\r\n        var r = nbi(x.t);\r\n        copyTo(x, r);\r\n        this.reduce(r);\r\n        return r;\r\n    },\r\n    // x = x/R mod m (HAC 14.32)\r\n    reduce: function (x) {\r\n        while (x.t <= this.mt2)\r\n            x[x.t++] = 0;\r\n        for (var i = 0; i < this.m.t; ++i) {\r\n            var j = x[i] & 0x7fff;\r\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & DM;\r\n            j = i + this.m.t;\r\n            x[j] += am(this.m, 0, u0, x, i, 0, this.m.t);\r\n            while (x[j] >= DV) {\r\n                x[j] -= DV;\r\n                x[++j]++;\r\n            }\r\n        }\r\n        clamp(x);\r\n        dshrTo(x, this.m.t, x);\r\n        if (compare(x, this.m) >= 0)\r\n            subTo(x, this.m, x);\r\n    },\r\n    // r = \"x^2/R mod m\"; x != r\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    // r = \"xy/R mod m\"; x,y != r\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n});\r\n\r\nfunction dAddOffset(x, n, w) {\r\n    if (n === 0)\r\n        return;\r\n    while (x.t <= w)\r\n        x[x.t++] = 0;\r\n    x[w] += n;\r\n    while (x[w] >= DV) {\r\n        x[w] -= DV;\r\n        if (++w >= x.t)\r\n            x[x.t++] = 0;\r\n        ++x[w];\r\n    }\r\n}\r\n\r\nfunction mulLowerTo(x, a, n, r) {\r\n    var i = Math.min(x.t + a.t, n);\r\n    r.s = 0; // assumes a,x >= 0\r\n    r.t = i;\r\n    while (i > 0)\r\n        r[--i] = 0;\r\n    var j;\r\n    for (j = r.t - x.t; i < j; ++i)\r\n        r[i + x.t] = am(x, 0, a[i], r, i, 0, x.t);\r\n    for (j = Math.min(a.t, n); i < j; ++i)\r\n        am(x, 0, a[i], r, i, 0, n - i);\r\n    return clamp(r);\r\n}\r\n\r\nfunction mulUpperTo(x, a, n, r) {\r\n    --n;\r\n    var i = r.t = x.t + a.t - n;\r\n    r.s = 0; // assumes a,x >= 0\r\n    while (--i >= 0)\r\n        r[i] = 0;\r\n    for (i = Math.max(n - x.t, 0); i < a.t; ++i)\r\n        r[x.t + i - n] = am(x, n - i, a[i], r, 0, 0, x.t + i - n);\r\n    clamp(r);\r\n    return dshrTo(r, 1, r);\r\n}\r\n\r\n// Barrett modular reduction\r\nfunction Barrett(m) {\r\n    // setup Barrett\r\n    this.r2 = nbi(2 * m.t);\r\n    this.q3 = nbi(2 * m.t);\r\n    dshlTo(ONE, 2 * m.t, this.r2);\r\n    this.mu = div(this.r2, m);\r\n    this.m = m;\r\n}\r\n\r\nextend(Barrett, {\r\n    convert: function (x) {\r\n        if (x.s < 0 || x.t > 2 * this.m.t)\r\n            return mod(x, this.m);\r\n        else if (compare(x, this.m) < 0)\r\n            return x;\r\n        else {\r\n            var r = nbi(x.t);\r\n            copyTo(x, r);\r\n            this.reduce(r);\r\n            return r;\r\n        }\r\n    },\r\n    revert: function (x) {\r\n        return x;\r\n    },\r\n    // x = x mod m (HAC 14.42)\r\n    reduce: function (x) {\r\n        dshrTo(x, this.m.t - 1, this.r2);\r\n        if (x.t > this.m.t + 1) {\r\n            x.t = this.m.t + 1;\r\n            clamp(x);\r\n        }\r\n        mulUpperTo(this.mu, this.r2, this.m.t + 1, this.q3);\r\n        mulLowerTo(this.m, this.q3, this.m.t + 1, this.r2);\r\n        while (compare(x, this.r2) < 0)\r\n            dAddOffset(x, 1, this.m.t + 1);\r\n        subTo(x, this.r2, x);\r\n        while (compare(x, this.m) >= 0)\r\n            subTo(x, this.m, x);\r\n    },\r\n    // r = x^2 mod m; x != r\r\n    sqrTo: function (x, r) {\r\n        sqrTo(x, r);\r\n        this.reduce(r);\r\n    },\r\n    // r = x*y mod m; x,y != r\r\n    mulTo: function (x, y, r) {\r\n        mulTo(x, y, r);\r\n        this.reduce(r);\r\n    }\r\n\r\n});\r\n\r\n// x^e % m (HAC 14.85)\r\nfunction expMod(x, e, m) {\r\n    var i = bitLength(e), k, r = nbv(1), z;\r\n    if (i <= 0)\r\n        return r;\r\n    else if (i < 18)\r\n        k = 1;\r\n    else if (i < 48)\r\n        k = 3;\r\n    else if (i < 144)\r\n        k = 4;\r\n    else if (i < 768)\r\n        k = 5;\r\n    else\r\n        k = 6;\r\n    if (i < 8)\r\n        z = new Classic(m);\r\n    else if (isEven(m))\r\n        z = new Barrett(m);\r\n    else\r\n        z = new Montgomery(m);\r\n\r\n    // precomputation\r\n    var g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\r\n    g[1] = z.convert(x);\r\n    if (k > 1) {\r\n        var g2 = nbi(m.t * 2);\r\n        z.sqrTo(g[1], g2);\r\n        while (n <= km) {\r\n            g[n] = nbi(m.t * 2);\r\n            z.mulTo(g2, g[n - 2], g[n]);\r\n            n += 2;\r\n        }\r\n    }\r\n\r\n    var j = e.t - 1, w, is1 = true, r2 = nbi(m.t * 2), t;\r\n    i = nbits(e[j]) - 1;\r\n    while (j >= 0) {\r\n        if (i >= k1)\r\n            w = (e[j] >> (i - k1)) & km;\r\n        else {\r\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\r\n            if (j > 0)\r\n                w |= e[j - 1] >> (DB + i - k1);\r\n        }\r\n\r\n        n = k;\r\n        while ((w & 1) == 0) {\r\n            w >>= 1;\r\n            --n;\r\n        }\r\n        if ((i -= n) < 0) {\r\n            i += DB;\r\n            --j;\r\n        }\r\n        if (is1) {\t// ret == 1, don't bother squaring or multiplying it\r\n            copyTo(g[w], r);\r\n            is1 = false;\r\n        }\r\n        else {\r\n            while (n > 1) {\r\n                z.sqrTo(r, r2);\r\n                z.sqrTo(r2, r);\r\n                n -= 2;\r\n            }\r\n            if (n > 0)\r\n                z.sqrTo(r, r2);\r\n            else {\r\n                t = r;\r\n                r = r2;\r\n                r2 = t;\r\n            }\r\n            z.mulTo(r2, g[w], r);\r\n        }\r\n        while (j >= 0 && (e[j] & (1 << i)) == 0) {\r\n            z.sqrTo(r, r2);\r\n            t = r;\r\n            r = r2;\r\n            r2 = t;\r\n            if (--i < 0) {\r\n                i = DB - 1;\r\n                --j;\r\n            }\r\n        }\r\n    }\r\n    return z.revert(r);\r\n} // </editor-fold>\r\n\r\n/*\r\n * EC Field Elements, Points, Curves\r\n * optimized release of http://www-cs-students.stanford.edu/~tjw/jsbn/ec.js\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// EC Field Elemets\r\nfunction newFE(a, x) {\r\n    a.r.reduce(x);\r\n    x.q = a.q;\r\n    x.r = a.r;\r\n    return x;\r\n}\r\n\r\nfunction copyFE(a, x) {\r\n    x.q = a.q;\r\n    x.r = a.r;\r\n    return x;\r\n}\r\n\r\nfunction negFE(a) {\r\n    return copyFE(a, sub(a.q, a));\r\n}\r\n\r\nfunction addFE(a, b) {\r\n    var r = add(a, b);\r\n    if (compare(r, a.q) > 0)\r\n        subTo(r, a.q, r);\r\n    return copyFE(a, r);\r\n}\r\n\r\nfunction subFE(a, b) {\r\n    var r = sub(a, b);\r\n    if (r.s < 0)\r\n        addTo(a.q, r, r);\r\n    return copyFE(a, r);\r\n}\r\n\r\nfunction mulFE(a, b) {\r\n    return newFE(a, mul(a, b));\r\n}\r\n\r\nfunction sqrFE(a) {\r\n    return newFE(a, sqr(a));\r\n}\r\n\r\nfunction shlFE(a, i) {\r\n    return newFE(a, shl(a, i));\r\n}\r\n\r\nfunction invFE(a) {\r\n    return copyFE(a, invMod(a, a.q));\r\n}\r\n\r\n// EC Points\r\nfunction newEC(curve, x, y, z) {\r\n    return {\r\n        curve: curve,\r\n        x: x,\r\n        y: y,\r\n        z: z || newFE(curve, ONE)\r\n    };\r\n}\r\n\r\nfunction getX(point) {\r\n    if (!point.zinv)\r\n        point.zinv = invFE(point.z);\r\n    return mulFE(point.x, point.zinv);\r\n}\r\n\r\nfunction getY(point) {\r\n    if (!point.zinv)\r\n        point.zinv = invFE(point.z);\r\n    return mulFE(point.y, point.zinv);\r\n}\r\n\r\nfunction isInfinity(a) {\r\n    if ((!a.x) && (!a.y))\r\n        return true;\r\n    return isZero(a.z) && !isZero(a.y);\r\n}\r\n\r\nfunction getInfinity(a) {\r\n    return a.curve.infinity;\r\n}\r\n\r\nfunction equalsEC(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    if (isInfinity(a))\r\n        return isInfinity(b);\r\n    if (isInfinity(b))\r\n        return isInfinity(a);\r\n    var u, v;\r\n    // u = Y2 * Z1 - Y1 * Z2\r\n    u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\r\n    if (!isZero(u))\r\n        return false;\r\n    // v = X2 * Z1 - X1 * Z2\r\n    v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\r\n    return isZero(v);\r\n}\r\n\r\nfunction negEC(a) {\r\n    return newEC(a.curve, a.x, negFE(a.y), a.z);\r\n}\r\n\r\nfunction addEC(a, b) {\r\n    if (isInfinity(a))\r\n        return b;\r\n    if (isInfinity(b))\r\n        return a;\r\n\r\n    // u = Y2 * Z1 - Y1 * Z2\r\n    var u = subFE(mulFE(b.y, a.z), mulFE(a.y, b.z));\r\n    // v = X2 * Z1 - X1 * Z2\r\n    var v = subFE(mulFE(b.x, a.z), mulFE(a.x, b.z));\r\n\r\n    if (isZero(v)) {\r\n        if (isZero(u)) {\r\n            return twiceEC(a); // a == b, so double\r\n        }\r\n        return getInfinity(a); // a = -b, so infinity\r\n    }\r\n\r\n    var x1 = a.x;\r\n    var y1 = a.y;\r\n\r\n    var v2 = sqrFE(v);\r\n    var v3 = mulFE(v2, v);\r\n    var x1v2 = mulFE(x1, v2);\r\n    var zu2 = mulFE(sqrFE(u), a.z);\r\n\r\n    // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\r\n    var x3 = mulFE(subFE(mulFE(subFE(zu2, shlFE(x1v2, 1)), b.z), v3), v);\r\n    // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\r\n    var y3 = addFE(mulFE(subFE(subFE(mulFE(mulFE(x1v2, THREE), u), mulFE(y1, v3)), mulFE(zu2, u)), b.z), mulFE(u, v3));\r\n    // z3 = v^3 * z1 * z2\r\n    var z3 = mulFE(mulFE(v3, a.z), b.z);\r\n\r\n    return newEC(a.curve, x3, y3, z3);\r\n}\r\n\r\nfunction twiceEC(b) {\r\n    if (isInfinity(b))\r\n        return b;\r\n    if (sig(b.y) === 0)\r\n        return getInfinity(b);\r\n\r\n    var x1 = b.x;\r\n    var y1 = b.y;\r\n\r\n    var y1z1 = mulFE(y1, b.z);\r\n    var y1sqz1 = mulFE(y1z1, y1);\r\n    var a = b.curve.a;\r\n\r\n    // w = 3 * x1^2 + a * z1^2\r\n    var w = mulFE(sqrFE(x1), THREE);\r\n    if (!isZero(a)) {\r\n        w = addFE(w, mulFE(sqrFE(b.z), a));\r\n    }\r\n\r\n    // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\r\n    var x3 = mulFE(shlFE(subFE(sqrFE(w), mulFE(shlFE(x1, 3), y1sqz1)), 1), y1z1);\r\n    // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\r\n    var y3 = subFE(mulFE(shlFE(subFE(mulFE(mulFE(w, THREE), x1), shlFE(y1sqz1, 1)), 2), y1sqz1), mulFE(sqrFE(w), w));\r\n    // z3 = 8 * (y1 * z1)^3\r\n    var z3 = shlFE(mulFE(sqrFE(y1z1), y1z1), 3);\r\n\r\n    return newEC(b.curve, x3, y3, z3);\r\n}\r\n\r\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\r\nfunction mulEC(a, k) {\r\n    if (isInfinity(a))\r\n        return a;\r\n    if (sig(k) === 0)\r\n        return getInfinity(a);\r\n\r\n    var e = k;\r\n    var h = mul(e, THREE);\r\n\r\n    var neg = negEC(a);\r\n    var R = a;\r\n\r\n    var i;\r\n    for (i = bitLength(h) - 2; i > 0; --i) {\r\n        R = twiceEC(R);\r\n\r\n        var hBit = testBit(h, i);\r\n        var eBit = testBit(e, i);\r\n\r\n        if (hBit !== eBit) {\r\n            R = addEC(R, hBit ? a : neg);\r\n        }\r\n    }\r\n\r\n    return R;\r\n}\r\n\r\nfunction mul2AndAddEC(a, k) {\r\n    var nbits = bitLength(k);\r\n    var R = a,\r\n      Q = getInfinity(a);\r\n\r\n    for (var i = 0; i < nbits - 1; i++) {\r\n        if (testBit(k, i) === 1)\r\n            Q = addEC(Q, R);\r\n\r\n        R = twiceEC(R);\r\n    }\r\n\r\n    if (testBit(k, nbits - 1) === 1)\r\n        Q = addEC(Q, R);\r\n\r\n    return Q;\r\n}\r\n\r\n// Compute a*j + x*k (simultaneous multiplication)\r\nfunction mulTwoEC(a, j, x, k) {\r\n    var i;\r\n    if (bitLength(j) > bitLength(k))\r\n        i = bitLength(j) - 1;\r\n    else\r\n        i = bitLength(k) - 1;\r\n\r\n    var R = getInfinity(a);\r\n    var both = addEC(a, x);\r\n    while (i >= 0) {\r\n        R = twiceEC(R);\r\n        if (testBit(j, i)) {\r\n            if (testBit(k, i)) {\r\n                R = addEC(R, both);\r\n            }\r\n            else {\r\n                R = addEC(R, a);\r\n            }\r\n        }\r\n        else {\r\n            if (testBit(k, i)) {\r\n                R = addEC(R, x);\r\n            }\r\n        }\r\n        --i;\r\n    }\r\n\r\n    return R;\r\n}\r\n\r\n// EC Curve\r\nfunction newCurve(q, a, b) {\r\n    var curve = {};\r\n    curve.q = q;\r\n    curve.r = new Barrett(q);\r\n    curve.a = newFE(curve, a);\r\n    curve.b = newFE(curve, b);\r\n    curve.infinity = newEC(curve);\r\n    return curve;\r\n} // </editor-fold>\r\n\r\n/*\r\n * Converion tools (hex, binary)\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\nfunction atobi(d) {\r\n    var k = 8;\r\n    var a = new Uint8Array(d);\r\n    var r = nbi(a.length * 8 / DB);\r\n    r.t = 0;\r\n    r.s = 0;\r\n    var sh = 0;\r\n    for (var i = 0, n = a.length; i < n; i++) {\r\n        var x = a[i];\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    return clamp(r);\r\n}\r\n\r\nfunction bitoa(s, bitLength) {\r\n    var k = 8;\r\n    var km = (1 << k) - 1, d, m = false, r = [], i = s.t;\r\n    var p = DB - (i * DB) % k;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = s[i] >> p) > 0) {\r\n            m = true;\r\n            r.push(d);\r\n        }\r\n        while (i >= 0) {\r\n            if (p < k) {\r\n                d = (s[i] & ((1 << p) - 1)) << (k - p);\r\n                d |= s[--i] >> (p += DB - k);\r\n            }\r\n            else {\r\n                d = (s[i] >> (p -= k)) & km;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if (d > 0)\r\n                m = true;\r\n            if (m)\r\n                r.push(d);\r\n        }\r\n    }\r\n    var r8 = new Uint8Array(bitLength ? bitLength / 8 : r.length);\r\n    if (m)\r\n        r8.set(r.reverse());\r\n    return r8.buffer;\r\n}\r\n\r\n\r\nfunction htobi(s) {\r\n    if (typeof s === 'number' || s instanceof Number)\r\n        return nbv(s);\r\n    s = s.replace(/[^\\-A-Fa-f0-9]/g, '');\r\n    if (!s)\r\n        s = '0';\r\n    var k = 4;\r\n    var r = nbi(s.length / 7);\r\n    var i = s.length, mi = false, sh = 0;\r\n    while (--i >= 0) {\r\n        var c = s.charAt(i);\r\n        if (c === '-') {\r\n            mi = true;\r\n            continue;\r\n        }\r\n        var x = parseInt(s.charAt(i), 16);\r\n        mi = false;\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    if (mi)\r\n        subTo(ZERO, r, r);\r\n    return clamp(r);\r\n}\r\n\r\nfunction bitoh(x) {\r\n    if (x.s < 0)\r\n        return \"-\" + bitoh(negTo(x, nbi(x.t)));\r\n    var k = 4;\r\n    var km = (1 << k) - 1, d, m = false, r = \"\", i = x.t;\r\n    var p = DB - (i * DB) % k;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = x[i] >> p) > 0) {\r\n            m = true;\r\n            r = d.toString(16);\r\n        }\r\n        while (i >= 0) {\r\n            if (p < k) {\r\n                d = (x[i] & ((1 << p) - 1)) << (k - p);\r\n                d |= x[--i] >> (p += DB - k);\r\n            }\r\n            else {\r\n                d = (x[i] >> (p -= k)) & km;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if (d > 0)\r\n                m = true;\r\n            if (m)\r\n                r += d.toString(16);\r\n        }\r\n    }\r\n    return \"0x\" + (m ? r : \"0\");\r\n}\r\n\r\n// biginteger to big-endian integer bytearray\r\nfunction bitoi(s) {\r\n    var i = s.t, r = [];\r\n    r[0] = s.s;\r\n    var p = DB - (i * DB) % 8, d, k = 0;\r\n    if (i-- > 0) {\r\n        if (p < DB && (d = s[i] >> p) !== (s.s & DM) >> p)\r\n            r[k++] = d | (s.s << (DB - p));\r\n        while (i >= 0) {\r\n            if (p < 8) {\r\n                d = (s[i] & ((1 << p) - 1)) << (8 - p);\r\n                d |= s[--i] >> (p += DB - 8);\r\n            }\r\n            else {\r\n                d = (s[i] >> (p -= 8)) & 0xff;\r\n                if (p <= 0) {\r\n                    p += DB;\r\n                    --i;\r\n                }\r\n            }\r\n            if ((d & 0x80) !== 0)\r\n                d |= -256;\r\n            if (k === 0 && (s.s & 0x80) !== (d & 0x80))\r\n                ++k;\r\n            if (k > 0 || d !== s.s)\r\n                r[k++] = d;\r\n        }\r\n    }\r\n    return new Uint8Array(r).buffer;\r\n}\r\n\r\n// big-endian integer bytearray to biginteger\r\nfunction itobi(d) {\r\n    var k = 8, s = new Uint8Array(d),\r\n      r = nbi(s.length / 7);\r\n    r.t = 0;\r\n    r.s = 0;\r\n    var i = s.length, sh = 0;\r\n    while (--i >= 0) {\r\n        var x = s[i] & 0xff;\r\n        if (sh === 0)\r\n            r[r.t++] = x;\r\n        else if (sh + k > DB) {\r\n            r[r.t - 1] |= (x & ((1 << (DB - sh)) - 1)) << sh;\r\n            r[r.t++] = (x >> (DB - sh));\r\n        }\r\n        else\r\n            r[r.t - 1] |= x << sh;\r\n        sh += k;\r\n        if (sh >= DB)\r\n            sh -= DB;\r\n    }\r\n    if ((s[0] & 0x80) !== 0) {\r\n        r.s = -1;\r\n        if (sh > 0)\r\n            r[r.t - 1] |= ((1 << (DB - sh)) - 1) << sh;\r\n    }\r\n    return clamp(r);\r\n}\r\n\r\n\r\n// Swap bytes in buffer\r\nfunction swap(s) {\r\n    var src = new Uint8Array(s),\r\n      dst = new Uint8Array(src.length);\r\n    for (var i = 0, n = src.length; i < n; i++)\r\n        dst[n - i - 1] = src[i];\r\n    return dst.buffer;\r\n}\r\n\r\n// Calculate hash of data\r\nfunction hash(d) {\r\n    if (this.hash)\r\n        d = this.hash.digest(d);\r\n    // Swap hash for SignalCom\r\n    if (this.procreator === 'SC' ||\r\n      (this.procreator === 'VN' && this.hash.version === 2012))\r\n        d = swap(d);\r\n    return d;\r\n}\r\n\r\n// Check buffer\r\nfunction buffer(d) {\r\n    if (d instanceof CryptoOperationData)\r\n        return d;\r\n    else if (d && d.buffer && d.buffer instanceof CryptoOperationData)\r\n        return d.byteOffset === 0 && d.byteLength === d.buffer.byteLength ?\r\n          d.buffer : new Uint8Array(new Uint8Array(d, d.byteOffset, d.byteLength)).buffer;\r\n    else\r\n        throw new DataError('CryptoOperationData or CryptoOperationDataView required');\r\n}\r\n\r\n// Check double buffer\r\nfunction to2(d) {\r\n    var b = buffer(d);\r\n    if (b.byteLength % 2 > 0)\r\n        throw new DataError('Buffer length must be even');\r\n    var n = b.byteLength / 2;\r\n    return [atobi(new Uint8Array(b, 0, n)), atobi(new Uint8Array(b, n, n))];\r\n}\r\n\r\nfunction from2(x, y, bitLength) {\r\n    var a = bitoa(x, bitLength),\r\n      b = bitoa(y, bitLength),\r\n      d = new Uint8Array(a.byteLength + b.byteLength);\r\n    d.set(new Uint8Array(a));\r\n    d.set(new Uint8Array(b), a.byteLength);\r\n    return d.buffer;\r\n}\r\n\r\n// </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The sign method returns sign data generated with the supplied privateKey.<br>\r\n *\r\n * @memberOf GostSign\r\n * @method sign\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} privateKey Private key\r\n * @param {(CryptoOperationData|TypedArray)} data Data\r\n * @returns {CryptoOperationData} Signature\r\n */\r\nfunction sign(privateKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    // Stage 1\r\n    var b = buffer(data);\r\n    var alpha = atobi(hash.call(this, b));\r\n\r\n    var q = this.q;\r\n    var x = mod(atobi(buffer(privateKey)), q);\r\n\r\n    // Stage 2\r\n    var e = mod(alpha, q);\r\n    if (isZero(e))\r\n        e = ONE;\r\n\r\n    var s = ZERO;\r\n    while (isZero(s)) {\r\n        var r = ZERO;\r\n        while (isZero(r)) {\r\n\r\n            // Stage 3\r\n            var k = mod(atobi(this.ukm ||\r\n              getSeed(this.bitLength)), q); // pseudo random 0 < k < q\r\n            // Stage 4\r\n            if (this.curve) {\r\n                // Gost R 34.10-2001 || Gost R 34.10-2012\r\n                var P = this.P;\r\n                var C = mulEC(P, k);\r\n                r = mod(getX(C), q);\r\n            } else {\r\n                // Gost R 34.10-94\r\n                var p = this.p, a = this.a;\r\n                r = mod(expMod(a, k, p), q);\r\n            }\r\n        }\r\n        // Stage 5\r\n        s = mod(add(mul(r, x), mul(k, e)), q);\r\n    }\r\n    // Stage 6\r\n    // console.log('s', bitoh(s));\r\n    // console.log('r', bitoh(r));\r\n    var zetta;\r\n    // Integer structure for SignalCom algorithm\r\n    if (this.procreator === 'SC') {\r\n        zetta = {\r\n            r: bitoh(r),\r\n            s: bitoh(s)\r\n        };\r\n    } else {\r\n        zetta = from2(r, s, this.bitLength);\r\n        // Swap bytes for CryptoPro algorithm\r\n        if (this.procreator === 'CP' || this.procreator === 'VN')\r\n            zetta = swap(zetta);\r\n    }\r\n    return zetta;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The verify method returns signature verification for the supplied publicKey.<br>\r\n *\r\n * @memberOf GostSign\r\n * @method sign\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} publicKey Public key\r\n * @param {(CryptoOperationData|TypedArray)} signature Signature\r\n * @param {(CryptoOperationData|TypedArray)} data Data\r\n * @returns {boolean} Signature verified = true\r\n */\r\nfunction verify(publicKey, signature, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    // Stage 1\r\n    var q = this.q;\r\n    var r, s;\r\n    // Ready int for SignalCom algorithm\r\n    if (this.procreator === 'SC') {\r\n        r = htobi(signature.r);\r\n        s = htobi(signature.s);\r\n    } else {\r\n        if (this.procreator === 'CP' || this.procreator === 'VN')\r\n            signature = swap(signature);\r\n        var zetta = to2(signature);\r\n        // Swap bytes for CryptoPro algorithm\r\n        s = zetta[1]; //  first 32 octets contain the big-endian representation of s\r\n        r = zetta[0]; //  and second 32 octets contain the big-endian representation of r\r\n    }\r\n    if (compare(r, q) >= 0 || compare(s, q) >= 0)\r\n        return false;\r\n    // Stage 2\r\n    var b = buffer(data);\r\n    var alpha = atobi(hash.call(this, b));\r\n    // Stage 3\r\n    var e = mod(alpha, q);\r\n    if (isZero(e) === 0)\r\n        e = ONE;\r\n    // Stage 4\r\n    var v = invMod(e, q);\r\n    // Stage 5\r\n    var z1 = mod(mul(s, v), q);\r\n    var z2 = sub(q, mod(mul(r, v), q));\r\n    // Stage 6\r\n    if (this.curve) {\r\n        // Gost R 34.10-2001 || Gost R 34.10-2012\r\n        var k2 = to2(publicKey),\r\n          curve = this.curve,\r\n          P = this.P,\r\n          x = newFE(curve, k2[0]), // first 32 octets contain the little-endian representation of x\r\n          y = newFE(curve, k2[1]), // and second 32 octets contain the little-endian representation of y.\r\n          Q = new newEC(curve, x, y); // This corresponds to the binary representation of (<y>256||<x>256)\r\n        var C = mulTwoEC(P, z1, Q, z2);\r\n        var R = mod(getX(C), q);\r\n    } else {\r\n        // Gost R 34.10-94\r\n        var p = this.p, a = this.a;\r\n        var y = atobi(publicKey);\r\n        var R = mod(mod(mul(expMod(a, z1, p), expMod(y, z2, p)), p), q);\r\n    }\r\n    // Stage 7\r\n    return (compare(R, r) === 0);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The generateKey method returns a new generated key pair using the specified\r\n * AlgorithmIdentifier.\r\n *\r\n * @memberOf GostSign\r\n * @method generateKey\r\n * @instance\r\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\r\n */\r\nfunction generateKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n\r\n        var Q = curve.infinity;\r\n        while (isInfinity(Q)) {\r\n\r\n            // Generate random private key\r\n            var d = ZERO;\r\n            if (this.ukm) {\r\n                d = atobi(this.ukm);\r\n            } else {\r\n                while (isZero(d))\r\n                    d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\r\n            }\r\n\r\n            // Calculate public key\r\n            Q = mulEC(this.P, d);\r\n            var x = getX(Q), y = getY(Q);\r\n            // console.log('d', bitoh(d));\r\n            // console.log('x', bitoh(x));\r\n            // console.log('y', bitoh(y));\r\n        }\r\n\r\n        // Return result\r\n        return {\r\n            privateKey: bitoa(d, this.bitLength),\r\n            publicKey: from2(x, y, this.bitLength) // This corresponds to the binary representation of (<y>256||<x>256)\r\n        };\r\n\r\n    } else\r\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10 mode MASK<br><br>\r\n *\r\n * The generateMaskKey method returns a new generated key mask using for wrapping.\r\n *\r\n * @memberOf GostSign\r\n * @method generateMaskKey\r\n * @instance\r\n * @returns {Object} Object with two CryptoOperationData members: privateKey and publicKey\r\n */\r\nfunction generateMaskKey() // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        // Generate random private key\r\n        var d = ZERO;\r\n        while (isZero(d))\r\n            d = mod(atobi(getSeed(this.bitLength)), this.q); // 0 < d < q\r\n\r\n        // Return result\r\n        return bitoa(d, this.bitLength);\r\n    } else\r\n        throw new NotSupportedError('Key generation for GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * Unwrap private key from private key and ukm (mask)\r\n *\r\n * @memberOf GostSign\r\n * @method unwrap\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Unwrapping key\r\n * @param {(CryptoOperationData|TypedArray)} data Wrapped key\r\n * @returns {Object} CryptoOperationData unwrapped privateKey\r\n */\r\nfunction unwrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        var q = this.q;\r\n        var x = mod(atobi(buffer(data)), q);\r\n        var y = mod(atobi(buffer(baseKey)), q);\r\n        var z = this.procreator === 'VN' ? mod(mul(x, y), q) : mod(mul(x, invMod(y, q)), q);\r\n        return bitoa(z);\r\n    } else\r\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * Wrap private key with private key and ukm (mask)\r\n *\r\n * @memberOf GostSign\r\n * @method unwrap\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Wrapping key\r\n * @param {(CryptoOperationData|TypedArray)} data Key\r\n * @returns {Object} CryptoOperationData unwrapped privateKey\r\n */\r\nfunction wrapKey(baseKey, data) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var curve = this.curve;\r\n    if (curve) {\r\n        var q = this.q;\r\n        var x = mod(atobi(buffer(data)), q);\r\n        var y = mod(atobi(buffer(baseKey)), q);\r\n        var z = this.procreator === 'VN' ? mod(mul(x, invMod(y, q)), q) : mod(mul(x, y), q);\r\n        return bitoa(z);\r\n    } else\r\n        throw new NotSupportedError('Key wrapping GOST R 34.10-94 not supported');\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * @memberOf GostSign\r\n * @method derive\r\n * @instance\r\n * @private\r\n * @param {CryptoOperationData} baseKey Key for deriviation\r\n * @returns {CryptoOperationData}\r\n */\r\nfunction derive(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n\r\n    var k, ukm = atobi(this.ukm);\r\n    var q = this.q;\r\n    var x = mod(atobi(buffer(baseKey)), q);\r\n\r\n    if (this.curve) {\r\n        // 1) Let K(x,y,UKM) = ((UKM*x)(mod q)) . (y.P) (512 bit), where\r\n        // x - sender’s private key (256 bit)\r\n        // x.P - sender’s public key (512 bit)\r\n        // y - recipient’s private key (256 bit)\r\n        // y.P - recipient’s public key (512 bit)\r\n        // UKM - non-zero integer, produced as in step 2 p. 6.1 [GOSTR341001]\r\n        // P - base point on the elliptic curve (two 256-bit coordinates)\r\n        // UKM*x - x multiplied by UKM as integers\r\n        // x.P - a multiple point\r\n        var K = mulEC(this.peer_Q, mod(mul(ukm, x), q));\r\n        k = from2(getX(K), getY(K), // This corresponds to the binary representation of (<y>256||<x>256)\r\n          this.bitLength);\r\n    } else {\r\n        // 1) Let K(x,y) = a^(x*y) (mod p), where\r\n        // x - sender’s private key, a^x - sender’s public key\r\n        // y - recipient’s private key, a^y - recipient’s public key\r\n        // a, p - parameters\r\n        var p = this.p, a = this.a;\r\n        k = bitoa(expMod(this.peer_y, x, p));\r\n    }\r\n    // 2) Calculate a 256-bit hash of K(x,y,UKM):\r\n    // KEK(x,y,UKM) = gostSign (K(x,y,UKM)\r\n    return hash.call(this, k);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The deriveBits method returns length bits on baseKey.\r\n *\r\n * @memberOf GostSign\r\n * @method deriveBits\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\r\n * @param {number} length output bit-length\r\n * @returns {CryptoOperationData} result\r\n */\r\nfunction deriveBits(baseKey, length) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    if (length < 8 || length > this.bitLength || length % 8 > 0)\r\n        throw new DataError('Length must be no more than ' + this.bitLength + ' bits and multiple of 8');\r\n    var n = length / 8,\r\n      b = derive.call(this, baseKey),\r\n      r = new Uint8Array(n);\r\n\r\n    r.set(new Uint8Array(b, 0, n));\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n/**\r\n * Algorithm name GOST R 34.10<br><br>\r\n *\r\n * The deriveKey method returns 256 bit Key encryption key on baseKey.\r\n *\r\n * This algorithm creates a key encryption key (KEK) using 64 bit UKM,\r\n * the sender’s private key, and the recipient’s public key (or the\r\n * reverse of the latter pair\r\n *\r\n * @memberOf GostSign\r\n * @method deriveKey\r\n * @instance\r\n * @param {(CryptoOperationData|TypedArray)} baseKey Key for deriviation\r\n * @returns {CryptoOperationData} result\r\n */\r\nfunction deriveKey(baseKey) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    var b = derive.call(this, baseKey),\r\n      r = new Uint8Array(32);\r\n\r\n    r.set(new Uint8Array(b, 0, 32));\r\n    return r.buffer;\r\n} // </editor-fold>\r\n\r\n\r\n/**\r\n * Gost R 34.10 universal object<br><br>\r\n *\r\n * References: {@link http://tools.ietf.org/html/rfc6986} and {@link http://tools.ietf.org/html/rfc5831}<br><br>\r\n *\r\n * Normalized algorithm identifier common parameters:\r\n *\r\n *  <ul>\r\n *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\r\n *      <li><b>version</b> Algorithm version\r\n *          <ul>\r\n *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\r\n *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\r\n *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\r\n *          <ul>\r\n *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\r\n *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>mode</b> Algorithm mode\r\n *          <ul>\r\n *              <li><b>SIGN</b> Digital signature mode (default)</li>\r\n *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\r\n *  </ul>\r\n *\r\n * Supported algorithms, modes and parameters:\r\n *\r\n *  <ul>\r\n *      <li>Sign/Verify mode (SIGN)</li>\r\n *      <li>DeriveKey/DeriveBits mode (DH)\r\n *          <ul>\r\n *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\r\n *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>GenerateKey mode (SIGN and DH) version = 1994\r\n *          <ul>\r\n *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n *          </ul>\r\n *          Additional parameters, if namedParam not specified\r\n *          <ul>\r\n *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\r\n *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\r\n *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\r\n *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\r\n *          </ul>\r\n *      </li>\r\n *      <li>GenerateKey mode (SIGN and DH) version = 2001 or 2012\r\n *          <ul>\r\n *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n *          </ul>\r\n *          Additional EC parameters, if namedCurve not specified\r\n *          <ul>\r\n *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\r\n *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\r\n *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\r\n *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\r\n *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\r\n *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\r\n *          </ul>\r\n *      </li>\r\n *  </ul>\r\n *\r\n * @class GostSign\r\n * @param {AlgorithmIndentifier} algorithm\r\n */\r\nexport function GostSign(algorithm) // <editor-fold defaultstate=\"collapsed\">\r\n{\r\n    algorithm = algorithm || {};\r\n    this.name = (algorithm.name || 'GOST R 34.10') + '-' +\r\n      ((algorithm.version || 2012) % 100) + '-' + (algorithm.length || 256) +\r\n      (((algorithm.mode || 'SIGN') !== 'SIGN') ? '-' + algorithm.mode : '') +\r\n      (typeof algorithm.namedParam === 'string' ? '/' + algorithm.namedParam : '') +\r\n      (typeof algorithm.namedCurve === 'string' ? '/' + algorithm.namedCurve : '') +\r\n      (typeof algorithm.sBox === 'string' ? '/' + algorithm.sBox : '');\r\n\r\n    var version = algorithm.version || 2012;\r\n\r\n    // Functions\r\n    switch (algorithm.mode || 'SIGN') {\r\n        case 'SIGN':\r\n            this.sign = sign;\r\n            this.verify = verify;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'DH':\r\n            this.deriveBits = deriveBits;\r\n            this.deriveKey = deriveKey;\r\n            this.generateKey = generateKey;\r\n            break;\r\n        case 'MASK':\r\n            this.wrapKey = wrapKey;\r\n            this.unwrapKey = unwrapKey;\r\n            this.generateKey = generateMaskKey;\r\n            break;\r\n    }\r\n\r\n    // Define parameters\r\n    if (version === 1994) {\r\n        // Named or parameters algorithm\r\n        var param = algorithm.param;\r\n        if (!param)\r\n            param = GostParams[this.namedParam = (algorithm.namedParam || 'S-A').toUpperCase()];\r\n        this.modulusLength = algorithm.modulusLength || param.modulusLength || 1024;\r\n        this.p = htobi(param.p);\r\n        this.q = htobi(param.q);\r\n        this.a = htobi(param.a);\r\n        // Public key for derive\r\n        if (algorithm['public'])\r\n            this.peer_y = atobi(algorithm['public']);\r\n    } else {\r\n        // Named or parameters algorithm\r\n        var param = algorithm.curve;\r\n        if (!param)\r\n            param = ECGostParams[this.namedCurve = (algorithm.namedCurve || 'S-256-A').toUpperCase()];\r\n        var curve = this.curve = newCurve(htobi(param.p), htobi(param.a), htobi(param.b));\r\n        this.P = newEC(curve,\r\n          newFE(curve, htobi(param.x)),\r\n          newFE(curve, htobi(param.y)));\r\n        this.q = htobi(param.q);\r\n        // Public key for derive\r\n        if (algorithm['public']) {\r\n            var k2 = to2(algorithm['public']);\r\n            this.peer_Q = new newEC(this.curve, // This corresponds to the binary representation of (<y>256||<x>256)\r\n              newFE(this.curve, k2[0]), // first 32 octets contain the little-endian representation of x\r\n              newFE(this.curve, k2[1])); // and second 32 octets contain the little-endian representation of y.\r\n        }\r\n    }\r\n\r\n    // Check bit length\r\n    var hashLen, keyLen;\r\n    if (this.curve) {\r\n        keyLen = algorithm.length || bitLength(this.q);\r\n        if (keyLen > 508 && keyLen <= 512)\r\n            keyLen = 512;\r\n        else if (keyLen > 254 && keyLen <= 256)\r\n            keyLen = 256;\r\n        else\r\n            throw new NotSupportedError('Support keys only 256 or 512 bits length');\r\n        hashLen = keyLen;\r\n    } else {\r\n        keyLen = algorithm.modulusLength || bitLength(this.p);\r\n        if (keyLen > 1016 && keyLen <= 1024)\r\n            keyLen = 1024;\r\n        else if (keyLen > 508 && keyLen <= 512)\r\n            keyLen = 512;\r\n        else\r\n            throw new NotSupportedError('Support keys only 512 or 1024 bits length');\r\n        hashLen = 256;\r\n    }\r\n    this.bitLength = hashLen;\r\n    this.keyLength = keyLen;\r\n\r\n    // Algorithm proceator for result conversion\r\n    this.procreator = algorithm.procreator;\r\n\r\n    // Hash function definition\r\n    var hash = algorithm.hash;\r\n    if (hash) {\r\n        if (typeof hash === 'string' || hash instanceof String)\r\n            hash = { name: hash };\r\n        if (algorithm.version === 1994 || algorithm.version === 2001) {\r\n            hash.version = 1994;\r\n            hash.length = 256;\r\n            hash.sBox = algorithm.sBox || hash.sBox;\r\n        } else {\r\n            hash.version = 2012;\r\n            hash.length = hashLen;\r\n        }\r\n        hash.procreator = hash.procreator || algorithm.procreator;\r\n\r\n        this.hash = new GostDigest(hash);\r\n    }\r\n\r\n    // Pregenerated seed for key exchange algorithms\r\n    if (algorithm.ukm) // Now don't check size\r\n        this.ukm = algorithm.ukm;\r\n\r\n} // </editor-fold>\r\n\r\n\r\n","/**\r\n * @file GOST 34.10-2012 signature function with 1024/512 bits digest\r\n * @version 1.76\r\n * @copyright 2014-2016, Rudolf Nickolaev. All rights reserved.\r\n */\r\n\r\nimport { GostCipher } from './gostCipher';\r\nimport { GostDigest } from './gostDigest';\r\nimport { GostSign } from './gostSign';\r\nimport { NotSupportedError } from '../utils/errors';\r\n\r\n/*\r\n * Engine definition base on normalized algorithm identifier\r\n *\r\n */ // <editor-fold defaultstate=\"collapsed\">\r\n\r\n// Define engine\r\nfunction defineEngine(method, algorithm) {\r\n    if (!algorithm)\r\n        throw new (SyntaxError || Error)('Algorithm not defined');\r\n\r\n    if (!algorithm.name)\r\n        throw new (SyntaxError || Error)('Algorithm name not defined');\r\n\r\n    var name = algorithm.name, mode = algorithm.mode;\r\n    if ((name === 'GOST 28147' || name === 'GOST R 34.12' || name === 'RC2') && (method === 'generateKey' ||\r\n      (mode === 'MAC' && (method === 'sign' || method === 'verify')) ||\r\n      ((mode === 'KW' || mode === 'MASK') && (method === 'wrapKey' || method === 'unwrapKey')) ||\r\n      ((!mode || mode === 'ES') && (method === 'encrypt' || method === 'decrypt')))) {\r\n        return 'GostCipher';\r\n\r\n    } else if ((name === 'GOST R 34.11' || name === 'SHA') && (method === 'digest' ||\r\n      (mode === 'HMAC' && (method === 'sign' || method === 'verify' || method === 'generateKey')) ||\r\n      ((mode === 'KDF' || mode === 'PBKDF2' || mode === 'PFXKDF' || mode === 'CPKDF') &&\r\n        (method === 'deriveKey' || method === 'deriveBits' || method === 'generateKey')))) {\r\n        return 'GostDigest';\r\n\r\n    } else if (name === 'GOST R 34.10' && (method === 'generateKey' ||\r\n      ((!mode || mode === 'SIGN') && (method === 'sign' || method === 'verify')) ||\r\n      (mode === 'MASK' && (method === 'wrapKey' || method === 'unwrapKey')) ||\r\n      (mode === 'DH' && (method === 'deriveKey' || method === 'deriveBits')))) {\r\n        return 'GostSign';\r\n    } else\r\n        throw new NotSupportedError('Algorithm ' + name + '-' + mode + ' is not valid for ' + method);\r\n} // </editor-fold>\r\n\r\n/**\r\n * Object enables usage GOST cryptographic algorithms in the main JS thread.\r\n *\r\n * Object provide interface to GOST low-level cryptogric classes:\r\n *  <ul>\r\n *      <li>GostCipher - implementation of GOST 28147, GOST R 34.12, GOST R 34.13 Encryption algorithms. Reference {@link http://tools.ietf.org/html/rfc5830}</li>\r\n *      <li>GostDigest - implementation of GOST R 34.11 Hash Function algorithms. References {@link http://tools.ietf.org/html/rfc5831} and {@link http://tools.ietf.org/html/rfc6986}</li>\r\n *      <li>GostSign - implementation of GOST R 34.10 Digital Signature algorithms. References {@link http://tools.ietf.org/html/rfc5832} and {@link http://tools.ietf.org/html/rfc7091}</li>\r\n *  </ul>\r\n * @namespace gostEngine\r\n */\r\nconst gostEngine = {\r\n    /**\r\n     * gostEngine.execute(algorithm, method, args) Entry point to execution\r\n     * all low-level GOST cryptographic methods\r\n     *\r\n     *  <ul>\r\n     *      <li>Determine the appropriate engine for a given execution method</li>\r\n     *      <li>Create cipher object for determineted engine</li>\r\n     *      <li>Execute method of cipher with given args</li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @param {string} method Crypto method for execution\r\n     * @param {Array} args Method arguments (keys, data, additional parameters)\r\n     * @returns {(CryptoOperationData|Key|KeyPair|boolean)} Result of method execution\r\n     */\r\n    execute: function (algorithm, method, args) {\r\n        // Define engine for GOST algorithms\r\n        var engine = defineEngine(method, algorithm);\r\n        // Create cipher\r\n        var cipher = this['get' + engine](algorithm);\r\n        // Execute method\r\n        return cipher[method].apply(cipher, args);\r\n    },\r\n    /**\r\n     * gostEngine.getGostCipher(algorithm) returns GOST 28147 / GOST R 34.12 cipher instance<br><br>\r\n     *\r\n     * GOST 28147-89 / GOST R 34.12-15 Encryption Algorithm<br><br>\r\n     * When keys and initialization vectors are converted to/from byte arrays,\r\n     * little-endian byte order is assumed.<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST 28147' or 'GOST R 34.12'</li>\r\n     *      <li><b>version</b> Algorithm version, number\r\n     *          <ul>\r\n     *              <li><b>1989</b> Current version of standard</li>\r\n     *              <li><b>2015</b> New draft version of standard</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Block length\r\n     *          <ul>\r\n     *              <li><b>64</b> 64 bits length (default)</li>\r\n     *              <li><b>128</b> 128 bits length (only for version 2015)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode, string\r\n     *          <ul>\r\n     *              <li><b>ES</b> Encryption mode (default)</li>\r\n     *              <li><b>MAC</b> \"imitovstavka\" (MAC) mode</li>\r\n     *              <li><b>KW</b> Key wrapping mode</li>\r\n     *              <li><b>MASK</b> Key mask mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89, string. Used only if version = 1989</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Encript/Decrypt mode (ES)\r\n     *          <ul>\r\n     *              <li><b>block</b> Block mode, string. Default ECB</li>\r\n     *              <li><b>keyMeshing</b> Key meshing mode, string. Default NO</li>\r\n     *              <li><b>padding</b> Padding mode, string. Default NO for CFB and CTR modes, or ZERO for others</li>\r\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Sign/Verify mode (MAC)\r\n     *          <ul>\r\n     *              <li><b>macLength</b> Length of mac in bits (default - 32 bits)</li>\r\n     *              <li><b>iv</b> {@link CryptoOperationData} Initial vector with length of block. Default - zero block</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrap/Unwrap key mode (KW)\r\n     *          <ul>\r\n     *              <li><b>keyWrapping</b> Mode of keywrapping, string. Default NO - standard GOST key wrapping</li>\r\n     *              <li><b>ukm</b> {@link CryptoOperationData} User key material. Default - random generated value</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrap/Unwrap key mode (MASK)</li>\r\n     *  </ul>\r\n     *\r\n     * Supported paramters values:\r\n     *\r\n     *  <ul>\r\n     *      <li>Block modes (parameter 'block')\r\n     *          <ul>\r\n     *              <li><b>ECB</b> \"prostaya zamena\" (ECB) mode (default)</li>\r\n     *              <li><b>CFB</b> \"gammirovanie s obratnoj svyaziyu\" (64-bit CFB) mode</li>\r\n     *              <li><b>CTR</b> \"gammirovanie\" (counter) mode</li>\r\n     *              <li><b>CBC</b> Cipher-Block-Chaining (CBC) mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Key meshing modes (parameter 'keyMeshing')\r\n     *          <ul>\r\n     *              <li><b>NO</b> No key wrapping (default)</li>\r\n     *              <li><b>CP</b> CryptoPor Key key meshing</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Padding modes (parameter 'padding')\r\n     *          <ul>\r\n     *              <li><b>NO</b> No padding only for CFB and CTR modes</li>\r\n     *              <li><b>PKCS5</b> PKCS#5 padding mode</li>\r\n     *              <li><b>ZERO</b> Zero bits padding mode</li>\r\n     *              <li><b>RANDOM</b> Random bits padding mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>Wrapping key modes (parameter 'keyWrapping')\r\n     *          <ul>\r\n     *              <li><b>NO</b> Ref. rfc4357 6.1 GOST 28147-89 Key wrapping</li>\r\n     *              <li><b>CP</b> CryptoPro Key wrapping mode</li>\r\n     *              <li><b>SC</b> SignalCom Key wrapping mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostCipher} Instance of GostCipher\r\n     */\r\n    getGostCipher: function (algorithm) {\r\n        return new GostCipher(algorithm);\r\n    },\r\n    /**\r\n     * gostEngine.getGostDigest(algorithm) returns GOST R 34.11 cipher instance<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST R 34.11'</li>\r\n     *      <li><b>version</b> Algorithm version\r\n     *          <ul>\r\n     *              <li><b>1994</b> old-style 256 bits digest based on GOST 28147-89</li>\r\n     *              <li><b>2012</b> 256 ro 512 bits digest algorithm \"Streebog\" GOST R 34.11-2012 (default)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Digest length\r\n     *          <ul>\r\n     *              <li><b>256</b> 256 bits digest</li>\r\n     *              <li><b>512</b> 512 bits digest, valid only for algorithm \"Streebog\"</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode\r\n     *          <ul>\r\n     *              <li><b>HASH</b> simple digest mode (default)</li>\r\n     *              <li><b>HMAC</b> HMAC algorithm based on GOST R 34.11</li>\r\n     *              <li><b>KDF</b> Derive bits for KEK deversification</li>\r\n     *              <li><b>PBKDF2</b> Password based key dirivation algorithms PBKDF2 (based on HMAC)</li>\r\n     *              <li><b>PFXKDF</b> PFX key dirivation algorithms PFXKDF</li>\r\n     *              <li><b>CPKDF</b> CryptoPro Password based key dirivation algorithms</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 28147-89. Used only if version = 1994</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Digest HASH mode (default)</li>\r\n     *      <li>Sign/Verify HMAC modes parameters depends on version and length\r\n     *          <ul>\r\n     *              <li><b>version: 1994</b> HMAC parameters (B = 32, L = 32)</li>\r\n     *              <li><b>version: 2012, length: 256</b> HMAC parameters (B = 64, L = 32)</li>\r\n     *              <li><b>version: 2012, length: 512</b> HMAC parameters  (B = 64, L = 64)</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey KDF mode\r\n     *          <ul>\r\n     *              <li><b>context</b> {@link CryptoOperationData} Context of the key derivation</li>\r\n     *              <li><b>label</b> {@link CryptoOperationData} Label that identifies the purpose for the derived keying material</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey PBKDF2 mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey PFXKDF mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *              <li><b>diversifier</b> Deversifier, ID=1 - key material for performing encryption or decryption,\r\n     *              ID=2 - IV (Initial Value) for encryption or decryption, ID=3 - integrity key for MACing</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>DeriveBits/DeriveKey CPKDF mode\r\n     *          <ul>\r\n     *              <li><b>salt</b> {@link CryptoOperationData} Random salt as input for HMAC algorithm</li>\r\n     *              <li><b>iterations</b> Iteration count. GOST recomended value 1000 (default) or 2000</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostDigest} Instance of GostDigest\r\n     */\r\n    getGostDigest: function (algorithm) {\r\n        return new GostDigest(algorithm);\r\n    },\r\n    /**\r\n     * gostEngine.getGostSign(algorithm) returns GOST R 34.10 cipher instance<br><br>\r\n     *\r\n     * Normalized algorithm identifier common parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li><b>name</b> Algorithm name 'GOST R 34.10'</li>\r\n     *      <li><b>version</b> Algorithm version\r\n     *          <ul>\r\n     *              <li><b>1994</b> - Old-style GOST R 34.10-94 ExpMod algorithm with GOST R 34.11-94 hash</li>\r\n     *              <li><b>2001</b> - GOST R 34.10-2001 Eliptic curve algorithm with old GOST R 34.11-94 hash</li>\r\n     *              <li><b>2012</b> - GOST R 34.10-2012 Eliptic curve algorithm with GOST R 34.11-12 hash, default mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>length</b> Length of hash and signature. Key length == hash length for EC algorithms and 2 * hash length for ExpMod algorithm\r\n     *          <ul>\r\n     *              <li><b>GOST R 34.10-256</b> - 256 bits digest, default mode</li>\r\n     *              <li><b>GOST R 34.10-512</b> - 512 bits digest only for GOST R 34.11-2012 hash</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>mode</b> Algorithm mode\r\n     *          <ul>\r\n     *              <li><b>SIGN</b> Digital signature mode (default)</li>\r\n     *              <li><b>DH</b> Diffie-Hellman key generation and key agreement mode</li>\r\n     *              <li><b>MASK</b> Key mask mode</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li><b>sBox</b> Paramset sBox for GOST 34.11-94. Used only if version = 1994 or 2001</li>\r\n     *  </ul>\r\n     *\r\n     * Supported algorithms, modes and parameters:\r\n     *\r\n     *  <ul>\r\n     *      <li>Sign/Verify mode (SIGN)</li>\r\n     *      <li>Wrap/Unwrap mode (MASK)</li>\r\n     *      <li>DeriveKey/DeriveBits mode (DH)\r\n     *          <ul>\r\n     *              <li>{@link CryptoOperationData} <b>ukm</b> User key material. Default - random generated value</li>\r\n     *              <li>{@link CryptoOperationData} <b>public</b> The peer's EC public key data</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 1994\r\n     *          <ul>\r\n     *              <li><b>namedParam</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n     *          </ul>\r\n     *          Additional parameters, if namedParam not specified\r\n     *          <ul>\r\n     *              <li><b>modulusLength</b> Bit length of p (512 or 1024 bits). Default = 1024</li>\r\n     *              <li><b>p</b> {@link CryptoOperationData} Modulus, prime number, 2^(t-1)<p<2^t</li>\r\n     *              <li><b>q</b> {@link CryptoOperationData} Order of cyclic group, prime number, 2^254<q<2^256, q is a factor of p-1</li>\r\n     *              <li><b>a</b> {@link CryptoOperationData} Generator, integer, 1<a<p-1, at that aq (mod p) = 1</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *      <li>GenerateKey mode (SIGN and DH and MASK) version = 2001 or 2012\r\n     *          <ul>\r\n     *              <li><b>namedCurve</b> Paramset for key generation algorithm. If specified no additianal parameters required</li>\r\n     *          </ul>\r\n     *          Additional EC parameters, if namedCurve not specified\r\n     *          <ul>\r\n     *              <li><b>p</b> {@link CryptoOperationData} Prime number - elliptic curve modulus</li>\r\n     *              <li><b>a</b> {@link CryptoOperationData} Coefficients a of the elliptic curve E</li>\r\n     *              <li><b>b</b> {@link CryptoOperationData} Coefficients b of the elliptic curve E</li>\r\n     *              <li><b>q</b> {@link CryptoOperationData} Prime number - order of cyclic group</li>\r\n     *              <li><b>x</b> {@link CryptoOperationData} Base point p x-coordinate</li>\r\n     *              <li><b>y</b> {@link CryptoOperationData} Base point p y-coordinate</li>\r\n     *          </ul>\r\n     *      </li>\r\n     *  </ul>\r\n     *\r\n     * @memberOf gostEngine\r\n     * @param {AlgorithmIndentifier} algorithm Algorithm identifier\r\n     * @returns {GostSign} Instance of GostSign\r\n     */\r\n    getGostSign: function (algorithm) {\r\n        return new GostSign(algorithm);\r\n    }\r\n};\r\n\r\nexport { gostEngine };\r\n","module.exports = require(\"crypto\");","import { gostEngine as GostEngine } from './engine/gostEngineSync';\r\n\r\nconst defaultGostSignAlgorithm = {\r\n    name: 'GOST R 34.10',\r\n    version: 2012,\r\n    mode: 'SIGN',\r\n    length: 256,\r\n    procreator: 'CP',\r\n    keySize: 32,\r\n    namedCurve: 'S-256-A',\r\n    hash:\r\n      {\r\n          name: 'GOST R 34.11',\r\n          version: 2012,\r\n          mode: 'HASH',\r\n          length: 256,\r\n          procreator: 'CP',\r\n          keySize: 32\r\n      },\r\n    id: 'id-tc26-gost3410-12-256'\r\n};\r\n\r\nconst CryptoGostAPI = {\r\n    hash(byteArray) {\r\n        // GOST R 34.11-12-256 algorithm\r\n        const cipher = GostEngine.getGostDigest({\r\n            name: 'GOST R 34.11',\r\n            length: 256,\r\n            version: 2012\r\n        });\r\n\r\n        // returns byte array\r\n        return cipher['digest'](byteArray);\r\n    },\r\n\r\n    sign(privateKey, data) {\r\n        // using algorithm : GostDigest-2012-with-Gost-3410-2012\r\n\r\n        const cipher = GostEngine.getGostSign(defaultGostSignAlgorithm);\r\n\r\n        // returns byte array\r\n        return cipher.sign(privateKey, data);\r\n    },\r\n\r\n    verify(publicKey, message, sign) {\r\n        const cipher = GostEngine.getGostSign(defaultGostSignAlgorithm);\r\n\r\n        // return boolean\r\n        return cipher.verify(publicKey, sign, message);\r\n    }\r\n};\r\n\r\nexport default CryptoGostAPI\r\n"],"sourceRoot":""}